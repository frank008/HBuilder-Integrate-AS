//{"version":"3.4.7","encode":"base64"}
var __UniServiceStartTime__ = Date.now();var global=this; var process={env:{}}; var setTimeout=global.setTimeout;
(()=>{var jT=Object.defineProperty;var zT=(p,s)=>{for(var m in s)jT(p,m,{get:s[m],enumerable:!0})};var _a=Object.freeze;function lc({getCurrentPages:p,uni:s,UniShared:m,Vue:A,VueShared:k}){var y=function(I,f,P,$e){"use strict";function Nt(){let Ve=p(),st=Ve.length;if(st)return Ve[st-1]}function bn(){let Ve=Nt();if(Ve)return Ve.$vm}function x(Ve,st,bt){if(f.isString(Ve))bt=st,st=Ve,Ve=bn();else if(typeof Ve=="number"){let hn=p().find(en=>en.$page.id===Ve);hn?Ve=hn.$vm:Ve=bn()}if(!Ve)return;if(Ve.__call_hook)return Ve.__call_hook(st,bt);let Xt=Ve.$[st];return Xt&&P.invokeArrayFns(Xt,bt)}function Lt(Ve,st,bt,Xt){f.isFunction(st)&&$e.injectHook(Ve,st.bind(bt),Xt)}function Hn(Ve,st,bt){let Xt=Ve.mpType||bt.$mpType;if(!!Xt&&(Object.keys(Ve).forEach(hn=>{if(hn.indexOf("on")===0){let en=Ve[hn];f.isArray(en)?en.forEach(cr=>Lt(hn,cr,bt,st)):Lt(hn,en,bt,st)}}),Xt==="page")){st.__isVisible=!0;try{x(bt,P.ON_LOAD,st.attrs.__pageQuery),delete st.attrs.__pageQuery,x(bt,P.ON_SHOW)}catch(hn){console.error(hn.message+P.LINEFEED+hn.stack)}}}function Pn(Ve,st){ct(st,Ve.$renderjs,Ve["$"+P.RENDERJS_MODULES])}function ct(Ve,st,bt={}){if(!f.isArray(st))return;let Xt=Ve.uid,hn=Ve.$wxsModules||(Ve.$wxsModules=[]),en=Ve.ctx;st.forEach(cr=>{bt[cr]&&(en[cr]=ne(Xt,bt[cr],cr),hn.push(cr))})}function ne(Ve,st,bt){let Xt={};return new Proxy(Xt,{get(hn,en){return Xt[en]||(Xt[en]=Q(Ve,st,bt,en))}})}function Q(Ve,st,bt,Xt){let hn=()=>{},en=()=>P.WXS_PROTOCOL+JSON.stringify([Ve,st,bt+"."+Xt]);return new Proxy(hn,{get(cr,Hr){return Hr==="toJSON"?en:hn[Hr]||(hn[Hr]=Q(Ve,st,bt+"."+Xt,Hr))},apply(cr,Hr,Zr){return P.WXS_PROTOCOL+JSON.stringify([Ve,st,bt+"."+Xt,[...Zr]])}})}function on(Ve,st){ct(st,Ve.$wxs,Ve["$"+P.WXS_MODULES])}function wn(Ve,st,bt){on(Ve,st),Pn(Ve,st),Hn(Ve,st,bt)}function $n(Ve,st,bt){return Ve[st]=bt}function Sn(Ve,st,bt){if(!st)throw Ve;let Xt=getApp();if(!Xt||!Xt.$vm)throw Ve;x(Xt.$vm,P.ON_ERROR,Ve)}function ln(Ve,st){return Ve?[...new Set([].concat(Ve,st))]:st}function An(Ve){P.UniLifecycleHooks.forEach(st=>{Ve[st]=ln})}let jn,En="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",fn=/^(?:[A-Za-z\d+/]{4})*?(?:[A-Za-z\d+/]{2}(?:==)?|[A-Za-z\d+/]{3}=?)?$/;typeof atob!="function"?jn=function(Ve){if(Ve=String(Ve).replace(/[\t\n\f\r ]+/g,""),!fn.test(Ve))throw new Error("Failed to execute 'atob' on 'Window': The string to be decoded is not correctly encoded.");Ve+="==".slice(2-(Ve.length&3));for(var st,bt="",Xt,hn,en=0;en<Ve.length;)st=En.indexOf(Ve.charAt(en++))<<18|En.indexOf(Ve.charAt(en++))<<12|(Xt=En.indexOf(Ve.charAt(en++)))<<6|(hn=En.indexOf(Ve.charAt(en++))),bt+=Xt===64?String.fromCharCode(st>>16&255):hn===64?String.fromCharCode(st>>16&255,st>>8&255):String.fromCharCode(st>>16&255,st>>8&255,st&255);return bt}:jn=atob;function Bn(Ve){return decodeURIComponent(jn(Ve).split("").map(function(st){return"%"+("00"+st.charCodeAt(0).toString(16)).slice(-2)}).join(""))}function Cn(){let Ve=s.getStorageSync("uni_id_token")||"",st=Ve.split(".");if(!Ve||st.length!==3)return{uid:null,role:[],permission:[],tokenExpired:0};let bt;try{bt=JSON.parse(Bn(st[1]))}catch(Xt){throw new Error("\u83B7\u53D6\u5F53\u524D\u7528\u6237\u4FE1\u606F\u51FA\u9519\uFF0C\u8BE6\u7EC6\u9519\u8BEF\u4FE1\u606F\u4E3A\uFF1A"+Xt.message)}return bt.tokenExpired=bt.exp*1e3,delete bt.exp,delete bt.iat,bt}function Cr(Ve){Ve.uniIDHasRole=function(st){let{role:bt}=Cn();return bt.indexOf(st)>-1},Ve.uniIDHasPermission=function(st){let{permission:bt}=Cn();return this.uniIDHasRole("admin")||bt.indexOf(st)>-1},Ve.uniIDTokenValid=function(){let{tokenExpired:st}=Cn();return st>Date.now()}}function ui(Ve){let st=Ve._context.config;f.isFunction(Ve._component.onError)&&(st.errorHandler=Sn),An(st.optionMergeStrategies);let bt=st.globalProperties;Cr(bt),bt.$set=$n,bt.$applyOptions=wn,P.invokeCreateVueAppHook(Ve)}return I.initApp=ui,Object.defineProperty(I,"__esModule",{value:!0}),I}({},k,m,A);return y}function qc(p,{nvue:s,UniShared:m,VueShared:A,VueReactivity:k}){let y={platform:s.config.env.platform,UniShared:m,VueShared:A,VueReactivity:k};return p(y,s.document)}function WT({setTimeout:p,clearTimeout:s,uni:m,getCurrentPages:A,Vue:k,weex:y,plus:I,BroadcastChannel:f,UniViewJSBridge:P,VueShared:$e,UniShared:Nt}){var bn=function(x,Lt,Hn){"use strict";let Pn=["navigate","redirect","switchTab","reLaunch","navigateBack"],ct={hoverClass:{type:String,default:"navigator-hover"},url:{type:String,default:""},openType:{type:String,default:"navigate",validator(_){return Boolean(~Pn.indexOf(_))}},delta:{type:Number,default:1},hoverStartTime:{type:[Number,String],default:50},hoverStayTime:{type:[Number,String],default:600},exists:{type:String,default:""},hoverStopPropagation:{type:Boolean,default:!1}};function ne(_){return()=>{if(_.openType!=="navigateBack"&&!_.url){console.error("<navigator/> should have url attribute when using navigateTo, redirectTo, reLaunch or switchTab");return}switch(_.openType){case"navigate":m.navigateTo({url:_.url});break;case"redirect":m.redirectTo({url:_.url,exists:_.exists});break;case"switchTab":m.switchTab({url:_.url});break;case"reLaunch":m.reLaunch({url:_.url});break;case"navigateBack":m.navigateBack({delta:_.delta});break}}}function Q(_){if(_.hoverClass&&_.hoverClass!=="none"){let R={hoverClass:_.hoverClass};return Lt.hasOwn(_,"hoverStartTime")&&(R.hoverStartTime=_.hoverStartTime),Lt.hasOwn(_,"hoverStayTime")&&(R.hoverStayTime=_.hoverStayTime),Lt.hasOwn(_,"hoverStopPropagation")&&(R.hoverStopPropagation=_.hoverStopPropagation),R}return{}}function on(_,R){return x.createElementVNode("u-text",Lt.extend({appendAsTree:!0},R),_)}let wn=[{"navigator-hover":{"":{backgroundColor:"rgba(0,0,0,0.1)",opacity:.7}}}];var $n=x.defineComponent({name:"Navigator",props:ct,styles:wn,setup(_,{slots:R}){let j=ne(_);return()=>x.createVNode("view",x.mergeProps(Q(_),{onClick:j}),[R.default&&R.default()])}});function Sn(_){return Symbol(_)}function ln(){return x.getCurrentInstance().root.proxy.$page.id}let An,jn,En;function fn(){return typeof window=="object"&&typeof navigator=="object"&&typeof document=="object"?"webview":"v8"}function Bn(){return An.webview.currentWebview().id}let Cn,Cr,ui={};function Ve(_){let R=_.data&&_.data.__message;if(!R||!R.__page)return;let j=R.__page,U=ui[j];U&&U(R),R.keep||delete ui[j]}function st(_,R){fn()==="v8"?En?(Cn&&Cn.close(),Cn=new En(Bn()),Cn.onmessage=Ve):Cr||(Cr=jn.requireModule("globalEvent"),Cr.addEventListener("plusMessage",Ve)):window.__plusMessage=Ve,ui[_]=R}class bt{constructor(R){this.webview=R}sendMessage(R){let j=JSON.parse(JSON.stringify({__message:{data:R}})),U=this.webview.id;En?new En(U).postMessage(j):An.webview.postMessageToUniNView&&An.webview.postMessageToUniNView(j,U)}close(){this.webview.close()}}function Xt({context:_={},url:R,data:j={},style:U={},onMessage:J,onClose:Z}){An=_.plus||I,jn=_.weex||(typeof y=="object"?y:null),En=_.BroadcastChannel||(typeof f=="object"?f:null);let se={autoBackButton:!0,titleSize:"17px"},pe=`page${Date.now()}`;U=Lt.extend({},U),U.titleNView!==!1&&U.titleNView!=="none"&&(U.titleNView=Lt.extend(se,U.titleNView));let Pe={top:0,bottom:0,usingComponents:{},popGesture:"close",scrollIndicator:"none",animationType:"pop-in",animationDuration:200,uniNView:{path:`/${R}.js`,defaultFontSize:16,viewport:An.screen.resolutionWidth}};U=Lt.extend(Pe,U);let ye=An.webview.create("",pe,U,{extras:{from:Bn(),runtime:fn(),data:j,useGlobalEvent:!En}});return ye.addEventListener("close",Z),st(pe,ae=>{typeof J=="function"&&J(ae.data),ae.keep||ye.close("auto")}),ye.show(U.animationType,U.animationDuration),new bt(ye)}let hn={for:{type:String,default:""}},en=Sn("ul");function cr(){let _=[];return x.provide(en,{addHandler(R){_.push(R)},removeHandler(R){_.splice(_.indexOf(R),1)}}),_}var Hr=x.defineComponent({name:"Label",props:hn,styles:[],setup(_,{slots:R}){let j=ln(),U=cr(),J=Z=>{_.for?P.emit(`uni-label-click-${j}-${_.for}`,Z,!0):U.length&&U[0](Z,!0)};return()=>x.createVNode("view",{onClick:J},[R.default&&R.default()])}});function Zr(_,R){Ei(_.id,R),x.watch(()=>_.id,(j,U)=>{zn(U,R,!0),Ei(j,R,!0)}),x.onUnmounted(()=>{zn(_.id,R)})}function Ei(_,R,j){let U=ln();j&&!_||!Lt.isPlainObject(R)||Object.keys(R).forEach(J=>{j?J.indexOf("@")!==0&&J.indexOf("uni-")!==0&&P.on(`uni-${J}-${U}-${_}`,R[J]):J.indexOf("uni-")===0?P.on(J,R[J]):_&&P.on(`uni-${J}-${U}-${_}`,R[J])})}function zn(_,R,j){let U=ln();j&&!_||!Lt.isPlainObject(R)||Object.keys(R).forEach(J=>{j?J.indexOf("@")!==0&&J.indexOf("uni-")!==0&&P.off(`uni-${J}-${U}-${_}`,R[J]):J.indexOf("uni-")===0?P.off(J,R[J]):_&&P.off(`uni-${J}-${U}-${_}`,R[J])})}function Xr(_){return Object.keys(_).map(R=>[R,_[R]])}let Or=["class","style"],yi=/^on[A-Z]+/,Ki=(_={})=>{let{excludeListeners:R=!1,excludeKeys:j=[]}=_,U=x.getCurrentInstance(),J=x.shallowRef({}),Z=x.shallowRef({}),se=x.shallowRef({}),pe=j.concat(Or);return U.attrs=x.reactive(U.attrs),x.watchEffect(()=>{let Pe=Xr(U.attrs).reduce((ye,[ae,_e])=>(pe.includes(ae)?ye.exclude[ae]=_e:yi.test(ae)?(R||(ye.attrs[ae]=_e),ye.listeners[ae]=_e):ye.attrs[ae]=_e,ye),{exclude:{},attrs:{},listeners:{}});J.value=Pe.attrs,Z.value=Pe.listeners,se.value=Pe.exclude}),{$attrs:J,$listeners:Z,$excludeAttrs:se}},Di={id:{type:String,default:""},hoverClass:{type:String,default:"button-hover"},hoverStartTime:{type:[Number,String],default:20},hoverStayTime:{type:[Number,String],default:70},hoverStopPropagation:{type:Boolean,default:!1},disabled:{type:[Boolean,String],default:!1},formType:{type:String,default:""},openType:{type:String,default:""},loading:{type:[Boolean,String],default:!1},plain:{type:[Boolean,String],default:!1}},jr=Sn("uf"),So=[{ub:{"":{flexDirection:"row",alignItems:"center",justifyContent:"center",position:"relative",paddingLeft:"5",paddingRight:"5",overflow:"hidden",color:"#000000",backgroundColor:"#f8f8f8",borderRadius:"5",borderStyle:"solid",borderWidth:"1",borderColor:"#dbdbdb"}},"ub-t":{"":{color:"#000000",fontSize:"18",textDecoration:"none",lineHeight:"46"}},"ub-d":{"":{backgroundColor:"#f8f8f8"}},"ub-p":{"":{backgroundColor:"#007aff",borderColor:"#0062cc"}},"ub-w":{"":{backgroundColor:"#e64340",borderColor:"#b83633"}},"ub-d-t":{"":{color:"#000000"}},"ub-p-t":{"":{color:"#ffffff"}},"ub-w-t":{"":{color:"#ffffff"}},"ub-d-d":{"":{backgroundColor:"#f7f7f7"}},"ub-p-d":{"":{backgroundColor:"#63acfc",borderColor:"#4f8aca"}},"ub-w-d":{"":{backgroundColor:"#ec8b89",borderColor:"#bd6f6e"}},"ub-d-t-d":{"":{color:"#cccccc"}},"ub-p-t-d":{"":{color:"rgba(255,255,255,0.6)"}},"ub-w-t-d":{"":{color:"rgba(255,255,255,0.6)"}},"ub-d-plain":{"":{borderColor:"#353535",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-plain":{"":{borderColor:"#007aff",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-plain":{"":{borderColor:"#e64340",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-t-plain":{"":{color:"#353535"}},"ub-p-t-plain":{"":{color:"#007aff"}},"ub-w-t-plain":{"":{color:"#e64340"}},"ub-d-d-plain":{"":{borderColor:"#c6c6c6",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-d-plain":{"":{borderColor:"#c6c6c6",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-d-plain":{"":{borderColor:"#c6c6c6",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-t-d-plain":{"":{color:"rgba(0,0,0,0.2)"}},"ub-p-t-d-plain":{"":{color:"rgba(0,0,0,0.2)"}},"ub-w-t-d-plain":{"":{color:"rgba(0,0,0,0.2)"}},"ub-mini":{"":{lineHeight:"30",fontSize:"13",paddingTop:0,paddingRight:"17.5",paddingBottom:0,paddingLeft:"17.5"}},"ub-loading":{"":{width:"18",height:"18",marginRight:"10"}},"ub-d-loading":{"":{color:"rgba(255,255,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-loading":{"":{color:"rgba(255,255,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-loading":{"":{color:"rgba(255,255,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-loading-plain":{"":{color:"#353535"}},"ub-p-loading-plain":{"":{color:"#007aff",backgroundColor:"#0062cc"}},"ub-w-loading-plain":{"":{color:"#e64340",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-hover":{"":{opacity:.8,backgroundColor:"#dedede"}},"ub-p-hover":{"":{opacity:.8,backgroundColor:"#0062cc"}},"ub-w-hover":{"":{opacity:.8,backgroundColor:"#ce3c39"}},"ub-d-t-hover":{"":{color:"rgba(0,0,0,0.6)"}},"ub-p-t-hover":{"":{color:"rgba(255,255,255,0.6)"}},"ub-w-t-hover":{"":{color:"rgba(255,255,255,0.6)"}},"ub-d-hover-plain":{"":{color:"rgba(53,53,53,0.6)",borderColor:"rgba(53,53,53,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-hover-plain":{"":{color:"rgba(26,173,25,0.6)",borderColor:"rgba(0,122,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-hover-plain":{"":{color:"rgba(230,67,64,0.6)",borderColor:"rgba(230,67,64,0.6)",backgroundColor:"rgba(0,0,0,0)"}}}],wi={default:"d",primary:"p",warn:"w"};var On=x.defineComponent({inheritAttrs:!1,name:"Button",props:Lt.extend(Di,{type:{type:String,default:"default"},size:{type:String,default:"default"}}),styles:So,setup(_,{slots:R,attrs:j}){let{$attrs:U,$excludeAttrs:J,$listeners:Z}=Ki({excludeListeners:!0}),se=_.type,pe=x.ref(null),Pe=x.inject(jr,!1),ye=(ot,lt)=>{let wt=Z.value.onClick||(()=>{});if(_.disabled)return;wt(ot);let tn=_.formType;if(tn){if(!Pe)return;tn==="submit"?Pe.submit(ot):tn==="reset"&&Pe.reset(ot)}},ae=ot=>{let lt="ub-"+wi[se]+ot;return _.disabled&&(lt+="-d"),_.plain&&(lt+="-plain"),_.size==="mini"&&ot==="-t"&&(lt+=" ub-mini"),lt},_e=ot=>{if(_.disabled)return"";let lt="ub-"+wi[se]+ot+"-hover";return _.plain&&(lt+="-plain"),lt},ze=x.inject(en,!1);ze&&(ze.addHandler(ye),x.onBeforeUnmount(()=>{ze.removeHandler(ye)})),Zr(_,{"label-click":ye});let ft=x.computed(()=>{let ot={};for(let lt in Z.value){let wt=Z.value[lt];lt!=="onClick"&&(ot[lt]=wt)}return ot}),xt=()=>{if(!R.default)return[];let ot=R.default();return ot.length===1&&ot[0].type===x.Text?[on(ot[0].children,{class:"ub-t "+ae("-t")})]:ot};return()=>{let ot=Lt.extend({},Q(_),{hoverClass:_e("")},U.value,J.value,ft.value);return x.createVNode("view",x.mergeProps({ref:pe,class:["ub",ae("")],onClick:ye},ot),[_.loading?x.createVNode("loading-indicator",x.mergeProps({class:["ub-loading",`ub-${wi[se]}-loading`]},{arrow:"false",animating:"true"}),null):null,...xt()])}}});let Mn={scaleArea:{type:Boolean,default:!1}};function Tr(_){let R=[];return Array.isArray(_)&&_.forEach(j=>{x.isVNode(j)?j.type===x.Fragment?R.push(...Tr(j.children)):R.push(j):Array.isArray(j)&&R.push(...Tr(j))}),R}function Ji(_){let R=Object.create(null);return function(U){return R[U]||(R[U]=_(U))}}let lo=Ji(function(_){let R={},j=/;(?![^(]*\))/g,U=/:(.+)/;return _.split(j).forEach(function(J){if(J){let Z=J.split(U);Z.length>1&&(R[Z[0].trim()]=Z[1].trim())}}),R}),ur=_=>new Promise((R,j)=>{if(!_)return R({width:0,height:0,top:0,left:0});y.requireModule("dom").getComponentRect(_,({size:J})=>{R(J)})});var Fi=x.defineComponent({name:"MovableArea",props:Mn,styles:[{"uni-movable-area":{"":{width:"10px",height:"10px"}}}],setup(_,{slots:R}){let j=x.ref(0),U=x.ref(0),J=x.ref(0),Z=x.ref(0),se=x.ref(!1),pe=x.ref(null),Pe=[],ye=null,ae=lt=>{ye=lt},_e=()=>ur(pe.value).then(({width:lt,height:wt,top:tn,left:Kt})=>{j.value=lt,U.value=wt,J.value=tn,Z.value=Kt}),ze=()=>{_e().then(()=>{Pe.forEach(function(lt){lt.setParent()})})};x.onMounted(()=>{p(()=>{se.value=!0,ze()},200)});let ft={onPanstart(lt){ye&&ye.touchstart(lt)},onPanmove(lt){lt.stopPropagation(),ye&&ye.touchmove(lt)},onPanend(lt){ye&&ye.touchend(lt)}},xt=lt=>{Pe.push(lt)},ot=lt=>{let wt=Pe.indexOf(lt);wt>=0&&Pe.splice(wt,1)};return x.provide("_isMounted",se),x.provide("parentSize",{width:j,height:U,top:J,left:Z}),x.provide("addMovableViewContext",xt),x.provide("removeMovableViewContext",ot),x.provide("setTouchMovableViewContext",ae),()=>{let lt=R.default&&R.default(),wt=Tr(lt);return x.createVNode("div",x.mergeProps({ref:pe,class:"uni-movable-area"},ft),[wt])}}});function Zi(_){let R={};function j(ae,_e){R[ae]&&R[ae](_e)}function U(ae,_e){R[ae]=function(ze){typeof _e=="function"&&(ze.touches=ze.changedTouches,_e(ze)===!1&&ze.stopPropagation())}}let J=0,Z=0,se=0,pe=0,Pe=function(ae,_e,ze,ft){if(_({target:ae.target,currentTarget:ae.currentTarget,stopPropagation:ae.stopPropagation.bind(ae),touches:ae.touches,changedTouches:ae.changedTouches,detail:{state:_e,x:ze,y:ft,dx:ze-J,dy:ft-Z,ddx:ze-se,ddy:ft-pe,timeStamp:ae.timeStamp||Date.now()}})===!1)return!1},ye=null;return U("touchstart",function(ae){if(!ye)return ye=ae,J=se=ae.touches[0].pageX,Z=pe=ae.touches[0].pageY,Pe(ae,"start",J,Z)}),U("touchmove",function(ae){if(ye){let _e=Pe(ae,"move",ae.touches[0].pageX,ae.touches[0].pageY);return se=ae.touches[0].pageX,pe=ae.touches[0].pageY,_e}}),U("touchend",function(ae){if(ye)return ye=null,Pe(ae,"end",ae.changedTouches[0].pageX,ae.changedTouches[0].pageY)}),{touchstart:function(ae){j("touchstart",ae)},touchmove:function(ae){j("touchmove",ae)},touchend:function(ae){j("touchend",ae)}}}function In(_,R){return(j,U)=>{_.value&&R(j,zr(j,_.value,U||{}))}}function zr(_,R,j={}){return R=Ao(R),{type:_,timeStamp:Date.now(),target:R,currentTarget:R,detail:j}}let Vo=Hn.cacheStringFunction(_=>_.charAt(0).toLowerCase()+_.slice(1));function Ao(_){let{offsetLeft:R,offsetTop:j}=_,U=_.attr,J={};return Object.keys(U||{}).forEach(Z=>{Z.indexOf("data")===0&&(J[Vo(Z.replace("data",""))]=U[Z])}),{id:U&&U.id||"",dataset:J,offsetLeft:R||0,offsetTop:j||0}}function Vi(_,R,j){return _>R-j&&_<R+j}function vr(_,R){return Vi(_,0,R)}function Qr(){}Qr.prototype.x=function(_){return Math.sqrt(_)};function Nn(_,R){this._m=_,this._f=1e3*R,this._startTime=0,this._v=0}Nn.prototype.setV=function(_,R){let j=Math.pow(Math.pow(_,2)+Math.pow(R,2),.5);this._x_v=_,this._y_v=R,this._x_a=-this._f*this._x_v/j,this._y_a=-this._f*this._y_v/j,this._t=Math.abs(_/this._x_a)||Math.abs(R/this._y_a),this._lastDt=null,this._startTime=new Date().getTime()},Nn.prototype.setS=function(_,R){this._x_s=_,this._y_s=R},Nn.prototype.s=function(_){_===void 0&&(_=(new Date().getTime()-this._startTime)/1e3),_>this._t&&(_=this._t,this._lastDt=_);let R=this._x_v*_+.5*this._x_a*Math.pow(_,2)+this._x_s,j=this._y_v*_+.5*this._y_a*Math.pow(_,2)+this._y_s;return(this._x_a>0&&R<this._endPositionX||this._x_a<0&&R>this._endPositionX)&&(R=this._endPositionX),(this._y_a>0&&j<this._endPositionY||this._y_a<0&&j>this._endPositionY)&&(j=this._endPositionY),{x:R,y:j}},Nn.prototype.ds=function(_){return _===void 0&&(_=(new Date().getTime()-this._startTime)/1e3),_>this._t&&(_=this._t),{dx:this._x_v+this._x_a*_,dy:this._y_v+this._y_a*_}},Nn.prototype.delta=function(){return{x:-1.5*Math.pow(this._x_v,2)/this._x_a||0,y:-1.5*Math.pow(this._y_v,2)/this._y_a||0}},Nn.prototype.dt=function(){return-this._x_v/this._x_a},Nn.prototype.done=function(){let _=Vi(this.s().x,this._endPositionX)||Vi(this.s().y,this._endPositionY)||this._lastDt===this._t;return this._lastDt=null,_},Nn.prototype.setEnd=function(_,R){this._endPositionX=_,this._endPositionY=R},Nn.prototype.reconfigure=function(_,R){this._m=_,this._f=1e3*R};function mr(_,R,j){this._m=_,this._k=R,this._c=j,this._solution=null,this._endPosition=0,this._startTime=0}mr.prototype._solve=function(_,R){let j=this._c,U=this._m,J=this._k,Z=j*j-4*U*J;if(Z===0){let ae=-j/(2*U),_e=_,ze=R/(ae*_);return{x:function(ft){return(_e+ze*ft)*Math.pow(Math.E,ae*ft)},dx:function(ft){let xt=Math.pow(Math.E,ae*ft);return ae*(_e+ze*ft)*xt+ze*xt}}}if(Z>0){let ae=(-j-Math.sqrt(Z))/(2*U),_e=(-j+Math.sqrt(Z))/(2*U),ze=(R-ae*_)/(_e-ae),ft=_-ze;return{x:function(xt){let ot,lt;return xt===this._t&&(ot=this._powER1T,lt=this._powER2T),this._t=xt,ot||(ot=this._powER1T=Math.pow(Math.E,ae*xt)),lt||(lt=this._powER2T=Math.pow(Math.E,_e*xt)),ft*ot+ze*lt},dx:function(xt){let ot,lt;return xt===this._t&&(ot=this._powER1T,lt=this._powER2T),this._t=xt,ot||(ot=this._powER1T=Math.pow(Math.E,ae*xt)),lt||(lt=this._powER2T=Math.pow(Math.E,_e*xt)),ft*ae*ot+ze*_e*lt}}}let se=Math.sqrt(4*U*J-j*j)/(2*U),pe=-j/2*U,Pe=_,ye=(R-pe*_)/se;return{x:function(ae){return Math.pow(Math.E,pe*ae)*(Pe*Math.cos(se*ae)+ye*Math.sin(se*ae))},dx:function(ae){let _e=Math.pow(Math.E,pe*ae),ze=Math.cos(se*ae),ft=Math.sin(se*ae);return _e*(ye*se*ze-Pe*se*ft)+pe*_e*(ye*ft+Pe*ze)}}},mr.prototype.x=function(_){return _===void 0&&(_=(new Date().getTime()-this._startTime)/1e3),this._solution?this._endPosition+this._solution.x(_):0},mr.prototype.dx=function(_){return _===void 0&&(_=(new Date().getTime()-this._startTime)/1e3),this._solution?this._solution.dx(_):0},mr.prototype.setEnd=function(_,R,j){if(j||(j=new Date().getTime()),_!==this._endPosition||!vr(R,.1)){R=R||0;let U=this._endPosition;this._solution&&(vr(R,.1)&&(R=this._solution.dx((j-this._startTime)/1e3)),U=this._solution.x((j-this._startTime)/1e3),vr(R,.1)&&(R=0),vr(U,.1)&&(U=0),U+=this._endPosition),this._solution&&vr(U-_,.1)&&vr(R,.1)||(this._endPosition=_,this._solution=this._solve(U-this._endPosition,R),this._startTime=j)}},mr.prototype.snap=function(_){this._startTime=new Date().getTime(),this._endPosition=_,this._solution={x:function(){return 0},dx:function(){return 0}}},mr.prototype.done=function(_){return _||(_=new Date().getTime()),Vi(this.x(),this._endPosition,.1)&&vr(this.dx(),.1)},mr.prototype.reconfigure=function(_,R,j){this._m=_,this._k=R,this._c=j,this.done()||(this._solution=this._solve(this.x()-this._endPosition,this.dx()),this._startTime=new Date().getTime())},mr.prototype.springConstant=function(){return this._k},mr.prototype.damping=function(){return this._c},mr.prototype.configuration=function(){function _(j,U){j.reconfigure(1,U,j.damping())}function R(j,U){j.reconfigure(1,j.springConstant(),U)}return[{label:"Spring Constant",read:this.springConstant.bind(this),write:_.bind(this,this),min:100,max:1e3},{label:"Damping",read:this.damping.bind(this),write:R.bind(this,this),min:1,max:500}]};function co(_,R,j){this._springX=new mr(_,R,j),this._springY=new mr(_,R,j),this._springScale=new mr(_,R,j),this._startTime=0}co.prototype.setEnd=function(_,R,j,U){let J=new Date().getTime();this._springX.setEnd(_,U,J),this._springY.setEnd(R,U,J),this._springScale.setEnd(j,U,J),this._startTime=J},co.prototype.x=function(){let _=(new Date().getTime()-this._startTime)/1e3;return{x:this._springX.x(_),y:this._springY.x(_),scale:this._springScale.x(_)}},co.prototype.done=function(){let _=new Date().getTime();return this._springX.done(_)&&this._springY.done(_)&&this._springScale.done(_)},co.prototype.reconfigure=function(_,R,j){this._springX.reconfigure(_,R,j),this._springY.reconfigure(_,R,j),this._springScale.reconfigure(_,R,j)};let Si={direction:{type:String,default:"none"},inertia:{type:[Boolean,String],default:!1},outOfBounds:{type:[Boolean,String],default:!1},x:{type:[Number,String],default:0},y:{type:[Number,String],default:0},damping:{type:[Number,String],default:20},friction:{type:[Number,String],default:2},disabled:{type:[Boolean,String],default:!1},scale:{type:[Boolean,String],default:!1},scaleMin:{type:[Number,String],default:.5},scaleMax:{type:[Number,String],default:10},scaleValue:{type:[Number,String],default:1},animation:{type:[Boolean,String],default:!0}};function Wr(_,R){return+((1e3*_-1e3*R)/1e3).toFixed(1)}function Co(_,R,j){let U={id:0,cancelled:!1},J=function(se){se&&se.id&&$o(se.id),se&&(se.cancelled=!0)};function Z(se,pe,Pe,ye){if(!se||!se.cancelled){Pe(pe);let ae=pe.done();ae||se.cancelled||(se.id=uo(Z.bind(null,se,pe,Pe,ye))),ae&&ye&&ye(pe)}}return Z(U,_,R,j),{cancel:J.bind(null,U),model:_}}let Gr=!1;function Ai(_){Gr||(Gr=!0,uo(function(){_(),Gr=!1}))}function uo(_){return p(_,16)}function $o(_){s(_)}let Xi=y.requireModule("animation");var fi=x.defineComponent({name:"MovableView",props:Si,emits:["change","scale"],styles:[{"uni-movable-view":{"":{position:"absolute",top:"0px",left:"0px",width:"10px",height:"10px"}}}],setup(_,{emit:R,slots:j}){let U=x.ref(null),J=In(U,R),Z=x.inject("setTouchMovableViewContext",()=>{}),se=ei(_,J,U,Z);return()=>{let pe={preventGesture:!0};return x.createVNode("view",x.mergeProps({ref:U,onTouchstart:se,class:"uni-movable-view",style:"transform-origin: center;"},pe),[j.default&&j.default()])}}});function ei(_,R,j,U){let J=x.inject("_isMounted",x.ref(!1)),Z=x.inject("parentSize",{width:x.ref(0),height:x.ref(0),top:x.ref(0),left:x.ref(0)}),se=x.inject("addMovableViewContext",()=>{}),pe=x.inject("removeMovableViewContext",()=>{}),Pe={touchstart:()=>{},touchmove:()=>{},touchend:()=>{}};function ye(xe){return Number(xe)||0}function ae(xe){return xe=Number(xe),isNaN(xe)?1:xe}let _e=x.ref(ye(_.x)),ze=x.ref(ye(_.y)),ft=x.ref(ae(Number(_.scaleValue))),xt=x.ref(0),ot=x.ref(0),lt=x.ref(0),wt=x.ref(0),tn=x.ref(0),Kt=x.ref(0),dt=null,zt=null,Ot={x:0,y:0},Jt={x:0,y:0},an=1,mn=0,Rn=0,Io=!1,No,Ht,Ut=null,Go=null,Fr={top:0,left:0,width:0,height:0},ai=new Qr,sa=new Qr,wr={historyX:[0,0],historyY:[0,0],historyT:[0,0]},Ln=x.computed(()=>{let xe=Number(_.damping);return isNaN(xe)?20:xe}),Xn=x.computed(()=>{let xe=Number(_.friction);return isNaN(xe)||xe<=0?2:xe}),Ri=x.computed(()=>{let xe=Number(_.scaleMin);return isNaN(xe)?.5:xe}),Yo=x.computed(()=>{let xe=Number(_.scaleMax);return isNaN(xe)?10:xe}),ar=x.computed(()=>_.direction==="all"||_.direction==="horizontal"),hr=x.computed(()=>_.direction==="all"||_.direction==="vertical"),xi=new co(1,9*Math.pow(Ln.value,2)/40,Ln.value),po=new Nn(1,Xn.value);x.watch(()=>_.x,xe=>{_e.value=ye(xe)}),x.watch(()=>_.y,xe=>{ze.value=ye(xe)}),x.watch(()=>_.scaleValue,xe=>{ft.value=ae(Number(xe))}),x.watch(_e,$a),x.watch(ze,Ua),x.watch(ft,qo),x.watch(Ri,Gi),x.watch(Yo,Gi);function la(){zt&&zt.cancel(),dt&&dt.cancel()}function $a(xe){if(ar.value){if(xe+Jt.x===mn)return mn;dt&&dt.cancel(),ca(xe+Jt.x,ze.value+Jt.y,an)}return xe}function Ua(xe){if(hr.value){if(xe+Jt.y===Rn)return Rn;dt&&dt.cancel(),ca(_e.value+Jt.x,xe+Jt.y,an)}return xe}function Gi(){if(!_.scale)return!1;Sr(an,!0)}function qo(xe){return _.scale?(xe=pi(xe),Sr(xe,!0),xe):!1}function Ca(){_.disabled||(la(),wr.historyX=[0,0],wr.historyY=[0,0],wr.historyT=[0,0],ar.value&&(No=mn),hr.value&&(Ht=Rn),Ut=null,Go=null,Io=!0)}function Bi(xe){if(!_.disabled&&Io){let At=mn,Rt=Rn;if(Go===null&&(Go=Math.abs(xe.detail.dx/xe.detail.dy)>1?"htouchmove":"vtouchmove"),ar.value&&(At=xe.detail.dx+No,wr.historyX.shift(),wr.historyX.push(At),!hr.value&&Ut===null&&(Ut=Math.abs(xe.detail.dx/xe.detail.dy)<1)),hr.value&&(Rt=xe.detail.dy+Ht,wr.historyY.shift(),wr.historyY.push(Rt),!ar.value&&Ut===null&&(Ut=Math.abs(xe.detail.dy/xe.detail.dx)<1)),wr.historyT.shift(),wr.historyT.push(xe.detail.timeStamp),!Ut){let cn="touch";At<lt.value?_.outOfBounds?(cn="touch-out-of-bounds",At=lt.value-ai.x(lt.value-At)):At=lt.value:At>tn.value&&(_.outOfBounds?(cn="touch-out-of-bounds",At=tn.value+ai.x(At-tn.value)):At=tn.value),Rt<wt.value?_.outOfBounds?(cn="touch-out-of-bounds",Rt=wt.value-sa.x(wt.value-Rt)):Rt=wt.value:Rt>Kt.value&&(_.outOfBounds?(cn="touch-out-of-bounds",Rt=Kt.value+sa.x(Rt-Kt.value)):Rt=Kt.value),Ai(function(){mo(At,Rt,an,cn)})}}}function os(){if(!_.disabled&&Io&&(Io=!1,!Ut&&!Ha("out-of-bounds")&&_.inertia)){let xe=1e3*(wr.historyX[1]-wr.historyX[0])/(wr.historyT[1]-wr.historyT[0]),At=1e3*(wr.historyY[1]-wr.historyY[0])/(wr.historyT[1]-wr.historyT[0]);po.setV(xe,At),po.setS(mn,Rn);let Rt=po.delta().x,cn=po.delta().y,Wn=Rt+mn,kr=cn+Rn;Wn<lt.value?(Wn=lt.value,kr=Rn+(lt.value-mn)*cn/Rt):Wn>tn.value&&(Wn=tn.value,kr=Rn+(tn.value-mn)*cn/Rt),kr<wt.value?(kr=wt.value,Wn=mn+(wt.value-Rn)*Rt/cn):kr>Kt.value&&(kr=Kt.value,Wn=mn+(Kt.value-Rn)*Rt/cn),po.setEnd(Wn,kr),zt=Co(po,function(){let ko=po.s(),_o=ko.x,Ro=ko.y;mo(_o,Ro,an,"friction")},function(){zt.cancel()})}}function vo(xe,At){let Rt=!1;return xe>tn.value?(xe=tn.value,Rt=!0):xe<lt.value&&(xe=lt.value,Rt=!0),At>Kt.value?(At=Kt.value,Rt=!0):At<wt.value&&(At=wt.value,Rt=!0),{x:xe,y:At,outOfBounds:Rt}}function Dn(){Ot.x=Fr.left-Z.left.value,Ot.y=Fr.top-Z.top.value}function dn(xe){xe=xe||an,xe=pi(xe),ot.value=Fr.height/an,xt.value=Fr.width/an;let At=ot.value*xe,Rt=xt.value*xe;Jt.x=(Rt-xt.value)/2,Jt.y=(At-ot.value)/2}function Nr(){let xe=0-Ot.x+Jt.x,At=Z.width.value-xt.value-Ot.x-Jt.x;lt.value=Math.min(xe,At),tn.value=Math.max(xe,At);let Rt=0-Ot.y+Jt.y,cn=Z.height.value-ot.value-Ot.y-Jt.y;wt.value=Math.min(Rt,cn),Kt.value=Math.max(Rt,cn)}function Sr(xe,At){if(_.scale){xe=pi(xe),dn(xe),Nr();let Rt=vo(mn,Rn),cn=Rt.x,Wn=Rt.y;At?ca(cn,Wn,xe,"",!0,!0):Ai(function(){mo(cn,Wn,xe,"",!0,!0)})}}function pi(xe){return xe=Math.max(.5,Ri.value,xe),xe=Math.min(10,Yo.value,xe),xe}function ca(xe,At,Rt,cn,Wn,kr){la(),ar.value||(xe=mn),hr.value||(At=Rn),_.scale||(Rt=an);let ko=vo(xe,At);if(xe=ko.x,At=ko.y,!_.animation){mo(xe,At,Rt,cn,Wn,kr);return}xi._springX._solution=null,xi._springY._solution=null,xi._springScale._solution=null,xi._springX._endPosition=mn,xi._springY._endPosition=Rn,xi._springScale._endPosition=an,xi.setEnd(xe,At,Rt,1),dt=Co(xi,function(){let _o=xi.x(),Ro=_o.x,Oa=_o.y,Jo=_o.scale;mo(Ro,Oa,Jo,cn,Wn,kr)},function(){dt.cancel()})}function Ha(xe){let At=vo(mn,Rn),Rt=At.x,cn=At.y,Wn=At.outOfBounds;return Wn&&ca(Rt,cn,an,xe),Wn}function mo(xe,At,Rt,cn="",Wn,kr){xe!==null&&xe.toString()!=="NaN"&&typeof xe=="number"||(xe=mn||0),At!==null&&At.toString()!=="NaN"&&typeof At=="number"||(At=Rn||0),xe=Number(xe.toFixed(1)),At=Number(At.toFixed(1)),Rt=Number(Rt.toFixed(1)),mn===xe&&Rn===At||Wn||R("change",{x:Wr(xe,Jt.x),y:Wr(At,Jt.y),source:cn}),_.scale||(Rt=an),Rt=pi(Rt),Rt=+Rt.toFixed(3),kr&&Rt!==an&&R("scale",{x:xe,y:At,scale:Rt});let ko=`translate(${xe}px, ${At}px) scale(${Rt})`;Xi.transition(j.value,{styles:{transform:ko},duration:0,delay:0}),mn=xe,Rn=At,an=Rt}function Ko(){return ur(j.value).then(xe=>{Fr=xe})}function kt(){if(!J.value)return;la();let xe=_.scale?ft.value:1;Dn(),dn(xe),Nr(),mn=_e.value+Jt.x,Rn=ze.value+Jt.y;let At=vo(mn,Rn),Rt=At.x,cn=At.y;mo(Rt,cn,xe,"",!0)}return x.onMounted(()=>{Pe=Zi(At=>{switch(At.detail.state){case"start":Ca();break;case"move":Bi(At);break;case"end":os()}}),p(()=>{Ko().then(()=>{kt()})},100),po.reconfigure(1,Xn.value),xi.reconfigure(1,9*Math.pow(Ln.value,2)/40,Ln.value);let xe={setParent:kt};se(xe),x.onUnmounted(()=>{pe(xe)})}),x.onUnmounted(()=>{la()}),()=>{U(Pe)}}let di=16,_r={activeColor:Hn.PRIMARY_COLOR,backgroundColor:"#EBEBEB",activeMode:"backwards"},Yn={percent:{type:[Number,String],default:0,validator(_){return!isNaN(parseFloat(_))}},fontSize:{type:[String,Number],default:di},showInfo:{type:[Boolean,String],default:!1},strokeWidth:{type:[Number,String],default:6,validator(_){return!isNaN(parseFloat(_))}},color:{type:String,default:_r.activeColor},activeColor:{type:String,default:_r.activeColor},backgroundColor:{type:String,default:_r.backgroundColor},active:{type:[Boolean,String],default:!1},activeMode:{type:String,default:_r.activeMode},duration:{type:[Number,String],default:30,validator(_){return!isNaN(parseFloat(_))}},borderRadius:{type:[Number,String],default:0}},$i=[{"uni-progress":{"":{flex:1,flexDirection:"row",alignItems:"center"}},"uni-progress-bar":{"":{flex:1}},"uni-progress-inner-bar":{"":{position:"absolute"}},"uni-progress-info":{"":{marginLeft:"15px"}}}];var Qi=x.defineComponent({name:"Progress",props:Yn,styles:$i,emits:["activeend"],setup(_,{emit:R}){let j=x.ref(null),U=x.ref(null),J=In(j,R),Z=Ft(_);return x.watch(()=>Z.realPercent,(se,pe)=>{Z.lastPercent=pe||0,Ee(Z,_,J)}),x.onMounted(()=>{p(()=>{ur(U.value).then(({width:se})=>{Z.progressWidth=se||0,Ee(Z,_,J)})},50)}),()=>{let{showInfo:se,fontSize:pe}=_,{outerBarStyle:Pe,innerBarStyle:ye,currentPercent:ae}=Z;return x.createVNode("div",{ref:j,class:"uni-progress"},[x.createVNode("div",{ref:U,style:Pe,class:"uni-progress-bar"},[x.createVNode("div",{style:ye,class:"uni-progress-inner-bar"},null)]),se?on(ae+"%",{class:"uni-progress-info",style:{fontSize:pe}}):null])}}});function Ft(_){let R=x.ref(0),j=x.ref(0),U=x.computed(()=>({backgroundColor:_.backgroundColor,borderRadius:_.borderRadius,height:_.strokeWidth})),J=x.computed(()=>{let pe=_.color!==_r.activeColor&&_.activeColor===_r.activeColor?_.color:_.activeColor;return{width:R.value*j.value/100,height:_.strokeWidth,backgroundColor:pe,borderRadius:_.borderRadius}}),Z=x.computed(()=>{let pe=parseFloat(_.percent);return pe<0&&(pe=0),pe>100&&(pe=100),pe});return x.reactive({outerBarStyle:U,innerBarStyle:J,realPercent:Z,currentPercent:R,strokeTimer:0,lastPercent:0,progressWidth:j})}function Ee(_,R,j){_.strokeTimer&&clearInterval(_.strokeTimer),R.active?(_.currentPercent=R.activeMode===_r.activeMode?0:_.lastPercent,_.strokeTimer=setInterval(()=>{_.currentPercent+1>_.realPercent?(_.currentPercent=_.realPercent,_.strokeTimer&&clearInterval(_.strokeTimer),j("activeend",{})):_.currentPercent+=1},parseFloat(R.duration))):_.currentPercent=_.realPercent}let hi={value:{type:Array,default(){return[]},validator:function(_){return Array.isArray(_)&&_.filter(R=>typeof R=="number").length===_.length}},indicatorStyle:{type:String,default:""},indicatorClass:{type:String,default:""},maskStyle:{type:String,default:""},maskClass:{type:String,default:""}},fo=Lt.extend({},hi,{height:{type:[Number,String],default:0}});var Br=x.defineComponent({name:"PickerView",props:fo,emits:["change","update:value"],setup(_,{slots:R,emit:j}){let U=x.ref(null),J=Mr(_),Z=In(U,j),se=[],pe=ye=>Array.prototype.indexOf.call(se,ye),Pe=ye=>x.computed({get(){let ae=pe(ye.vnode);return J.value[ae]||0},set(ae){if(!ye.data._isMounted)return;let _e=pe(ye.vnode);if(_e<0)return;if(J.value[_e]!==ae){J.value[_e]=ae;let ft=J.value.map(xt=>xt);j("update:value",ft),Z("change",{value:ft})}}});return x.provide("getPickerViewColumn",Pe),x.provide("pickerViewProps",_),()=>{let ye=R.default&&R.default();se=Tr(ye);let ae=_.height?{height:`${parseFloat(_.height)}px`}:{};return x.createVNode("view",x.mergeProps({ref:U,class:"uni-picker-view",style:ae},{preventGesture:!0}),[x.createVNode("view",{class:"uni-picker-view-wrapper"},[ye])])}},styles:[{"uni-picker-view":{"":{position:"relative"}},"uni-picker-view-wrapper":{"":{display:"flex",flexDirection:"row",position:"absolute",top:0,left:0,right:0,bottom:0,overflow:"hidden"}}}]});function Mr(_){let R=x.reactive([..._.value]),j=x.reactive({value:R});return x.watch(()=>_.value,U=>{j.value.length=U.length,U.forEach((J,Z)=>{J!==j.value[Z]&&j.value.splice(Z,1,J)})}),j}let Tn=y.requireModule("dom"),qn=y.config.env.platform.toLowerCase()==="android";function ho(_){return Lt.extend({},typeof _=="string"?lo(_):_)}var Yt=x.defineComponent({name:"PickerViewColumn",props:{length:{type:[Number,String],default:0}},data:()=>({_isMounted:!1}),setup(_,{slots:R}){let j=x.getCurrentInstance(),U=x.ref(null),J=x.ref(null),Z=x.ref(null),se=x.ref(null),pe=x.inject("pickerViewProps"),ye=x.inject("getPickerViewColumn")(j),ae=x.computed(()=>ho(pe.indicatorStyle)),_e=x.computed(()=>ho(pe.maskStyle)),ze=x.ref(0);ze.value=eo(ae.value);let ft=x.ref(0);ft.value=parseFloat(pe.height),x.watch(()=>_.length,()=>{p(()=>{ot(ye.value,!0,!0)},150)});let xt,ot=(Kt,dt=!0,zt)=>{ye.value===Kt&&!zt||(Tn.scrollToElement(J.value,{offset:Kt*ze.value,animated:dt}),ye.value=Kt,dt&&(xt=Date.now()))},lt=Kt=>{if(Date.now()-xt<340)return;let dt=Kt.detail.contentOffset.y,zt=Math.round(dt/ze.value);dt%ze.value?ot(zt,!0,!0):ye.value=zt},wt=()=>{let Kt,dt;p(()=>{Promise.all([ur(U.value).then(({height:zt})=>{Kt=ft.value=zt}),qn&&_.length?ur(Z.value).then(({height:zt})=>{dt=ze.value=zt/parseFloat(_.length)}):ur(se.value).then(({height:zt})=>{dt=ze.value=zt})]).then(()=>{Kt&&dt?p(()=>{j.data._isMounted=!0,ot(ye.value,!1,!0)},50):wt()})},50)};x.onMounted(wt);let tn=Kt=>Kt?qn?x.createVNode("div",{ref:Z,style:"flex-direction:column;"},[Kt]):Kt:null;return()=>{let Kt=R.default&&R.default(),dt=(ft.value-ze.value)/2,zt=`${ft.value-dt}px`,Ot={showScrollbar:!1,scrollToBegin:!1,decelerationRate:.3,scrollY:!0};return qn||(Ot.scrollTop=ye.value*ze.value),x.createVNode("view",{ref:U,class:"uni-picker-view-column"},[x.createVNode("scroll-view",x.mergeProps({class:"uni-picker-view-group",style:"flex-direction:column;",onScrollend:lt},Ot),[x.createVNode("view",{ref:J,class:"uni-picker-view-content",style:{paddingTop:`${dt}px`,paddingBottom:`${dt}px`}},[tn(Kt)])]),x.createVNode("u-scalable",{class:"uni-picker-view-mask",style:_e.value},[x.createVNode("u-scalable",{class:"uni-picker-view-mask uni-picker-view-mask-top",style:{bottom:zt}},null),x.createVNode("u-scalable",{class:"uni-picker-view-mask uni-picker-view-mask-bottom",style:{top:zt}},null)]),x.createVNode("u-scalable",{ref:se,class:"uni-picker-view-indicator",style:Lt.extend({},ae.value,{top:`${dt}px`})},null)])}},styles:[{"uni-picker-view-column":{"":{flex:1,position:"relative",alignItems:"stretch",overflow:"hidden"}},"uni-picker-view-mask":{"":{position:"absolute",top:0,left:0,right:0,bottom:0,pointerEvents:"none"}},"uni-picker-view-mask-top":{"":{bottom:0,backgroundImage:"linear-gradient(to bottom,rgba(255, 255, 255, 0.95),rgba(255, 255, 255, 0.6))"}},"uni-picker-view-mask-bottom":{"":{top:0,backgroundImage:"linear-gradient(to top,rgba(255, 255, 255, 0.95),rgba(255, 255, 255, 0.6))"}},"uni-picker-view-group":{"":{position:"absolute",top:0,left:0,right:0,bottom:0}},"uni-picker-view-content":{"":{flexDirection:"column",paddingTop:0,paddingRight:0,paddingBottom:0,paddingLeft:0}},"uni-picker-view-indicator":{"":{position:"absolute",left:0,right:0,top:0,height:"34px",pointerEvents:"none",borderColor:"#e5e5e5",borderTopWidth:"1px",borderBottomWidth:"1px"}}}]});function eo(_){let j=(_.height||_.lineHeight||"").match(/(-?[\d\.]+)px/),U=0;return j&&(U=parseFloat(j[1])),U}let qt={SELECTOR:"selector",MULTISELECTOR:"multiSelector",TIME:"time",DATE:"date"},Lr={YEAR:"year",MONTH:"month",DAY:"day"};function br(_){return _>9?_:`0${_}`}function Kn(_,R){_=String(_||"");let j=new Date;if(R===qt.TIME){let U=_.split(":");U.length===2&&j.setHours(parseInt(U[0]),parseInt(U[1]))}else{let U=_.split("-");U.length===3&&j.setFullYear(parseInt(U[0]),parseInt(String(parseFloat(U[1])-1)),parseInt(U[2]))}return j}function nr(_){if(_.mode===qt.TIME)return"00:00";if(_.mode===qt.DATE){let R=new Date().getFullYear()-100;switch(_.fields){case Lr.YEAR:return R;case Lr.MONTH:return R+"-01";default:return R+"-01-01"}}return""}function Ci(_){if(_.mode===qt.TIME)return"23:59";if(_.mode===qt.DATE){let R=new Date().getFullYear()+100;switch(_.fields){case Lr.YEAR:return R;case Lr.MONTH:return R+"-12";default:return R+"-12-31"}}return""}let Ui={name:{type:String,default:""},range:{type:Array,default(){return[]}},rangeKey:{type:String,default:""},value:{type:[Number,String,Array],default:0},mode:{type:String,default:qt.SELECTOR,validator(_){return Object.values(qt).indexOf(_)>=0}},fields:{type:String,default:""},start:{type:String,default:nr},end:{type:String,default:Ci},disabled:{type:[Boolean,String],default:!1}};var go=x.defineComponent({name:"Picker",props:Ui,emits:["change","cancel","columnchange"],setup(_,{slots:R,emit:j}){let U=x.ref(null),J=In(U,j),Z=x.ref(null),se=x.ref(null),pe=()=>{let ot=_.value;switch(_.mode){case qt.MULTISELECTOR:{Array.isArray(ot)||(ot=[]),Array.isArray(Z.value)||(Z.value=[]);let lt=Z.value.length=Math.max(ot.length,_.range.length);for(let wt=0;wt<lt;wt++){let tn=Number(ot[wt]),Kt=Number(Z.value[wt]),dt=isNaN(tn)?isNaN(Kt)?0:Kt:tn;Z.value.splice(wt,1,dt<0?0:dt)}}break;case qt.TIME:case qt.DATE:Z.value=String(ot);break;default:{let lt=Number(ot);Z.value=lt<0?0:lt;break}}},Pe=ot=>{se.value&&se.value.sendMessage(ot)},ye=ot=>{let lt={event:"cancel"};se.value=Xt({url:"__uniapppicker",data:ot,style:{titleNView:!1,animationType:"none",animationDuration:0,background:"rgba(0,0,0,0)",popGesture:"none"},onMessage:wt=>{let tn=wt.event;if(tn==="created"){Pe(ot);return}if(tn==="columnchange"){delete wt.event,J(tn,wt);return}lt=wt},onClose:()=>{se.value=null;let wt=lt.event;delete lt.event,wt&&J(wt,lt)}})},ae=ot=>{I.nativeUI[_.mode===qt.TIME?"pickTime":"pickDate"](lt=>{let wt=lt.date;J("change",{value:_.mode===qt.TIME?`${br(wt.getHours())}:${br(wt.getMinutes())}`:`${wt.getFullYear()}-${br(wt.getMonth()+1)}-${br(wt.getDate())}`})},()=>{J("cancel",{})},_.mode===qt.TIME?{time:Kn(_.value,qt.TIME)}:{date:Kn(_.value,qt.DATE),minDate:Kn(_.start,qt.DATE),maxDate:Kn(_.end,qt.DATE)})},_e=ot=>{(ot.mode===qt.TIME||ot.mode===qt.DATE)&&!ot.fields?ae():(ot.fields=Object.values(Lr).includes(ot.fields)?ot.fields:Lr.DAY,ye(ot))},ze=ot=>{_.disabled||_e(Lt.extend({},_,{value:Z.value,locale:m.getLocale()}))},ft=x.inject(jr,!1),xt={submit:()=>[_.name,Z.value],reset:()=>{switch(_.mode){case qt.SELECTOR:Z.value=0;break;case qt.MULTISELECTOR:Array.isArray(_.value)&&(Z.value=_.value.map(ot=>0));break;case qt.DATE:case qt.TIME:Z.value="";break}}};return ft&&(ft.addField(xt),x.onBeforeUnmount(()=>ft.removeField(xt))),Object.keys(_).forEach(ot=>{x.watch(()=>_[ot],lt=>{let wt={};wt[ot]=lt,Pe(wt)},{deep:!0})}),x.watch(()=>_.value,pe,{deep:!0}),pe(),()=>x.createVNode("view",{ref:U,onClick:ze},[R.default&&R.default()])}});let Oi={name:{type:String,default:""},min:{type:[Number,String],default:0},max:{type:[Number,String],default:100},value:{type:[Number,String],default:0},step:{type:[Number,String],default:1},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#e9e9e9"},backgroundColor:{type:String,default:"#e9e9e9"},activeColor:{type:String,default:"#007aff"},selectedColor:{type:String,default:"#007aff"},blockColor:{type:String,default:"#ffffff"},blockSize:{type:[Number,String],default:28},showValue:{type:[Boolean,String],default:!1}},to=[{"uni-slider":{"":{flex:1,flexDirection:"column",marginTop:"12",marginRight:0,marginBottom:"12",marginLeft:0,paddingTop:0,paddingRight:0,paddingBottom:0,paddingLeft:0}},"uni-slider-wrapper":{"":{flexDirection:"row",alignItems:"center",minHeight:"30"}},"uni-slider-tap-area":{"":{position:"relative",flex:1,flexDirection:"column",paddingTop:"15",paddingRight:0,paddingBottom:"15",paddingLeft:0}},"uni-slider-handle-wrapper":{"":{position:"relative",marginTop:0,marginRight:"18",marginBottom:0,marginLeft:"18",height:"2",borderRadius:"5",backgroundColor:"#e9e9e9",transitionProperty:"backgroundColor",transitionDuration:300,transitionTimingFunction:"ease"}},"uni-slider-track":{"":{height:"2",borderRadius:"6",backgroundColor:"#007aff",transitionProperty:"backgroundColor",transitionDuration:300,transitionTimingFunction:"ease"}},"uni-slider-thumb":{"":{position:"absolute",width:"28",height:"28",borderRadius:50,boxShadow:"0 0 4px #ebebeb",transitionProperty:"borderColor",transitionDuration:300,transitionTimingFunction:"ease"}},"uni-slider-step":{"":{position:"absolute",width:100,height:"2",background:"transparent"}},"uni-slider-value":{"":{color:"#888888",fontSize:"14",marginLeft:"14"}}}];var Uo=x.defineComponent({name:"USlider",props:Oi,styles:to,setup(_,{emit:R}){let j=x.ref(null),U=x.ref(null),J=In(j,R),Z=no(_),se=Hi(_,Z,J);return fr(_,Z),x.watch(()=>_.value,pe=>{Z.sliderValue=Number(pe)}),x.onMounted(()=>{p(()=>{ur(j.value).then(({width:pe})=>{Z.sliderWidth=pe||0,Z.sliderValue=Number(_.value)})},100)}),()=>{let{showValue:pe}=_,{trackStyle:Pe,trackActiveStyle:ye,thumbStyle:ae,sliderValue:_e}=Z;return x.createVNode("div",{class:"uni-slider",ref:j},[x.createVNode("div",{class:"uni-slider-wrapper"},[x.createVNode("div",x.mergeProps({class:"uni-slider-tap-area"},se),[x.createVNode("div",{class:"uni-slider-handle-wrapper",ref:U,style:Pe},[x.createVNode("div",{class:"uni-slider-track",style:ye},null)]),x.createVNode("div",{class:"uni-slider-thumb",style:ae},null)]),pe?on(_e+"",{class:"uni-slider-value"}):null])])}}});function no(_){let R=x.ref(0),j=x.ref(0),U=()=>_.backgroundColor!=="#e9e9e9"?_.backgroundColor:_.color!=="#007aff"?_.color:"#007aff",J=()=>_.activeColor!=="#007aff"?_.activeColor:_.selectedColor!=="#e9e9e9"?_.selectedColor:"#e9e9e9",Z=()=>{let pe=Number(_.max),Pe=Number(_.min);return(j.value-Pe)/(pe-Pe)*R.value};return x.reactive({sliderWidth:R,sliderValue:j,trackStyle:x.computed(()=>({backgroundColor:U()})),trackActiveStyle:x.computed(()=>({backgroundColor:J(),width:Z()})),thumbStyle:x.computed(()=>({width:_.blockSize,height:_.blockSize,marginTop:-_.blockSize/2,left:Z(),backgroundColor:_.blockColor}))})}function Hi(_,R,j){let U=null;function J(pe,Pe){_.disabled||(pe==="move"?(Z(Pe),j("changing",{value:R.sliderValue})):pe==="end"&&(Z(Pe),j("change",{value:R.sliderValue})))}function Z(pe){pe<0&&(pe=0),pe>R.sliderWidth&&(pe=R.sliderWidth);let Pe=Number(_.max),ye=Number(_.min),ae=Number(_.step),_e=pe/R.sliderWidth*Pe-ye;ae>0&&_e>ae&&_e%ae/ae!==0&&(_e-=_e%ae),R.sliderValue=_e+ye}return{onTouchstart(pe){pe.changedTouches.length===1&&!U&&(U=pe,J("start",pe.changedTouches[0].pageX))},onTouchmove(pe){pe.changedTouches.length===1&&U&&J("move",pe.changedTouches[0].pageX)},onTouchend(pe){pe.changedTouches.length===1&&U&&(U=null,J("end",pe.changedTouches[0].pageX))}}}function fr(_,R){let j=x.inject(jr,!1),U={submit:()=>{let J=["",null];return _.name&&(J[0]=_.name,J[1]=R.sliderValue),J},reset:()=>{R.sliderValue=Number(_.value)}};j&&(j.addField(U),x.onUnmounted(()=>{j.removeField(U)}))}let Er={name:{type:String,default:""},checked:{type:[Boolean,String],default:!1},type:{type:String,default:"switch"},id:{type:String,default:""},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#007aff"}},Jn={switch:"switch",checkbox:"checkbox"},Pr={width:52,height:32};var rr=x.defineComponent({name:"Switch",props:Er,emits:["change"],setup(_,{emit:R}){let j=x.ref(null),U=x.ref(_.checked),J=Ti(_,U),Z=In(j,R);x.watch(()=>_.checked,Pe=>{U.value=Pe});let se={onChange(Pe){U.value=Pe.detail.value,Z("change",{value:U.value})}},pe=(Pe,ye)=>{_.disabled||(U.value=!U.value,Z("change",{value:U.value}))};return J&&(J.addHandler(pe),x.onBeforeUnmount(()=>{J.removeHandler(pe)})),Zr(_,{"label-click":pe}),()=>{let{color:Pe,type:ye}=_;return x.createVNode("div",{ref:j},[ye===Jn.switch?x.createVNode("dc-switch",x.mergeProps({dataUncType:"uni-switch"},se,{checked:U.value},{style:Pr}),null):null,ye===Jn.checkbox?x.createVNode(x.resolveComponent("checkbox"),x.mergeProps({style:{color:Pe}},{checked:U.value},se),null):null])}}});function Ti(_,R){let j=x.inject(jr,!1),U=x.inject(en,!1),J={submit:()=>{let Z=["",null];return _.name&&(Z[0]=_.name,Z[1]=R.value),Z},reset:()=>{R.value=!1}};return j&&(j.addField(J),x.onUnmounted(()=>{j.removeField(J)})),U}let dr={checked:{type:[Boolean,String],default:!1},id:{type:String,default:""},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#007aff"},value:{type:String,default:""}},Ir=Sn("ucg"),ji={name:{type:String,default:""}},ti=[{"uni-checkbox":{"":{flexDirection:"row",alignItems:"center"}},"uni-checkbox-input":{"":{justifyContent:"center",alignItems:"center",position:"relative",borderWidth:"1",borderColor:"#d1d1d1",borderStyle:"solid",backgroundColor:"#ffffff",borderRadius:"3",width:"22",height:"22"}},"uni-icon":{"":{fontFamily:"unincomponents",fontSize:"16",marginLeft:"2",marginTop:"2",color:"#007aff"}},"uni-checkbox-input-disabled":{"":{backgroundColor:"#e1e1e1"}},"uni-checkbox-input-disabled-before":{"":{color:"#adadad"}},"uni-checkbox-slot":{"":{fontSize:"16",marginLeft:"5"}}}];var gi=x.defineComponent({name:"Checkbox",props:dr,styles:ti,setup(_,{slots:R}){let j=x.ref(null),U=x.ref(_.checked),J=x.ref(_.value),Z=x.computed(()=>_.disabled?"#adadad":_.color),se=()=>{U.value=!1},pe=(_e,ze)=>{_.disabled||(U.value=!U.value,Pe&&Pe.checkboxChange(_e))},{uniCheckGroup:Pe,uniLabel:ye}=Yr(U,J,se);ye&&(ye.addHandler(pe),x.onBeforeUnmount(()=>{ye.removeHandler(pe)})),Zr(_,{"label-click":pe}),x.watch([()=>_.checked,()=>_.value],([_e,ze])=>{U.value=_e,J.value=ze});let ae=()=>{if(!R.default)return[];let _e=R.default();return _e.length===1&&_e[0].type===Text?[on(_e[0].children,{class:"uni-checkbox-slot"})]:_e};return()=>x.createVNode("div",x.mergeProps({ref:j},{dataUncType:"uni-checkbox"},{onClick:pe,class:"uni-checkbox"}),[x.createVNode("div",{class:["uni-checkbox-input",{"uni-checkbox-input-disabled":_.disabled}]},[U.value?on("\uEA08",{class:"uni-icon",style:{color:Z.value}}):null]),...ae()])}});function Yr(_,R,j){let U=x.computed(()=>({checkboxChecked:Boolean(_.value),value:R.value})),J={reset:j},Z=x.inject(Ir,!1);Z&&Z.addField(U);let se=x.inject(jr,!1);se&&se.addField(J);let pe=x.inject(en,!1);return x.onBeforeUnmount(()=>{Z&&Z.removeField(U),se&&se.removeField(J)}),{uniCheckGroup:Z,uniForm:se,uniLabel:pe}}var Pi=x.defineComponent({name:"CheckboxGroup",props:ji,emits:["change"],setup(_,{slots:R,emit:j}){let U=x.ref(null),J=In(U,j);return zi(_,J),()=>x.createVNode("div",{ref:U,class:"uni-checkbox-group"},[R.default&&R.default()])}});function zi(_,R){let j=[],U=()=>j.reduce((Z,se)=>(se.value.checkboxChecked&&Z.push(se.value.value),Z),new Array);x.provide(Ir,{addField(Z){j.push(Z)},removeField(Z){j.splice(j.indexOf(Z),1)},checkboxChange(Z){R("change",{value:U()})}});let J=x.inject(jr,!1);return J&&J.addField({submit:()=>{let Z=["",null];return _.name!==""&&(Z[0]=_.name,Z[1]=U()),Z}}),U}let Oo={checked:{type:[Boolean,String],default:!1},id:{type:String,default:""},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#007aff"},value:{type:String,default:""}},B=Sn("ucg"),ee={name:{type:String,default:""}},le=[{"uni-radio":{"":{alignItems:"center",flexDirection:"row"}},"uni-radio-input":{"":{position:"relative",alignItems:"center",justifyContent:"center",marginRight:"5",borderStyle:"solid",borderWidth:"1",borderColor:"#d1d1d1",borderRadius:50,width:"22",height:"22",outline:0}},"uni-radio-input-icon":{"":{fontFamily:"unincomponents",fontSize:"14",color:"#ffffff"}},"uni-radio-input-disabled":{"":{backgroundColor:"#e1e1e1",borderColor:"#d1d1d1",color:"#adadad"}},"uni-radio-slot":{"":{fontSize:"16",marginLeft:"5"}}}];var z=x.defineComponent({name:"Radio",props:Oo,styles:le,emits:["change"],setup(_,{slots:R}){let j=x.ref(null),U=x.ref(_.checked),J=x.ref(_.value),Z=x.computed(()=>{let ze=_.disabled?"#adadad":_.color;return U.value?{backgroundColor:ze,borderColor:ze}:{borderColor:"#d1d1d1"}}),se=()=>{U.value=!1},{uniCheckGroup:pe,uniLabel:Pe,field:ye}=L(U,J,se),ae=(ze,ft)=>{_.disabled||(U.value=!U.value,pe&&pe.radioChange(ze,ye))};Pe&&(Pe.addHandler(ae),x.onBeforeUnmount(()=>{Pe.removeHandler(ae)})),Zr(_,{"label-click":ae}),x.watch([()=>_.checked,()=>_.value],([ze,ft])=>{U.value=ze,J.value=ft});let _e=()=>{if(!R.default)return[];let ze=R.default();return ze.length===1&&ze[0].type===Text?[on(ze[0].children,{class:"uni-radio-slot"})]:ze};return()=>{let{disabled:ze}=_;return x.createVNode("div",x.mergeProps({ref:j},{dataUncType:"uni-radio"},{onClick:ae,class:"uni-radio"}),[x.createVNode("div",{style:Z.value,class:["uni-radio-input",{"uni-radio-input-disabled":ze}]},[U.value?on("\uEA08",{class:"uni-radio-input-icon"}):null]),..._e()])}}});function L(_,R,j){let U=x.computed({get:()=>({radioChecked:Boolean(_.value),value:R.value}),set:({radioChecked:Pe})=>{_.value=Pe}}),J={reset:j},Z=x.inject(B,!1);Z&&Z.addField(U);let se=x.inject(jr,!1);se&&se.addField(J);let pe=x.inject(en,!1);return x.onBeforeUnmount(()=>{Z&&Z.removeField(U),se&&se.removeField(J)}),{uniCheckGroup:Z,uniForm:se,uniLabel:pe,field:U}}var K=x.defineComponent({name:"RadioGroup",props:ee,emits:["change"],setup(_,{slots:R,emit:j}){let U=x.ref(null),J=In(U,j);return he(_,J),()=>x.createVNode("div",{ref:U},[R.default&&R.default()])}});function he(_,R){let j=[];x.onMounted(()=>{pe(j.length-1)});let U=()=>{var Pe;return(Pe=j.find(ye=>ye.value.radioChecked))==null?void 0:Pe.value.value};x.provide(B,{addField(Pe){j.push(Pe)},removeField(Pe){j.splice(j.indexOf(Pe),1)},radioChange(Pe,ye){let ae=j.indexOf(ye);pe(ae,!0),R("change",{value:U()})}});let J=x.inject(jr,!1),Z={submit:()=>{let Pe=["",null];return _.name!==""&&(Pe[0]=_.name,Pe[1]=U()),Pe}};J&&(J.addField(Z),x.onBeforeUnmount(()=>{J.removeField(Z)}));function se(Pe,ye){Pe.value={radioChecked:ye,value:Pe.value.value}}function pe(Pe,ye){j.forEach((ae,_e)=>{_e!==Pe&&ye&&se(j[_e],!1)})}return j}let Ue=["u-input","u-textarea"];var Ye=x.defineComponent({name:"Form",emits:["submit","reset"],setup({},{slots:_,emit:R}){let j=x.ref(null),U=In(j,R),J=[],Z;return x.provide(jr,{addField(se){J.push(se)},removeField(se){J.splice(J.indexOf(se),1)},submit(se){let pe={};Z&&Z(pe);let Pe=J.reduce((ye,ae)=>{if(ae.submit){let[_e,ze]=ae.submit();_e&&(ye[_e]=ze)}return ye},Object.create(null));Object.assign(pe,Pe),U("submit",{value:pe})},reset(se){Z&&Z(),J.forEach(pe=>pe.reset&&pe.reset()),U("reset",se)}}),()=>{let se=_.default&&_.default();return Z=gt(se),x.createVNode("view",{ref:j},[se])}}});function gt(_){let R=y.requireModule("plus"),j=(U,J)=>{(J||_||[]).forEach(function(Z){Ue.indexOf(String(Z.type))>=0&&Z.el&&Z.el.attr&&Z.el.attr.name&&(U?U[Z.el.attr.name]=R.getValue(Z.el.nodeId):Z.el.setValue("")),Array.isArray(Z.children)&&Z.children&&Z.children.length&&j(U,Z.children)})};return j}let yn={type:{type:String,default:""},size:{type:[String,Number],default:23},color:{type:String,default:""}},ni={success:"#09bb07",info:"#10aeff",warn:"#f76260",waiting:"#10aeff",safe_success:"#09bb07",safe_warn:"#ffbe00",success_circle:"#09bb07",success_no_circle:"#09bb07",waiting_circle:"#10aeff",circle:"#c9c9c9",download:"#09bb07",info_circle:"#09bb07",cancel:"#f43530",search:"#b2b2b2",clear:"#b2b2b2"},ir={success:"\uEA06",info:"\uEA03",warn:"\uEA0B",waiting:"\uEA09",safe_success:"\uEA04",safe_warn:"\uEA05",success_circle:"\uEA07",success_no_circle:"\uEA08",waiting_circle:"\uEA0A",circle:"\uEA01",download:"\uEA02",info_circle:"\uEA0C",cancel:"\uEA0D",search:"\uEA0E",clear:"\uEA0F"},Zn=[{"uni-icon":{"":{fontFamily:"unincomponents"}}}];var kn=x.defineComponent({name:"Icon",props:yn,styles:Zn,setup(_,{}){return()=>on(ir[_.type],{class:"uni-icon",style:{color:_.color||ni[_.type],fontSize:_.size}})}});let Wi={indicatorDots:{type:[Boolean,String],default:!1},vertical:{type:[Boolean,String],default:!1},autoplay:{type:[Boolean,String],default:!1},circular:{type:[Boolean,String],default:!1},interval:{type:[Number,String],default:5e3},duration:{type:[Number,String],default:500},current:{type:[Number,String],default:0},indicatorColor:{type:String,default:"rgba(0,0,0,.3)"},indicatorActiveColor:{type:String,default:"#000000"},previousMargin:{type:String,default:""},nextMargin:{type:String,default:""},currentItemId:{type:String,default:""},skipHiddenItemLayout:{type:[Boolean,String],default:!1},displayMultipleItems:{type:[Number,String],default:1},disableTouch:{type:[Boolean,String],default:!1}},ea=[{"uni-swiper":{"":{position:"relative",height:"150px"}},"uni-swiper-slider":{"":{position:"absolute",left:0,top:0,right:0,bottom:0}},"uni-swiper-dots":{"":{position:"absolute",left:0,right:0,bottom:"10",height:"10"}}}];var Ma=x.defineComponent({name:"Swiper",props:Wi,styles:ea,emits:["change","transition","animationfinish"],setup(_,{slots:R,emit:j}){let U=x.ref(null),J=[],Z=In(U,j),se=ta(_),pe=ba(se,_,J,Z);return x.watch([()=>_.current,()=>_.currentItemId],([Pe,ye])=>{Ea(se,_,J)}),x.onMounted(()=>{p(()=>{ur(U.value).then(({width:Pe,height:ye})=>{se.swiperWidth=Pe,se.swiperHeight=ye})},50)}),()=>{let Pe=R.default&&R.default(),{indicatorStyle:ye,currentSync:ae}=se;return J=Tr(Pe),x.createVNode("div",{ref:U,class:"uni-swiper"},[x.createVNode("slider",x.mergeProps({class:"uni-swiper-slider"},{autoPlay:_.autoplay,interval:_.interval,index:ae,keepIndex:!0,showIndicators:_.indicatorDots,infinite:_.circular,vertical:_.vertical,scrollable:!_.disableTouch},pe),[J,x.createVNode("indicator",{class:"uni-swiper-dots",styles:ye},null)])])}}});function ta(_){let R=x.ref(0),j=x.ref(0),U=x.ref(_.current),J=x.ref("autoplay"),Z=x.computed(()=>({itemColor:_.indicatorColor,itemSelectedColor:_.indicatorActiveColor,itemSize:8,opacity:_.indicatorDots?1:0}));return x.reactive({swiperWidth:R,swiperHeight:j,indicatorStyle:Z,currentSync:U,currentChangeSource:J})}function ba(_,R,j,U){let J=0,Z=ae=>{let _e=ae.detail,ze=R.vertical,ft=(ze?_e.offsetYRatio:_e.offsetXRatio)||0;if((ae.drag||ae.drag)&&(_.currentChangeSource="touch"),ft===0){let xt=Math.abs(J);if(xt===1)return;xt>.5&&(ft=1)}J=ft,U("transition",{dx:ze?0:-_.swiperWidth*ft,dy:ze?-_.swiperHeight*ft:0})},se=ae=>{let _e=()=>{U("animationfinish",Pe()),_.currentChangeSource="autoplay"};y.config.env.platform==="iOS"?p(_e,50):_e()},pe=ae=>{typeof ae.detail.source=="string"&&(_.currentChangeSource=ae.detail.source),_.currentSync=ae.detail.index,J=0};function Pe(){let ae=Number(_.currentSync),_e=j[ae]||{},ze=_e.componentInstance&&_e.componentInstance.itemId||"";return{current:ae,currentItemId:ze,source:_.currentChangeSource}}return x.watch(()=>_.currentSync,ae=>{U("change",Pe())}),{onScroll:Z,onScrollend:se,onChange:pe}}function Ea(_,R,j){let U=-1;if(R.currentItemId)for(let J=0,Z=j;J<Z.length;J++){let se=Z[J].componentInstance;if(se&&se.itemId===R.currentItemId){U=J;break}}U<0&&(U=Math.round(Number(R.current))||0),U=U<0?0:U,_.currentSync!==U&&(_.currentChangeSource="",_.currentSync=U)}let La={itemId:{type:String,default:""}};var na=x.defineComponent({name:"SwiperItem",props:La,setup(_,{slots:R}){return()=>x.createVNode("div",{class:"uni-swiper-item",style:{position:"absolute",left:0,top:0,right:0,bottom:0,overflow:"hidden"}},[R.default&&R.default()])}}),ra=/^<([-A-Za-z0-9_]+)((?:\s+[a-zA-Z_:][-a-zA-Z0-9_:.]*(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)>/,ia=/^<\/([-A-Za-z0-9_]+)[^>]*>/,Ho=/([a-zA-Z_:][-a-zA-Z0-9_:.]*)(?:\s*=\s*(?:(?:"((?:\\.|[^"])*)")|(?:'((?:\\.|[^'])*)')|([^>\s]+)))?/g,ya=Dr("area,base,basefont,br,col,frame,hr,img,input,link,meta,param,embed,command,keygen,source,track,wbr"),yr=Dr("a,address,article,applet,aside,audio,blockquote,button,canvas,center,dd,del,dir,div,dl,dt,fieldset,figcaption,figure,footer,form,frameset,h1,h2,h3,h4,h5,h6,header,hgroup,hr,iframe,isindex,li,map,menu,noframes,noscript,object,ol,output,p,pre,section,script,table,tbody,td,tfoot,th,thead,tr,ul,video"),ri=Dr("abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var"),wa=Dr("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr"),Da=Dr("checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected"),qr=Dr("script,style");function ws(_,R){var j,U,J,Z=[],se=_;for(Z.last=function(){return this[this.length-1]};_;){if(U=!0,!Z.last()||!qr[Z.last()]){if(_.indexOf("<!--")==0?(j=_.indexOf("-->"),j>=0&&(R.comment&&R.comment(_.substring(4,j)),_=_.substring(j+3),U=!1)):_.indexOf("</")==0?(J=_.match(ia),J&&(_=_.substring(J[0].length),J[0].replace(ia,ye),U=!1)):_.indexOf("<")==0&&(J=_.match(ra),J&&(_=_.substring(J[0].length),J[0].replace(ra,Pe),U=!1)),U){j=_.indexOf("<");var pe=j<0?_:_.substring(0,j);_=j<0?"":_.substring(j),R.chars&&R.chars(pe)}}else _=_.replace(new RegExp("([\\s\\S]*?)</"+Z.last()+"[^>]*>"),function(ae,_e){return _e=_e.replace(/<!--([\s\S]*?)-->|<!\[CDATA\[([\s\S]*?)]]>/g,"$1$2"),R.chars&&R.chars(_e),""}),ye("",Z.last());if(_==se)throw"Parse Error: "+_;se=_}ye();function Pe(ae,_e,ze,ft){if(_e=_e.toLowerCase(),yr[_e])for(;Z.last()&&ri[Z.last()];)ye("",Z.last());if(wa[_e]&&Z.last()==_e&&ye("",_e),ft=ya[_e]||!!ft,ft||Z.push(_e),R.start){var xt=[];ze.replace(Ho,function(ot,lt){var wt=arguments[2]?arguments[2]:arguments[3]?arguments[3]:arguments[4]?arguments[4]:Da[lt]?lt:"";xt.push({name:lt,value:wt,escaped:wt.replace(/(^|[^\\])"/g,'$1\\"')})}),R.start&&R.start(_e,xt,ft)}}function ye(ae,_e){if(_e)for(var ze=Z.length-1;ze>=0&&Z[ze]!=_e;ze--);else var ze=0;if(ze>=0){for(var ft=Z.length-1;ft>=ze;ft--)R.end&&R.end(Z[ft]);Z.length=ze}}}function Dr(_){for(var R={},j=_.split(","),U=0;U<j.length;U++)R[j[U]]=!0;return R}function Ii(_){return _.replace(/<\?xml.*\?>\n/,"").replace(/<!doctype.*>\n/,"").replace(/<!DOCTYPE.*>\n/,"")}function is(_){return _.reduce(function(R,j){let U=j.value,J=j.name;return U.match(/ /)&&["style","src"].indexOf(J)===-1&&(U=U.split(" ")),R[J]?Array.isArray(R[J])?R[J].push(U):R[J]=[R[J],U]:R[J]=U,R},{})}function Ss(_){_=Ii(_);let R=[],j={node:"root",children:[]};return ws(_,{start:function(U,J,Z){let se={name:U};if(J.length!==0&&(se.attrs=is(J)),Z){let pe=R[0]||j;pe.children||(pe.children=[]),pe.children.push(se)}else R.unshift(se)},end:function(U){let J=R.shift();if(J.name!==U&&console.error("invalid state: mismatch end tag"),R.length===0)j.children.push(J);else{let Z=R[0];Z.children||(Z.children=[]),Z.children.push(J)}},chars:function(U){let J={type:"text",text:U};if(R.length===0)j.children.push(J);else{let Z=R[0];Z.children||(Z.children=[]),Z.children.push(J)}},comment:function(U){let J={node:"comment",text:U},Z=R[0];Z.children||(Z.children=[]),Z.children.push(J)}}),j.children}let Sa={nodes:{type:[Array,String],default:function(){return[]}}},Ni=16;var gn=x.defineComponent({name:"RichText",props:Sa,setup(_){let R=x.getCurrentInstance();return()=>{let j=_.nodes;return typeof j=="string"&&(j=Ss(j)),x.createVNode(x.resolveComponent("u-rich-text"),{value:jo(j||[],R.root,{defaultFontSize:Ni})},null)}}});function jo(_,R,j){let U=["span","a","image","img"],J={blockquote:_e,br:ot,div:_e,dl:_e,h1:ft(2),h2:ft(1.5),h3:ft(1.17),h4:ft(1),h5:ft(.83),h6:ft(.67),hr:_e,ol:_e,p:_e,strong:xt,table:_e,tbody:_e,tfoot:_e,thead:_e,ul:_e},Z=/&(amp|gt|lt|nbsp|quot|apos);/g,se={amp:"&",gt:">",lt:"<",nbsp:" ",quot:'"',apos:"'"},pe={type:"span",__type:"break",attr:{value:`
`}},Pe={__block:!0,__break:!0,children:[]},ye=null;function ae(dt){let zt=Object.create(null);if(dt.attrs){let Ot=(dt.attrs.class||"").split(" ");Object.assign(zt,x.parseClassList(Ot,R),lo(dt.attrs.style||""))}if(dt.name==="img"||dt.name==="image"){let Ot=dt.attrs;zt.width=zt.width||Ot.width,zt.height=zt.height||Ot.height}return zt}function _e(dt){return dt.__block=!0,dt}function ze(dt,zt){return dt.style&&!dt.style.fontSize&&(dt.style.fontSize=j.defaultFontSize*zt),_e(xt(dt))}function ft(dt){return function(zt){return ze(zt,dt)}}function xt(dt){return dt.style&&!dt.style.fontWeight&&(dt.style.fontWeight="bold"),dt}function ot(dt){return dt.__value=" ",_e(dt)}function lt(dt){return dt.replace(Z,function(zt,Ot){return se[Ot]})}function wt(dt){let zt=(dt.name||"").toLowerCase(),Ot=zt,Jt=J[zt];U.indexOf(zt)===-1&&(zt="span"),zt==="img"&&(zt="image");let an={type:zt,__type:Ot,attr:Object.create(null)};return(dt.type==="text"||dt.text)&&(an.__value=an.attr.value=lt((dt.text||"").trim())),dt.attrs&&Object.keys(dt.attrs).forEach(mn=>{mn!=="class"&&mn!=="style"&&(an.attr[mn]=dt.attrs[mn])}),an.style=ae(dt),Jt&&Jt(an),(Pe.__block||an.__block)&&(ye||(Pe.children.push(pe),ye=[Pe,pe])),Pe=an,(Pe.__value||Pe.type==="image"&&Pe.attr.src)&&(ye=null),an.children=tn(dt.children),Pe=an,Pe.__block&&Pe.style.height&&!/^0(px)?$/.test(Pe.style.height)&&(ye=null),an}function tn(dt){return Array.isArray(dt)?dt.map(zt=>wt(zt)):[]}let Kt=tn(_);if(ye){let[dt,zt]=ye,Ot=dt.children,Jt=Ot.indexOf(zt);Ot.splice(Jt,1)}return Kt}let To={};function Un(_,R,j){let{adpid:U,width:J}=_,Z=U+"-"+J,se=To[Z];if(se&&se.length>0){R(se.splice(0,1)[0]);return}I.ad.getAds(_,pe=>{let Pe=pe.ads;R(Pe.splice(0,1)[0]),To[Z]=se?se.concat(Pe):Pe},pe=>{j({errCode:pe.code,errMsg:pe.message})})}let or={adpid:{type:[Number,String],default:""},data:{type:String,default:""},width:{type:String,default:""},channel:{type:String,default:""}},Kr={load:"load",close:"close",error:"error",downloadchange:"downloadchange"};var Fa=x.defineComponent({name:"Ad",props:or,emits:[Kr.load,Kr.close,Kr.error,Kr.downloadchange],setup(_,{emit:R}){let j=x.ref(null),U=In(j,R),J=ii();x.watch(()=>_.adpid,se=>{ki(J,_,U)}),x.watch(()=>_.data,se=>{J.data=se}),x.onMounted(()=>{p(()=>{ur(j.value).then(({width:se})=>{J.width=se===0?-1:se,ki(J,_,U)})},50)});let Z={onDownloadchange(se){U(Kr.downloadchange,se)},onDislike(se){U(Kr.close,se)}};return()=>x.createVNode("u-ad",x.mergeProps({ref:j},{data:J.data,rendering:!0},Z),null)}});function ii(_){let R=x.ref("");return x.reactive({width:0,data:R})}function ki(_,R,j){Un({adpid:R.adpid,width:_.width},U=>{_.data=U,j(Kr.load,{})},U=>{j(Kr.error,U)})}let oa={};function Aa(_,R,j,U,J){let Z=_+"-"+R,se=oa[Z];if(se&&se.length>0){U(se.splice(0,1)[0]);return}I.ad.getDrawAds({adpid:String(_),count:3,width:R},pe=>{let Pe=pe.ads;U(Pe.splice(0,1)[0]),oa[Z]=se?se.concat(Pe):Pe},pe=>{J({errCode:pe.code,errMsg:pe.message})})}let Po={adpid:{type:[Number,String],default:""},data:{type:String,default:""},width:{type:String,default:""}},oi={load:"load",close:"close",error:"error"};var zo=x.defineComponent({name:"AdDraw",props:Po,emits:[oi.load,oi.close,oi.error],setup(_,{emit:R}){let j=x.ref(null),U=In(j,R),J=Va();x.watch(()=>_.adpid,se=>{aa(J,_,U)}),x.watch(()=>_.data,se=>{J.data=se});let Z={onDislike(se){U(oi.close,se)}};return x.onMounted(()=>{p(()=>{ur(j.value).then(({width:se,height:pe})=>{J.width=se===0?-1:se,J.height=pe===0?-1:pe,aa(J,_,U)})},50)}),()=>{let{data:se}=J;return x.createVNode("u-ad-draw",x.mergeProps({ref:j},{data:se,rendering:!0},Z),null)}}});function Va(_){let R=x.ref("");return x.reactive({width:0,height:0,data:R})}function aa(_,R,j){Aa(R.adpid,_.width,_.height,U=>{_.data=U,j(oi.load,{})},U=>{j(oi.error,U)})}var Wo={Navigator:$n,Label:Hr,Button:On,MovableArea:Fi,MovableView:fi,Progress:Qi,PickerView:Br,PickerViewColumn:Yt,Picker:go,USlider:Uo,Switch:rr,Checkbox:gi,CheckboxGroup:Pi,Radio:z,RadioGroup:K,Form:Ye,Icon:kn,Swiper:Ma,SwiperItem:na,RichText:gn,Ad:Fa,AdDraw:zo};return Wo}(k,$e,Nt);return bn}function GT(p,s){let{UniShared:m,Vue:A}=s;function k(I,f,P){let $e=I.$[f];return $e&&m.invokeArrayFns($e,P)}let y=p.setup;return p.inheritAttrs=!1,p.setup=(I,f)=>{let{attrs:{__pageId:P,__pagePath:$e,__pageQuery:Nt}}=f,bn=s.__uniRoutes.find(Hn=>Hn.meta.route===$e),Lt=A.getCurrentInstance().proxy;if(bn&&(bn.meta.isSubNVue||YT(Lt,s,{__pageId:P,__pagePath:$e})),A.onMounted(()=>{A.nextTick(()=>{k(Lt,m.ON_READY)})}),A.onBeforeUnmount(()=>{k(Lt,m.ON_UNLOAD)}),y)return y(Nt,f)},p}function YT(p,s,{__pageId:m,__pagePath:A}){let k=s.getCurrentPages(),y=k[k.length-1];if(y&&y.__setup)y.__setup(p,y);else{let I="/"+A;return s.__registerPage({url:I,path:I,query:{},openType:"launch",webview:{id:m+""},nvuePageVm:p})}}var Ll={},zg;function Wg(p){zg=p}var Kc;function qT(p){if(Kc)return Kc;let s=new p.Emitter;return Kc={on(m,A){return s.on(m,A)},once(m,A){return s.once(m,A)},off(m,A){return s.off(m,A)},emit(m,...A){return s.emit(m,...A)}},Kc}function KT(p){return(s,m,A)=>{let{nvue:k}=m,y=qc(p,m);m.Vue=y,Ll[s]={instanceId:s,config:k.config,document:k.document,data:A};let{createApp:I}=y;y.createVueApp=y.createApp=(f,P)=>(m.__uniConfig.styles=f.styles||[],I(f,P).use(JT,s,m)),y.createPageApp=(f,P)=>{GT(f,m);let $e=P.$store;delete P.$store;let Nt=I(f,P);return $e&&Nt.use($e),Nt.use(XT,y,s,m)}}}var JT={install(p,s,m){lc(m).initApp(p),ZT(p,s,m)}};function ZT(p,s,m){let{mount:A}=p,k=Ll[s];return p.mount=y=>{let I=y==="#app",f=k.app=A(Gg(k.document,{isRoot:I}));return I&&m.__registerApp(f),f},p}var XT={install(p,s,m,A){let{weex:k,plus:y,BroadcastChannel:I,VueShared:f,UniShared:P,getCurrentPages:$e,setTimeout:Nt,clearTimeout:bn}=A;p.config.globalProperties.$requireNativePlugin=k.requireModule;let x=WT({uni:zg,Vue:s,weex:k,plus:y,BroadcastChannel:I,UniViewJSBridge:qT(P),VueShared:f,UniShared:P,getCurrentPages:$e,setTimeout:Nt,clearTimeout:bn});Object.keys(x).forEach(Lt=>{p.component(s.hyphenate(Lt),x[Lt])}),lc(A).initApp(p),QT(p,m,A)}};function QT(p,s,{nvue:m}){let{config:{compilerOptions:A},mount:k}=p;A.isCustomElement=I=>!!m.supports(`@component/${I}`);let y=Ll[s];return p.mount=I=>{let f=I==="#root",P=y.app=k(Gg(y.document,{isRoot:f}));if(f)try{m.document.taskCenter.send("dom",{action:"createFinish"},[])}catch($e){}return P},p}function Gg(p,{isRoot:s}){if(s)return p.documentElement;let m=p.createComment("root");return p.documentElement.appendChild(m),m}function Yg(p){let s=Ll[p];if(s&&s.app&&s.document){try{s.app.$.appContext.app.unmount(),s.document.destroy()}catch(m){}delete s.document,delete s.app}delete Ll[p]}function qg(p){let s=Ll[p];if(!s||!s.app)return new Error(`refreshInstance: instance ${p} not found!`);s.document.taskCenter.send("dom",{action:"refreshFinish"},[])}function eP(p,s){let{UniShared:m,VueShared:A,VueReactivity:k}=p;var y=function(I,f,P,$e){"use strict";var Nt=[];function bn(o){P.pauseTracking();for(var c=Nt.length?Nt[Nt.length-1].component:null,v=c&&c.appContext.config.warnHandler,b=x(),O=arguments.length,T=new Array(O>1?O-1:0),V=1;V<O;V++)T[V-1]=arguments[V];if(v)ne(v,c,11,[o+T.join(""),c&&c.proxy,b.map(G=>{var{vnode:ie}=G;return"at <".concat(Ro(c,ie.type),">")}).join(`
`),b]);else{var Y=["[Vue warn]: ".concat(o),...T];b.length&&Y.push(`
`,...Lt(b)),console.warn(...Y)}P.resetTracking()}function x(){var o=Nt[Nt.length-1];if(!o)return[];for(var c=[];o;){var v=c[0];v&&v.vnode===o?v.recurseCount++:c.push({vnode:o,recurseCount:0});var b=o.component&&o.component.parent;o=b&&b.vnode}return c}function Lt(o){var c=[];return o.forEach((v,b)=>{c.push(...b===0?[]:[`
`],...Hn(v))}),c}function Hn(o){var{vnode:c,recurseCount:v}=o,b=v>0?"... (".concat(v," recursive calls)"):"",O=c.component?c.component.parent==null:!1,T=" at <".concat(Ro(c.component,c.type,O)),V=">"+b;return c.props?[T,...Pn(c.props),V]:[T+V]}function Pn(o){var c=[],v=Object.keys(o);return v.slice(0,3).forEach(b=>{c.push(...ct(b,o[b]))}),v.length>3&&c.push(" ..."),c}function ct(o,c,v){return f.isString(c)?(c=JSON.stringify(c),v?c:["".concat(o,"=").concat(c)]):typeof c=="number"||typeof c=="boolean"||c==null?v?c:["".concat(o,"=").concat(c)]:P.isRef(c)?(c=ct(o,P.toRaw(c.value),!0),v?c:["".concat(o,"=Ref<"),c,">"]):f.isFunction(c)?["".concat(o,"=fn").concat(c.name?"<".concat(c.name,">"):"")]:(c=P.toRaw(c),v?c:["".concat(o,"="),c])}function ne(o,c,v,b){var O;try{O=b?o(...b):o()}catch(T){on(T,c,v)}return O}function Q(o,c,v,b){if(f.isFunction(o)){var O=ne(o,c,v,b);return O&&f.isPromise(O)&&O.catch(Y=>{on(Y,c,v)}),O}for(var T=[],V=0;V<o.length;V++)T.push(Q(o[V],c,v,b));return T}function on(o,c,v){if(c&&c.vnode,c){for(var b=c.parent,O=c.proxy,T=v;b;){var V=b.ec;if(V){for(var Y=0;Y<V.length;Y++)if(V[Y](o,O,T)===!1)return}b=b.parent}var G=c.appContext.config.errorHandler;if(G){ne(G,null,10,[o,O,T]);return}}wn(o)}function wn(o,c,v){console.error(o)}var $n=!1,Sn=!1,ln=[],An=0,jn=[],En=null,fn=0,Bn=[],Cn=null,Cr=0,ui=Promise.resolve(),Ve=null,st=null;function bt(o){var c=Ve||ui;return o?c.then(this?o.bind(this):o):c}function Xt(o){for(var c=An+1,v=ln.length;c<v;){var b=c+v>>>1,O=Or(ln[b]);O<o?c=b+1:v=b}return c}function hn(o){(!ln.length||!ln.includes(o,$n&&o.allowRecurse?An+1:An))&&o!==st&&(o.id==null?ln.push(o):ln.splice(Xt(o.id),0,o),en())}function en(){!$n&&!Sn&&(Sn=!0,Ve=ui.then(yi))}function cr(o){var c=ln.indexOf(o);c>An&&ln.splice(c,1)}function Hr(o,c,v,b){f.isArray(o)?v.push(...o):(!c||!c.includes(o,o.allowRecurse?b+1:b))&&v.push(o),en()}function Zr(o){Hr(o,En,jn,fn)}function Ei(o){Hr(o,Cn,Bn,Cr)}function zn(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;if(jn.length){for(st=c,En=[...new Set(jn)],jn.length=0,fn=0;fn<En.length;fn++)En[fn]();En=null,fn=0,st=null,zn(o,c)}}function Xr(o){if(Bn.length){var c=[...new Set(Bn)];if(Bn.length=0,Cn){Cn.push(...c);return}for(Cn=c,Cn.sort((v,b)=>Or(v)-Or(b)),Cr=0;Cr<Cn.length;Cr++)Cn[Cr]();Cn=null,Cr=0}}var Or=o=>o.id==null?1/0:o.id;function yi(o){Sn=!1,$n=!0,zn(o),ln.sort((b,O)=>Or(b)-Or(O));var c=f.NOOP;try{for(An=0;An<ln.length;An++){var v=ln[An];v&&v.active!==!1&&ne(v,null,14)}}finally{An=0,ln.length=0,Xr(),$n=!1,Ve=null,(ln.length||jn.length||Bn.length)&&yi(o)}}I.devtools=void 0;var Ki=[];function Di(o,c){var v,b;if(I.devtools=o,I.devtools)I.devtools.enabled=!0,Ki.forEach(T=>{var{event:V,args:Y}=T;return I.devtools.emit(V,...Y)}),Ki=[];else if(typeof window!="undefined"&&window.HTMLElement&&!((b=(v=window.navigator)===null||v===void 0?void 0:v.userAgent)===null||b===void 0?void 0:b.includes("jsdom"))){var O=c.__VUE_DEVTOOLS_HOOK_REPLAY__=c.__VUE_DEVTOOLS_HOOK_REPLAY__||[];O.push(T=>{Di(T,c)}),setTimeout(()=>{I.devtools||(c.__VUE_DEVTOOLS_HOOK_REPLAY__=null,Ki=[])},3e3)}else Ki=[]}function jr(o,c){if(!o.isUnmounted){for(var v=o.vnode.props||f.EMPTY_OBJ,b=arguments.length,O=new Array(b>2?b-2:0),T=2;T<b;T++)O[T-2]=arguments[T];var V=O,Y=c.startsWith("update:"),G=Y&&c.slice(7);if(G&&G in v){var ie="".concat(G==="modelValue"?"model":G,"Modifiers"),{number:Re,trim:at}=v[ie]||f.EMPTY_OBJ;at?V=O.map(vt=>vt.trim()):Re&&(V=O.map(f.toNumber))}var oe,Je=v[oe=f.toHandlerKey(c)]||v[oe=f.toHandlerKey(f.camelize(c))];!Je&&Y&&(Je=v[oe=f.toHandlerKey(f.hyphenate(c))]),Je&&Q(Je,o,6,V);var Ge=v[oe+"Once"];if(Ge){if(!o.emitted)o.emitted={};else if(o.emitted[oe])return;o.emitted[oe]=!0,Q(Ge,o,6,V)}}}function So(o,c){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,b=c.emitsCache,O=b.get(o);if(O!==void 0)return O;var T=o.emits,V={},Y=!1;if(!f.isFunction(o)){var G=ie=>{var Re=So(ie,c,!0);Re&&(Y=!0,f.extend(V,Re))};!v&&c.mixins.length&&c.mixins.forEach(G),o.extends&&G(o.extends),o.mixins&&o.mixins.forEach(G)}return!T&&!Y?(b.set(o,null),null):(f.isArray(T)?T.forEach(ie=>V[ie]=null):f.extend(V,T),b.set(o,V),V)}function wi(o,c){return!o||!f.isOn(c)?!1:(c=c.slice(2).replace(/Once$/,""),f.hasOwn(o,c[0].toLowerCase()+c.slice(1))||f.hasOwn(o,f.hyphenate(c))||f.hasOwn(o,c))}var On=null,Mn=null;function Tr(o){var c=On;return On=o,Mn=o&&o.type.__scopeId||null,c}function Ji(o){Mn=o}function lo(){Mn=null}var ur=o=>Fi;function Fi(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:On;if(!c||o._n)return o;var v=function(){v._d&&tn(-1);var b=Tr(c),O=o(...arguments);return Tr(b),v._d&&tn(1),O};return v._n=!0,v._c=!0,v._d=!0,v}function Zi(){}function In(o){var{type:c,vnode:v,proxy:b,withProxy:O,props:T,propsOptions:[V],slots:Y,attrs:G,emit:ie,render:Re,renderCache:at,data:oe,setupState:Je,ctx:Ge,inheritAttrs:vt}=o,Ne,Ae,Le=Tr(o);try{if(v.shapeFlag&4){var We=O||b;Ne=Ln(Re.call(We,We,at,T,Je,oe,Ge)),Ae=G}else{var i=c;Ne=Ln(i.length>1?i(T,{attrs:G,slots:Y,emit:ie}):i(T,null)),Ae=c.props?G:Vo(G)}}catch(w){ft.length=0,on(w,o,1),Ne=Ht(_e)}var l=Ne;if(Ae&&vt!==!1){var d=Object.keys(Ae),{shapeFlag:h}=l;d.length&&h&(1|6)&&(V&&d.some(f.isModelListener)&&(Ae=Ao(Ae,V)),l=Fr(l,Ae))}return v.dirs&&(l.dirs=l.dirs?l.dirs.concat(v.dirs):v.dirs),v.transition&&(l.transition=v.transition),Ne=l,Tr(Le),Ne}function zr(o){for(var c,v=0;v<o.length;v++){var b=o[v];if(Ot(b)){if(b.type!==_e||b.children==="v-if"){if(c)return;c=b}}else return}return c}var Vo=o=>{var c;for(var v in o)(v==="class"||v==="style"||f.isOn(v))&&((c||(c={}))[v]=o[v]);return c},Ao=(o,c)=>{var v={};for(var b in o)(!f.isModelListener(b)||!(b.slice(9)in c))&&(v[b]=o[b]);return v};function Vi(o,c,v){var{props:b,children:O,component:T}=o,{props:V,children:Y,patchFlag:G}=c,ie=T.emitsOptions;if(c.dirs||c.transition)return!0;if(v&&G>=0){if(G&1024)return!0;if(G&16)return b?vr(b,V,ie):!!V;if(G&8)for(var Re=c.dynamicProps,at=0;at<Re.length;at++){var oe=Re[at];if(V[oe]!==b[oe]&&!wi(ie,oe))return!0}}else return(O||Y)&&(!Y||!Y.$stable)?!0:b===V?!1:b?V?vr(b,V,ie):!0:!!V;return!1}function vr(o,c,v){var b=Object.keys(c);if(b.length!==Object.keys(o).length)return!0;for(var O=0;O<b.length;O++){var T=b[O];if(c[T]!==o[T]&&!wi(v,T))return!0}return!1}function Qr(o,c){for(var{vnode:v,parent:b}=o;b&&b.subTree===v;)(v=b.vnode).el=c,b=b.parent}var Nn=o=>o.__isSuspense,mr={name:"Suspense",__isSuspense:!0,process(o,c,v,b,O,T,V,Y,G,ie){o==null?Wr(c,v,b,O,T,V,Y,G,ie):Co(o,c,v,b,O,V,Y,G,ie)},hydrate:Ai,create:Gr,normalize:uo},co=mr;function Si(o,c){var v=o.props&&o.props[c];f.isFunction(v)&&v()}function Wr(o,c,v,b,O,T,V,Y,G){var{p:ie,o:{createElement:Re}}=G,at=Re("div"),oe=o.suspense=Gr(o,O,b,c,at,v,T,V,Y,G);ie(null,oe.pendingBranch=o.ssContent,at,null,b,oe,T,V),oe.deps>0?(Si(o,"onPending"),Si(o,"onFallback"),ie(null,o.ssFallback,c,v,b,null,T,V),fi(oe,o.ssFallback)):oe.resolve()}function Co(o,c,v,b,O,T,V,Y,G){var{p:ie,um:Re,o:{createElement:at}}=G,oe=c.suspense=o.suspense;oe.vnode=c,c.el=o.el;var Je=c.ssContent,Ge=c.ssFallback,{activeBranch:vt,pendingBranch:Ne,isInFallback:Ae,isHydrating:Le}=oe;if(Ne)oe.pendingBranch=Je,Jt(Je,Ne)?(ie(Ne,Je,oe.hiddenContainer,null,O,oe,T,V,Y),oe.deps<=0?oe.resolve():Ae&&(ie(vt,Ge,v,b,O,null,T,V,Y),fi(oe,Ge))):(oe.pendingId++,Le?(oe.isHydrating=!1,oe.activeBranch=Ne):Re(Ne,O,oe),oe.deps=0,oe.effects.length=0,oe.hiddenContainer=at("div"),Ae?(ie(null,Je,oe.hiddenContainer,null,O,oe,T,V,Y),oe.deps<=0?oe.resolve():(ie(vt,Ge,v,b,O,null,T,V,Y),fi(oe,Ge))):vt&&Jt(Je,vt)?(ie(vt,Je,v,b,O,oe,T,V,Y),oe.resolve(!0)):(ie(null,Je,oe.hiddenContainer,null,O,oe,T,V,Y),oe.deps<=0&&oe.resolve()));else if(vt&&Jt(Je,vt))ie(vt,Je,v,b,O,oe,T,V,Y),fi(oe,Je);else if(Si(c,"onPending"),oe.pendingBranch=Je,oe.pendingId++,ie(null,Je,oe.hiddenContainer,null,O,oe,T,V,Y),oe.deps<=0)oe.resolve();else{var{timeout:We,pendingId:i}=oe;We>0?setTimeout(()=>{oe.pendingId===i&&oe.fallback(Ge)},We):We===0&&oe.fallback(Ge)}}function Gr(o,c,v,b,O,T,V,Y,G,ie){var Re=arguments.length>10&&arguments[10]!==void 0?arguments[10]:!1,{p:at,m:oe,um:Je,n:Ge,o:{parentNode:vt,remove:Ne}}=ie,Ae=f.toNumber(o.props&&o.props.timeout),Le={vnode:o,parent:c,parentComponent:v,isSVG:V,container:b,hiddenContainer:O,anchor:T,deps:0,pendingId:0,timeout:typeof Ae=="number"?Ae:-1,activeBranch:null,pendingBranch:null,isInFallback:!0,isHydrating:Re,isUnmounted:!1,effects:[],resolve(){var We=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1,{vnode:i,activeBranch:l,pendingBranch:d,pendingId:h,effects:w,parentComponent:S,container:N}=Le;if(Le.isHydrating)Le.isHydrating=!1;else if(!We){var D=l&&d.transition&&d.transition.mode==="out-in";D&&(l.transition.afterLeave=()=>{h===Le.pendingId&&oe(d,N,M,0)});var{anchor:M}=Le;l&&(M=Ge(l),Je(l,S,Le,!0)),D||oe(d,N,M,0)}fi(Le,d),Le.pendingBranch=null,Le.isInFallback=!1;for(var X=Le.parent,fe=!1;X;){if(X.pendingBranch){X.effects.push(...w),fe=!0;break}X=X.parent}fe||Ei(w),Le.effects=[],Si(i,"onResolve")},fallback(We){if(!!Le.pendingBranch){var{vnode:i,activeBranch:l,parentComponent:d,container:h,isSVG:w}=Le;Si(i,"onFallback");var S=Ge(l),N=()=>{!Le.isInFallback||(at(null,We,h,S,d,null,w,Y,G),fi(Le,We))},D=We.transition&&We.transition.mode==="out-in";D&&(l.transition.afterLeave=N),Le.isInFallback=!0,Je(l,d,null,!0),D||N()}},move(We,i,l){Le.activeBranch&&oe(Le.activeBranch,We,i,l),Le.container=We},next(){return Le.activeBranch&&Ge(Le.activeBranch)},registerDep(We,i){var l=!!Le.pendingBranch;l&&Le.deps++;var d=We.vnode.el;We.asyncDep.catch(h=>{on(h,We,0)}).then(h=>{if(!(We.isUnmounted||Le.isUnmounted||Le.pendingId!==We.suspenseId)){We.asyncResolved=!0;var{vnode:w}=We;mo(We,h,!1),d&&(w.el=d);var S=!d&&We.subTree.el;i(We,w,vt(d||We.subTree.el),d?null:Ge(We.subTree),Le,V,G),S&&Ne(S),Qr(We,w.el),l&&--Le.deps===0&&Le.resolve()}})},unmount(We,i){Le.isUnmounted=!0,Le.activeBranch&&Je(Le.activeBranch,v,We,i),Le.pendingBranch&&Je(Le.pendingBranch,v,We,i)}};return Le}function Ai(o,c,v,b,O,T,V,Y,G){var ie=c.suspense=Gr(c,b,v,o.parentNode,s.createElement("div"),null,O,T,V,Y,!0),Re=G(o,ie.pendingBranch=c.ssContent,v,ie,T,V);return ie.deps===0&&ie.resolve(),Re}function uo(o){var{shapeFlag:c,children:v}=o,b=c&32;o.ssContent=$o(b?v.default:v),o.ssFallback=b?$o(v.fallback):Ht(_e)}function $o(o){var c;if(f.isFunction(o)){var v=wt&&o._c;v&&(o._d=!1,ot()),o=o(),v&&(o._d=!0,c=xt,lt())}if(f.isArray(o)){var b=zr(o);o=b}return o=Ln(o),c&&!o.dynamicChildren&&(o.dynamicChildren=c.filter(O=>O!==o)),o}function Xi(o,c){c&&c.pendingBranch?f.isArray(o)?c.effects.push(...o):c.effects.push(o):Ei(o)}function fi(o,c){o.activeBranch=c;var{vnode:v,parentComponent:b}=o,O=v.el=c.el;b&&b.subTree===v&&(b.vnode.el=O,Qr(b,O))}function ei(o,c){if(Dn){var v=Dn.provides,b=Dn.parent&&Dn.parent.provides;b===v&&(v=Dn.provides=Object.create(b)),v[o]=c,Dn.type.mpType==="app"&&Dn.appContext.app.provide(o,c)}}function di(o,c){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,b=Dn||On;if(b){var O=b.parent==null?b.vnode.appContext&&b.vnode.appContext.provides:b.parent.provides;if(O&&o in O)return O[o];if(arguments.length>1)return v&&f.isFunction(c)?c.call(b.proxy):c}}function _r(o,c){return Ee(o,null,c)}function Yn(o,c){return Ee(o,null,{flush:"post"})}function $i(o,c){return Ee(o,null,{flush:"sync"})}var Qi={};function Ft(o,c,v){return Ee(o,c,v)}function Ee(o,c){var{immediate:v,deep:b,flush:O,onTrack:T,onTrigger:V}=arguments.length>2&&arguments[2]!==void 0?arguments[2]:f.EMPTY_OBJ,Y=Dn,G,ie=!1,Re=!1;if(P.isRef(o)?(G=()=>o.value,ie=P.isShallow(o)):P.isReactive(o)?(G=()=>o,b=!0):f.isArray(o)?(Re=!0,ie=o.some(P.isReactive),G=()=>o.map(Le=>{if(P.isRef(Le))return Le.value;if(P.isReactive(Le))return Br(Le);if(f.isFunction(Le))return ne(Le,Y,2)})):f.isFunction(o)?c?G=()=>ne(o,Y,2):G=()=>{if(!(Y&&Y.isUnmounted))return oe&&oe(),Q(o,Y,3,[Je])}:G=f.NOOP,c&&b){var at=G;G=()=>Br(at())}var oe,Je=Le=>{oe=Ae.onStop=()=>{ne(Le,Y,4)}};if(I.isInSSRComponentSetup)return Je=f.NOOP,c?v&&Q(c,Y,3,[G(),Re?[]:void 0,Je]):G(),f.NOOP;var Ge=Re?[]:Qi,vt=()=>{if(!!Ae.active)if(c){var Le=Ae.run();(b||ie||(Re?Le.some((We,i)=>f.hasChanged(We,Ge[i])):f.hasChanged(Le,Ge)))&&(oe&&oe(),Q(c,Y,3,[Le,Ge===Qi?void 0:Ge,Je]),Ge=Le)}else Ae.run()};vt.allowRecurse=!!c;var Ne;O==="sync"?Ne=vt:O==="post"?Ne=()=>Un(vt,Y&&Y.suspense):Ne=()=>{!Y||Y.isMounted?Zr(vt):vt()};var Ae=new P.ReactiveEffect(G,Ne);return c?v?vt():Ge=Ae.run():O==="post"?Un(Ae.run.bind(Ae),Y&&Y.suspense):Ae.run(),()=>{Ae.stop(),Y&&Y.scope&&f.remove(Y.scope.effects,Ae)}}function hi(o,c,v){var b=this.proxy,O=f.isString(o)?o.includes(".")?fo(b,o):()=>b[o]:o.bind(b,b),T;f.isFunction(c)?T=c:(T=c.handler,v=c);var V=Dn;Nr(this);var Y=Ee(O,T.bind(b),v);return V?Nr(V):Sr(),Y}function fo(o,c){var v=c.split(".");return()=>{for(var b=o,O=0;O<v.length&&b;O++)b=b[v[O]];return b}}function Br(o,c){if(!f.isObject(o)||o.__v_skip||(c=c||new Set,c.has(o)))return o;if(c.add(o),P.isRef(o))Br(o.value,c);else if(f.isArray(o))for(var v=0;v<o.length;v++)Br(o[v],c);else if(f.isSet(o)||f.isMap(o))o.forEach(O=>{Br(O,c)});else if(f.isPlainObject(o))for(var b in o)Br(o[b],c);return o}function Mr(){var o={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return ji(()=>{o.isMounted=!0}),Yr(()=>{o.isUnmounting=!0}),o}var Tn=[Function,Array],qn={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:Tn,onEnter:Tn,onAfterEnter:Tn,onEnterCancelled:Tn,onBeforeLeave:Tn,onLeave:Tn,onAfterLeave:Tn,onLeaveCancelled:Tn,onBeforeAppear:Tn,onAppear:Tn,onAfterAppear:Tn,onAppearCancelled:Tn},setup(o,c){var{slots:v}=c,b=dn(),O=Mr(),T;return()=>{var V=v.default&&Kn(v.default(),!0);if(!(!V||!V.length)){var Y=V[0];if(V.length>1){for(var G of V)if(G.type!==_e){Y=G;break}}var ie=P.toRaw(o),{mode:Re}=ie;if(O.isLeaving)return qt(Y);var at=Lr(Y);if(!at)return qt(Y);var oe=eo(at,ie,O,b);br(at,oe);var Je=b.subTree,Ge=Je&&Lr(Je),vt=!1,{getTransitionKey:Ne}=at.type;if(Ne){var Ae=Ne();T===void 0?T=Ae:Ae!==T&&(T=Ae,vt=!0)}if(Ge&&Ge.type!==_e&&(!Jt(at,Ge)||vt)){var Le=eo(Ge,ie,O,b);if(br(Ge,Le),Re==="out-in")return O.isLeaving=!0,Le.afterLeave=()=>{O.isLeaving=!1,b.update()},qt(Y);Re==="in-out"&&at.type!==_e&&(Le.delayLeave=(We,i,l)=>{var d=Yt(O,Ge);d[String(Ge.key)]=Ge,We._leaveCb=()=>{i(),We._leaveCb=void 0,delete oe.delayedLeave},oe.delayedLeave=l})}return Y}}}},ho=qn;function Yt(o,c){var{leavingVNodes:v}=o,b=v.get(c.type);return b||(b=Object.create(null),v.set(c.type,b)),b}function eo(o,c,v,b){var{appear:O,mode:T,persisted:V=!1,onBeforeEnter:Y,onEnter:G,onAfterEnter:ie,onEnterCancelled:Re,onBeforeLeave:at,onLeave:oe,onAfterLeave:Je,onLeaveCancelled:Ge,onBeforeAppear:vt,onAppear:Ne,onAfterAppear:Ae,onAppearCancelled:Le}=c,We=String(o.key),i=Yt(v,o),l=(h,w)=>{h&&Q(h,b,9,w)},d={mode:T,persisted:V,beforeEnter(h){var w=Y;if(!v.isMounted)if(O)w=vt||Y;else return;h._leaveCb&&h._leaveCb(!0);var S=i[We];S&&Jt(o,S)&&S.el._leaveCb&&S.el._leaveCb(),l(w,[h])},enter(h){var w=G,S=ie,N=Re;if(!v.isMounted)if(O)w=Ne||G,S=Ae||ie,N=Le||Re;else return;var D=!1,M=h._enterCb=X=>{D||(D=!0,X?l(N,[h]):l(S,[h]),d.delayedLeave&&d.delayedLeave(),h._enterCb=void 0)};w?(w(h,M),w.length<=1&&M()):M()},leave(h,w){var S=String(o.key);if(h._enterCb&&h._enterCb(!0),v.isUnmounting)return w();l(at,[h]);var N=!1,D=h._leaveCb=M=>{N||(N=!0,w(),M?l(Ge,[h]):l(Je,[h]),h._leaveCb=void 0,i[S]===o&&delete i[S])};i[S]=o,oe?(oe(h,D),oe.length<=1&&D()):D()},clone(h){return eo(h,c,v,b)}};return d}function qt(o){if(Oi(o))return o=Fr(o),o.children=null,o}function Lr(o){return Oi(o)?o.children?o.children[0]:void 0:o}function br(o,c){o.shapeFlag&6&&o.component?br(o.component.subTree,c):o.shapeFlag&128?(o.ssContent.transition=c.clone(o.ssContent),o.ssFallback.transition=c.clone(o.ssFallback)):o.transition=c}function Kn(o){for(var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1,v=arguments.length>2?arguments[2]:void 0,b=[],O=0,T=0;T<o.length;T++){var V=o[T],Y=v==null?V.key:String(v)+String(V.key!=null?V.key:T);V.type===ye?(V.patchFlag&128&&O++,b=b.concat(Kn(V.children,c,Y))):(c||V.type!==_e)&&b.push(Y!=null?Fr(V,{key:Y}):V)}if(O>1)for(var G=0;G<b.length;G++)b[G].patchFlag=-2;return b}function nr(o){return f.isFunction(o)?{setup:o,name:o.name}:o}var Ci=o=>!!o.type.__asyncLoader;function Ui(o){f.isFunction(o)&&(o={loader:o});var{loader:c,loadingComponent:v,errorComponent:b,delay:O=200,timeout:T,suspensible:V=!0,onError:Y}=o,G=null,ie,Re=0,at=()=>(Re++,G=null,oe()),oe=()=>{var Je;return G||(Je=G=c().catch(Ge=>{if(Ge=Ge instanceof Error?Ge:new Error(String(Ge)),Y)return new Promise((vt,Ne)=>{var Ae=()=>vt(at()),Le=()=>Ne(Ge);Y(Ge,Ae,Le,Re+1)});throw Ge}).then(Ge=>Je!==G&&G?G:(Ge&&(Ge.__esModule||Ge[Symbol.toStringTag]==="Module")&&(Ge=Ge.default),ie=Ge,Ge)))};return nr({name:"AsyncComponentWrapper",__asyncLoader:oe,get __asyncResolved(){return ie},setup(){var Je=Dn;if(ie)return()=>go(ie,Je);var Ge=Le=>{G=null,on(Le,Je,13)};if(V&&Je.suspense||I.isInSSRComponentSetup)return oe().then(Le=>()=>go(Le,Je)).catch(Le=>(Ge(Le),()=>b?Ht(b,{error:Le}):null));var vt=P.ref(!1),Ne=P.ref(),Ae=P.ref(!!O);return O&&setTimeout(()=>{Ae.value=!1},O),T!=null&&setTimeout(()=>{if(!vt.value&&!Ne.value){var Le=new Error("Async component timed out after ".concat(T,"ms."));Ge(Le),Ne.value=Le}},T),oe().then(()=>{vt.value=!0,Je.parent&&Oi(Je.parent.vnode)&&hn(Je.parent.update)}).catch(Le=>{Ge(Le),Ne.value=Le}),()=>{if(vt.value&&ie)return go(ie,Je);if(Ne.value&&b)return Ht(b,{error:Ne.value});if(v&&!Ae.value)return Ht(v)}}})}function go(o,c){var{vnode:{ref:v,props:b,children:O}}=c,T=Ht(o,b,O);return T.ref=v,T}var Oi=o=>o.type.__isKeepAlive,to={name:"KeepAlive",__isKeepAlive:!0,props:{include:[String,RegExp,Array],exclude:[String,RegExp,Array],max:[String,Number]},setup(o,c){var{slots:v}=c,b=dn(),O=b.ctx;if(!O.renderer)return v.default;var T=new Map,V=new Set,Y=null,G=b.suspense,{renderer:{p:ie,m:Re,um:at,o:{createElement:oe}}}=O,Je=oe("div");O.activate=(We,i,l,d,h)=>{var w=We.component;Re(We,i,l,0,G),ie(w.vnode,We,i,l,w,G,d,We.slotScopeIds,h),Un(()=>{w.isDeactivated=!1,w.a&&f.invokeArrayFns(w.a);var S=We.props&&We.props.onVnodeMounted;S&&ar(S,w.parent,We)},G)},O.deactivate=We=>{var i=We.component;Re(We,Je,null,1,G),Un(()=>{i.da&&f.invokeArrayFns(i.da);var l=We.props&&We.props.onVnodeUnmounted;l&&ar(l,i.parent,We),i.isDeactivated=!0},G)};function Ge(We){Pr(We),at(We,b,G,!0)}function vt(We){T.forEach((i,l)=>{var d=_o(i.type);d&&(!We||!We(d))&&Ne(l)})}function Ne(We){var i=T.get(We);!Y||i.type!==Y.type?Ge(i):Y&&Pr(Y),T.delete(We),V.delete(We)}Ft(()=>[o.include,o.exclude],We=>{var[i,l]=We;i&&vt(d=>no(i,d)),l&&vt(d=>!no(l,d))},{flush:"post",deep:!0});var Ae=null,Le=()=>{Ae!=null&&T.set(Ae,rr(b.subTree))};return ji(Le),gi(Le),Yr(()=>{T.forEach(We=>{var{subTree:i,suspense:l}=b,d=rr(i);if(We.type===d.type){Pr(d);var h=d.component.da;h&&Un(h,l);return}Ge(We)})}),()=>{if(Ae=null,!v.default)return null;var We=v.default(),i=We[0];if(We.length>1)return Y=null,We;if(!Ot(i)||!(i.shapeFlag&4)&&!(i.shapeFlag&128))return Y=null,i;var l=rr(i),d=l.type,h=_o(Ci(l)?l.type.__asyncResolved||{}:d),{include:w,exclude:S,max:N}=o;if(w&&(!h||!no(w,h))||S&&h&&no(S,h))return Y=l,i;var D=l.key==null?d:l.key,M=T.get(D);return l.el&&(l=Fr(l),i.shapeFlag&128&&(i.ssContent=l)),Ae=D,M?(l.el=M.el,l.component=M.component,l.transition&&br(l,l.transition),l.shapeFlag|=512,V.delete(D),V.add(D)):(V.add(D),N&&V.size>parseInt(N,10)&&Ne(V.values().next().value)),l.shapeFlag|=256,Y=l,i}}},Uo=to;function no(o,c){return f.isArray(o)?o.some(v=>no(v,c)):f.isString(o)?o.split(",").includes(c):o.test?o.test(c):!1}function Hi(o,c){Er(o,"a",c)}function fr(o,c){Er(o,"da",c)}function Er(o,c){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:Dn,b=o.__wdc||(o.__wdc=()=>{for(var T=v;T;){if(T.isDeactivated)return;T=T.parent}return o()});if(Ti(c,b,v),v)for(var O=v.parent;O&&O.parent;)Oi(O.parent.vnode)&&Jn(b,c,v,O),O=O.parent}function Jn(o,c,v,b){var O=Ti(c,o,b,!0);Pi(()=>{f.remove(b[c],O)},v)}function Pr(o){var c=o.shapeFlag;c&256&&(c-=256),c&512&&(c-=512),o.shapeFlag=c}function rr(o){return o.shapeFlag&128?o.ssContent:o}function Ti(o,c){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:Dn,b=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;if(v){if($e.isRootHook(o)&&v!==v.root&&(v=v.root,$e.isRootImmediateHook(o))){var O=v.proxy;Q(c.bind(O),v,o,$e.ON_LOAD===o?[O.$page.options]:[])}var T=v[o]||(v[o]=[]),V=c.__weh||(c.__weh=function(){if(!v.isUnmounted){P.pauseTracking(),Nr(v);for(var Y=arguments.length,G=new Array(Y),ie=0;ie<Y;ie++)G[ie]=arguments[ie];var Re=Q(c,v,o,G);return Sr(),P.resetTracking(),Re}});return b?T.unshift(V):T.push(V),V}}var dr=o=>function(c){var v=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Dn;return(!I.isInSSRComponentSetup||o==="sp")&&Ti(o,c,v)},Ir=dr("bm"),ji=dr("m"),ti=dr("bu"),gi=dr("u"),Yr=dr("bum"),Pi=dr("um"),zi=dr("sp"),Oo=dr("rtg"),B=dr("rtc");function ee(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Dn;Ti("ec",o,c)}var le=!0;function z(o){var c=Ue(o),v=o.proxy,b=o.ctx;le=!1,c.beforeCreate&&K(c.beforeCreate,o,"bc");var{data:O,computed:T,methods:V,watch:Y,provide:G,inject:ie,created:Re,beforeMount:at,mounted:oe,beforeUpdate:Je,updated:Ge,activated:vt,deactivated:Ne,beforeDestroy:Ae,beforeUnmount:Le,destroyed:We,unmounted:i,render:l,renderTracked:d,renderTriggered:h,errorCaptured:w,serverPrefetch:S,expose:N,inheritAttrs:D,components:M,directives:X,filters:fe}=c,Be=null;if(ie&&L(ie,b,Be,o.appContext.config.unwrapInjectedRef),V)for(var re in V){var de=V[re];f.isFunction(de)&&(b[re]=de.bind(v))}if(O){var ke=O.call(v,v);f.isObject(ke)&&(o.data=P.reactive(ke))}if(le=!0,T){var nt=function(rt){var De=T[rt],Xe=f.isFunction(De)?De.bind(v,v):f.isFunction(De.get)?De.get.bind(v,v):f.NOOP,Ct=!f.isFunction(De)&&f.isFunction(De.set)?De.set.bind(v):f.NOOP,Tt=Jo({get:Xe,set:Ct});Object.defineProperty(b,rt,{enumerable:!0,configurable:!0,get:()=>Tt.value,set:Dt=>Tt.value=Dt})};for(var Oe in T)nt(Oe)}if(Y)for(var we in Y)he(Y[we],b,v,we);if(G){var Te=f.isFunction(G)?G.call(v):G;Reflect.ownKeys(Te).forEach(rt=>{ei(rt,Te[rt])})}Re&&K(Re,o,"c");function Se(rt,De){f.isArray(De)?De.forEach(Xe=>rt(Xe.bind(v))):De&&rt(De.bind(v))}if(Se(Ir,at),Se(ji,oe),Se(ti,Je),Se(gi,Ge),Se(Hi,vt),Se(fr,Ne),Se(ee,w),Se(B,d),Se(Oo,h),Se(Yr,Le),Se(Pi,i),Se(zi,S),f.isArray(N))if(N.length){var qe=o.exposed||(o.exposed={});N.forEach(rt=>{Object.defineProperty(qe,rt,{get:()=>v[rt],set:De=>v[rt]=De})})}else o.exposed||(o.exposed={});l&&o.render===f.NOOP&&(o.render=l),D!=null&&(o.inheritAttrs=D),M&&(o.components=M),X&&(o.directives=X);var He=o.appContext.config.globalProperties.$applyOptions;He&&He(c,o,v)}function L(o,c){var v=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;f.isArray(o)&&(o=ir(o));var b=function(T){var V=o[T],Y=void 0;f.isObject(V)?"default"in V?Y=di(V.from||T,V.default,!0):Y=di(V.from||T):Y=di(V),P.isRef(Y)&&v?Object.defineProperty(c,T,{enumerable:!0,configurable:!0,get:()=>Y.value,set:G=>Y.value=G}):c[T]=Y};for(var O in o)b(O)}function K(o,c,v){Q(f.isArray(o)?o.map(b=>b.bind(c.proxy)):o.bind(c.proxy),c,v)}function he(o,c,v,b){var O=b.includes(".")?fo(v,b):()=>v[b];if(f.isString(o)){var T=c[o];f.isFunction(T)&&Ft(O,T)}else if(f.isFunction(o))Ft(O,o.bind(v));else if(f.isObject(o))if(f.isArray(o))o.forEach(Y=>he(Y,c,v,b));else{var V=f.isFunction(o.handler)?o.handler.bind(v):c[o.handler];f.isFunction(V)&&Ft(O,V,o)}}function Ue(o){var c=o.type,{mixins:v,extends:b}=c,{mixins:O,optionsCache:T,config:{optionMergeStrategies:V}}=o.appContext,Y=T.get(c),G;return Y?G=Y:!O.length&&!v&&!b?G=c:(G={},O.length&&O.forEach(ie=>Ye(G,ie,V,!0)),Ye(G,c,V)),T.set(c,G),G}function Ye(o,c,v){var b=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,{mixins:O,extends:T}=c;T&&Ye(o,T,v,!0),O&&O.forEach(G=>Ye(o,G,v,!0));for(var V in c)if(!(b&&V==="expose")){var Y=gt[V]||v&&v[V];o[V]=Y?Y(o[V],c[V]):c[V]}return o}var gt={data:yn,props:kn,emits:kn,methods:kn,computed:kn,beforeCreate:Zn,created:Zn,beforeMount:Zn,mounted:Zn,beforeUpdate:Zn,updated:Zn,beforeDestroy:Zn,beforeUnmount:Zn,destroyed:Zn,unmounted:Zn,activated:Zn,deactivated:Zn,errorCaptured:Zn,serverPrefetch:Zn,components:kn,directives:kn,watch:Wi,provide:yn,inject:ni};function yn(o,c){return c?o?function(){return f.extend(f.isFunction(o)?o.call(this,this):o,f.isFunction(c)?c.call(this,this):c)}:c:o}function ni(o,c){return kn(ir(o),ir(c))}function ir(o){if(f.isArray(o)){for(var c={},v=0;v<o.length;v++)c[o[v]]=o[v];return c}return o}function Zn(o,c){return o?[...new Set([].concat(o,c))]:c}function kn(o,c){return o?f.extend(f.extend(Object.create(null),o),c):c}function Wi(o,c){if(!o)return c;if(!c)return o;var v=f.extend(Object.create(null),o);for(var b in c)v[b]=Zn(o[b],c[b]);return v}function ea(o,c,v){var b=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,O={},T={};f.def(T,mn,1),o.propsDefaults=Object.create(null),ta(o,c,O,T);for(var V in o.propsOptions[0])V in O||(O[V]=void 0);v?o.props=b?O:P.shallowReactive(O):o.type.props?o.props=O:o.props=T,o.attrs=T}function Ma(o,c,v,b){var{props:O,attrs:T,vnode:{patchFlag:V}}=o,Y=P.toRaw(O),[G]=o.propsOptions,ie=!1;if((b||V>0)&&!(V&16)){if(V&8)for(var Re=o.vnode.dynamicProps,at=0;at<Re.length;at++){var oe=Re[at];if(!wi(o.emitsOptions,oe)){var Je=c[oe];if(G)if(f.hasOwn(T,oe))Je!==T[oe]&&(T[oe]=Je,ie=!0);else{var Ge=f.camelize(oe);O[Ge]=ba(G,Y,Ge,Je,o,!1)}else Je!==T[oe]&&(T[oe]=Je,ie=!0)}}}else{ta(o,c,O,T)&&(ie=!0);var vt;for(var Ne in Y)(!c||!f.hasOwn(c,Ne)&&((vt=f.hyphenate(Ne))===Ne||!f.hasOwn(c,vt)))&&(G?v&&(v[Ne]!==void 0||v[vt]!==void 0)&&(O[Ne]=ba(G,Y,Ne,void 0,o,!0)):delete O[Ne]);if(T!==Y)for(var Ae in T)(!c||!f.hasOwn(c,Ae)&&!0)&&(delete T[Ae],ie=!0)}ie&&P.trigger(o,"set","$attrs")}function ta(o,c,v,b){var[O,T]=o.propsOptions,V=!1,Y;if(c){for(var G in c)if(!f.isReservedProp(G)){var ie=c[G],Re=void 0;O&&f.hasOwn(O,Re=f.camelize(G))?!T||!T.includes(Re)?v[Re]=ie:(Y||(Y={}))[Re]=ie:wi(o.emitsOptions,G)||(!(G in b)||ie!==b[G])&&(b[G]=ie,V=!0)}}if(T)for(var at=P.toRaw(v),oe=Y||f.EMPTY_OBJ,Je=0;Je<T.length;Je++){var Ge=T[Je];v[Ge]=ba(O,at,Ge,oe[Ge],o,!f.hasOwn(oe,Ge))}return V}function ba(o,c,v,b,O,T){var V=o[v];if(V!=null){var Y=f.hasOwn(V,"default");if(Y&&b===void 0){var G=V.default;if(V.type!==Function&&f.isFunction(G)){var{propsDefaults:ie}=O;v in ie?b=ie[v]:(Nr(O),b=ie[v]=G.call(null,c),Sr())}else b=G}V[0]&&(T&&!Y?b=!1:V[1]&&(b===""||b===f.hyphenate(v))&&(b=!0))}return b}function Ea(o,c){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,b=c.propsCache,O=b.get(o);if(O)return O;var T=o.props,V={},Y=[],G=!1;if(!f.isFunction(o)){var ie=We=>{G=!0;var[i,l]=Ea(We,c,!0);f.extend(V,i),l&&Y.push(...l)};!v&&c.mixins.length&&c.mixins.forEach(ie),o.extends&&ie(o.extends),o.mixins&&o.mixins.forEach(ie)}if(!T&&!G)return b.set(o,f.EMPTY_ARR),f.EMPTY_ARR;if(f.isArray(T))for(var Re=0;Re<T.length;Re++){var at=f.camelize(T[Re]);La(at)&&(V[at]=f.EMPTY_OBJ)}else if(T)for(var oe in T){var Je=f.camelize(oe);if(La(Je)){var Ge=T[oe],vt=V[Je]=f.isArray(Ge)||f.isFunction(Ge)?{type:Ge}:Ge;if(vt){var Ne=ia(Boolean,vt.type),Ae=ia(String,vt.type);vt[0]=Ne>-1,vt[1]=Ae<0||Ne<Ae,(Ne>-1||f.hasOwn(vt,"default"))&&Y.push(Je)}}}var Le=[V,Y];return b.set(o,Le),Le}function La(o){return o[0]!=="$"}function na(o){var c=o&&o.toString().match(/^\s*function (\w+)/);return c?c[1]:o===null?"null":""}function ra(o,c){return na(o)===na(c)}function ia(o,c){return f.isArray(c)?c.findIndex(v=>ra(v,o)):f.isFunction(c)&&ra(c,o)?0:-1}var Ho=o=>o[0]==="_"||o==="$stable",ya=o=>f.isArray(o)?o.map(Ln):[Ln(o)],yr=(o,c,v)=>{var b=Fi(function(){return ya(c(...arguments))},v);return b._c=!1,b},ri=(o,c,v)=>{var b=o._ctx;for(var O in o)if(!Ho(O)){var T=o[O];f.isFunction(T)?c[O]=yr(O,T,b):T!=null&&function(){var V=ya(T);c[O]=()=>V}()}},wa=(o,c)=>{var v=ya(c);o.slots.default=()=>v},Da=(o,c)=>{if(o.vnode.shapeFlag&32){var v=c._;v?(o.slots=P.toRaw(c),f.def(c,"_",v)):ri(c,o.slots={})}else o.slots={},c&&wa(o,c);f.def(o.slots,mn,1)},qr=(o,c,v)=>{var{vnode:b,slots:O}=o,T=!0,V=f.EMPTY_OBJ;if(b.shapeFlag&32){var Y=c._;Y?v&&Y===1?T=!1:(f.extend(O,c),!v&&Y===1&&delete O._):(T=!c.$stable,ri(c,O)),V=c}else c&&(wa(o,c),V={default:1});if(T)for(var G in O)!Ho(G)&&!(G in V)&&delete O[G]};function ws(o,c){var v=On;if(v===null)return o;for(var b=Wn(v)||v.proxy,O=o.dirs||(o.dirs=[]),T=0;T<c.length;T++){var[V,Y,G,ie=f.EMPTY_OBJ]=c[T];f.isFunction(V)&&(V={mounted:V,updated:V}),V.deep&&Br(Y),O.push({dir:V,instance:b,value:Y,oldValue:void 0,arg:G,modifiers:ie})}return o}function Dr(o,c,v,b){for(var O=o.dirs,T=c&&c.dirs,V=0;V<O.length;V++){var Y=O[V];T&&(Y.oldValue=T[V].value);var G=Y.dir[b];G&&(P.pauseTracking(),Q(G,v,8,[o.el,Y,o,c]),P.resetTracking())}}function Ii(){return{app:null,config:{isNativeTag:f.NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}var is=0;function Ss(o,c){return function(b){var O=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;f.isFunction(b)||(b=Object.assign({},b)),O!=null&&!f.isObject(O)&&(O=null);var T=Ii(),V=new Set,Y=!1,G=T.app={_uid:is++,_component:b,_props:O,_container:null,_context:T,_instance:null,version:ro,get config(){return T.config},set config(ie){},use(ie){for(var Re=arguments.length,at=new Array(Re>1?Re-1:0),oe=1;oe<Re;oe++)at[oe-1]=arguments[oe];return V.has(ie)||(ie&&f.isFunction(ie.install)?(V.add(ie),ie.install(G,...at)):f.isFunction(ie)&&(V.add(ie),ie(G,...at))),G},mixin(ie){return T.mixins.includes(ie)||T.mixins.push(ie),G},component(ie,Re){return Re?(T.components[ie]=Re,G):T.components[ie]},directive(ie,Re){return Re?(T.directives[ie]=Re,G):T.directives[ie]},mount(ie,Re,at){if(!Y){var oe=Ht(b,O);return oe.appContext=T,Re&&c?c(oe,ie):o(oe,ie,at),Y=!0,G._container=ie,ie.__vue_app__=G,Wn(oe.component)||oe.component.proxy}},unmount(){Y&&(o(null,G._container),delete G._container.__vue_app__)},provide(ie,Re){return T.provides[ie]=Re,G}};return G}}function Sa(o,c,v,b){var O=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1;if(f.isArray(o)){o.forEach((vt,Ne)=>Sa(vt,c&&(f.isArray(c)?c[Ne]:c),v,b,O));return}if(!(Ci(b)&&!O)){var T=b.shapeFlag&4?Wn(b.component)||b.component.proxy:b.el,V=O?null:T,{i:Y,r:G}=o,ie=c&&c.r,Re=Y.refs===f.EMPTY_OBJ?Y.refs={}:Y.refs,at=Y.setupState;if(ie!=null&&ie!==G&&(f.isString(ie)?(Re[ie]=null,f.hasOwn(at,ie)&&(at[ie]=null)):P.isRef(ie)&&(ie.value=null)),f.isFunction(G))ne(G,Y,12,[V,Re]);else{var oe=f.isString(G),Je=P.isRef(G);if(oe||Je){var Ge=()=>{if(o.f){var vt=oe?Re[G]:G.value;O?f.isArray(vt)&&f.remove(vt,T):f.isArray(vt)?vt.includes(T)||vt.push(T):oe?(Re[G]=[T],f.hasOwn(at,G)&&(at[G]=Re[G])):(G.value=[T],o.k&&(Re[o.k]=G.value))}else oe?(Re[G]=V,f.hasOwn(at,G)&&(at[G]=V)):P.isRef(G)&&(G.value=V,o.k&&(Re[o.k]=V))};V?(Ge.id=-1,Un(Ge,v)):Ge()}}}}var Ni=!1,gn=o=>/svg/.test(o.namespaceURI)&&o.tagName!=="foreignObject",jo=o=>o.nodeType===8;function To(o){var{mt:c,p:v,o:{patchProp:b,nextSibling:O,parentNode:T,remove:V,insert:Y,createComment:G}}=o,ie=(Ne,Ae)=>{if(!Ae.hasChildNodes()){v(null,Ne,Ae),Xr();return}Ni=!1,Re(Ae.firstChild,Ne,null,null,null),Xr(),Ni&&console.error("Hydration completed but contains mismatches.")},Re=function(Ne,Ae,Le,We,i){var l=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1,d=jo(Ne)&&Ne.data==="[",h=()=>Ge(Ne,Ae,Le,We,i,d),{type:w,ref:S,shapeFlag:N}=Ae,D=Ne.nodeType;Ae.el=Ne;var M=null;switch(w){case ae:D!==3?M=h():(Ne.data!==Ae.children&&(Ni=!0,Ne.data=Ae.children),M=O(Ne));break;case _e:D!==8||d?M=h():M=O(Ne);break;case ze:if(D!==1)M=h();else{M=Ne;for(var X=!Ae.children.length,fe=0;fe<Ae.staticCount;fe++)X&&(Ae.children+=M.outerHTML),fe===Ae.staticCount-1&&(Ae.anchor=M),M=O(M);return M}break;case ye:d?M=Je(Ne,Ae,Le,We,i,l):M=h();break;default:if(N&1)D!==1||Ae.type.toLowerCase()!==Ne.tagName.toLowerCase()?M=h():M=at(Ne,Ae,Le,We,i,l);else if(N&6){Ae.slotScopeIds=i;var Be=T(Ne);if(c(Ae,Be,null,Le,We,gn(Be),l),M=d?vt(Ne):O(Ne),Ci(Ae)){var re;d?(re=Ht(ye),re.anchor=M?M.previousSibling:Be.lastChild):re=Ne.nodeType===3?ai(""):Ht("div"),re.el=Ne,Ae.component.subTree=re}}else N&64?D!==8?M=h():M=Ae.type.hydrate(Ne,Ae,Le,We,i,l,o,oe):N&128&&(M=Ae.type.hydrate(Ne,Ae,Le,We,gn(T(Ne)),i,l,o,Re))}return S!=null&&Sa(S,null,We,Ae),M},at=(Ne,Ae,Le,We,i,l)=>{l=l||!!Ae.dynamicChildren;var{type:d,props:h,patchFlag:w,shapeFlag:S,dirs:N}=Ae,D=d==="input"&&N||d==="option";if(D||w!==-1){if(N&&Dr(Ae,null,Le,"created"),h)if(D||!l||w&(16|32))for(var M in h)(D&&M.endsWith("value")||f.isOn(M)&&!f.isReservedProp(M))&&b(Ne,M,null,h[M],!1,void 0,Le);else h.onClick&&b(Ne,"onClick",null,h.onClick,!1,void 0,Le);var X;if((X=h&&h.onVnodeBeforeMount)&&ar(X,Le,Ae),N&&Dr(Ae,null,Le,"beforeMount"),((X=h&&h.onVnodeMounted)||N)&&Xi(()=>{X&&ar(X,Le,Ae),N&&Dr(Ae,null,Le,"mounted")},We),S&16&&!(h&&(h.innerHTML||h.textContent)))for(var fe=oe(Ne.firstChild,Ae,Ne,Le,We,i,l);fe;){Ni=!0;var Be=fe;fe=fe.nextSibling,V(Be)}else S&8&&Ne.textContent!==Ae.children&&(Ni=!0,Ne.textContent=Ae.children)}return Ne.nextSibling},oe=(Ne,Ae,Le,We,i,l,d)=>{d=d||!!Ae.dynamicChildren;for(var h=Ae.children,w=h.length,S=0;S<w;S++){var N=d?h[S]:h[S]=Ln(h[S]);if(Ne)Ne=Re(Ne,N,We,i,l,d);else{if(N.type===ae&&!N.children)continue;Ni=!0,v(null,N,Le,null,We,i,gn(Le),l)}}return Ne},Je=(Ne,Ae,Le,We,i,l)=>{var{slotScopeIds:d}=Ae;d&&(i=i?i.concat(d):d);var h=T(Ne),w=oe(O(Ne),Ae,h,Le,We,i,l);return w&&jo(w)&&w.data==="]"?O(Ae.anchor=w):(Ni=!0,Y(Ae.anchor=G("]"),h,w),w)},Ge=(Ne,Ae,Le,We,i,l)=>{if(Ni=!0,Ae.el=null,l)for(var d=vt(Ne);;){var h=O(Ne);if(h&&h!==d)V(h);else break}var w=O(Ne),S=T(Ne);return V(Ne),v(null,Ae,S,w,Le,We,gn(S),i),w},vt=Ne=>{for(var Ae=0;Ne;)if(Ne=O(Ne),Ne&&jo(Ne)&&(Ne.data==="["&&Ae++,Ne.data==="]")){if(Ae===0)return O(Ne);Ae--}return Ne};return[ie,Re]}var Un=Xi;function or(o){return Fa(o)}function Kr(o){return Fa(o,To)}function Fa(o,c){var v=f.getGlobalThis();v.__VUE__=!0;var{insert:b,remove:O,patchProp:T,forcePatchProp:V,createElement:Y,createText:G,createComment:ie,setText:Re,setElementText:at,parentNode:oe,nextSibling:Je,setScopeId:Ge=f.NOOP,cloneNode:vt,insertStaticContent:Ne}=o,Ae=function(H,q,ce){var ve=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null,ge=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,Ze=arguments.length>5&&arguments[5]!==void 0?arguments[5]:null,ht=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,Qe=arguments.length>7&&arguments[7]!==void 0?arguments[7]:null,et=arguments.length>8&&arguments[8]!==void 0?arguments[8]:!!q.dynamicChildren;if(H!==q){H&&!Jt(H,q)&&(ve=Ct(H),qe(H,ge,Ze,!0),H=null),q.patchFlag===-2&&(et=!1,q.dynamicChildren=null);var{type:Me,ref:St,shapeFlag:Et}=q;switch(Me){case ae:Le(H,q,ce,ve);break;case _e:We(H,q,ce,ve);break;case ze:H==null&&i(q,ce,ve,ht);break;case ye:fe(H,q,ce,ve,ge,Ze,ht,Qe,et);break;default:Et&1?h(H,q,ce,ve,ge,Ze,ht,Qe,et):Et&6?Be(H,q,ce,ve,ge,Ze,ht,Qe,et):(Et&64||Et&128)&&Me.process(H,q,ce,ve,ge,Ze,ht,Qe,et,Dt)}St!=null&&ge&&Sa(St,H&&H.ref,Ze,q||H,!q)}},Le=(H,q,ce,ve)=>{if(H==null)b(q.el=G(q.children),ce,ve);else{var ge=q.el=H.el;q.children!==H.children&&Re(ge,q.children)}},We=(H,q,ce,ve)=>{H==null?b(q.el=ie(q.children||""),ce,ve):q.el=H.el},i=(H,q,ce,ve)=>{[H.el,H.anchor]=Ne(H.children,q,ce,ve,H.el,H.anchor)},l=(H,q,ce)=>{for(var{el:ve,anchor:ge}=H,Ze;ve&&ve!==ge;)Ze=Je(ve),b(ve,q,ce),ve=Ze;b(ge,q,ce)},d=H=>{for(var{el:q,anchor:ce}=H,ve;q&&q!==ce;)ve=Je(q),O(q),q=ve;O(ce)},h=(H,q,ce,ve,ge,Ze,ht,Qe,et)=>{ht=ht||q.type==="svg",H==null?w(q,ce,ve,ge,Ze,ht,Qe,et):D(H,q,ge,Ze,ht,Qe,et)},w=(H,q,ce,ve,ge,Ze,ht,Qe)=>{var et,Me,{type:St,props:Et,shapeFlag:yt,transition:jt,patchFlag:nn,dirs:pn}=H;if(H.el&&vt!==void 0&&nn===-1)et=H.el=vt(H.el);else{if(et=H.el=Y(H.type,Ze,Et&&Et.is,Et),yt&8?at(et,H.children):yt&16&&N(H.children,et,null,ve,ge,Ze&&St!=="foreignObject",ht,Qe),pn&&Dr(H,null,ve,"created"),Et){for(var Qn in Et)Qn!=="value"&&!f.isReservedProp(Qn)&&T(et,Qn,null,Et[Qn],Ze,H.children,ve,ge,Xe);"value"in Et&&T(et,"value",null,Et.value,!1,[],ve),(Me=Et.onVnodeBeforeMount)&&ar(Me,ve,H)}S(et,H,H.scopeId,ht,ve)}pn&&Dr(H,null,ve,"beforeMount");var er=(!ge||ge&&!ge.pendingBranch)&&jt&&!jt.persisted;er&&jt.beforeEnter(et),b(et,q,ce),((Me=Et&&Et.onVnodeMounted)||er||pn)&&Un(()=>{Me&&ar(Me,ve,H),er&&jt.enter(et),pn&&Dr(H,null,ve,"mounted")},ge)},S=(H,q,ce,ve,ge)=>{if(ce&&Ge(H,ce),ve)for(var Ze=0;Ze<ve.length;Ze++)Ge(H,ve[Ze]);if(ge){var ht=ge.subTree;if(q===ht){var Qe=ge.vnode;S(H,Qe,Qe.scopeId,Qe.slotScopeIds,ge.parent)}}},N=function(H,q,ce,ve,ge,Ze,ht,Qe){for(var et=arguments.length>8&&arguments[8]!==void 0?arguments[8]:0,Me=et;Me<H.length;Me++){var St=H[Me]=Qe?Xn(H[Me]):Ln(H[Me]);Ae(null,St,q,ce,ve,ge,Ze,ht,Qe)}},D=(H,q,ce,ve,ge,Ze,ht)=>{var Qe=q.el=H.el,{patchFlag:et,dynamicChildren:Me,dirs:St}=q;et|=H.patchFlag&16;var Et=H.props||f.EMPTY_OBJ,yt=q.props||f.EMPTY_OBJ,jt;ce&&ii(ce,!1),(jt=yt.onVnodeBeforeUpdate)&&ar(jt,ce,q,H),St&&Dr(q,H,ce,"beforeUpdate"),ce&&ii(ce,!0);var nn=ge&&q.type!=="foreignObject";if(Me?M(H.dynamicChildren,Me,Qe,ce,ve,nn,Ze):ht||Oe(H,q,Qe,null,ce,ve,nn,Ze,!1),et>0){if(et&16)X(Qe,q,Et,yt,ce,ve,ge);else if(et&2&&Et.class!==yt.class&&T(Qe,"class",null,yt.class,ge,[],ce),et&4&&T(Qe,"style",Et.style,yt.style,ge,[],ce),et&8)for(var pn=q.dynamicProps,Qn=0;Qn<pn.length;Qn++){var er=pn[Qn],Eo=Et[er],Bo=yt[er];(Bo!==Eo||er==="value"||V&&V(Qe,er))&&T(Qe,er,Eo,Bo,ge,H.children,ce,ve,Xe)}et&1&&H.children!==q.children&&at(Qe,q.children)}else!ht&&Me==null&&X(Qe,q,Et,yt,ce,ve,ge);((jt=yt.onVnodeUpdated)||St)&&Un(()=>{jt&&ar(jt,ce,q,H),St&&Dr(q,H,ce,"updated")},ve)},M=(H,q,ce,ve,ge,Ze,ht)=>{for(var Qe=0;Qe<q.length;Qe++){var et=H[Qe],Me=q[Qe],St=et.el&&(et.type===ye||!Jt(et,Me)||et.shapeFlag&(6|64))?oe(et.el):ce;Ae(et,Me,St,null,ve,ge,Ze,ht,!0)}},X=(H,q,ce,ve,ge,Ze,ht)=>{if(ce!==ve){for(var Qe in ve)if(!f.isReservedProp(Qe)){var et=ve[Qe],Me=ce[Qe];(et!==Me&&Qe!=="value"||V&&V(H,Qe))&&T(H,Qe,Me,et,ht,q.children,ge,Ze,Xe)}if(ce!==f.EMPTY_OBJ)for(var St in ce)!f.isReservedProp(St)&&!(St in ve)&&T(H,St,ce[St],null,ht,q.children,ge,Ze,Xe);"value"in ve&&T(H,"value",ce.value,ve.value,!1,[],ge)}},fe=(H,q,ce,ve,ge,Ze,ht,Qe,et)=>{var Me=q.el=H?H.el:G(""),St=q.anchor=H?H.anchor:G(""),{patchFlag:Et,dynamicChildren:yt,slotScopeIds:jt}=q;jt&&(Qe=Qe?Qe.concat(jt):jt),H==null?(b(Me,ce,ve),b(St,ce,ve),N(q.children,ce,St,ge,Ze,ht,Qe,et)):Et>0&&Et&64&&yt&&H.dynamicChildren?(M(H.dynamicChildren,yt,ce,ge,Ze,ht,Qe),(q.key!=null||ge&&q===ge.subTree)&&ki(H,q,!0)):Oe(H,q,ce,St,ge,Ze,ht,Qe,et)},Be=(H,q,ce,ve,ge,Ze,ht,Qe,et)=>{q.slotScopeIds=Qe,H==null?q.shapeFlag&512?ge.ctx.activate(q,ce,ve,ht,et):re(q,ce,ve,ge,Ze,ht,et):de(H,q,et)},re=(H,q,ce,ve,ge,Ze,ht)=>{var Qe=H.component=vo(H,ve,ge);if(Oi(H)&&(Qe.ctx.renderer=Dt),ca(Qe),Qe.asyncDep){if(ge&&ge.registerDep(Qe,ke),!H.el){var et=Qe.subTree=Ht(_e);We(null,et,q,ce)}return}ke(Qe,H,q,ce,ge,Ze,ht)},de=(H,q,ce)=>{var ve=q.component=H.component;if(Vi(H,q,ce))if(ve.asyncDep&&!ve.asyncResolved){nt(ve,q,ce);return}else ve.next=q,cr(ve.update),ve.update();else q.component=H.component,q.el=H.el,ve.vnode=q},ke=(H,q,ce,ve,ge,Ze,ht)=>{var Qe=()=>{if(H.isMounted){var{next:W,bu:te,u:me,parent:Ce,vnode:Fe}=H,it=W,ut;ii(H,!1),W?(W.el=Fe.el,nt(H,W,ht)):W=Fe,te&&f.invokeArrayFns(te),(ut=W.props&&W.props.onVnodeBeforeUpdate)&&ar(ut,Ce,W,Fe),ii(H,!0);var Ke=In(H),tt=H.subTree;H.subTree=Ke,Ae(tt,Ke,oe(tt.el),Ct(tt),H,ge,Ze),W.el=Ke.el,it===null&&Qr(H,Ke.el),me&&Un(me,ge),(ut=W.props&&W.props.onVnodeUpdated)&&Un(()=>ar(ut,Ce,W,Fe),ge)}else{var St,{el:Et,props:yt}=q,{bm:jt,m:nn,parent:pn}=H,Qn=Ci(q);if(ii(H,!1),jt&&f.invokeArrayFns(jt),!Qn&&(St=yt&&yt.onVnodeBeforeMount)&&ar(St,pn,q),ii(H,!0),Et&&pt){var er=()=>{H.subTree=In(H),pt(Et,H.subTree,H,ge,null)};Qn?q.type.__asyncLoader().then(()=>!H.isUnmounted&&er()):er()}else{var Eo=H.subTree=In(H);Ae(null,Eo,ce,ve,H,ge,Ze),q.el=Eo.el}if(nn&&Un(nn,ge),!Qn&&(St=yt&&yt.onVnodeMounted)){var Bo=q;Un(()=>ar(St,pn,Bo),ge)}q.shapeFlag&256&&H.a&&Un(H.a,ge),H.isMounted=!0,q=ce=ve=null}},et=H.effect=new P.ReactiveEffect(Qe,()=>hn(H.update),H.scope),Me=H.update=et.run.bind(et);Me.id=H.uid,ii(H,!0),Me()},nt=(H,q,ce)=>{q.component=H;var ve=H.vnode.props;H.vnode=q,H.next=null,Ma(H,q.props,ve,ce),qr(H,q.children,ce),P.pauseTracking(),zn(void 0,H.update),P.resetTracking()},Oe=function(H,q,ce,ve,ge,Ze,ht,Qe){var et=arguments.length>8&&arguments[8]!==void 0?arguments[8]:!1,Me=H&&H.children,St=H?H.shapeFlag:0,Et=q.children,{patchFlag:yt,shapeFlag:jt}=q;if(yt>0){if(yt&128){Te(Me,Et,ce,ve,ge,Ze,ht,Qe,et);return}else if(yt&256){we(Me,Et,ce,ve,ge,Ze,ht,Qe,et);return}}jt&8?(St&16&&Xe(Me,ge,Ze),Et!==Me&&at(ce,Et)):St&16?jt&16?Te(Me,Et,ce,ve,ge,Ze,ht,Qe,et):Xe(Me,ge,Ze,!0):(St&8&&at(ce,""),jt&16&&N(Et,ce,ve,ge,Ze,ht,Qe,et))},we=(H,q,ce,ve,ge,Ze,ht,Qe,et)=>{H=H||f.EMPTY_ARR,q=q||f.EMPTY_ARR;var Me=H.length,St=q.length,Et=Math.min(Me,St),yt;for(yt=0;yt<Et;yt++){var jt=q[yt]=et?Xn(q[yt]):Ln(q[yt]);Ae(H[yt],jt,ce,null,ge,Ze,ht,Qe,et)}Me>St?Xe(H,ge,Ze,!0,!1,Et):N(q,ce,ve,ge,Ze,ht,Qe,et,Et)},Te=(H,q,ce,ve,ge,Ze,ht,Qe,et)=>{for(var Me=0,St=q.length,Et=H.length-1,yt=St-1;Me<=Et&&Me<=yt;){var jt=H[Me],nn=q[Me]=et?Xn(q[Me]):Ln(q[Me]);if(Jt(jt,nn))Ae(jt,nn,ce,null,ge,Ze,ht,Qe,et);else break;Me++}for(;Me<=Et&&Me<=yt;){var pn=H[Et],Qn=q[yt]=et?Xn(q[yt]):Ln(q[yt]);if(Jt(pn,Qn))Ae(pn,Qn,ce,null,ge,Ze,ht,Qe,et);else break;Et--,yt--}if(Me>Et){if(Me<=yt)for(var er=yt+1,Eo=er<St?q[er].el:ve;Me<=yt;)Ae(null,q[Me]=et?Xn(q[Me]):Ln(q[Me]),ce,Eo,ge,Ze,ht,Qe,et),Me++}else if(Me>yt)for(;Me<=Et;)qe(H[Me],ge,Ze,!0),Me++;else{var Bo=Me,W=Me,te=new Map;for(Me=W;Me<=yt;Me++){var me=q[Me]=et?Xn(q[Me]):Ln(q[Me]);me.key!=null&&te.set(me.key,Me)}var Ce,Fe=0,it=yt-W+1,ut=!1,Ke=0,tt=new Array(it);for(Me=0;Me<it;Me++)tt[Me]=0;for(Me=Bo;Me<=Et;Me++){var je=H[Me];if(Fe>=it){qe(je,ge,Ze,!0);continue}var It=void 0;if(je.key!=null)It=te.get(je.key);else for(Ce=W;Ce<=yt;Ce++)if(tt[Ce-W]===0&&Jt(je,q[Ce])){It=Ce;break}It===void 0?qe(je,ge,Ze,!0):(tt[It-W]=Me+1,It>=Ke?Ke=It:ut=!0,Ae(je,q[It],ce,null,ge,Ze,ht,Qe,et),Fe++)}var Vt=ut?oa(tt):f.EMPTY_ARR;for(Ce=Vt.length-1,Me=it-1;Me>=0;Me--){var $t=W+Me,un=q[$t],Vr=$t+1<St?q[$t+1].el:ve;tt[Me]===0?Ae(null,un,ce,Vr,ge,Ze,ht,Qe,et):ut&&(Ce<0||Me!==Vt[Ce]?Se(un,ce,Vr,2):Ce--)}}},Se=function(H,q,ce,ve){var ge=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,{el:Ze,type:ht,transition:Qe,children:et,shapeFlag:Me}=H;if(Me&6){Se(H.component.subTree,q,ce,ve);return}if(Me&128){H.suspense.move(q,ce,ve);return}if(Me&64){ht.move(H,q,ce,Dt);return}if(ht===ye){b(Ze,q,ce);for(var St=0;St<et.length;St++)Se(et[St],q,ce,ve);b(H.anchor,q,ce);return}if(ht===ze){l(H,q,ce);return}var Et=ve!==2&&Me&1&&Qe;if(Et)if(ve===0)Qe.beforeEnter(Ze),b(Ze,q,ce),Un(()=>Qe.enter(Ze),ge);else{var{leave:yt,delayLeave:jt,afterLeave:nn}=Qe,pn=()=>b(Ze,q,ce),Qn=()=>{yt(Ze,()=>{pn(),nn&&nn()})};jt?jt(Ze,pn,Qn):Qn()}else b(Ze,q,ce)},qe=function(H,q,ce){var ve=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,ge=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,{type:Ze,props:ht,ref:Qe,children:et,dynamicChildren:Me,shapeFlag:St,patchFlag:Et,dirs:yt}=H;if(Qe!=null&&Sa(Qe,null,ce,H,!0),St&256){q.ctx.deactivate(H);return}var jt=St&1&&yt,nn=!Ci(H),pn;if(nn&&(pn=ht&&ht.onVnodeBeforeUnmount)&&ar(pn,q,H),St&6)De(H.component,ce,ve);else{if(St&128){H.suspense.unmount(ce,ve);return}jt&&Dr(H,null,q,"beforeUnmount"),St&64?H.type.remove(H,q,ce,ge,Dt,ve):Me&&(Ze!==ye||Et>0&&Et&64)?Xe(Me,q,ce,!1,!0):(Ze===ye&&Et&(128|256)||!ge&&St&16)&&Xe(et,q,ce),ve&&He(H)}(nn&&(pn=ht&&ht.onVnodeUnmounted)||jt)&&Un(()=>{pn&&ar(pn,q,H),jt&&Dr(H,null,q,"unmounted")},ce)},He=H=>{var{type:q,el:ce,anchor:ve,transition:ge}=H;if(q===ye){rt(ce,ve);return}if(q===ze){d(H);return}var Ze=()=>{O(ce),ge&&!ge.persisted&&ge.afterLeave&&ge.afterLeave()};if(H.shapeFlag&1&&ge&&!ge.persisted){var{leave:ht,delayLeave:Qe}=ge,et=()=>ht(ce,Ze);Qe?Qe(H.el,Ze,et):et()}else Ze()},rt=(H,q)=>{for(var ce;H!==q;)ce=Je(H),O(H),H=ce;O(q)},De=(H,q,ce)=>{var{bum:ve,scope:ge,update:Ze,subTree:ht,um:Qe}=H;ve&&f.invokeArrayFns(ve),ge.stop(),Ze&&(Ze.active=!1,qe(ht,H,q,ce)),Qe&&Un(Qe,q),Un(()=>{H.isUnmounted=!0},q),q&&q.pendingBranch&&!q.isUnmounted&&H.asyncDep&&!H.asyncResolved&&H.suspenseId===q.pendingId&&(q.deps--,q.deps===0&&q.resolve())},Xe=function(H,q,ce){for(var ve=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,ge=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,Ze=arguments.length>5&&arguments[5]!==void 0?arguments[5]:0,ht=Ze;ht<H.length;ht++)qe(H[ht],q,ce,ve,ge)},Ct=H=>H.shapeFlag&6?Ct(H.component.subTree):H.shapeFlag&128?H.suspense.next():Je(H.anchor||H.el),Tt=(H,q,ce)=>{H==null?q._vnode&&qe(q._vnode,null,null,!0):Ae(q._vnode||null,H,q,null,null,null,ce),Xr(),q._vnode=H},Dt={p:Ae,um:qe,m:Se,r:He,mt:re,mc:N,pc:Oe,pbc:M,n:Ct,o},Pt,pt;return c&&([Pt,pt]=c(Dt)),{render:Tt,hydrate:Pt,createApp:Ss(Tt,Pt)}}function ii(o,c){var{effect:v,update:b}=o;v.allowRecurse=b.allowRecurse=c}function ki(o,c){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,b=o.children,O=c.children;if(f.isArray(b)&&f.isArray(O))for(var T=0;T<b.length;T++){var V=b[T],Y=O[T];Y.shapeFlag&1&&!Y.dynamicChildren&&((Y.patchFlag<=0||Y.patchFlag===32)&&(Y=O[T]=Xn(O[T]),Y.el=V.el),v||ki(V,Y))}}function oa(o){var c=o.slice(),v=[0],b,O,T,V,Y,G=o.length;for(b=0;b<G;b++){var ie=o[b];if(ie!==0){if(O=v[v.length-1],o[O]<ie){c[b]=O,v.push(b);continue}for(T=0,V=v.length-1;T<V;)Y=T+V>>1,o[v[Y]]<ie?T=Y+1:V=Y;ie<o[v[T]]&&(T>0&&(c[b]=v[T-1]),v[T]=b)}}for(T=v.length,V=v[T-1];T-- >0;)v[T]=V,V=c[V];return v}var Aa=o=>o.__isTeleport,Po=o=>o&&(o.disabled||o.disabled===""),oi=o=>typeof SVGElement!="undefined"&&o instanceof SVGElement,zo=(o,c)=>{var v=o&&o.to;if(f.isString(v))if(c){var b=c(v);return b}else return null;else return v},Va={__isTeleport:!0,process(o,c,v,b,O,T,V,Y,G,ie){var{mc:Re,pc:at,pbc:oe,o:{insert:Je,querySelector:Ge,createText:vt,createComment:Ne}}=ie,Ae=Po(c.props),{shapeFlag:Le,children:We,dynamicChildren:i}=c;if(o==null){var l=c.el=vt(""),d=c.anchor=vt("");Je(l,v,b),Je(d,v,b);var h=c.target=zo(c.props,Ge),w=c.targetAnchor=vt("");h&&(Je(w,h),V=V||oi(h));var S=(de,ke)=>{Le&16&&Re(We,de,ke,O,T,V,Y,G)};Ae?S(v,d):h&&S(h,w)}else{c.el=o.el;var N=c.anchor=o.anchor,D=c.target=o.target,M=c.targetAnchor=o.targetAnchor,X=Po(o.props),fe=X?v:D,Be=X?N:M;if(V=V||oi(D),i?(oe(o.dynamicChildren,i,fe,O,T,V,Y),ki(o,c,!0)):G||at(o,c,fe,Be,O,T,V,Y,!1),Ae)X||aa(c,v,N,ie,1);else if((c.props&&c.props.to)!==(o.props&&o.props.to)){var re=c.target=zo(c.props,Ge);re&&aa(c,re,null,ie,0)}else X&&aa(c,D,M,ie,1)}},remove(o,c,v,b,O,T){var{um:V,o:{remove:Y}}=O,{shapeFlag:G,children:ie,anchor:Re,targetAnchor:at,target:oe,props:Je}=o;if(oe&&Y(at),(T||!Po(Je))&&(Y(Re),G&16))for(var Ge=0;Ge<ie.length;Ge++){var vt=ie[Ge];V(vt,c,v,!0,!!vt.dynamicChildren)}},move:aa,hydrate:Wo};function aa(o,c,v,b){var{o:{insert:O},m:T}=b,V=arguments.length>4&&arguments[4]!==void 0?arguments[4]:2;V===0&&O(o.targetAnchor,c,v);var{el:Y,anchor:G,shapeFlag:ie,children:Re,props:at}=o,oe=V===2;if(oe&&O(Y,c,v),(!oe||Po(at))&&ie&16)for(var Je=0;Je<Re.length;Je++)T(Re[Je],c,v,2);oe&&O(G,c,v)}function Wo(o,c,v,b,O,T,V,Y){var{o:{nextSibling:G,parentNode:ie,querySelector:Re}}=V,at=c.target=zo(c.props,Re);if(at){var oe=at._lpa||at.firstChild;c.shapeFlag&16&&(Po(c.props)?(c.anchor=Y(G(o),c,ie(o),v,b,O,T),c.targetAnchor=oe):(c.anchor=G(o),c.targetAnchor=Y(oe,c,at,v,b,O,T)),at._lpa=c.targetAnchor&&G(c.targetAnchor))}return c.anchor&&G(c.anchor)}var _=Va,R="components",j="directives";function U(o,c){return pe(R,o,!0,c)||o}var J=Symbol();function Z(o){return f.isString(o)?pe(R,o,!1)||o:o||J}function se(o){return pe(j,o)}function pe(o,c){var v=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,b=On||Dn;if(b){var O=b.type;if(o===R){var T=_o(O);if(T&&(T===c||T===f.camelize(c)||T===f.capitalize(f.camelize(c))))return O}var V=Pe(b[o]||O[o],c)||Pe(b.appContext[o],c);return!V&&v?O:V}}function Pe(o,c){return o&&(o[c]||o[f.camelize(c)]||o[f.capitalize(f.camelize(c))])}var ye=Symbol(void 0),ae=Symbol(void 0),_e=Symbol(void 0),ze=Symbol(void 0),ft=[],xt=null;function ot(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1;ft.push(xt=o?null:[])}function lt(){ft.pop(),xt=ft[ft.length-1]||null}var wt=1;function tn(o){wt+=o}function Kt(o){return o.dynamicChildren=wt>0?xt||f.EMPTY_ARR:null,lt(),wt>0&&xt&&xt.push(o),o}function dt(o,c,v,b,O,T){return Kt(No(o,c,v,b,O,T,!0))}function zt(o,c,v,b,O){return Kt(Ht(o,c,v,b,O,!0))}function Ot(o){return o?o.__v_isVNode===!0:!1}function Jt(o,c){return o.type===c.type&&o.key===c.key}function an(o){}var mn="__vInternal",Rn=o=>{var{key:c}=o;return c!=null?c:null},Io=o=>{var{ref:c,ref_key:v,ref_for:b}=o;return c!=null?f.isString(c)||P.isRef(c)||f.isFunction(c)?{i:On,r:c,k:v,f:!!b}:c:null};function No(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,b=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,O=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,T=arguments.length>5&&arguments[5]!==void 0?arguments[5]:o===ye?0:1,V=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,Y=arguments.length>7&&arguments[7]!==void 0?arguments[7]:!1,G={__v_isVNode:!0,__v_skip:!0,type:o,props:c,key:c&&Rn(c),ref:c&&Io(c),scopeId:Mn,slotScopeIds:null,children:v,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:T,patchFlag:b,dynamicProps:O,dynamicChildren:null,appContext:null};return Y?(Ri(G,v),T&128&&o.normalize(G)):v&&(G.shapeFlag|=f.isString(v)?8:16),wt>0&&!V&&xt&&(G.patchFlag>0||T&6)&&G.patchFlag!==32&&xt.push(G),G}var Ht=Ut;function Ut(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,b=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,O=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,T=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1;if((!o||o===J)&&(o=_e),Ot(o)){var V=Fr(o,c,!0);return v&&Ri(V,v),V}if(Oa(o)&&(o=o.__vccOpts),c){c=Go(c);var{class:Y,style:G}=c;Y&&!f.isString(Y)&&(c.class=f.normalizeClass(Y)),f.isObject(G)&&(P.isProxy(G)&&!f.isArray(G)&&(G=f.extend({},G)),c.style=f.normalizeStyle(G))}var ie=f.isString(o)?1:Nn(o)?128:Aa(o)?64:f.isObject(o)?4:f.isFunction(o)?2:0;return No(o,c,v,b,O,ie,T,!0)}function Go(o){return o?P.isProxy(o)||mn in o?f.extend({},o):o:null}function Fr(o,c){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,{props:b,ref:O,patchFlag:T,children:V}=o,Y=c?Yo(b||{},c):b,G={__v_isVNode:!0,__v_skip:!0,type:o.type,props:Y,key:Y&&Rn(Y),ref:c&&c.ref?v&&O?f.isArray(O)?O.concat(Io(c)):[O,Io(c)]:Io(c):O,scopeId:o.scopeId,slotScopeIds:o.slotScopeIds,children:V,target:o.target,targetAnchor:o.targetAnchor,staticCount:o.staticCount,shapeFlag:o.shapeFlag,patchFlag:c&&o.type!==ye?T===-1?16:T|16:T,dynamicProps:o.dynamicProps,dynamicChildren:o.dynamicChildren,appContext:o.appContext,dirs:o.dirs,transition:o.transition,component:o.component,suspense:o.suspense,ssContent:o.ssContent&&Fr(o.ssContent),ssFallback:o.ssFallback&&Fr(o.ssFallback),el:o.el,anchor:o.anchor};return G}function ai(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:" ",c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;return Ht(ae,null,o,c)}function sa(o,c){var v=Ht(ze,null,o);return v.staticCount=c,v}function wr(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"",c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;return c?(ot(),zt(_e,null,o)):Ht(_e,null,o)}function Ln(o){return o==null||typeof o=="boolean"?Ht(_e):f.isArray(o)?Ht(ye,null,o.slice()):typeof o=="object"?Xn(o):Ht(ae,null,String(o))}function Xn(o){return o.el===null||o.memo?o:Fr(o)}function Ri(o,c){var v=0,{shapeFlag:b}=o;if(c==null)c=null;else if(f.isArray(c))v=16;else if(typeof c=="object")if(b&(1|64)){var O=c.default;O&&(O._c&&(O._d=!1),Ri(o,O()),O._c&&(O._d=!0));return}else{v=32;var T=c._;!T&&!(mn in c)?c._ctx=On:T===3&&On&&(On.slots._===1?c._=1:(c._=2,o.patchFlag|=1024))}else f.isFunction(c)?(c={default:c,_ctx:On},v=32):(c=String(c),b&64?(v=16,c=[ai(c)]):v=8);o.children=c,o.shapeFlag|=v}function Yo(){for(var o={},c=0;c<arguments.length;c++){var v=c<0||arguments.length<=c?void 0:arguments[c];for(var b in v)if(b==="class")o.class!==v.class&&(o.class=f.normalizeClass([o.class,v.class]));else if(b==="style")o.style=f.normalizeStyle([o.style,v.style]);else if(f.isOn(b)){var O=o[b],T=v[b];T&&O!==T&&!(f.isArray(O)&&O.includes(T))&&(o[b]=O?[].concat(O,T):T)}else b!==""&&(o[b]=v[b])}return o}function ar(o,c,v){var b=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;Q(o,c,7,[v,b])}function hr(o,c,v,b){var O,T=v&&v[b];if(f.isArray(o)||f.isString(o)){O=new Array(o.length);for(var V=0,Y=o.length;V<Y;V++)O[V]=c(o[V],V,void 0,T&&T[V])}else if(typeof o=="number"){O=new Array(o);for(var G=0;G<o;G++)O[G]=c(G+1,G,void 0,T&&T[G])}else if(f.isObject(o))if(o[Symbol.iterator])O=Array.from(o,(Je,Ge)=>c(Je,Ge,void 0,T&&T[Ge]));else{var ie=Object.keys(o);O=new Array(ie.length);for(var Re=0,at=ie.length;Re<at;Re++){var oe=ie[Re];O[Re]=c(o[oe],oe,Re,T&&T[Re])}}else O=[];return v&&(v[b]=O),O}function xi(o,c){for(var v=0;v<c.length;v++){var b=c[v];if(f.isArray(b))for(var O=0;O<b.length;O++)o[b[O].name]=b[O].fn;else b&&(o[b.name]=b.fn)}return o}function po(o,c){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},b=arguments.length>3?arguments[3]:void 0,O=arguments.length>4?arguments[4]:void 0;if(On.isCE||On.parent&&Ci(On.parent)&&On.parent.isCE)return Ht("slot",c==="default"?null:{name:c},b&&b());var T=o[c];T&&T._c&&(T._d=!1),ot();var V=T&&la(T(v)),Y=zt(ye,{key:v.key||"_".concat(c)},V||(b?b():[]),V&&o._===1?64:-2);return!O&&Y.scopeId&&(Y.slotScopeIds=[Y.scopeId+"-s"]),T&&T._c&&(T._d=!0),Y}function la(o){return o.some(c=>Ot(c)?!(c.type===_e||c.type===ye&&!la(c.children)):!0)?o:null}function $a(o){var c={};for(var v in o)c[f.toHandlerKey(v)]=o[v];return c}var Ua=o=>o?pi(o)?Wn(o)||o.proxy:Ua(o.parent):null,Gi=f.extend(Object.create(null),{$:o=>o,$el:o=>o.vnode.el,$data:o=>o.data,$props:o=>o.props,$attrs:o=>o.attrs,$slots:o=>o.slots,$refs:o=>o.refs,$parent:o=>Ua(o.parent),$root:o=>Ua(o.root),$emit:o=>o.emit,$options:o=>Ue(o),$forceUpdate:o=>()=>hn(o.update),$nextTick:o=>bt.bind(o.proxy),$watch:o=>hi.bind(o)}),qo={get(o,c){var{_:v}=o,{ctx:b,setupState:O,data:T,props:V,accessCache:Y,type:G,appContext:ie}=v,Re;if(c[0]!=="$"){var at=Y[c];if(at!==void 0)switch(at){case 1:return O[c];case 2:return T[c];case 4:return b[c];case 3:return V[c]}else{if(O!==f.EMPTY_OBJ&&f.hasOwn(O,c))return Y[c]=1,O[c];if(T!==f.EMPTY_OBJ&&f.hasOwn(T,c))return Y[c]=2,T[c];if((Re=v.propsOptions[0])&&f.hasOwn(Re,c))return Y[c]=3,V[c];if(b!==f.EMPTY_OBJ&&f.hasOwn(b,c))return Y[c]=4,b[c];le&&(Y[c]=0)}}var oe=Gi[c],Je,Ge;if(oe)return c==="$attrs"&&P.track(v,"get",c),oe(v);if((Je=G.__cssModules)&&(Je=Je[c]))return Je;if(b!==f.EMPTY_OBJ&&f.hasOwn(b,c))return Y[c]=4,b[c];if(Ge=ie.config.globalProperties,f.hasOwn(Ge,c))return Ge[c]},set(o,c,v){var{_:b}=o,{data:O,setupState:T,ctx:V}=b;return T!==f.EMPTY_OBJ&&f.hasOwn(T,c)?(T[c]=v,!0):O!==f.EMPTY_OBJ&&f.hasOwn(O,c)?(O[c]=v,!0):f.hasOwn(b.props,c)||c[0]==="$"&&c.slice(1)in b?!1:(V[c]=v,!0)},has(o,c){var{_:{data:v,setupState:b,accessCache:O,ctx:T,appContext:V,propsOptions:Y}}=o,G;return!!O[c]||v!==f.EMPTY_OBJ&&f.hasOwn(v,c)||b!==f.EMPTY_OBJ&&f.hasOwn(b,c)||(G=Y[0])&&f.hasOwn(G,c)||f.hasOwn(T,c)||f.hasOwn(Gi,c)||f.hasOwn(V.config.globalProperties,c)},defineProperty(o,c,v){return v.get!=null?o._.accessCache[c]=0:f.hasOwn(v,"value")&&this.set(o,c,v.value,null),Reflect.defineProperty(o,c,v)}},Ca=f.extend({},qo,{get(o,c){if(c!==Symbol.unscopables)return qo.get(o,c,o)},has(o,c){var v=c[0]!=="_"&&!f.isGloballyWhitelisted(c);return v}}),Bi=Ii(),os=0;function vo(o,c,v){var b=o.type,O=(c?c.appContext:o.appContext)||Bi,T={uid:os++,vnode:o,type:b,parent:c,appContext:O,root:null,next:null,subTree:null,effect:null,update:null,scope:new P.EffectScope(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:c?c.provides:Object.create(O.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Ea(b,O),emitsOptions:So(b,O),emit:null,emitted:null,propsDefaults:f.EMPTY_OBJ,inheritAttrs:b.inheritAttrs,ctx:f.EMPTY_OBJ,data:f.EMPTY_OBJ,props:f.EMPTY_OBJ,attrs:f.EMPTY_OBJ,slots:f.EMPTY_OBJ,refs:f.EMPTY_OBJ,setupState:f.EMPTY_OBJ,setupContext:null,suspense:v,suspenseId:v?v.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return T.ctx={_:T},T.root=c?c.root:T,T.emit=jr.bind(null,T),o.ce&&o.ce(T),T}var Dn=null,dn=()=>Dn||On,Nr=o=>{Dn=o,o.scope.on()},Sr=()=>{Dn&&Dn.scope.off(),Dn=null};function pi(o){return o.vnode.shapeFlag&4}I.isInSSRComponentSetup=!1;function ca(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;I.isInSSRComponentSetup=c;var{props:v,children:b}=o.vnode,O=pi(o);ea(o,v,O,c),Da(o,b);var T=O?Ha(o,c):void 0;return I.isInSSRComponentSetup=!1,T}function Ha(o,c){var v=o.type;o.accessCache=Object.create(null),o.proxy=P.markRaw(new Proxy(o.ctx,qo));var{setup:b}=v;if(b){var O=o.setupContext=b.length>1?cn(o):null;Nr(o),P.pauseTracking();var T=ne(b,o,0,[o.props,O]);if(P.resetTracking(),Sr(),f.isPromise(T)){if(T.then(Sr,Sr),c)return T.then(V=>{mo(o,V,c)}).catch(V=>{on(V,o,0)});o.asyncDep=T}else mo(o,T,c)}else At(o,c)}function mo(o,c,v){f.isFunction(c)?o.type.__ssrInlineRender?o.ssrRender=c:o.render=c:f.isObject(c)&&(o.setupState=P.proxyRefs(c)),At(o,v)}var Ko,kt;function as(o){Ko=o,kt=c=>{c.render._rc&&(c.withProxy=new Proxy(c.ctx,Ca))}}var xe=()=>!Ko;function At(o,c,v){var b=o.type;if(!o.render){if(!c&&Ko&&!b.render){var O=b.template;if(O){var{isCustomElement:T,compilerOptions:V}=o.appContext.config,{delimiters:Y,compilerOptions:G}=b,ie=f.extend(f.extend({isCustomElement:T,delimiters:Y},V),G);b.render=Ko(O,ie)}}o.render=b.render||f.NOOP,kt&&kt(o)}Nr(o),P.pauseTracking(),z(o),P.resetTracking(),Sr()}function Rt(o){return new Proxy(o.attrs,{get(c,v){return P.track(o,"get","$attrs"),c[v]}})}function cn(o){var c=b=>{o.exposed=b||{}},v;return{get attrs(){return v||(v=Rt(o))},slots:o.slots,emit:o.emit,expose:c}}function Wn(o){if(o.exposed)return o.exposeProxy||(o.exposeProxy=new Proxy(P.proxyRefs(P.markRaw(o.exposed)),{get(c,v){if(v in c)return c[v];if(v in Gi)return Gi[v](o)}}))}var kr=/(?:^|[-_])(\w)/g,ko=o=>o.replace(kr,c=>c.toUpperCase()).replace(/[-_]/g,"");function _o(o){return f.isFunction(o)&&o.displayName||o.name}function Ro(o,c){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,b=_o(c);if(!b&&c.__file){var O=c.__file.match(/([^/\\]+)\.\w+$/);O&&(b=O[1])}if(!b&&o&&o.parent){var T=V=>{for(var Y in V)if(V[Y]===c)return Y};b=T(o.components||o.parent.type.components)||T(o.appContext.components)}return b?ko(b):v?"App":"Anonymous"}function Oa(o){return f.isFunction(o)&&"__vccOpts"in o}var Jo=(o,c)=>P.computed(o,c,I.isInSSRComponentSetup);function Ta(){return null}function Pa(){return null}function As(o){}function Zs(o,c){return null}function ua(){return Xs().slots}function Cs(){return Xs().attrs}function Xs(){var o=dn();return o.setupContext||(o.setupContext=cn(o))}function ss(o,c){var v=f.isArray(o)?o.reduce((T,V)=>(T[V]={},T),{}):o;for(var b in c){var O=v[b];O?f.isArray(O)||f.isFunction(O)?v[b]={type:O,default:c[b]}:O.default=c[b]:O===null&&(v[b]={default:c[b]})}return v}function Qs(o,c){var v={},b=function(T){c.includes(T)||Object.defineProperty(v,T,{enumerable:!0,get:()=>o[T]})};for(var O in o)b(O);return v}function el(o){var c=dn(),v=o();return Sr(),f.isPromise(v)&&(v=v.catch(b=>{throw Nr(c),b})),[v,()=>Nr(c)]}function tl(o,c,v){var b=arguments.length;return b===2?f.isObject(c)&&!f.isArray(c)?Ot(c)?Ht(o,null,[c]):Ht(o,c):Ht(o,null,c):(b>3?v=Array.prototype.slice.call(arguments,2):b===3&&Ot(v)&&(v=[v]),Ht(o,c,v))}var ja=Symbol(""),za=()=>{{var o=di(ja);return o||bn("Server rendering context not provided. Make sure to only call useSSRContext() conditionally in the server build."),o}};function Hl(){}function nl(o,c,v,b){var O=v[b];if(O&&rl(O,o))return O;var T=c();return T.memo=o.slice(),v[b]=T}function rl(o,c){var v=o.memo;if(v.length!=c.length)return!1;for(var b=0;b<v.length;b++)if(v[b]!==c[b])return!1;return wt>0&&xt&&xt.push(o),!0}var ro="3.2.33",Ia=null,Wa=null,Ga={insert:(o,c,v)=>v?c.insertBefore(o,v):c.appendChild(o),remove:o=>{var c=o.parentNode;c&&c.removeChild(o)},createElement:o=>s.createElement(o),createText:o=>s.createText(o),createComment:o=>s.createComment(o),setText:(o,c)=>{o.setAttr("value",c)},setElementText:(o,c)=>{o.setAttr("value",c)},parentNode:o=>o.parentNode,nextSibling:o=>o.nextSibling};function fa(o){return Object.keys(o)}function Na(o){var c={};return f.isArray(o)&&o.forEach(v=>{fa(v).forEach(b=>{var O=v[b],T=c[b]||(c[b]={});fa(O).forEach(V=>{var Y=O[V],G=T[V]||(T[V]={});fa(Y).forEach(ie=>{ie[0]==="!"?(G[ie]=Y[ie],delete G[ie.slice(1)]):f.hasOwn(G,"!"+ie)||(G[ie]=Y[ie])})})})}),c}function ka(o,c){var v=c&&c.classList;return v&&v.includes(o)}var Os=/[+~> ]$/,Ya="parentNode",ls="previousSibling";function cs(o,c){for(var v=o.split("."),b=v.length-1;b>0;b--){var O=v[b],T=O[O.length-1],V=O.replace(Os,"");if(T==="~"||T===" "){for(var Y=T==="~"?ls:Ya;c&&(c=c[Y],!ka(V,c)););if(!c)return!1}else if(T===">"?c=c&&c[Ya]:T==="+"&&(c=c&&c[ls]),!ka(V,c))return!1}return!0}var il=1e3;function qa(o,c,v){var{styles:b,weights:O}=o;fa(c).forEach(T=>{if(!(T&&v&&!cs(T,v))){var V=T.split(".").length,Y=c[T];fa(Y).forEach(G=>{var ie=Y[G],Re=G[0]==="!";Re&&(G=G.slice(1));var at=O[G]||0,oe=V+(Re?il:0);oe>=at&&(O[G]=oe,b[G]=ie)})}})}function si(o,c){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,b={styles:{},weights:{}};return o.forEach(O=>{var T=c[O];T&&qa(b,T,v)}),b.styles}function io(o){return si(o.classList,o.styleSheet,o)}function Ts(o,c){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null;return si(o,ol(c),v)}function ol(o){var{type:c,appContext:v}=o,b=c;if(!b.__styles)if(v&&f.isArray(v.provides.__globalStyles)&&(v.provides.__globalStyles=Na(v.provides.__globalStyles)),b.mpType==="page"&&v)b.__styles=v.provides.__globalStyles;else{var O=[];v&&O.push(v.provides.__globalStyles),f.isArray(b.styles)&&b.styles.forEach(T=>O.push(T)),b.__styles=Na(O)}return b.__styles}function al(o,c,v){var b=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;b&&([c,v]=bo(o,c,v,b)),o.setAttr(c,v)}var us="hoverClass",sl="placeholderClass",Ps="placeholderStyle",ll="indicatorClass",jl="indicatorStyle",cl="maskClass",Ka="maskStyle",Is={view:{class:[us],style:[]},button:{class:[us],style:[]},navigator:{class:[us],style:[]},"u-input":{class:[sl],style:[Ps]},"u-textarea":{class:[sl],style:[Ps]},"picker-view":{class:[ll,cl],style:[jl,Ka]}};function bo(o,c,v,b){if(!v)return[c,v];var O=Is[o.type];if(O){var T=f.camelize(c);if(O.class.indexOf(T)>-1)return[T,Ts([v],b,o)];if(O.style.indexOf(c)>-1)return f.isString(v)?[T,f.parseStringStyle(v)]:[T,f.normalizeStyle(v)]}return[c,v]}function Ra(o,c,v){var b=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;if(!!b){var O=v?v.split(" "):[];o.setClassList(O),o.setStyleSheet(ol(b))}}function fs(o,c,v,b){o.addEvent(c,v)}function ul(o,c){o.removeEvent(c)}function zl(o,c,v,b){var O=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,T=o._vei||(o._vei={}),V=T[c];if(b&&V)V.value=b;else{var[Y,G]=Ns(c);if(b){var ie=T[c]=fl(b,O);fs(o,Y,ie)}else V&&(ul(o,Y),T[c]=void 0)}}var Zo=/(?:Once|Passive|Capture)$/;function Ns(o){var c;if(Zo.test(o)){c={};for(var v;v=o.match(Zo);)o=o.slice(0,o.length-v[0].length),c[v[0].toLowerCase()]=!0}return[f.hyphenate(o.slice(2)),c]}function fl(o,c){var v=O=>{Q(v.value,c,5,[O])};v.value=o;var b=new Set;return f.isArray(v.value)?v.value.forEach(O=>{O.modifiers&&O.modifiers.forEach(T=>{b.add(T)})}):(v.value.modifiers&&v.value.modifiers.forEach(O=>{b.add(O)}),dl(v,c)),v.modifiers=[...b],v}function dl(o,c){if(!!c){var{$wxsModules:v}=c;if(!!v){var b=o.value.toString();!v.find(O=>b.indexOf("."+O+".")>-1)||(o.wxsEvent=o.value())}}}function ks(o,c,v){if(!!v){f.isString(v)&&(v=f.parseStringStyle(v));var b={},O=c&&!f.isString(c);if(O){for(var T in c)v[T]==null&&(b[f.camelize(T)]="");for(var V in v){var Y=v[V];Y!==c[V]&&(b[f.camelize(V)]=Y)}}else for(var G in v)b[f.camelize(G)]=v[G];o.setStyles(b)}}var xo=["u-input","u-textarea"],da=function(o,c,v,b){var O=arguments.length>6?arguments[6]:void 0;c==="class"?Ra(o,v,b,O):c==="style"?ks(o,v,b):f.isOn(c)?f.isModelListener(c)||zl(o,c,v,b,O):c==="modelValue"&&xo.includes(o.type)?o.setAttrs({modelValue:b,value:b}):al(o,c,b,O)};function hl(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"$style";{var c=dn();if(!c)return f.EMPTY_OBJ;var v=c.type.__cssModules;if(!v)return f.EMPTY_OBJ;var b=v[o];return b||f.EMPTY_OBJ}}function Wl(o){var c=dn();if(!!c){var v=()=>ds(c.subTree,o(c.proxy));ji(()=>_r(v,{flush:"post"})),gi(v)}}function ds(o,c){if(o.shapeFlag&128){var v=o.suspense;o=v.activeBranch,v.pendingBranch&&!v.isHydrating&&v.effects.push(()=>{ds(v.activeBranch,c)})}for(;o.component;)o=o.component.subTree;if(o.shapeFlag&1&&o.el){var b=o.el.style;for(var O in c)b.setProperty("--".concat(O),c[O])}else o.type===ye&&o.children.forEach(T=>ds(T,c))}var gl=["ctrl","shift","alt","meta"],pl={stop:o=>o.stopPropagation(),prevent:o=>o.preventDefault(),self:o=>o.target!==o.currentTarget,ctrl:o=>!o.ctrlKey,shift:o=>!o.shiftKey,alt:o=>!o.altKey,meta:o=>!o.metaKey,left:o=>"button"in o&&o.button!==0,middle:o=>"button"in o&&o.button!==1,right:o=>"button"in o&&o.button!==2,exact:(o,c)=>gl.some(v=>o["".concat(v,"Key")]&&!c.includes(v))},vl=(o,c)=>function(v){for(var b=0;b<c.length;b++){var O=pl[c[b]];if(O&&O(v,c))return}for(var T=arguments.length,V=new Array(T>1?T-1:0),Y=1;Y<T;Y++)V[Y-1]=arguments[Y];return o(v,...V)},ml=(o,c)=>v=>{if("key"in v){var b=f.hyphenate(v.key);if(c.some(O=>O===b))return o(v)}},_l=f.extend({patchProp:da},Ga),Rs;function bl(){return Rs||(Rs=or(_l))}var Gl=function(){bl().render(...arguments)},Yl=function(){var o=bl().createApp(...arguments),{mount:c}=o;return o.mount=v=>c(v),o};return Object.defineProperty(I,"camelize",{enumerable:!0,get:function(){return f.camelize}}),Object.defineProperty(I,"capitalize",{enumerable:!0,get:function(){return f.capitalize}}),Object.defineProperty(I,"hyphenate",{enumerable:!0,get:function(){return f.hyphenate}}),Object.defineProperty(I,"normalizeClass",{enumerable:!0,get:function(){return f.normalizeClass}}),Object.defineProperty(I,"normalizeProps",{enumerable:!0,get:function(){return f.normalizeProps}}),Object.defineProperty(I,"normalizeStyle",{enumerable:!0,get:function(){return f.normalizeStyle}}),Object.defineProperty(I,"toDisplayString",{enumerable:!0,get:function(){return f.toDisplayString}}),Object.defineProperty(I,"toHandlerKey",{enumerable:!0,get:function(){return f.toHandlerKey}}),Object.defineProperty(I,"EffectScope",{enumerable:!0,get:function(){return P.EffectScope}}),Object.defineProperty(I,"ReactiveEffect",{enumerable:!0,get:function(){return P.ReactiveEffect}}),Object.defineProperty(I,"customRef",{enumerable:!0,get:function(){return P.customRef}}),Object.defineProperty(I,"effect",{enumerable:!0,get:function(){return P.effect}}),Object.defineProperty(I,"effectScope",{enumerable:!0,get:function(){return P.effectScope}}),Object.defineProperty(I,"getCurrentScope",{enumerable:!0,get:function(){return P.getCurrentScope}}),Object.defineProperty(I,"isProxy",{enumerable:!0,get:function(){return P.isProxy}}),Object.defineProperty(I,"isReactive",{enumerable:!0,get:function(){return P.isReactive}}),Object.defineProperty(I,"isReadonly",{enumerable:!0,get:function(){return P.isReadonly}}),Object.defineProperty(I,"isRef",{enumerable:!0,get:function(){return P.isRef}}),Object.defineProperty(I,"isShallow",{enumerable:!0,get:function(){return P.isShallow}}),Object.defineProperty(I,"markRaw",{enumerable:!0,get:function(){return P.markRaw}}),Object.defineProperty(I,"onScopeDispose",{enumerable:!0,get:function(){return P.onScopeDispose}}),Object.defineProperty(I,"proxyRefs",{enumerable:!0,get:function(){return P.proxyRefs}}),Object.defineProperty(I,"reactive",{enumerable:!0,get:function(){return P.reactive}}),Object.defineProperty(I,"readonly",{enumerable:!0,get:function(){return P.readonly}}),Object.defineProperty(I,"ref",{enumerable:!0,get:function(){return P.ref}}),Object.defineProperty(I,"shallowReactive",{enumerable:!0,get:function(){return P.shallowReactive}}),Object.defineProperty(I,"shallowReadonly",{enumerable:!0,get:function(){return P.shallowReadonly}}),Object.defineProperty(I,"shallowRef",{enumerable:!0,get:function(){return P.shallowRef}}),Object.defineProperty(I,"stop",{enumerable:!0,get:function(){return P.stop}}),Object.defineProperty(I,"toRaw",{enumerable:!0,get:function(){return P.toRaw}}),Object.defineProperty(I,"toRef",{enumerable:!0,get:function(){return P.toRef}}),Object.defineProperty(I,"toRefs",{enumerable:!0,get:function(){return P.toRefs}}),Object.defineProperty(I,"triggerRef",{enumerable:!0,get:function(){return P.triggerRef}}),Object.defineProperty(I,"unref",{enumerable:!0,get:function(){return P.unref}}),I.BaseTransition=ho,I.Comment=_e,I.Fragment=ye,I.KeepAlive=Uo,I.Static=ze,I.Suspense=co,I.Teleport=_,I.Text=ae,I.callWithAsyncErrorHandling=Q,I.callWithErrorHandling=ne,I.cloneVNode=Fr,I.compatUtils=Wa,I.computed=Jo,I.createApp=Yl,I.createBlock=zt,I.createCommentVNode=wr,I.createElementBlock=dt,I.createElementVNode=No,I.createHydrationRenderer=Kr,I.createPropsRestProxy=Qs,I.createRenderer=or,I.createSlots=xi,I.createStaticVNode=sa,I.createTextVNode=ai,I.createVNode=Ht,I.defineAsyncComponent=Ui,I.defineComponent=nr,I.defineEmits=Pa,I.defineExpose=As,I.defineProps=Ta,I.getCurrentInstance=dn,I.getTransitionRawChildren=Kn,I.guardReactiveProps=Go,I.h=tl,I.handleError=on,I.initCustomFormatter=Hl,I.inject=di,I.injectHook=Ti,I.isMemoSame=rl,I.isRuntimeOnly=xe,I.isVNode=Ot,I.mergeDefaults=ss,I.mergeProps=Yo,I.nextTick=bt,I.onActivated=Hi,I.onBeforeMount=Ir,I.onBeforeUnmount=Yr,I.onBeforeUpdate=ti,I.onDeactivated=fr,I.onErrorCaptured=ee,I.onMounted=ji,I.onRenderTracked=B,I.onRenderTriggered=Oo,I.onServerPrefetch=zi,I.onUnmounted=Pi,I.onUpdated=gi,I.openBlock=ot,I.parseClassList=Ts,I.parseClassStyles=io,I.popScopeId=lo,I.provide=ei,I.pushScopeId=Ji,I.queuePostFlushCb=Ei,I.registerRuntimeCompiler=as,I.render=Gl,I.renderList=hr,I.renderSlot=po,I.resolveComponent=U,I.resolveDirective=se,I.resolveDynamicComponent=Z,I.resolveFilter=Ia,I.resolveTransitionHooks=eo,I.setBlockTracking=tn,I.setDevtoolsHook=Di,I.setTransitionHooks=br,I.ssrContextKey=ja,I.toHandlers=$a,I.transformVNodeArgs=an,I.useAttrs=Cs,I.useCssModule=hl,I.useCssStyles=Na,I.useCssVars=Wl,I.useSSRContext=za,I.useSlots=ua,I.useTransitionState=Mr,I.version=ro,I.warn=bn,I.watch=Ft,I.watchEffect=_r,I.watchPostEffect=Yn,I.watchSyncEffect=$i,I.withAsyncContext=el,I.withCtx=Fi,I.withDefaults=Zs,I.withDirectives=ws,I.withKeys=ml,I.withMemo=nl,I.withModifiers=vl,I.withScopeId=ur,Object.defineProperty(I,"__esModule",{value:!0}),I}({},A,k,m);return y.__TYPE__="nvue",y}var Kg=KT(eP);var cc={};zT(cc,{EMPTY_ARR:()=>hP,EMPTY_OBJ:()=>dP,NO:()=>pP,NOOP:()=>gP,camelize:()=>PP,capitalize:()=>Zc,def:()=>xP,extend:()=>Jr,getGlobalThis:()=>MP,hasChanged:()=>kP,hasOwn:()=>js,hyphenate:()=>qu,invokeArrayFns:()=>RP,isArray:()=>_i,isBuiltInDirective:()=>OP,isFunction:()=>Vn,isGloballyWhitelisted:()=>rP,isHTMLTag:()=>cP,isIntegerKey:()=>AP,isMap:()=>Xg,isModelListener:()=>_P,isObject:()=>Fl,isOn:()=>mP,isPlainObject:()=>Vl,isPromise:()=>wP,isReservedProp:()=>CP,isSVGTag:()=>uP,isSet:()=>Qg,isString:()=>bi,isSymbol:()=>yP,makeMap:()=>Dl,normalizeClass:()=>Yu,normalizeProps:()=>aP,normalizeStyle:()=>Gu,parseStringStyle:()=>Jg,remove:()=>bP,toDisplayString:()=>fP,toHandlerKey:()=>NP,toNumber:()=>BP,toRawType:()=>SP,toTypeString:()=>ts});function Dl(p,s){let m=Object.create(null),A=p.split(",");for(let k=0;k<A.length;k++)m[A[k]]=!0;return s?k=>!!m[k.toLowerCase()]:k=>!!m[k]}var nP="Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt",rP=Dl(nP);function Gu(p){if(_i(p)){let s={};for(let m=0;m<p.length;m++){let A=p[m],k=bi(A)?Jg(A):Gu(A);if(k)for(let y in k)s[y]=k[y]}return s}else{if(bi(p))return p;if(Fl(p))return p}}var iP=/;(?![^(]*\))/g,oP=/:(.+)/;function Jg(p){let s={};return p.split(iP).forEach(m=>{if(m){let A=m.split(oP);A.length>1&&(s[A[0].trim()]=A[1].trim())}}),s}function Yu(p){let s="";if(bi(p))s=p;else if(_i(p))for(let m=0;m<p.length;m++){let A=Yu(p[m]);A&&(s+=A+" ")}else if(Fl(p))for(let m in p)p[m]&&(s+=m+" ");return s.trim()}function aP(p){if(!p)return null;let{class:s,style:m}=p;return s&&!bi(s)&&(p.class=Yu(s)),m&&(p.style=Gu(m)),p}var sP="html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot",lP="svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view",cP=Dl(sP),uP=Dl(lP),fP=p=>bi(p)?p:p==null?"":_i(p)||Fl(p)&&(p.toString===ep||!Vn(p.toString))?JSON.stringify(p,Zg,2):String(p),Zg=(p,s)=>s&&s.__v_isRef?Zg(p,s.value):Xg(s)?{[`Map(${s.size})`]:[...s.entries()].reduce((m,[A,k])=>(m[`${A} =>`]=k,m),{})}:Qg(s)?{[`Set(${s.size})`]:[...s.values()]}:Fl(s)&&!_i(s)&&!Vl(s)?String(s):s,dP={},hP=[],gP=()=>{},pP=()=>!1,vP=/^on[^a-z]/,mP=p=>vP.test(p),_P=p=>p.startsWith("onUpdate:"),Jr=Object.assign,bP=(p,s)=>{let m=p.indexOf(s);m>-1&&p.splice(m,1)},EP=Object.prototype.hasOwnProperty,js=(p,s)=>EP.call(p,s),_i=Array.isArray,Xg=p=>ts(p)==="[object Map]",Qg=p=>ts(p)==="[object Set]",Vn=p=>typeof p=="function",bi=p=>typeof p=="string",yP=p=>typeof p=="symbol",Fl=p=>p!==null&&typeof p=="object",wP=p=>Fl(p)&&Vn(p.then)&&Vn(p.catch),ep=Object.prototype.toString,ts=p=>ep.call(p),SP=p=>ts(p).slice(8,-1),Vl=p=>ts(p)==="[object Object]",AP=p=>bi(p)&&p!=="NaN"&&p[0]!=="-"&&""+parseInt(p,10)===p,CP=Dl(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),OP=Dl("bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo"),Jc=p=>{let s=Object.create(null);return m=>s[m]||(s[m]=p(m))},TP=/-(\w)/g,PP=Jc(p=>p.replace(TP,(s,m)=>m?m.toUpperCase():"")),IP=/\B([A-Z])/g,qu=Jc(p=>p.replace(IP,"-$1").toLowerCase()),Zc=Jc(p=>p.charAt(0).toUpperCase()+p.slice(1)),NP=Jc(p=>p?`on${Zc(p)}`:""),kP=(p,s)=>!Object.is(p,s),RP=(p,s)=>{for(let m=0;m<p.length;m++)p[m](s)},xP=(p,s,m)=>{Object.defineProperty(p,s,{configurable:!0,enumerable:!1,value:m})},BP=p=>{let s=parseFloat(p);return isNaN(s)?p:s},tp,MP=()=>tp||(tp=typeof globalThis!="undefined"?globalThis:typeof self!="undefined"?self:typeof window!="undefined"?window:typeof global!="undefined"?global:{});function np(p){var s=function(m,A){"use strict";function k(B,...ee){console.warn(`[Vue warn] ${B}`,...ee)}let y;class I{constructor(ee=!1){this.active=!0,this.effects=[],this.cleanups=[],!ee&&y&&(this.parent=y,this.index=(y.scopes||(y.scopes=[])).push(this)-1)}run(ee){if(this.active){let le=y;try{return y=this,ee()}finally{y=le}}}on(){y=this}off(){y=this.parent}stop(ee){if(this.active){let le,z;for(le=0,z=this.effects.length;le<z;le++)this.effects[le].stop();for(le=0,z=this.cleanups.length;le<z;le++)this.cleanups[le]();if(this.scopes)for(le=0,z=this.scopes.length;le<z;le++)this.scopes[le].stop(!0);if(this.parent&&!ee){let L=this.parent.scopes.pop();L&&L!==this&&(this.parent.scopes[this.index]=L,L.index=this.index)}this.active=!1}}}function f(B){return new I(B)}function P(B,ee=y){ee&&ee.active&&ee.effects.push(B)}function $e(){return y}function Nt(B){y&&y.cleanups.push(B)}let bn=B=>{let ee=new Set(B);return ee.w=0,ee.n=0,ee},x=B=>(B.w&Q)>0,Lt=B=>(B.n&Q)>0,Hn=({deps:B})=>{if(B.length)for(let ee=0;ee<B.length;ee++)B[ee].w|=Q},Pn=B=>{let{deps:ee}=B;if(ee.length){let le=0;for(let z=0;z<ee.length;z++){let L=ee[z];x(L)&&!Lt(L)?L.delete(B):ee[le++]=L,L.w&=~Q,L.n&=~Q}ee.length=le}},ct=new WeakMap,ne=0,Q=1,on=30,wn,$n=Symbol(""),Sn=Symbol("");class ln{constructor(ee,le=null,z){this.fn=ee,this.scheduler=le,this.active=!0,this.deps=[],this.parent=void 0,P(this,z)}run(){if(!this.active)return this.fn();let ee=wn,le=fn;for(;ee;){if(ee===this)return;ee=ee.parent}try{return this.parent=wn,wn=this,fn=!0,Q=1<<++ne,ne<=on?Hn(this):An(this),this.fn()}finally{ne<=on&&Pn(this),Q=1<<--ne,wn=this.parent,fn=le,this.parent=void 0,this.deferStop&&this.stop()}}stop(){wn===this?this.deferStop=!0:this.active&&(An(this),this.onStop&&this.onStop(),this.active=!1)}}function An(B){let{deps:ee}=B;if(ee.length){for(let le=0;le<ee.length;le++)ee[le].delete(B);ee.length=0}}function jn(B,ee){B.effect&&(B=B.effect.fn);let le=new ln(B);ee&&(A.extend(le,ee),ee.scope&&P(le,ee.scope)),(!ee||!ee.lazy)&&le.run();let z=le.run.bind(le);return z.effect=le,z}function En(B){B.effect.stop()}let fn=!0,Bn=[];function Cn(){Bn.push(fn),fn=!1}function Cr(){Bn.push(fn),fn=!0}function ui(){let B=Bn.pop();fn=B===void 0?!0:B}function Ve(B,ee,le){if(fn&&wn){let z=ct.get(B);z||ct.set(B,z=new Map);let L=z.get(le);L||z.set(le,L=bn()),st(L,void 0)}}function st(B,ee){let le=!1;ne<=on?Lt(B)||(B.n|=Q,le=!x(B)):le=!B.has(wn),le&&(B.add(wn),wn.deps.push(B))}function bt(B,ee,le,z,L,K){let he=ct.get(B);if(!he)return;let Ue=[];if(ee==="clear")Ue=[...he.values()];else if(le==="length"&&A.isArray(B))he.forEach((gt,yn)=>{(yn==="length"||yn>=z)&&Ue.push(gt)});else switch(le!==void 0&&Ue.push(he.get(le)),ee){case"add":A.isArray(B)?A.isIntegerKey(le)&&Ue.push(he.get("length")):(Ue.push(he.get($n)),A.isMap(B)&&Ue.push(he.get(Sn)));break;case"delete":A.isArray(B)||(Ue.push(he.get($n)),A.isMap(B)&&Ue.push(he.get(Sn)));break;case"set":A.isMap(B)&&Ue.push(he.get($n));break}let Ye=void 0;if(Ue.length===1)Ue[0]&&Xt(Ue[0]);else{let gt=[];for(let yn of Ue)yn&&gt.push(...yn);Xt(bn(gt))}}function Xt(B,ee){for(let le of A.isArray(B)?B:[...B])(le!==wn||le.allowRecurse)&&(le.scheduler?le.scheduler():le.run())}let hn=A.makeMap("__proto__,__v_isRef,__isVue"),en=new Set(Object.getOwnPropertyNames(Symbol).map(B=>Symbol[B]).filter(A.isSymbol)),cr=Or(),Hr=Or(!1,!0),Zr=Or(!0),Ei=Or(!0,!0),zn=Xr();function Xr(){let B={};return["includes","indexOf","lastIndexOf"].forEach(ee=>{B[ee]=function(...le){let z=Yt(this);for(let K=0,he=this.length;K<he;K++)Ve(z,"get",K+"");let L=z[ee](...le);return L===-1||L===!1?z[ee](...le.map(Yt)):L}}),["push","pop","shift","unshift","splice"].forEach(ee=>{B[ee]=function(...le){Cn();let z=Yt(this)[ee].apply(this,le);return ui(),z}}),B}function Or(B=!1,ee=!1){return function(z,L,K){if(L==="__v_isReactive")return!B;if(L==="__v_isReadonly")return B;if(L==="__v_isShallow")return ee;if(L==="__v_raw"&&K===(B?ee?Yn:_r:ee?di:ei).get(z))return z;let he=A.isArray(z);if(!B&&he&&A.hasOwn(zn,L))return Reflect.get(zn,L,K);let Ue=Reflect.get(z,L,K);return(A.isSymbol(L)?en.has(L):hn(L))||(B||Ve(z,"get",L),ee)?Ue:nr(Ue)?!he||!A.isIntegerKey(L)?Ue.value:Ue:A.isObject(Ue)?B?hi(Ue):Ft(Ue):Ue}}let yi=Di(),Ki=Di(!0);function Di(B=!1){return function(le,z,L,K){let he=le[z];if(Tn(he)&&nr(he)&&!nr(L))return!1;if(!B&&!Tn(L)&&(qn(L)||(L=Yt(L),he=Yt(he)),!A.isArray(le)&&nr(he)&&!nr(L)))return he.value=L,!0;let Ue=A.isArray(le)&&A.isIntegerKey(z)?Number(z)<le.length:A.hasOwn(le,z),Ye=Reflect.set(le,z,L,K);return le===Yt(K)&&(Ue?A.hasChanged(L,he)&&bt(le,"set",z,L,he):bt(le,"add",z,L)),Ye}}function jr(B,ee){let le=A.hasOwn(B,ee),z=B[ee],L=Reflect.deleteProperty(B,ee);return L&&le&&bt(B,"delete",ee,void 0,z),L}function So(B,ee){let le=Reflect.has(B,ee);return(!A.isSymbol(ee)||!en.has(ee))&&Ve(B,"has",ee),le}function wi(B){return Ve(B,"iterate",A.isArray(B)?"length":$n),Reflect.ownKeys(B)}let On={get:cr,set:yi,deleteProperty:jr,has:So,ownKeys:wi},Mn={get:Zr,set(B,ee){return!0},deleteProperty(B,ee){return!0}},Tr=A.extend({},On,{get:Hr,set:Ki}),Ji=A.extend({},Mn,{get:Ei}),lo=B=>B,ur=B=>Reflect.getPrototypeOf(B);function Fi(B,ee,le=!1,z=!1){B=B.__v_raw;let L=Yt(B),K=Yt(ee);ee!==K&&!le&&Ve(L,"get",ee),!le&&Ve(L,"get",K);let{has:he}=ur(L),Ue=z?lo:le?Lr:qt;if(he.call(L,ee))return Ue(B.get(ee));if(he.call(L,K))return Ue(B.get(K));B!==L&&B.get(ee)}function Zi(B,ee=!1){let le=this.__v_raw,z=Yt(le),L=Yt(B);return B!==L&&!ee&&Ve(z,"has",B),!ee&&Ve(z,"has",L),B===L?le.has(B):le.has(B)||le.has(L)}function In(B,ee=!1){return B=B.__v_raw,!ee&&Ve(Yt(B),"iterate",$n),Reflect.get(B,"size",B)}function zr(B){B=Yt(B);let ee=Yt(this);return ur(ee).has.call(ee,B)||(ee.add(B),bt(ee,"add",B,B)),this}function Vo(B,ee){ee=Yt(ee);let le=Yt(this),{has:z,get:L}=ur(le),K=z.call(le,B);K||(B=Yt(B),K=z.call(le,B));let he=L.call(le,B);return le.set(B,ee),K?A.hasChanged(ee,he)&&bt(le,"set",B,ee,he):bt(le,"add",B,ee),this}function Ao(B){let ee=Yt(this),{has:le,get:z}=ur(ee),L=le.call(ee,B);L||(B=Yt(B),L=le.call(ee,B));let K=z?z.call(ee,B):void 0,he=ee.delete(B);return L&&bt(ee,"delete",B,void 0,K),he}function Vi(){let B=Yt(this),ee=B.size!==0,le=void 0,z=B.clear();return ee&&bt(B,"clear",void 0,void 0,le),z}function vr(B,ee){return function(z,L){let K=this,he=K.__v_raw,Ue=Yt(he),Ye=ee?lo:B?Lr:qt;return!B&&Ve(Ue,"iterate",$n),he.forEach((gt,yn)=>z.call(L,Ye(gt),Ye(yn),K))}}function Qr(B,ee,le){return function(...z){let L=this.__v_raw,K=Yt(L),he=A.isMap(K),Ue=B==="entries"||B===Symbol.iterator&&he,Ye=B==="keys"&&he,gt=L[B](...z),yn=le?lo:ee?Lr:qt;return!ee&&Ve(K,"iterate",Ye?Sn:$n),{next(){let{value:ni,done:ir}=gt.next();return ir?{value:ni,done:ir}:{value:Ue?[yn(ni[0]),yn(ni[1])]:yn(ni),done:ir}},[Symbol.iterator](){return this}}}}function Nn(B){return function(...ee){return B==="delete"?!1:this}}function mr(){let B={get(K){return Fi(this,K)},get size(){return In(this)},has:Zi,add:zr,set:Vo,delete:Ao,clear:Vi,forEach:vr(!1,!1)},ee={get(K){return Fi(this,K,!1,!0)},get size(){return In(this)},has:Zi,add:zr,set:Vo,delete:Ao,clear:Vi,forEach:vr(!1,!0)},le={get(K){return Fi(this,K,!0)},get size(){return In(this,!0)},has(K){return Zi.call(this,K,!0)},add:Nn("add"),set:Nn("set"),delete:Nn("delete"),clear:Nn("clear"),forEach:vr(!0,!1)},z={get(K){return Fi(this,K,!0,!0)},get size(){return In(this,!0)},has(K){return Zi.call(this,K,!0)},add:Nn("add"),set:Nn("set"),delete:Nn("delete"),clear:Nn("clear"),forEach:vr(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(K=>{B[K]=Qr(K,!1,!1),le[K]=Qr(K,!0,!1),ee[K]=Qr(K,!1,!0),z[K]=Qr(K,!0,!0)}),[B,le,ee,z]}let[co,Si,Wr,Co]=mr();function Gr(B,ee){let le=ee?B?Co:Wr:B?Si:co;return(z,L,K)=>L==="__v_isReactive"?!B:L==="__v_isReadonly"?B:L==="__v_raw"?z:Reflect.get(A.hasOwn(le,L)&&L in z?le:z,L,K)}let Ai={get:Gr(!1,!1)},uo={get:Gr(!1,!0)},$o={get:Gr(!0,!1)},Xi={get:Gr(!0,!0)};function fi(B,ee,le){let z=Yt(le);if(z!==le&&ee.call(B,z)){let L=A.toRawType(B);console.warn(`Reactive ${L} contains both the raw and reactive versions of the same object${L==="Map"?" as keys":""}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`)}}let ei=new WeakMap,di=new WeakMap,_r=new WeakMap,Yn=new WeakMap;function $i(B){switch(B){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function Qi(B){return B.__v_skip||!Object.isExtensible(B)?0:$i(A.toRawType(B))}function Ft(B){return Tn(B)?B:Br(B,!1,On,Ai,ei)}function Ee(B){return Br(B,!1,Tr,uo,di)}function hi(B){return Br(B,!0,Mn,$o,_r)}function fo(B){return Br(B,!0,Ji,Xi,Yn)}function Br(B,ee,le,z,L){if(!A.isObject(B)||B.__v_raw&&!(ee&&B.__v_isReactive))return B;let K=L.get(B);if(K)return K;let he=Qi(B);if(he===0)return B;let Ue=new Proxy(B,he===2?z:le);return L.set(B,Ue),Ue}function Mr(B){return Tn(B)?Mr(B.__v_raw):!!(B&&B.__v_isReactive)}function Tn(B){return!!(B&&B.__v_isReadonly)}function qn(B){return!!(B&&B.__v_isShallow)}function ho(B){return Mr(B)||Tn(B)}function Yt(B){let ee=B&&B.__v_raw;return ee?Yt(ee):B}function eo(B){return A.def(B,"__v_skip",!0),B}let qt=B=>A.isObject(B)?Ft(B):B,Lr=B=>A.isObject(B)?hi(B):B;function br(B){fn&&wn&&(B=Yt(B),st(B.dep||(B.dep=bn())))}function Kn(B,ee){B=Yt(B),B.dep&&Xt(B.dep)}function nr(B){return!!(B&&B.__v_isRef===!0)}function Ci(B){return go(B,!1)}function Ui(B){return go(B,!0)}function go(B,ee){return nr(B)?B:new Oi(B,ee)}class Oi{constructor(ee,le){this.__v_isShallow=le,this.dep=void 0,this.__v_isRef=!0,this._rawValue=le?ee:Yt(ee),this._value=le?ee:qt(ee)}get value(){return br(this),this._value}set value(ee){ee=this.__v_isShallow?ee:Yt(ee),A.hasChanged(ee,this._rawValue)&&(this._rawValue=ee,this._value=this.__v_isShallow?ee:qt(ee),Kn(this,ee))}}function to(B){Kn(B,void 0)}function Uo(B){return nr(B)?B.value:B}let no={get:(B,ee,le)=>Uo(Reflect.get(B,ee,le)),set:(B,ee,le,z)=>{let L=B[ee];return nr(L)&&!nr(le)?(L.value=le,!0):Reflect.set(B,ee,le,z)}};function Hi(B){return Mr(B)?B:new Proxy(B,no)}class fr{constructor(ee){this.dep=void 0,this.__v_isRef=!0;let{get:le,set:z}=ee(()=>br(this),()=>Kn(this));this._get=le,this._set=z}get value(){return this._get()}set value(ee){this._set(ee)}}function Er(B){return new fr(B)}function Jn(B){let ee=A.isArray(B)?new Array(B.length):{};for(let le in B)ee[le]=rr(B,le);return ee}class Pr{constructor(ee,le,z){this._object=ee,this._key=le,this._defaultValue=z,this.__v_isRef=!0}get value(){let ee=this._object[this._key];return ee===void 0?this._defaultValue:ee}set value(ee){this._object[this._key]=ee}}function rr(B,ee,le){let z=B[ee];return nr(z)?z:new Pr(B,ee,le)}class Ti{constructor(ee,le,z,L){this._setter=le,this.dep=void 0,this.__v_isRef=!0,this._dirty=!0,this.effect=new ln(ee,()=>{this._dirty||(this._dirty=!0,Kn(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!L,this.__v_isReadonly=z}get value(){let ee=Yt(this);return br(ee),(ee._dirty||!ee._cacheable)&&(ee._dirty=!1,ee._value=ee.effect.run()),ee._value}set value(ee){this._setter(ee)}}function dr(B,ee,le=!1){let z,L,K=A.isFunction(B);return K?(z=B,L=A.NOOP):(z=B.get,L=B.set),new Ti(z,L,K||!L,le)}var Ir;let ji=Promise.resolve(),ti=[],gi=!1,Yr=B=>{ti.push(B),gi||(gi=!0,ji.then(Pi))},Pi=()=>{for(let B=0;B<ti.length;B++)ti[B]();ti.length=0,gi=!1};class zi{constructor(ee){this.dep=void 0,this._dirty=!0,this.__v_isRef=!0,this[Ir]=!0;let le,z=!1,L=!1;this.effect=new ln(ee,K=>{if(this.dep){if(K)le=this._value,z=!0;else if(!L){let he=z?le:this._value;L=!0,z=!1,Yr(()=>{this.effect.active&&this._get()!==he&&Kn(this),L=!1})}for(let he of this.dep)he.computed instanceof zi&&he.scheduler(!0)}this._dirty=!0}),this.effect.computed=this}_get(){return this._dirty?(this._dirty=!1,this._value=this.effect.run()):this._value}get value(){return br(this),Yt(this)._get()}}Ir="__v_isReadonly";function Oo(B){return new zi(B)}return m.EffectScope=I,m.ITERATE_KEY=$n,m.ReactiveEffect=ln,m.computed=dr,m.customRef=Er,m.deferredComputed=Oo,m.effect=jn,m.effectScope=f,m.enableTracking=Cr,m.getCurrentScope=$e,m.isProxy=ho,m.isReactive=Mr,m.isReadonly=Tn,m.isRef=nr,m.isShallow=qn,m.markRaw=eo,m.onScopeDispose=Nt,m.pauseTracking=Cn,m.proxyRefs=Hi,m.reactive=Ft,m.readonly=hi,m.ref=Ci,m.resetTracking=ui,m.shallowReactive=Ee,m.shallowReadonly=fo,m.shallowRef=Ui,m.stop=En,m.toRaw=Yt,m.toRef=rr,m.toRefs=Jn,m.track=Ve,m.trigger=bt,m.triggerRef=to,m.unref=Uo,Object.defineProperty(m,"__esModule",{value:!0}),m}({},p);return s}function rp(p){var s=function(m){"use strict";let A=`
`,k=44,y=50,I=50,f=["%","%"],P="#007aff",$e="#f7f7f7",Nt=/^([a-z-]+:)?\/\//i,bn=/^data:.*,.*/,x="WEB_INVOKE_APPSERVICE",Lt="wxs://",Hn="json://",Pn="wxsModules",ct="renderjsModules",ne="onShow",Q="onHide",on="onLaunch",wn="onError",$n="onThemeChange",Sn="onKeyboardHeightChange",ln="onPageNotFound",An="onUnhandledRejection",jn="onLoad",En="onReady",fn="onUnload",Bn="onInit",Cn="onSaveExitState",Cr="onResize",ui="onBackPress",Ve="onPageScroll",st="onTabItemTap",bt="onReachBottom",Xt="onPullDownRefresh",hn="onShareTimeline",en="onAddToFavorites",cr="onShareAppMessage",Hr="onNavigationBarButtonTap",Zr="onNavigationBarSearchInputClicked",Ei="onNavigationBarSearchInputChanged",zn="onNavigationBarSearchInputConfirmed",Xr="onNavigationBarSearchInputFocusChanged",Or="onAppEnterForeground",yi="onAppEnterBackground",Ki="onWxsInvokeCallMethod";function Di(z){return!!z.appContext}function jr(z){return z&&(Di(z)?z.proxy:z)}function So(z){return z.nodeType===1}function wi(z){let{vnode:L}=z;if(So(L.el))return L.el;let{subTree:K}=z;if(K.shapeFlag&16){let he=K.children.find(Ue=>Ue.el&&So(Ue.el));if(he)return he.el}return L.el}let On=0;function Mn(z,...L){let K=Date.now(),he=On?K-On:0;return On=K,`[${K}][${he}ms][${z}]\uFF1A${L.map(Ue=>JSON.stringify(Ue)).join(" ")}`}function Tr(z){let L=Object.create(null);return K=>L[K]||(L[K]=z(K))}function Ji(z){return Tr(z)}function lo(z=""){return(""+z).replace(/[^\x00-\xff]/g,"**").length}function ur(z){return z.indexOf("/")===0}function Fi(z){return ur(z)?z:"/"+z}function Zi(z){return ur(z)?z.slice(1):z}let In=(z,L)=>{let K;for(let he=0;he<z.length;he++)K=z[he](L);return K};function zr(z,L=null){let K;return(...he)=>(z&&(K=z.apply(L,he),z=null),K)}function Vo(z,L){z=z||{},typeof L=="string"&&(L={errMsg:L}),/:ok$/.test(L.errMsg)?typeof z.success=="function"&&z.success(L):typeof z.fail=="function"&&z.fail(L),typeof z.complete=="function"&&z.complete(L)}let Ao=encodeURIComponent;function Vi(z,L=Ao){let K=z?Object.keys(z).map(he=>{let Ue=z[he];return typeof Ue===void 0||Ue===null?Ue="":m.isPlainObject(Ue)&&(Ue=JSON.stringify(Ue)),L(he)+"="+L(Ue)}).filter(he=>he.length>0).join("&"):null;return K?`?${K}`:""}function vr(z){try{return decodeURIComponent(""+z)}catch(L){}return""+z}let Qr=/\+/g;function Nn(z){let L={};if(z===""||z==="?")return L;let he=(z[0]==="?"?z.slice(1):z).split("&");for(let Ue=0;Ue<he.length;++Ue){let Ye=he[Ue].replace(Qr," "),gt=Ye.indexOf("="),yn=vr(gt<0?Ye:Ye.slice(0,gt)),ni=gt<0?null:vr(Ye.slice(gt+1));if(yn in L){let ir=L[yn];m.isArray(ir)||(ir=L[yn]=[ir]),ir.push(ni)}else L[yn]=ni}return L}function mr(z){let[L,K]=z.split("?",2);return{path:L,query:Nn(K||"")}}function co(z){let L={};return z&&Object.keys(z).forEach(K=>{K.indexOf("data-")===0&&(L[K.replace("data-","")]=z[K])}),L}class Si extends Error{constructor(L){super(L);this.name="DOMException"}}function Wr(z,L){return L&&(L.capture&&(z+="Capture"),L.once&&(z+="Once"),L.passive&&(z+="Passive")),`on${m.capitalize(m.camelize(z))}`}class Co{constructor(L,K){this.defaultPrevented=!1,this.timeStamp=Date.now(),this._stop=!1,this._end=!1,this.type=L,this.bubbles=!!K.bubbles,this.cancelable=!!K.cancelable}preventDefault(){this.defaultPrevented=!0}stopImmediatePropagation(){this._end=this._stop=!0}stopPropagation(){this._stop=!0}}function Gr(z){if(z instanceof Co)return z;let[L]=$o(z.type),K=new Co(L,{bubbles:!1,cancelable:!1});return m.extend(K,z),K}class Ai{constructor(){this.listeners=Object.create(null)}dispatchEvent(L){let K=this.listeners[L.type];if(!K)return!1;let he=Gr(L),Ue=K.length;for(let Ye=0;Ye<Ue&&(K[Ye].call(this,he),!he._end);Ye++);return he.cancelable&&he.defaultPrevented}addEventListener(L,K,he){L=Wr(L,he),(this.listeners[L]||(this.listeners[L]=[])).push(K)}removeEventListener(L,K,he){L=Wr(L,he);let Ue=this.listeners[L];if(!Ue)return;let Ye=Ue.indexOf(K);Ye>-1&&Ue.splice(Ye,1)}}let uo=/(?:Once|Passive|Capture)$/;function $o(z){let L;if(uo.test(z)){L={};let K;for(;K=z.match(uo);)z=z.slice(0,z.length-K[0].length),L[K[0].toLowerCase()]=!0}return[m.hyphenate(z.slice(2)),L]}let Xi=(()=>({stop:1,prevent:1<<1,self:1<<2}))();function fi(z){let L=0;return z.includes("stop")&&(L|=Xi.stop),z.includes("prevent")&&(L|=Xi.prevent),z.includes("self")&&(L|=Xi.self),L}let ei=0,di=1,_r=3,Yn=8;function $i(z,L){let{parentNode:K}=z;if(!K)return null;let{childNodes:he}=K;return he[he.indexOf(z)+(L==="n"?1:-1)]||null}function Qi(z){let{parentNode:L}=z;L&&L.removeChild(z)}function Ft(z){!z.nodeId&&z.pageNode&&(z.nodeId=z.pageNode.genId())}class Ee extends Ai{constructor(L,K,he){super();if(this.pageNode=null,this.parentNode=null,this._text=null,he){let{pageNode:Ue}=he;Ue&&(this.pageNode=Ue,this.nodeId=Ue.genId(),!Ue.isUnmounted&&Ue.onCreate(this,K))}this.nodeType=L,this.nodeName=K,this.childNodes=[]}get firstChild(){return this.childNodes[0]||null}get lastChild(){let{childNodes:L}=this,K=L.length;return K?L[K-1]:null}get nextSibling(){return $i(this,"n")}get nodeValue(){return null}set nodeValue(L){}get textContent(){return this._text||""}set textContent(L){this._text=L,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onTextContent(this,L)}get parentElement(){let{parentNode:L}=this;return L&&L.nodeType===di?L:null}get previousSibling(){return $i(this,"p")}appendChild(L){return this.insertBefore(L,null)}cloneNode(L){let K=m.extend(Object.create(Object.getPrototypeOf(this)),this),{attributes:he}=K;return he&&(K.attributes=m.extend({},he)),L&&(K.childNodes=K.childNodes.map(Ue=>Ue.cloneNode(!0))),K}insertBefore(L,K){Qi(L),L.pageNode=this.pageNode,L.parentNode=this,Ft(L);let{childNodes:he}=this;if(K){let Ue=he.indexOf(K);if(Ue===-1)throw new Si("Failed to execute 'insertBefore' on 'Node': The node before which the new node is to be inserted is not a child of this node.");he.splice(Ue,0,L)}else he.push(L);return this.pageNode&&!this.pageNode.isUnmounted?this.pageNode.onInsertBefore(this,L,K):L}removeChild(L){let{childNodes:K}=this,he=K.indexOf(L);if(he===-1)throw new Si("Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node.");return L.parentNode=null,K.splice(he,1),this.pageNode&&!this.pageNode.isUnmounted?this.pageNode.onRemoveChild(L):L}}let hi="class",fo="style",Br=".vOwnerId",Mr=".vRenderjs";class Tn extends Ee{constructor(L,K,he){super(L,K,he);this.attributes=Object.create(null),this.style=null,this.vShow=null,this._html=null}get className(){return this.attributes[hi]||""}set className(L){this.setAttribute(hi,L)}get innerHTML(){return""}set innerHTML(L){this._html=L}addEventListener(L,K,he){super.addEventListener(L,K,he),this.pageNode&&!this.pageNode.isUnmounted&&(K.wxsEvent?this.pageNode.onAddWxsEvent(this,Wr(L,he),K.wxsEvent,fi(K.modifiers||[])):this.pageNode.onAddEvent(this,Wr(L,he),fi(K.modifiers||[])))}removeEventListener(L,K,he){super.removeEventListener(L,K,he),this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onRemoveEvent(this,Wr(L,he))}getAttribute(L){return L===fo?this.style:this.attributes[L]}removeAttribute(L){L==fo?this.style=null:delete this.attributes[L],this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onRemoveAttribute(this,L)}setAttribute(L,K){L===fo?this.style=K:this.attributes[L]=K,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onSetAttribute(this,L,K)}toJSON({attr:L,normalize:K}={}){let{attributes:he,style:Ue,listeners:Ye,_text:gt}=this,yn={};Object.keys(he).length&&(yn.a=K?K(he):he);let ni=Object.keys(Ye);if(ni.length){let ir,Zn={};ni.forEach(kn=>{let Wi=Ye[kn];if(Wi.length){let{wxsEvent:ea,modifiers:Ma}=Wi[0],ta=fi(Ma||[]);ea?(ir||(ir={}),ir[kn]=[K?K(ea):ea,ta]):Zn[kn]=ta}}),yn.e=K?K(Zn,!1):Zn,ir&&(yn.w=K?K(ir,!1):ir)}return Ue!==null&&(yn.s=K?K(Ue):Ue),L||(yn.i=this.nodeId,yn.n=this.nodeName),gt!==null&&(yn.t=K?K(gt):gt),yn}}class qn extends Ee{constructor(L,K){super(Yn,"#comment",K);this._text=""}toJSON(L={}){return L.attr?{}:{i:this.nodeId}}}class ho extends Tn{constructor(L,K){super(di,L.toUpperCase(),K);this.tagName=this.nodeName}}class Yt extends ho{get value(){return this.getAttribute("value")}set value(L){this.setAttribute("value",L)}}class eo extends Yt{}class qt extends Tn{constructor(L,K){super(_r,"#text",K);this._text=L}get nodeValue(){return this._text||""}set nodeValue(L){this._text=L,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onNodeValue(this,L)}}let Lr={AD:["data"],"AD-DRAW":["data"],"LIVE-PLAYER":["picture-in-picture-mode"],MAP:["markers","polyline","circles","controls","include-points","polygons"],PICKER:["range","value"],"PICKER-VIEW":["value"],"RICH-TEXT":["nodes"],VIDEO:["danmu-list","header"],"WEB-VIEW":["webview-styles"]},br=["animation"],Kn=(z,L)=>{if(br.indexOf(L)>-1)return!0;let K=Lr[z.nodeName];return!!(K&&K.indexOf(L)>-1)},nr=1,Ci=2,Ui=3,go=4,Oi=5,to=6,Uo=7,no=8,Hi=9,fr=10,Er=12,Jn=15,Pr=20;function rr(z,L,{clearTimeout:K,setTimeout:he}){let Ue,Ye=function(){K(Ue),Ue=he(()=>z.apply(this,arguments),L)};return Ye.cancel=function(){K(Ue)},Ye}class Ti{constructor(L,K){this.id=L,this.listener={},this.emitCache={},K&&Object.keys(K).forEach(he=>{this.on(he,K[he])})}emit(L,...K){let he=this.listener[L];if(!he)return(this.emitCache[L]||(this.emitCache[L]=[])).push(K);he.forEach(Ue=>{Ue.fn.apply(Ue.fn,K)}),this.listener[L]=he.filter(Ue=>Ue.type!=="once")}on(L,K){this._addListener(L,"on",K),this._clearCache(L)}once(L,K){this._addListener(L,"once",K),this._clearCache(L)}off(L,K){let he=this.listener[L];if(!!he)if(K)for(let Ue=0;Ue<he.length;)he[Ue].fn===K&&(he.splice(Ue,1),Ue--),Ue++;else delete this.listener[L]}_clearCache(L){let K=this.emitCache[L];if(K)for(;K.length>0;)this.emit.apply(this,[L,...K.shift()])}_addListener(L,K,he){(this.listener[L]||(this.listener[L]=[])).push({fn:he,type:K})}}let dr=[Bn,jn,ne,Q,fn,ui,Ve,st,bt,Xt,hn,cr,en,Cn,Hr,Zr,Ei,zn,Xr],Ir=[jn,ne];function ji(z){return Ir.indexOf(z)>-1}function ti(z){return dr.indexOf(z)>-1}let gi=[ne,Q,on,wn,$n,ln,An,Bn,jn,En,fn,Cr,ui,Ve,st,bt,Xt,hn,en,cr,Cn,Hr,Zr,Ei,zn,Xr],Yr,Pi=[];function zi(z){if(Yr)return z(Yr);Pi.push(z)}function Oo(z){Yr=z,Pi.forEach(L=>L(z))}let B=function(){};B.prototype={on:function(z,L,K){var he=this.e||(this.e={});return(he[z]||(he[z]=[])).push({fn:L,ctx:K}),this},once:function(z,L,K){var he=this;function Ue(){he.off(z,Ue),L.apply(K,arguments)}return Ue._=L,this.on(z,Ue,K)},emit:function(z){var L=[].slice.call(arguments,1),K=((this.e||(this.e={}))[z]||[]).slice(),he=0,Ue=K.length;for(he;he<Ue;he++)K[he].fn.apply(K[he].ctx,L);return this},off:function(z,L){var K=this.e||(this.e={}),he=K[z],Ue=[];if(he&&L)for(var Ye=0,gt=he.length;Ye<gt;Ye++)he[Ye].fn!==L&&he[Ye].fn._!==L&&Ue.push(he[Ye]);return Ue.length?K[z]=Ue:delete K[z],this}};var ee=B,le={invokeArrayFns:In,ON_LOAD:jn,ON_SHOW:ne,LINEFEED:A,RENDERJS_MODULES:ct,WXS_PROTOCOL:Lt,formatLog:Mn,WXS_MODULES:Pn,UniLifecycleHooks:gi,ON_ERROR:wn,invokeCreateVueAppHook:Oo,parseNVueDataset:co,once:zr,I18N_JSON_DELIMITERS:f,Emitter:ee,addLeadingSlash:Fi,resolveComponentInstance:jr,ON_RESIZE:Cr,ON_APP_ENTER_FOREGROUND:Or,ON_APP_ENTER_BACKGROUND:yi,ON_HIDE:Q,ON_PAGE_SCROLL:Ve,ON_REACH_BOTTOM:bt,SCHEME_RE:Nt,DATA_RE:bn,cacheStringFunction:Ji,parseQuery:Nn,callOptions:Vo,ON_UNHANDLE_REJECTION:An,ON_PAGE_NOT_FOUND:ln,PRIMARY_COLOR:P,removeLeadingSlash:Zi,getLen:lo,TABBAR_HEIGHT:y,NAVBAR_HEIGHT:k,ON_THEME_CHANGE:$n,ON_KEYBOARD_HEIGHT_CHANGE:Sn,BACKGROUND_COLOR:$e,ON_NAVIGATION_BAR_BUTTON_TAP:Hr,stringifyQuery:Vi,debounce:rr,ON_PULL_DOWN_REFRESH:Xt,ON_NAVIGATION_BAR_SEARCH_INPUT_CHANGED:Ei,ON_NAVIGATION_BAR_SEARCH_INPUT_CONFIRMED:zn,ON_NAVIGATION_BAR_SEARCH_INPUT_CLICKED:Zr,ON_NAVIGATION_BAR_SEARCH_INPUT_FOCUS_CHANGED:Xr,ON_BACK_PRESS:ui,UniNode:Ee,NODE_TYPE_PAGE:ei,ACTION_TYPE_PAGE_CREATE:nr,ACTION_TYPE_PAGE_CREATED:Ci,ACTION_TYPE_PAGE_SCROLL:Jn,ACTION_TYPE_INSERT:go,ACTION_TYPE_CREATE:Ui,ACTION_TYPE_REMOVE:Oi,ACTION_TYPE_ADD_EVENT:no,ACTION_TYPE_ADD_WXS_EVENT:Er,ACTION_TYPE_REMOVE_EVENT:Hi,ACTION_TYPE_SET_ATTRIBUTE:to,ACTION_TYPE_REMOVE_ATTRIBUTE:Uo,ACTION_TYPE_SET_TEXT:fr,ON_READY:En,ON_UNLOAD:fn,EventChannel:Ti,ON_REACH_BOTTOM_DISTANCE:I,parseUrl:mr,onCreateVueApp:zi,ON_TAB_ITEM_TAP:st,ON_LAUNCH:on,ACTION_TYPE_EVENT:Pr,createUniEvent:Gr,ON_WXS_INVOKE_CALL_METHOD:Ki,WEB_INVOKE_APPSERVICE:x,isRootHook:ti,isRootImmediateHook:ji,UniInputElement:Yt,UniTextAreaElement:eo,UniElement:ho,UniTextNode:qt,UniCommentNode:qn,forcePatchProp:Kn,resolveOwnerEl:wi,ATTR_V_OWNER_ID:Br,ATTR_V_RENDERJS:Mr,JSON_PROTOCOL:Hn};return le}(p);return s}var LP=1;function ip(){return(LP++).toString()}var Ku=p=>p&&JSON.parse(JSON.stringify(p))||p;function uc(p){let s=ts(p);return s.substring(8,s.length-1)}function Ju(p){if(!Vn(btoa))return"";let s=Array.prototype.map.call(new Uint8Array(p),m=>String.fromCharCode(m)).join("");return btoa(s)}function fc(p){if(!p||typeof p!="object")return!0;for(let s in p)if(js(p,s))return!1;return!0}var Xc=["off","error","warn","info","log","debug"],Qc={};function op(){Xc.forEach(p=>{let s=Xc.indexOf(p);Qc[p]={},Xc.forEach(m=>{Xc.indexOf(m)<=s&&(Qc[p][m]=!0)})})}function Gn(p){let s=global.WXEnvironment&&global.WXEnvironment.logLevel||"log";return Qc[s]&&Qc[s][p]}function Li(p){global.nativeLog("wxInteractionAnalyzer: [jsfm]"+p,"__DEBUG")}function ap(p,s,m){return`${s}@${m}#${p}`}var eu=class{constructor(s){this.instanceId=String(s),this.lastCallbackId=0,this.callbacks={},this.hooks={}}add(s){return this.lastCallbackId++,this.callbacks[this.lastCallbackId]=s,this.lastCallbackId}remove(s){let m=this.callbacks[s];return delete this.callbacks[s],m}registerHook(s,m,A,k){let y=ap(s,m,A);this.hooks[y]&&console.warn(`[JS Framework] Override an existing component hook "${y}".`),this.hooks[y]=k}triggerHook(s,m,A,k){let y=ap(s,m,A),I=this.hooks[y];if(!Vn(I))return console.error(`[JS Framework] Invalid hook function type (${typeof I}) on "${y}".`),null;let f=null;try{f=I.apply(null,k||[])}catch(P){throw console.error(`[JS Framework] Failed to execute the hook function on "${y}".`),P}return f}consume(s,m,A){let k=this.callbacks[s];if((typeof A=="undefined"||A===!1)&&delete this.callbacks[s],Vn(k))try{return k.call(null,m,A)}catch(y){throw console.error(`[JS Framework] Failed to execute the callback function:
 ${y.toString()}`),y}return new Error(`invalid callback id "${s}"`)}close(){this.callbacks={},this.hooks={}}};var tu={};function sp(p,s){p&&(tu[p]=s)}function ns(p){return tu[p]}function lp(p){delete tu[p]}function xr(p){if(p){let s=tu[p];if(s&&s.taskCenter)return s.taskCenter}return null}function DP(p){p.calcClassList&&p.calcClassList()}function Zu(p,s,m){let{documentElement:A}=p;if(A.pureChildren.length>0||s.parentNode)return;let k=A.children,y=m?k.indexOf(m):-1;y<0?k.push(s):k.splice(y,0,s),s.nodeType===1?(s.role==="body"?(s.docId=p.id,s.ownerDocument=p,s.parentNode=A,zs(s,A)):(s.children.forEach(I=>{I.parentNode=s}),Xu(p,s),zs(s,A),delete p.nodeMap[s.nodeId]),A.pureChildren.push(s),FP(p,s)):(s.parentNode=A,p.nodeMap[s.ref]=s)}function FP(p,s){let m=s.toJSON();p&&p.taskCenter&&Vn(p.taskCenter.send)&&p.taskCenter.send("dom",{action:"createBody"},[m])}function Xu(p,s){s.role="body",s.depth=1,delete p.nodeMap[s.nodeId],s.ref="_root",p.nodeMap._root=s,p.body=s}function zs(p,s){p.parentNode=s,DP(p),s.docId&&(p.docId=s.docId,p.ownerDocument=s.ownerDocument,p.ownerDocument.nodeMap[p.nodeId]=p,p.depth=s.depth+1),p.children.forEach(m=>{zs(m,p)})}function Qu(p){for(;p;){if(p.nodeType===1)return p;p=p.nextSibling}}function ef(p){for(;p;){if(p.nodeType===1)return p;p=p.previousSibling}}function Ws(p,s,m,A=!1){m<0&&(m=0);let k=s[m-1],y=s[m];return s.splice(m,0,p),A&&(k&&(k.nextSibling=p),p.previousSibling=k,p.nextSibling=y,y&&(y.previousSibling=p)),m}function Gs(p,s,m,A=!1){let k=s.indexOf(p);if(k<0)return-1;if(A){let P=s[k-1],$e=s[k+1];P&&(P.nextSibling=$e),$e&&($e.previousSibling=P)}s.splice(k,1);let y=m;k<=m&&(y=m-1);let I=s[y-1],f=s[y];return s.splice(y,0,p),A&&(I&&(I.nextSibling=p),p.previousSibling=I,p.nextSibling=f,f&&(f.previousSibling=p)),k===y?-1:m}function tf(p,s,m=!1){let A=s.indexOf(p);if(!(A<0)){if(m){let k=s[A-1],y=s[A+1];k&&(k.nextSibling=y),y&&(y.previousSibling=k)}s.splice(A,1)}}var Ys=class{constructor(){this.depth=0;this.nodeId=ip(),this.ref=this.nodeId,this.children=[],this.pureChildren=[],this.parentNode=null,this.nextSibling=null,this.previousSibling=null}destroy(){let s=ns(this.docId);s&&(delete this.docId,delete s.nodeMap[this.nodeId]),this.children.forEach(m=>{m.destroy()})}};var cp={};function nf(p,s){if(!_i(s)||!s.length)return;class m extends qi{}s.forEach(A=>{m.prototype[A]=function(...k){let y=xr(this.docId);if(y)return y.send("component",{ref:this.ref,component:p,method:A},k)}}),cp[p]=m}function up(p){return cp[p]}function Ar(p,s,m,A,k){return{type:"decl",prop:p,value:s+(m?" !important":""),raws:A,source:k}}var VP="backgroundColor",$P="backgroundImage",UP=p=>{let{value:s,important:m,raws:A,source:k}=p;return/^#?\S+$/.test(s)||/^rgba?(.+)$/.test(s)?[Ar(VP,s,m,A,k)]:/^linear-gradient(.+)$/.test(s)?[Ar($P,s,m,A,k)]:[p]},HP="Width",jP="Style",zP="Color",dc=p=>{let{prop:s,value:m,important:A,raws:k,source:y}=p,I=m.replace(/\s*,\s*/g,",").split(/\s+/),f=[/^[\d\.]+\S*$/,/^(solid|dashed|dotted)$/,/\S+/].map(P=>{let $e=I.findIndex(Nt=>P.test(Nt));return $e<0?null:I.splice($e,1)[0]});return I.length?[p]:[Ar(s+HP,(f[0]||"0").trim(),A,k,y),Ar(s+jP,(f[1]||"solid").trim(),A,k,y),Ar(s+zP,(f[2]||"#000000").trim(),A,k,y)]},WP="borderTop",GP="borderRight",YP="borderBottom",qP="borderLeft",rf=p=>{let{prop:s,value:m,important:A,raws:k,source:y}=p,I=qu(s).split("-")[1];I=Zc(I);let f=m.replace(/\s*,\s*/g,",").split(/\s+/);switch(f.length){case 1:return[p];case 2:f.push(f[0],f[1]);break;case 3:f.push(f[1]);break}return[Ar(WP+I,f[0],A,k,y),Ar(GP+I,f[1],A,k,y),Ar(YP+I,f[2],A,k,y),Ar(qP+I,f[3],A,k,y)]},KP="borderTopLeftRadius",JP="borderTopRightRadius",ZP="borderBottomRightRadius",XP="borderBottomLeftRadius",QP=p=>{let{value:s,important:m,raws:A,source:k}=p,y=s.split(/\s+/);if(s.includes("/"))return[p];switch(y.length){case 1:return[p];case 2:y.push(y[0],y[1]);break;case 3:y.push(y[1]);break}return[Ar(KP,y[0],m,A,k),Ar(JP,y[1],m,A,k),Ar(ZP,y[2],m,A,k),Ar(XP,y[3],m,A,k)]},e1=rf,t1=rf,n1="flexDirection",r1="flexWrap",i1=p=>{let{value:s,important:m,raws:A,source:k}=p,y=s.split(/\s+/),I=[/^(column|column-reverse|row|row-reverse)$/,/^(nowrap|wrap|wrap-reverse)$/].map(f=>{let P=y.findIndex($e=>f.test($e));return P<0?null:y.splice(P,1)[0]});return y.length?[p]:[Ar(n1,I[0]||"column",m,A,k),Ar(r1,I[1]||"nowrap",m,A,k)]},o1="Top",a1="Right",s1="Bottom",l1="Left",fp=p=>s=>{let{value:m,important:A,raws:k,source:y}=s,I=m.split(/\s+/);switch(I.length){case 1:I.push(I[0],I[0],I[0]);break;case 2:I.push(I[0],I[1]);break;case 3:I.push(I[1]);break}return[Ar(p+o1,I[0],A,k,y),Ar(p+a1,I[1],A,k,y),Ar(p+s1,I[2],A,k,y),Ar(p+l1,I[3],A,k,y)]},c1=fp("margin"),u1=fp("padding"),f1="transitionProperty",d1="transitionDuration",h1="transitionTimingFunction",g1="transitionDelay",p1=p=>{let s=/^(\S*)?\s*(\d*\.?\d+(?:ms|s)?)?\s*(\S*)?\s*(\d*\.?\d+(?:ms|s)?)?$/,{value:m,important:A,raws:k,source:y}=p,I=[],f=m.match(s);return f&&(f[1]&&I.push(Ar(f1,f[1],A,k,y)),f[2]&&I.push(Ar(d1,f[2],A,k,y)),f[3]&&I.push(Ar(h1,f[3],A,k,y)),f[4]&&I.push(Ar(g1,f[4],A,k,y))),I},dp={transition:p1,margin:c1,padding:u1,border:dc,background:UP};Jr(dp,{borderTop:dc,borderRight:dc,borderBottom:dc,borderLeft:dc,borderStyle:e1,borderWidth:t1,borderColor:rf,borderRadius:QP,flexFlow:i1});var hp=Symbol("expanded"),gp={postcssPlugin:"nvue:expand",Declaration(p){if(p[hp])return;let s=dp[p.prop];if(s){let m=s(p);m.length===1&&m[0]===p||p.replaceWith(m)}p[hp]=!0}};var v1=gp.Declaration;function of(p,s){let m=Jr({replaceWith(k){A=k}},m1(p,s)),A=[m];return v1(m),A}function m1(p,s){let m=s+"";return m.includes("!important")?{prop:p,value:m.replace(/\s*!important/,""),important:!0}:{prop:p,value:m,important:!1}}var _1="view",b1=["click","longpress","touchstart","touchmove","touchend","panstart","panmove","panend","horizontalpan","verticalpan","swipe"];function af(p,s){let m=ns(p);m.nodeMap[s.nodeId]=s}var sf;function pp(p){sf||(sf=p)}var qi=class extends Ys{constructor(s=_1,m={},A){super();let k=up(s);if(k&&!A)return new k(s,m,!0);this.nodeType=1,this.type=s,this.attr=m.attr||{},this.style=m.style||{},this.classStyle=m.classStyle||{},this.classList=m.classList||[],this.styleSheet=m.styleSheet||{},this.event={}}appendChild(s){if(!(s.parentNode&&s.parentNode!==this)){if(s.parentNode){if(Gn("debug")&&Li(`[appendChild](${this.docId},${s.type},${s.ref}) Move <${s.type}> to ${this.children.length} of <${this.type}> (${this.ref}).`),Gs(s,this.children,this.children.length,!0),s.nodeType===1){let m=Gs(s,this.pureChildren,this.pureChildren.length),A=xr(this.docId);if(A&&m>=0)return A.send("dom",{action:"moveElement"},[s.ref,this.ref,m])}}else if(Gn("debug")&&Li(`[appendChild](${this.docId},${s.type},${s.ref}) Append <${s.type}> to <${this.type}> (${this.ref}).`),zs(s,this),Ws(s,this.children,this.children.length,!0),this.docId&&af(this.docId,s),s.nodeType===1){Ws(s,this.pureChildren,this.pureChildren.length);let m=xr(this.docId);if(m)return m.send("dom",{action:"addElement"},[this.ref,s.toJSON(),-1])}}}insertBefore(s,m){if(!(s.parentNode&&s.parentNode!==this)&&!(s===m||s.nextSibling&&s.nextSibling===m)){if(s.parentNode){if(Gs(s,this.children,this.children.indexOf(m),!0),s.nodeType===1){let A=Qu(m),k=Gs(s,this.pureChildren,A?this.pureChildren.indexOf(A):this.pureChildren.length),y=xr(this.docId);if(y&&k>=0)return y.send("dom",{action:"moveElement"},[s.ref,this.ref,k])}}else if(Gn("debug")&&Li(`[insertBefore](${this.docId},${s.type},${s.ref}) Insert <${s.type}> to <${this.type}> (${this.ref}), before (${m.ref}).`),zs(s,this),Ws(s,this.children,this.children.indexOf(m),!0),this.docId&&af(this.docId,s),s.nodeType===1){let A=Qu(m),k=Ws(s,this.pureChildren,A?this.pureChildren.indexOf(A):this.pureChildren.length),y=xr(this.docId);if(y)return y.send("dom",{action:"addElement"},[this.ref,s.toJSON(),k])}}}insertAfter(s,m){if(!(s.parentNode&&s.parentNode!==this)&&!(s===m||s.previousSibling&&s.previousSibling===m)){if(s.parentNode){if(Gs(s,this.children,this.children.indexOf(m)+1,!0),s.nodeType===1){let A=Gs(s,this.pureChildren,this.pureChildren.indexOf(ef(m))+1),k=xr(this.docId);if(k&&A>=0)return k.send("dom",{action:"moveElement"},[s.ref,this.ref,A])}}else if(Gn("debug")&&Li(`[insertAfter](${this.docId},${s.type},${s.ref}) Insert <${s.type}> to <${this.type}> (${this.ref}), after (${m.ref}).`),zs(s,this),Ws(s,this.children,this.children.indexOf(m)+1,!0),this.docId&&af(this.docId,s),s.nodeType===1){let A=Ws(s,this.pureChildren,this.pureChildren.indexOf(ef(m))+1),k=xr(this.docId);if(k)return k.send("dom",{action:"addElement"},[this.ref,s.toJSON(),A])}}}removeChild(s,m){if(s.parentNode&&(tf(s,this.children,!0),s.nodeType===1)){Gn("debug")&&Li(`[removeChild](${this.docId},${s.type},${s.ref}) Remove <${s.type}> from <${this.type}> (${this.ref}).`),tf(s,this.pureChildren);let A=xr(this.docId);A&&A.send("dom",{action:"removeElement"},[s.ref])}m||s.destroy()}clear(){let s=xr(this.docId);s&&this.pureChildren.forEach(m=>{s.send("dom",{action:"removeElement"},[m.ref])}),this.children.forEach(m=>{m.destroy()}),this.children.length=0,this.pureChildren.length=0}setAttr(s,m,A){if(this.attr[s]===m&&A!==!1)return;this.attr[s]=m;let k=xr(this.docId);!A&&k&&k.send("dom",{action:"updateAttrs"},[this.ref,{[s]:m}])}setAttrs(s,m){if(fc(s))return;let A={};for(let k in s)this.attr[k]!==s[k]&&(this.attr[k]=s[k],A[k]=s[k]);if(!fc(A)){let k=xr(this.docId);!m&&k&&k.send("dom",{action:"updateAttrs"},[this.ref,A])}}setStyle(s,m,A){of(s,m).forEach(({prop:k,value:y})=>{if(this.style[k]===y&&A!==!1)return;this.style[k]=y;let I=xr(this.docId);!A&&I&&I.send("dom",{action:"updateStyle"},[this.ref,{[k]:y}])})}setStyles(s,m){if(fc(s))return;let A={};for(let k in s)of(k,s[k]).forEach(({prop:y,value:I})=>{this.style[y]!==I&&(this.style[y]=I,A[y]=I)});if(!fc(A)){let k=xr(this.docId);!m&&k&&k.send("dom",{action:"updateStyle"},[this.ref,A])}}setClassStyle(s){for(let A in this.classStyle)this.classStyle[A]="";Jr(this.classStyle,s);let m=xr(this.docId);m&&m.send("dom",{action:"updateStyle"},[this.ref,this.toStyle()])}setClassList(s){s.length===this.classList.length&&s.filter(m=>!this.classList.includes(m)).length===0||(this.classList=s,this.parentNode&&this.calcClassList())}calcClassList(){this.setClassStyle(sf(this))}setStyleSheet(s){this.styleSheet=s}addEvent(s,m,A){if(this.event||(this.event={}),!this.event[s]){Gn("debug")&&Li(`[addEvent](${this.docId},${this.type},${this.ref}) Add "${s}" event on <${this.type}> (${this.ref}).`),this.event[s]={handler:m,params:A};let k=xr(this.docId);k&&k.send("dom",{action:"addEvent"},[this.ref,s])}}removeEvent(s){if(this.event&&this.event[s]){Gn("debug")&&Li(`[removeEvent](${this.docId},${this.type},${this.ref}) Remove "${s}" event on <${this.type}> (${this.ref}).`),delete this.event[s];let m=xr(this.docId);m&&m.send("dom",{action:"removeEvent"},[this.ref,s])}}fireEvent(s,m,A,k){let y=null,I=!1,f=this.event[s];if(f&&m){Gn("debug")&&Li(`[fireEvent](${this.docId},${this.type},${this.ref}) Fire "${s}" event on <${this.type}> (${this.ref}).`);let P=f.handler;m.stopPropagation=()=>{I=!0},m.preventDefault=()=>{};try{k&&k.params?y=P.call(this,...k.params,m):y=P.call(this,m)}catch($e){throw console.error(`[JS Framework] Failed to invoke the event handler of "${s}" on ${this.type} (${this.ref}):
 ${$e.toString()}`),$e}}return!I&&A&&b1.indexOf(s)!==-1&&this.parentNode&&this.parentNode.fireEvent&&(m.currentTarget=this.parentNode,this.parentNode.fireEvent(s,m,A)),y}toStyle(){return Jr({},this.classStyle,this.style)}toJSON(s=!1){let m={ref:this.ref.toString(),type:this.type,attr:this.attr,style:this.toStyle()},A=[];for(let k in this.event){let{params:y}=this.event[k];y?A.push({type:k,params:y}):A.push(k)}return A.length&&(m.event=A),!s&&this.pureChildren.length&&(m.children=this.pureChildren.map(k=>k.toJSON())),m}toString(){return"<"+this.type+" attr="+JSON.stringify(this.attr)+" style="+JSON.stringify(this.toStyle())+">"+this.pureChildren.map(s=>s.toString()).join("")+"</"+this.type+">"}};function vp(p){let s=p&&p.__v_raw;return s?vp(s):p}function mp(p){let s=uc(p);switch(s){case"Undefined":case"Null":return"";case"RegExp":return p.toString();case"Date":return p.toISOString();case"Number":case"String":case"Boolean":case"Array":case"Object":return vp(p);case"ArrayBuffer":return{"@type":"binary",dataType:s,base64:Ju(p)};case"Int8Array":case"Uint8Array":case"Uint8ClampedArray":case"Int16Array":case"Uint16Array":case"Int32Array":case"Uint32Array":case"Float32Array":case"Float64Array":return{"@type":"binary",dataType:s,base64:Ju(p.buffer)};default:return JSON.stringify(p)}}var nu=function(){},$l=class{constructor(s,m){Object.defineProperty(this,"instanceId",{enumerable:!0,value:String(s)}),Object.defineProperty(this,"callbackManager",{enumerable:!0,value:new eu(s)}),nu=m||function(){}}callback(s,m,A){return this.callbackManager.consume(s,m,A)}registerHook(s,m,A,k){return this.callbackManager.registerHook(s,m,A,k)}triggerHook(s,m,A,k){return this.callbackManager.triggerHook(s,m,A,k)}updateData(s,m,A){this.send("module",{module:"dom",method:"updateComponentData"},[s,m,A])}destroyCallback(){return this.callbackManager.close()}normalize(s,m=!1){let A=uc(s);if(s&&s instanceof qi)return s.ref;if(s&&s.$el instanceof qi)return s.$el.ref;if(A==="Function")return this.callbackManager.add(s).toString();if(m){if(A==="Object"){let k={};for(let y in s)k[y]=this.normalize(s[y],!0);return k}if(A==="Array")return s.map(k=>this.normalize(k,!0))}return s&&s.ref&&s["[[VirtualElement]]"]?s.ref:mp(s)}send(s,m,A,k){let{action:y,component:I,ref:f,module:P,method:$e}=m;switch(A=A.map(Nt=>this.normalize(Nt,s!=="module")),uc(k)==="Object"&&(k=this.normalize(k,!0)),s){case"dom":return Gn("debug")&&Li(`[task](${this.instanceId},${s},${y}) ${JSON.stringify(A)}`),this[y](this.instanceId,A);case"component":return this.componentHandler(this.instanceId,f,$e,A,Jr({component:I},k));default:return Gn("debug")&&Li(`[task](${this.instanceId},${P},${$e}) ${JSON.stringify(A)}`),this.moduleHandler(this.instanceId,P,$e,A,k)}}callDOM(s,m){return this[s](this.instanceId,m)}callComponent(s,m,A,k){return this.componentHandler(this.instanceId,s,m,A,k)}callModule(s,m,A,k){return this.moduleHandler(this.instanceId,s,m,A,k)}};function _p(){let p={createFinish:global.callCreateFinish,updateFinish:global.callUpdateFinish,refreshFinish:global.callRefreshFinish,createBody:global.callCreateBody,addElement:global.callAddElement,removeElement:global.callRemoveElement,moveElement:global.callMoveElement,updateAttrs:global.callUpdateAttrs,updateStyle:global.callUpdateStyle,addEvent:global.callAddEvent,removeEvent:global.callRemoveEvent,__updateComponentData:global.__updateComponentData},s=$l.prototype;for(let m in p){let A=p[m];s[m]=A?(k,y)=>A(k,...y):(k,y)=>nu(k,[{module:"dom",method:m,args:y}],"-1")}s.componentHandler=global.callNativeComponent||((m,A,k,y,I)=>nu(m,[{component:I.component,ref:A,method:k,args:y}])),s.moduleHandler=global.callNativeModule||((m,A,k,y)=>nu(m,[{module:A,method:k,args:y}]))}function E1(p,s,m,A,k,y){let I=p.getRef(s);if(I)return p.fireEvent(I,m,A,k,y);if(A)return A._nodeId=s,p.fireEvent(p.getRef("_documentElement"),m,A,k,y)}function y1(p,s,m,A){return p.taskCenter.callback(s,m,A)}function w1(p,s,m,A,k){if(!p||!p.taskCenter)return console.error(`[JS Framework] Can't find "document" or "taskCenter".`),null;let y=null;try{y=p.taskCenter.triggerHook(s,m,A,k)}catch(I){throw console.error(`[JS Framework] Failed to trigger the "${m}@${A}" hook on ${s}.`),I}return y}function lf(p,s){let m=ns(p);if(!m)return new Error(`[JS Framework] Failed to receiveTasks, instance (${p}) is not available.`);if(_i(s))return s.map(A=>{switch(A.method){case"callback":return y1(m,...A.args);case"fireEventSync":case"fireEvent":return E1(m,...A.args);case"componentHook":return w1(m,...A.args)}})}var bs={};function bp(p={}){for(let s in p)js(bs,s)||(bs[s]={}),!!_i(p[s])&&p[s].forEach(m=>{bi(m)?bs[s][m]=!0:Vl(m)&&bi(m.name)&&(bs[s][m.name]=m.args||[])})}function ru(p,s){return bi(s)?!!(bs[p]&&bs[p][s]):!!bs[p]}function Ep(p){return bs[p]}var cf={};function yp(p){!_i(p)||p.forEach(s=>{!s||(bi(s)?cf[s]=!0:Vl(s)&&bi(s.type)&&(cf[s.type]=s,nf(s.type,s.methods)))})}function uf(p){return!!cf[p]}var Es=[];function iu(p,s){ff(p)?console.warn(`Service "${p}" has been registered already!`):(s=Jr({},s),Es.push({name:p,options:s}))}function ou(p){Es.some((s,m)=>{if(s.name===p)return Es.splice(m,1),!0})}function ff(p){return S1(p)>=0}function S1(p){return Es.map(s=>s.name).indexOf(p)}function A1(p){return s=>{let m=qc(p,s),{createApp:A}=m;m.createVueApp=m.createApp=(k,y)=>A(k,y).use(C1,s),s.Vue=m}}var C1={install(p,s){O1(p,s),lc(s).initApp(p)}};function O1(p,s){let{mount:m}=p;p.mount=A=>{let k=m(A);return A==="#app"&&s.__registerApp(k),k}}function T1(p){let{UniShared:s,VueShared:m,VueReactivity:A}=p;var k=function(y,I,f,P){"use strict";var $e=[];function Nt(i){P.pauseTracking();for(var l=$e.length?$e[$e.length-1].component:null,d=l&&l.appContext.config.warnHandler,h=bn(),w=arguments.length,S=new Array(w>1?w-1:0),N=1;N<w;N++)S[N-1]=arguments[N];if(d)ct(d,l,11,[i+S.join(""),l&&l.proxy,h.map(M=>{var{vnode:X}=M;return"at <".concat(Oa(l,X.type),">")}).join(`
`),h]);else{var D=["[Vue warn]: ".concat(i),...S];h.length&&D.push(`
`,...x(h)),console.warn(...D)}P.resetTracking()}function bn(){var i=$e[$e.length-1];if(!i)return[];for(var l=[];i;){var d=l[0];d&&d.vnode===i?d.recurseCount++:l.push({vnode:i,recurseCount:0});var h=i.component&&i.component.parent;i=h&&h.vnode}return l}function x(i){var l=[];return i.forEach((d,h)=>{l.push(...h===0?[]:[`
`],...Lt(d))}),l}function Lt(i){var{vnode:l,recurseCount:d}=i,h=d>0?"... (".concat(d," recursive calls)"):"",w=l.component?l.component.parent==null:!1,S=" at <".concat(Oa(l.component,l.type,w)),N=">"+h;return l.props?[S,...Hn(l.props),N]:[S+N]}function Hn(i){var l=[],d=Object.keys(i);return d.slice(0,3).forEach(h=>{l.push(...Pn(h,i[h]))}),d.length>3&&l.push(" ..."),l}function Pn(i,l,d){return f.isString(l)?(l=JSON.stringify(l),d?l:["".concat(i,"=").concat(l)]):typeof l=="number"||typeof l=="boolean"||l==null?d?l:["".concat(i,"=").concat(l)]:P.isRef(l)?(l=Pn(i,P.toRaw(l.value),!0),d?l:["".concat(i,"=Ref<"),l,">"]):f.isFunction(l)?["".concat(i,"=fn").concat(l.name?"<".concat(l.name,">"):"")]:(l=P.toRaw(l),d?l:["".concat(i,"="),l])}function ct(i,l,d,h){var w;try{w=h?i(...h):i()}catch(S){Q(S,l,d)}return w}function ne(i,l,d,h){if(f.isFunction(i)){var w=ct(i,l,d,h);return w&&f.isPromise(w)&&w.catch(D=>{Q(D,l,d)}),w}for(var S=[],N=0;N<i.length;N++)S.push(ne(i[N],l,d,h));return S}function Q(i,l,d){if(l&&l.vnode,l){for(var h=l.parent,w=l.proxy,S=d;h;){var N=h.ec;if(N){for(var D=0;D<N.length;D++)if(N[D](i,w,S)===!1)return}h=h.parent}var M=l.appContext.config.errorHandler;if(M){ct(M,null,10,[i,w,S]);return}}on(i)}function on(i,l,d){console.error(i)}var wn=!1,$n=!1,Sn=[],ln=0,An=[],jn=null,En=0,fn=[],Bn=null,Cn=0,Cr={then(i){setTimeout(()=>i(),0)}},ui=y.platform==="iOS",Ve=ui?Cr:Promise.resolve(),st=null,bt=null;function Xt(i){var l=st||Ve;return i?l.then(this?i.bind(this):i):l}function hn(i){for(var l=ln+1,d=Sn.length;l<d;){var h=l+d>>>1,w=yi(Sn[h]);w<i?l=h+1:d=h}return l}function en(i){(!Sn.length||!Sn.includes(i,wn&&i.allowRecurse?ln+1:ln))&&i!==bt&&(i.id==null?Sn.push(i):Sn.splice(hn(i.id),0,i),cr())}function cr(){!wn&&!$n&&($n=!0,st=Ve.then(Ki))}function Hr(i){var l=Sn.indexOf(i);l>ln&&Sn.splice(l,1)}function Zr(i,l,d,h){f.isArray(i)?d.push(...i):(!l||!l.includes(i,i.allowRecurse?h+1:h))&&d.push(i),cr()}function Ei(i){Zr(i,jn,An,En)}function zn(i){Zr(i,Bn,fn,Cn)}function Xr(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;if(An.length){for(bt=l,jn=[...new Set(An)],An.length=0,En=0;En<jn.length;En++)jn[En]();jn=null,En=0,bt=null,Xr(i,l)}}function Or(i){if(fn.length){var l=[...new Set(fn)];if(fn.length=0,Bn){Bn.push(...l);return}for(Bn=l,Bn.sort((d,h)=>yi(d)-yi(h)),Cn=0;Cn<Bn.length;Cn++)Bn[Cn]();Bn=null,Cn=0}}var yi=i=>i.id==null?1/0:i.id;function Ki(i){$n=!1,wn=!0,Xr(i),Sn.sort((h,w)=>yi(h)-yi(w));var l=f.NOOP;try{for(ln=0;ln<Sn.length;ln++){var d=Sn[ln];d&&d.active!==!1&&ct(d,null,14)}}finally{ln=0,Sn.length=0,Or(),wn=!1,st=null,(Sn.length||An.length||fn.length)&&Ki(i)}}y.devtools=void 0;var Di=[];function jr(i,l){var d,h;if(y.devtools=i,y.devtools)y.devtools.enabled=!0,Di.forEach(S=>{var{event:N,args:D}=S;return y.devtools.emit(N,...D)}),Di=[];else if(typeof window!="undefined"&&window.HTMLElement&&!((h=(d=window.navigator)===null||d===void 0?void 0:d.userAgent)===null||h===void 0?void 0:h.includes("jsdom"))){var w=l.__VUE_DEVTOOLS_HOOK_REPLAY__=l.__VUE_DEVTOOLS_HOOK_REPLAY__||[];w.push(S=>{jr(S,l)}),setTimeout(()=>{y.devtools||(l.__VUE_DEVTOOLS_HOOK_REPLAY__=null,Di=[])},3e3)}else Di=[]}function So(i,l){if(!i.isUnmounted){for(var d=i.vnode.props||f.EMPTY_OBJ,h=arguments.length,w=new Array(h>2?h-2:0),S=2;S<h;S++)w[S-2]=arguments[S];var N=w,D=l.startsWith("update:"),M=D&&l.slice(7);if(M&&M in d){var X="".concat(M==="modelValue"?"model":M,"Modifiers"),{number:fe,trim:Be}=d[X]||f.EMPTY_OBJ;Be?N=w.map(nt=>nt.trim()):fe&&(N=w.map(f.toNumber))}var re,de=d[re=f.toHandlerKey(l)]||d[re=f.toHandlerKey(f.camelize(l))];!de&&D&&(de=d[re=f.toHandlerKey(f.hyphenate(l))]),de&&ne(de,i,6,N);var ke=d[re+"Once"];if(ke){if(!i.emitted)i.emitted={};else if(i.emitted[re])return;i.emitted[re]=!0,ne(ke,i,6,N)}}}function wi(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,h=l.emitsCache,w=h.get(i);if(w!==void 0)return w;var S=i.emits,N={},D=!1;if(!f.isFunction(i)){var M=X=>{var fe=wi(X,l,!0);fe&&(D=!0,f.extend(N,fe))};!d&&l.mixins.length&&l.mixins.forEach(M),i.extends&&M(i.extends),i.mixins&&i.mixins.forEach(M)}return!S&&!D?(h.set(i,null),null):(f.isArray(S)?S.forEach(X=>N[X]=null):f.extend(N,S),h.set(i,N),N)}function On(i,l){return!i||!f.isOn(l)?!1:(l=l.slice(2).replace(/Once$/,""),f.hasOwn(i,l[0].toLowerCase()+l.slice(1))||f.hasOwn(i,f.hyphenate(l))||f.hasOwn(i,l))}var Mn=null,Tr=null;function Ji(i){var l=Mn;return Mn=i,Tr=i&&i.type.__scopeId||null,l}function lo(i){Tr=i}function ur(){Tr=null}var Fi=i=>Zi;function Zi(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Mn;if(!l||i._n)return i;var d=function(){d._d&&Kt(-1);var h=Ji(l),w=i(...arguments);return Ji(h),d._d&&Kt(1),w};return d._n=!0,d._c=!0,d._d=!0,d}function In(){}function zr(i){var{type:l,vnode:d,proxy:h,withProxy:w,props:S,propsOptions:[N],slots:D,attrs:M,emit:X,render:fe,renderCache:Be,data:re,setupState:de,ctx:ke,inheritAttrs:nt}=i,Oe,we,Te=Ji(i);try{if(d.shapeFlag&4){var Se=w||h;Oe=Xn(fe.call(Se,Se,Be,S,de,re,ke)),we=M}else{var qe=l;Oe=Xn(qe.length>1?qe(S,{attrs:M,slots:D,emit:X}):qe(S,null)),we=l.props?M:Ao(M)}}catch(Xe){xt.length=0,Q(Xe,i,1),Oe=Ut(ze)}var He=Oe;if(we&&nt!==!1){var rt=Object.keys(we),{shapeFlag:De}=He;rt.length&&De&(1|6)&&(N&&rt.some(f.isModelListener)&&(we=Vi(we,N)),He=ai(He,we))}return d.dirs&&(He.dirs=He.dirs?He.dirs.concat(d.dirs):d.dirs),d.transition&&(He.transition=d.transition),Oe=He,Ji(Te),Oe}function Vo(i){for(var l,d=0;d<i.length;d++){var h=i[d];if(Jt(h)){if(h.type!==ze||h.children==="v-if"){if(l)return;l=h}}else return}return l}var Ao=i=>{var l;for(var d in i)(d==="class"||d==="style"||f.isOn(d))&&((l||(l={}))[d]=i[d]);return l},Vi=(i,l)=>{var d={};for(var h in i)(!f.isModelListener(h)||!(h.slice(9)in l))&&(d[h]=i[h]);return d};function vr(i,l,d){var{props:h,children:w,component:S}=i,{props:N,children:D,patchFlag:M}=l,X=S.emitsOptions;if(l.dirs||l.transition)return!0;if(d&&M>=0){if(M&1024)return!0;if(M&16)return h?Qr(h,N,X):!!N;if(M&8)for(var fe=l.dynamicProps,Be=0;Be<fe.length;Be++){var re=fe[Be];if(N[re]!==h[re]&&!On(X,re))return!0}}else return(w||D)&&(!D||!D.$stable)?!0:h===N?!1:h?N?Qr(h,N,X):!0:!!N;return!1}function Qr(i,l,d){var h=Object.keys(l);if(h.length!==Object.keys(i).length)return!0;for(var w=0;w<h.length;w++){var S=h[w];if(l[S]!==i[S]&&!On(d,S))return!0}return!1}function Nn(i,l){for(var{vnode:d,parent:h}=i;h&&h.subTree===d;)(d=h.vnode).el=l,h=h.parent}var mr=i=>i.__isSuspense,co={name:"Suspense",__isSuspense:!0,process(i,l,d,h,w,S,N,D,M,X){i==null?Co(l,d,h,w,S,N,D,M,X):Gr(i,l,d,h,w,N,D,M,X)},hydrate:uo,create:Ai,normalize:$o},Si=co;function Wr(i,l){var d=i.props&&i.props[l];f.isFunction(d)&&d()}function Co(i,l,d,h,w,S,N,D,M){var{p:X,o:{createElement:fe}}=M,Be=fe("div",l),re=i.suspense=Ai(i,w,h,l,Be,d,S,N,D,M);X(null,re.pendingBranch=i.ssContent,Be,null,h,re,S,N),re.deps>0?(Wr(i,"onPending"),Wr(i,"onFallback"),X(null,i.ssFallback,l,d,h,null,S,N),ei(re,i.ssFallback)):re.resolve()}function Gr(i,l,d,h,w,S,N,D,M){var{p:X,um:fe,o:{createElement:Be}}=M,re=l.suspense=i.suspense;re.vnode=l,l.el=i.el;var de=l.ssContent,ke=l.ssFallback,{activeBranch:nt,pendingBranch:Oe,isInFallback:we,isHydrating:Te}=re;if(Oe)re.pendingBranch=de,an(de,Oe)?(X(Oe,de,re.hiddenContainer,null,w,re,S,N,D),re.deps<=0?re.resolve():we&&(X(nt,ke,d,h,w,null,S,N,D),ei(re,ke))):(re.pendingId++,Te?(re.isHydrating=!1,re.activeBranch=Oe):fe(Oe,w,re),re.deps=0,re.effects.length=0,re.hiddenContainer=Be("div",d),we?(X(null,de,re.hiddenContainer,null,w,re,S,N,D),re.deps<=0?re.resolve():(X(nt,ke,d,h,w,null,S,N,D),ei(re,ke))):nt&&an(de,nt)?(X(nt,de,d,h,w,re,S,N,D),re.resolve(!0)):(X(null,de,re.hiddenContainer,null,w,re,S,N,D),re.deps<=0&&re.resolve()));else if(nt&&an(de,nt))X(nt,de,d,h,w,re,S,N,D),ei(re,de);else if(Wr(l,"onPending"),re.pendingBranch=de,re.pendingId++,X(null,de,re.hiddenContainer,null,w,re,S,N,D),re.deps<=0)re.resolve();else{var{timeout:Se,pendingId:qe}=re;Se>0?setTimeout(()=>{re.pendingId===qe&&re.fallback(ke)},Se):Se===0&&re.fallback(ke)}}function Ai(i,l,d,h,w,S,N,D,M,X){var fe=arguments.length>10&&arguments[10]!==void 0?arguments[10]:!1,{p:Be,m:re,um:de,n:ke,o:{parentNode:nt,remove:Oe}}=X,we=f.toNumber(i.props&&i.props.timeout),Te={vnode:i,parent:l,parentComponent:d,isSVG:N,container:h,hiddenContainer:w,anchor:S,deps:0,pendingId:0,timeout:typeof we=="number"?we:-1,activeBranch:null,pendingBranch:null,isInFallback:!0,isHydrating:fe,isUnmounted:!1,effects:[],resolve(){var Se=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1,{vnode:qe,activeBranch:He,pendingBranch:rt,pendingId:De,effects:Xe,parentComponent:Ct,container:Tt}=Te;if(Te.isHydrating)Te.isHydrating=!1;else if(!Se){var Dt=He&&rt.transition&&rt.transition.mode==="out-in";Dt&&(He.transition.afterLeave=()=>{De===Te.pendingId&&re(rt,Tt,Pt,0)});var{anchor:Pt}=Te;He&&(Pt=ke(He),de(He,Ct,Te,!0)),Dt||re(rt,Tt,Pt,0)}ei(Te,rt),Te.pendingBranch=null,Te.isInFallback=!1;for(var pt=Te.parent,H=!1;pt;){if(pt.pendingBranch){pt.effects.push(...Xe),H=!0;break}pt=pt.parent}H||zn(Xe),Te.effects=[],Wr(qe,"onResolve")},fallback(Se){if(!!Te.pendingBranch){var{vnode:qe,activeBranch:He,parentComponent:rt,container:De,isSVG:Xe}=Te;Wr(qe,"onFallback");var Ct=ke(He),Tt=()=>{!Te.isInFallback||(Be(null,Se,De,Ct,rt,null,Xe,D,M),ei(Te,Se))},Dt=Se.transition&&Se.transition.mode==="out-in";Dt&&(He.transition.afterLeave=Tt),Te.isInFallback=!0,de(He,rt,null,!0),Dt||Tt()}},move(Se,qe,He){Te.activeBranch&&re(Te.activeBranch,Se,qe,He),Te.container=Se},next(){return Te.activeBranch&&ke(Te.activeBranch)},registerDep(Se,qe){var He=!!Te.pendingBranch;He&&Te.deps++;var rt=Se.vnode.el;Se.asyncDep.catch(De=>{Q(De,Se,0)}).then(De=>{if(!(Se.isUnmounted||Te.isUnmounted||Te.pendingId!==Se.suspenseId)){Se.asyncResolved=!0;var{vnode:Xe}=Se;Ko(Se,De,!1),rt&&(Xe.el=rt);var Ct=!rt&&Se.subTree.el;qe(Se,Xe,nt(rt||Se.subTree.el),rt?null:ke(Se.subTree),Te,N,M),Ct&&Oe(Ct),Nn(Se,Xe.el),He&&--Te.deps===0&&Te.resolve()}})},unmount(Se,qe){Te.isUnmounted=!0,Te.activeBranch&&de(Te.activeBranch,d,Se,qe),Te.pendingBranch&&de(Te.pendingBranch,d,Se,qe)}};return Te}function uo(i,l,d,h,w,S,N,D,M){var X=l.suspense=Ai(l,h,d,i.parentNode,document.createElement("div"),null,w,S,N,D,!0),fe=M(i,X.pendingBranch=l.ssContent,d,X,S,N);return X.deps===0&&X.resolve(),fe}function $o(i){var{shapeFlag:l,children:d}=i,h=l&32;i.ssContent=Xi(h?d.default:d),i.ssFallback=h?Xi(d.fallback):Ut(ze)}function Xi(i){var l;if(f.isFunction(i)){var d=tn&&i._c;d&&(i._d=!1,lt()),i=i(),d&&(i._d=!0,l=ot,wt())}if(f.isArray(i)){var h=Vo(i);i=h}return i=Xn(i),l&&!i.dynamicChildren&&(i.dynamicChildren=l.filter(w=>w!==i)),i}function fi(i,l){l&&l.pendingBranch?f.isArray(i)?l.effects.push(...i):l.effects.push(i):zn(i)}function ei(i,l){i.activeBranch=l;var{vnode:d,parentComponent:h}=i,w=d.el=l.el;h&&h.subTree===d&&(h.vnode.el=w,Nn(h,w))}function di(i,l){if(dn){var d=dn.provides,h=dn.parent&&dn.parent.provides;h===d&&(d=dn.provides=Object.create(h)),d[i]=l,dn.type.mpType==="app"&&dn.appContext.app.provide(i,l)}}function _r(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,h=dn||Mn;if(h){var w=h.parent==null?h.vnode.appContext&&h.vnode.appContext.provides:h.parent.provides;if(w&&i in w)return w[i];if(arguments.length>1)return d&&f.isFunction(l)?l.call(h.proxy):l}}function Yn(i,l){return hi(i,null,l)}function $i(i,l){return hi(i,null,{flush:"post"})}function Qi(i,l){return hi(i,null,{flush:"sync"})}var Ft={};function Ee(i,l,d){return hi(i,l,d)}function hi(i,l){var{immediate:d,deep:h,flush:w,onTrack:S,onTrigger:N}=arguments.length>2&&arguments[2]!==void 0?arguments[2]:f.EMPTY_OBJ,D=dn,M,X=!1,fe=!1;if(P.isRef(i)?(M=()=>i.value,X=P.isShallow(i)):P.isReactive(i)?(M=()=>i,h=!0):f.isArray(i)?(fe=!0,X=i.some(P.isReactive),M=()=>i.map(Te=>{if(P.isRef(Te))return Te.value;if(P.isReactive(Te))return Mr(Te);if(f.isFunction(Te))return ct(Te,D,2)})):f.isFunction(i)?l?M=()=>ct(i,D,2):M=()=>{if(!(D&&D.isUnmounted))return re&&re(),ne(i,D,3,[de])}:M=f.NOOP,l&&h){var Be=M;M=()=>Mr(Be())}var re,de=Te=>{re=we.onStop=()=>{ct(Te,D,4)}};if(y.isInSSRComponentSetup)return de=f.NOOP,l?d&&ne(l,D,3,[M(),fe?[]:void 0,de]):M(),f.NOOP;var ke=fe?[]:Ft,nt=()=>{if(!!we.active)if(l){var Te=we.run();(h||X||(fe?Te.some((Se,qe)=>f.hasChanged(Se,ke[qe])):f.hasChanged(Te,ke)))&&(re&&re(),ne(l,D,3,[Te,ke===Ft?void 0:ke,de]),ke=Te)}else we.run()};nt.allowRecurse=!!l;var Oe;w==="sync"?Oe=nt:w==="post"?Oe=()=>or(nt,D&&D.suspense):Oe=()=>{!D||D.isMounted?Ei(nt):nt()};var we=new P.ReactiveEffect(M,Oe);return l?d?nt():ke=we.run():w==="post"?or(we.run.bind(we),D&&D.suspense):we.run(),()=>{we.stop(),D&&D.scope&&f.remove(D.scope.effects,we)}}function fo(i,l,d){var h=this.proxy,w=f.isString(i)?i.includes(".")?Br(h,i):()=>h[i]:i.bind(h,h),S;f.isFunction(l)?S=l:(S=l.handler,d=l);var N=dn;Sr(this);var D=hi(w,S.bind(h),d);return N?Sr(N):pi(),D}function Br(i,l){var d=l.split(".");return()=>{for(var h=i,w=0;w<d.length&&h;w++)h=h[d[w]];return h}}function Mr(i,l){if(!f.isObject(i)||i.__v_skip||(l=l||new Set,l.has(i)))return i;if(l.add(i),P.isRef(i))Mr(i.value,l);else if(f.isArray(i))for(var d=0;d<i.length;d++)Mr(i[d],l);else if(f.isSet(i)||f.isMap(i))i.forEach(w=>{Mr(w,l)});else if(f.isPlainObject(i))for(var h in i)Mr(i[h],l);return i}function Tn(){var i={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return ti(()=>{i.isMounted=!0}),Pi(()=>{i.isUnmounting=!0}),i}var qn=[Function,Array],ho={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:qn,onEnter:qn,onAfterEnter:qn,onEnterCancelled:qn,onBeforeLeave:qn,onLeave:qn,onAfterLeave:qn,onLeaveCancelled:qn,onBeforeAppear:qn,onAppear:qn,onAfterAppear:qn,onAppearCancelled:qn},setup(i,l){var{slots:d}=l,h=Nr(),w=Tn(),S;return()=>{var N=d.default&&nr(d.default(),!0);if(!(!N||!N.length)){var D=N[0];if(N.length>1){for(var M of N)if(M.type!==ze){D=M;break}}var X=P.toRaw(i),{mode:fe}=X;if(w.isLeaving)return Lr(D);var Be=br(D);if(!Be)return Lr(D);var re=qt(Be,X,w,h);Kn(Be,re);var de=h.subTree,ke=de&&br(de),nt=!1,{getTransitionKey:Oe}=Be.type;if(Oe){var we=Oe();S===void 0?S=we:we!==S&&(S=we,nt=!0)}if(ke&&ke.type!==ze&&(!an(Be,ke)||nt)){var Te=qt(ke,X,w,h);if(Kn(ke,Te),fe==="out-in")return w.isLeaving=!0,Te.afterLeave=()=>{w.isLeaving=!1,h.update()},Lr(D);fe==="in-out"&&Be.type!==ze&&(Te.delayLeave=(Se,qe,He)=>{var rt=eo(w,ke);rt[String(ke.key)]=ke,Se._leaveCb=()=>{qe(),Se._leaveCb=void 0,delete re.delayedLeave},re.delayedLeave=He})}return D}}}},Yt=ho;function eo(i,l){var{leavingVNodes:d}=i,h=d.get(l.type);return h||(h=Object.create(null),d.set(l.type,h)),h}function qt(i,l,d,h){var{appear:w,mode:S,persisted:N=!1,onBeforeEnter:D,onEnter:M,onAfterEnter:X,onEnterCancelled:fe,onBeforeLeave:Be,onLeave:re,onAfterLeave:de,onLeaveCancelled:ke,onBeforeAppear:nt,onAppear:Oe,onAfterAppear:we,onAppearCancelled:Te}=l,Se=String(i.key),qe=eo(d,i),He=(De,Xe)=>{De&&ne(De,h,9,Xe)},rt={mode:S,persisted:N,beforeEnter(De){var Xe=D;if(!d.isMounted)if(w)Xe=nt||D;else return;De._leaveCb&&De._leaveCb(!0);var Ct=qe[Se];Ct&&an(i,Ct)&&Ct.el._leaveCb&&Ct.el._leaveCb(),He(Xe,[De])},enter(De){var Xe=M,Ct=X,Tt=fe;if(!d.isMounted)if(w)Xe=Oe||M,Ct=we||X,Tt=Te||fe;else return;var Dt=!1,Pt=De._enterCb=pt=>{Dt||(Dt=!0,pt?He(Tt,[De]):He(Ct,[De]),rt.delayedLeave&&rt.delayedLeave(),De._enterCb=void 0)};Xe?(Xe(De,Pt),Xe.length<=1&&Pt()):Pt()},leave(De,Xe){var Ct=String(i.key);if(De._enterCb&&De._enterCb(!0),d.isUnmounting)return Xe();He(Be,[De]);var Tt=!1,Dt=De._leaveCb=Pt=>{Tt||(Tt=!0,Xe(),Pt?He(ke,[De]):He(de,[De]),De._leaveCb=void 0,qe[Ct]===i&&delete qe[Ct])};qe[Ct]=i,re?(re(De,Dt),re.length<=1&&Dt()):Dt()},clone(De){return qt(De,l,d,h)}};return rt}function Lr(i){if(to(i))return i=ai(i),i.children=null,i}function br(i){return to(i)?i.children?i.children[0]:void 0:i}function Kn(i,l){i.shapeFlag&6&&i.component?Kn(i.component.subTree,l):i.shapeFlag&128?(i.ssContent.transition=l.clone(i.ssContent),i.ssFallback.transition=l.clone(i.ssFallback)):i.transition=l}function nr(i){for(var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1,d=arguments.length>2?arguments[2]:void 0,h=[],w=0,S=0;S<i.length;S++){var N=i[S],D=d==null?N.key:String(d)+String(N.key!=null?N.key:S);N.type===ae?(N.patchFlag&128&&w++,h=h.concat(nr(N.children,l,D))):(l||N.type!==ze)&&h.push(D!=null?ai(N,{key:D}):N)}if(w>1)for(var M=0;M<h.length;M++)h[M].patchFlag=-2;return h}function Ci(i){return f.isFunction(i)?{setup:i,name:i.name}:i}var Ui=i=>!!i.type.__asyncLoader;function go(i){f.isFunction(i)&&(i={loader:i});var{loader:l,loadingComponent:d,errorComponent:h,delay:w=200,timeout:S,suspensible:N=!0,onError:D}=i,M=null,X,fe=0,Be=()=>(fe++,M=null,re()),re=()=>{var de;return M||(de=M=l().catch(ke=>{if(ke=ke instanceof Error?ke:new Error(String(ke)),D)return new Promise((nt,Oe)=>{var we=()=>nt(Be()),Te=()=>Oe(ke);D(ke,we,Te,fe+1)});throw ke}).then(ke=>de!==M&&M?M:(ke&&(ke.__esModule||ke[Symbol.toStringTag]==="Module")&&(ke=ke.default),X=ke,ke)))};return Ci({name:"AsyncComponentWrapper",__asyncLoader:re,get __asyncResolved(){return X},setup(){var de=dn;if(X)return()=>Oi(X,de);var ke=Te=>{M=null,Q(Te,de,13)};if(N&&de.suspense||y.isInSSRComponentSetup)return re().then(Te=>()=>Oi(Te,de)).catch(Te=>(ke(Te),()=>h?Ut(h,{error:Te}):null));var nt=P.ref(!1),Oe=P.ref(),we=P.ref(!!w);return w&&setTimeout(()=>{we.value=!1},w),S!=null&&setTimeout(()=>{if(!nt.value&&!Oe.value){var Te=new Error("Async component timed out after ".concat(S,"ms."));ke(Te),Oe.value=Te}},S),re().then(()=>{nt.value=!0,de.parent&&to(de.parent.vnode)&&en(de.parent.update)}).catch(Te=>{ke(Te),Oe.value=Te}),()=>{if(nt.value&&X)return Oi(X,de);if(Oe.value&&h)return Ut(h,{error:Oe.value});if(d&&!we.value)return Ut(d)}}})}function Oi(i,l){var{vnode:{ref:d,props:h,children:w}}=l,S=Ut(i,h,w);return S.ref=d,S}var to=i=>i.type.__isKeepAlive,Uo={name:"KeepAlive",__isKeepAlive:!0,props:{include:[String,RegExp,Array],exclude:[String,RegExp,Array],max:[String,Number]},setup(i,l){var{slots:d}=l,h=Nr(),w=h.ctx;if(!w.renderer)return d.default;var S=new Map,N=new Set,D=null,M=h.suspense,{renderer:{p:X,m:fe,um:Be,o:{createElement:re}}}=w,de=re("div",null);w.activate=(Se,qe,He,rt,De)=>{var Xe=Se.component;fe(Se,qe,He,0,M),X(Xe.vnode,Se,qe,He,Xe,M,rt,Se.slotScopeIds,De),or(()=>{Xe.isDeactivated=!1,Xe.a&&f.invokeArrayFns(Xe.a);var Ct=Se.props&&Se.props.onVnodeMounted;Ct&&hr(Ct,Xe.parent,Se)},M)},w.deactivate=Se=>{var qe=Se.component;fe(Se,de,null,1,M),or(()=>{qe.da&&f.invokeArrayFns(qe.da);var He=Se.props&&Se.props.onVnodeUnmounted;He&&hr(He,qe.parent,Se),qe.isDeactivated=!0},M)};function ke(Se){rr(Se),Be(Se,h,M,!0)}function nt(Se){S.forEach((qe,He)=>{var rt=Ro(qe.type);rt&&(!Se||!Se(rt))&&Oe(He)})}function Oe(Se){var qe=S.get(Se);!D||qe.type!==D.type?ke(qe):D&&rr(D),S.delete(Se),N.delete(Se)}Ee(()=>[i.include,i.exclude],Se=>{var[qe,He]=Se;qe&&nt(rt=>Hi(qe,rt)),He&&nt(rt=>!Hi(He,rt))},{flush:"post",deep:!0});var we=null,Te=()=>{we!=null&&S.set(we,Ti(h.subTree))};return ti(Te),Yr(Te),Pi(()=>{S.forEach(Se=>{var{subTree:qe,suspense:He}=h,rt=Ti(qe);if(Se.type===rt.type){rr(rt);var De=rt.component.da;De&&or(De,He);return}ke(Se)})}),()=>{if(we=null,!d.default)return null;var Se=d.default(),qe=Se[0];if(Se.length>1)return D=null,Se;if(!Jt(qe)||!(qe.shapeFlag&4)&&!(qe.shapeFlag&128))return D=null,qe;var He=Ti(qe),rt=He.type,De=Ro(Ui(He)?He.type.__asyncResolved||{}:rt),{include:Xe,exclude:Ct,max:Tt}=i;if(Xe&&(!De||!Hi(Xe,De))||Ct&&De&&Hi(Ct,De))return D=He,qe;var Dt=He.key==null?rt:He.key,Pt=S.get(Dt);return He.el&&(He=ai(He),qe.shapeFlag&128&&(qe.ssContent=He)),we=Dt,Pt?(He.el=Pt.el,He.component=Pt.component,He.transition&&Kn(He,He.transition),He.shapeFlag|=512,N.delete(Dt),N.add(Dt)):(N.add(Dt),Tt&&N.size>parseInt(Tt,10)&&Oe(N.values().next().value)),He.shapeFlag|=256,D=He,qe}}},no=Uo;function Hi(i,l){return f.isArray(i)?i.some(d=>Hi(d,l)):f.isString(i)?i.split(",").includes(l):i.test?i.test(l):!1}function fr(i,l){Jn(i,"a",l)}function Er(i,l){Jn(i,"da",l)}function Jn(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:dn,h=i.__wdc||(i.__wdc=()=>{for(var S=d;S;){if(S.isDeactivated)return;S=S.parent}return i()});if(dr(l,h,d),d)for(var w=d.parent;w&&w.parent;)to(w.parent.vnode)&&Pr(h,l,d,w),w=w.parent}function Pr(i,l,d,h){var w=dr(l,i,h,!0);zi(()=>{f.remove(h[l],w)},d)}function rr(i){var l=i.shapeFlag;l&256&&(l-=256),l&512&&(l-=512),i.shapeFlag=l}function Ti(i){return i.shapeFlag&128?i.ssContent:i}function dr(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:dn,h=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;if(d){if(I.isRootHook(i)&&d!==d.root&&(d=d.root,I.isRootImmediateHook(i))){var w=d.proxy;ne(l.bind(w),d,i,I.ON_LOAD===i?[w.$page.options]:[])}var{__page_container__:S}=d.root.vnode;S&&S.onInjectHook(i);var N=d[i]||(d[i]=[]),D=l.__weh||(l.__weh=function(){if(!d.isUnmounted){P.pauseTracking(),Sr(d);for(var M=arguments.length,X=new Array(M),fe=0;fe<M;fe++)X[fe]=arguments[fe];var Be=ne(l,d,i,X);return pi(),P.resetTracking(),Be}});return h?N.unshift(D):N.push(D),D}}var Ir=i=>function(l){var d=arguments.length>1&&arguments[1]!==void 0?arguments[1]:dn;return(!y.isInSSRComponentSetup||i==="sp")&&dr(i,l,d)},ji=Ir("bm"),ti=Ir("m"),gi=Ir("bu"),Yr=Ir("u"),Pi=Ir("bum"),zi=Ir("um"),Oo=Ir("sp"),B=Ir("rtg"),ee=Ir("rtc");function le(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:dn;dr("ec",i,l)}var z=!0;function L(i){var l=Ye(i),d=i.proxy,h=i.ctx;z=!1,l.beforeCreate&&he(l.beforeCreate,i,"bc");var{data:w,computed:S,methods:N,watch:D,provide:M,inject:X,created:fe,beforeMount:Be,mounted:re,beforeUpdate:de,updated:ke,activated:nt,deactivated:Oe,beforeDestroy:we,beforeUnmount:Te,destroyed:Se,unmounted:qe,render:He,renderTracked:rt,renderTriggered:De,errorCaptured:Xe,serverPrefetch:Ct,expose:Tt,inheritAttrs:Dt,components:Pt,directives:pt,filters:H}=l,q=null;if(X&&K(X,h,q,i.appContext.config.unwrapInjectedRef),N)for(var ce in N){var ve=N[ce];f.isFunction(ve)&&(h[ce]=ve.bind(d))}if(w){var ge=w.call(d,d);f.isObject(ge)&&(i.data=P.reactive(ge))}if(z=!0,S){var Ze=function(yt){var jt=S[yt],nn=f.isFunction(jt)?jt.bind(d,d):f.isFunction(jt.get)?jt.get.bind(d,d):f.NOOP,pn=!f.isFunction(jt)&&f.isFunction(jt.set)?jt.set.bind(d):f.NOOP,Qn=Ta({get:nn,set:pn});Object.defineProperty(h,yt,{enumerable:!0,configurable:!0,get:()=>Qn.value,set:er=>Qn.value=er})};for(var ht in S)Ze(ht)}if(D)for(var Qe in D)Ue(D[Qe],h,d,Qe);if(M){var et=f.isFunction(M)?M.call(d):M;Reflect.ownKeys(et).forEach(yt=>{di(yt,et[yt])})}fe&&he(fe,i,"c");function Me(yt,jt){f.isArray(jt)?jt.forEach(nn=>yt(nn.bind(d))):jt&&yt(jt.bind(d))}if(Me(ji,Be),Me(ti,re),Me(gi,de),Me(Yr,ke),Me(fr,nt),Me(Er,Oe),Me(le,Xe),Me(ee,rt),Me(B,De),Me(Pi,Te),Me(zi,qe),Me(Oo,Ct),f.isArray(Tt))if(Tt.length){var St=i.exposed||(i.exposed={});Tt.forEach(yt=>{Object.defineProperty(St,yt,{get:()=>d[yt],set:jt=>d[yt]=jt})})}else i.exposed||(i.exposed={});He&&i.render===f.NOOP&&(i.render=He),Dt!=null&&(i.inheritAttrs=Dt),Pt&&(i.components=Pt),pt&&(i.directives=pt);var Et=i.appContext.config.globalProperties.$applyOptions;Et&&Et(l,i,d)}function K(i,l){var d=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;f.isArray(i)&&(i=Zn(i));var h=function(S){var N=i[S],D=void 0;f.isObject(N)?"default"in N?D=_r(N.from||S,N.default,!0):D=_r(N.from||S):D=_r(N),P.isRef(D)&&d?Object.defineProperty(l,S,{enumerable:!0,configurable:!0,get:()=>D.value,set:M=>D.value=M}):l[S]=D};for(var w in i)h(w)}function he(i,l,d){ne(f.isArray(i)?i.map(h=>h.bind(l.proxy)):i.bind(l.proxy),l,d)}function Ue(i,l,d,h){var w=h.includes(".")?Br(d,h):()=>d[h];if(f.isString(i)){var S=l[i];f.isFunction(S)&&Ee(w,S)}else if(f.isFunction(i))Ee(w,i.bind(d));else if(f.isObject(i))if(f.isArray(i))i.forEach(D=>Ue(D,l,d,h));else{var N=f.isFunction(i.handler)?i.handler.bind(d):l[i.handler];f.isFunction(N)&&Ee(w,N,i)}}function Ye(i){var l=i.type,{mixins:d,extends:h}=l,{mixins:w,optionsCache:S,config:{optionMergeStrategies:N}}=i.appContext,D=S.get(l),M;return D?M=D:!w.length&&!d&&!h?M=l:(M={},w.length&&w.forEach(X=>gt(M,X,N,!0)),gt(M,l,N)),S.set(l,M),M}function gt(i,l,d){var h=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,{mixins:w,extends:S}=l;S&&gt(i,S,d,!0),w&&w.forEach(M=>gt(i,M,d,!0));for(var N in l)if(!(h&&N==="expose")){var D=yn[N]||d&&d[N];i[N]=D?D(i[N],l[N]):l[N]}return i}var yn={data:ni,props:Wi,emits:Wi,methods:Wi,computed:Wi,beforeCreate:kn,created:kn,beforeMount:kn,mounted:kn,beforeUpdate:kn,updated:kn,beforeDestroy:kn,beforeUnmount:kn,destroyed:kn,unmounted:kn,activated:kn,deactivated:kn,errorCaptured:kn,serverPrefetch:kn,components:Wi,directives:Wi,watch:ea,provide:ni,inject:ir};function ni(i,l){return l?i?function(){return f.extend(f.isFunction(i)?i.call(this,this):i,f.isFunction(l)?l.call(this,this):l)}:l:i}function ir(i,l){return Wi(Zn(i),Zn(l))}function Zn(i){if(f.isArray(i)){for(var l={},d=0;d<i.length;d++)l[i[d]]=i[d];return l}return i}function kn(i,l){return i?[...new Set([].concat(i,l))]:l}function Wi(i,l){return i?f.extend(f.extend(Object.create(null),i),l):l}function ea(i,l){if(!i)return l;if(!l)return i;var d=f.extend(Object.create(null),i);for(var h in l)d[h]=kn(i[h],l[h]);return d}function Ma(i,l,d){var h=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,w={},S={};f.def(S,Rn,1),i.propsDefaults=Object.create(null),ba(i,l,w,S);for(var N in i.propsOptions[0])N in w||(w[N]=void 0);d?i.props=h?w:P.shallowReactive(w):i.type.props?i.props=w:i.props=S,i.attrs=S}function ta(i,l,d,h){var{props:w,attrs:S,vnode:{patchFlag:N}}=i,D=P.toRaw(w),[M]=i.propsOptions,X=!1;if((h||N>0)&&!(N&16)){if(N&8)for(var fe=i.vnode.dynamicProps,Be=0;Be<fe.length;Be++){var re=fe[Be];if(!On(i.emitsOptions,re)){var de=l[re];if(M)if(f.hasOwn(S,re))de!==S[re]&&(S[re]=de,X=!0);else{var ke=f.camelize(re);w[ke]=Ea(M,D,ke,de,i,!1)}else de!==S[re]&&(S[re]=de,X=!0)}}}else{ba(i,l,w,S)&&(X=!0);var nt;for(var Oe in D)(!l||!f.hasOwn(l,Oe)&&((nt=f.hyphenate(Oe))===Oe||!f.hasOwn(l,nt)))&&(M?d&&(d[Oe]!==void 0||d[nt]!==void 0)&&(w[Oe]=Ea(M,D,Oe,void 0,i,!0)):delete w[Oe]);if(S!==D)for(var we in S)(!l||!f.hasOwn(l,we)&&!0)&&(delete S[we],X=!0)}X&&P.trigger(i,"set","$attrs")}function ba(i,l,d,h){var[w,S]=i.propsOptions,N=!1,D;if(l){for(var M in l)if(!f.isReservedProp(M)){var X=l[M],fe=void 0;w&&f.hasOwn(w,fe=f.camelize(M))?!S||!S.includes(fe)?d[fe]=X:(D||(D={}))[fe]=X:On(i.emitsOptions,M)||(!(M in h)||X!==h[M])&&(h[M]=X,N=!0)}}if(S)for(var Be=P.toRaw(d),re=D||f.EMPTY_OBJ,de=0;de<S.length;de++){var ke=S[de];d[ke]=Ea(w,Be,ke,re[ke],i,!f.hasOwn(re,ke))}return N}function Ea(i,l,d,h,w,S){var N=i[d];if(N!=null){var D=f.hasOwn(N,"default");if(D&&h===void 0){var M=N.default;if(N.type!==Function&&f.isFunction(M)){var{propsDefaults:X}=w;d in X?h=X[d]:(Sr(w),h=X[d]=M.call(null,l),pi())}else h=M}N[0]&&(S&&!D?h=!1:N[1]&&(h===""||h===f.hyphenate(d))&&(h=!0))}return h}function La(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,h=l.propsCache,w=h.get(i);if(w)return w;var S=i.props,N={},D=[],M=!1;if(!f.isFunction(i)){var X=Se=>{M=!0;var[qe,He]=La(Se,l,!0);f.extend(N,qe),He&&D.push(...He)};!d&&l.mixins.length&&l.mixins.forEach(X),i.extends&&X(i.extends),i.mixins&&i.mixins.forEach(X)}if(!S&&!M)return h.set(i,f.EMPTY_ARR),f.EMPTY_ARR;if(f.isArray(S))for(var fe=0;fe<S.length;fe++){var Be=f.camelize(S[fe]);na(Be)&&(N[Be]=f.EMPTY_OBJ)}else if(S)for(var re in S){var de=f.camelize(re);if(na(de)){var ke=S[re],nt=N[de]=f.isArray(ke)||f.isFunction(ke)?{type:ke}:ke;if(nt){var Oe=Ho(Boolean,nt.type),we=Ho(String,nt.type);nt[0]=Oe>-1,nt[1]=we<0||Oe<we,(Oe>-1||f.hasOwn(nt,"default"))&&D.push(de)}}}var Te=[N,D];return h.set(i,Te),Te}function na(i){return i[0]!=="$"}function ra(i){var l=i&&i.toString().match(/^\s*function (\w+)/);return l?l[1]:i===null?"null":""}function ia(i,l){return ra(i)===ra(l)}function Ho(i,l){return f.isArray(l)?l.findIndex(d=>ia(d,i)):f.isFunction(l)&&ia(l,i)?0:-1}var ya=i=>i[0]==="_"||i==="$stable",yr=i=>f.isArray(i)?i.map(Xn):[Xn(i)],ri=(i,l,d)=>{var h=Zi(function(){return yr(l(...arguments))},d);return h._c=!1,h},wa=(i,l,d)=>{var h=i._ctx;for(var w in i)if(!ya(w)){var S=i[w];f.isFunction(S)?l[w]=ri(w,S,h):S!=null&&function(){var N=yr(S);l[w]=()=>N}()}},Da=(i,l)=>{var d=yr(l);i.slots.default=()=>d},qr=(i,l)=>{if(i.vnode.shapeFlag&32){var d=l._;d?(i.slots=P.toRaw(l),f.def(l,"_",d)):wa(l,i.slots={})}else i.slots={},l&&Da(i,l);f.def(i.slots,Rn,1)},ws=(i,l,d)=>{var{vnode:h,slots:w}=i,S=!0,N=f.EMPTY_OBJ;if(h.shapeFlag&32){var D=l._;D?d&&D===1?S=!1:(f.extend(w,l),!d&&D===1&&delete w._):(S=!l.$stable,wa(l,w)),N=l}else l&&(Da(i,l),N={default:1});if(S)for(var M in w)!ya(M)&&!(M in N)&&delete w[M]};function Dr(i,l){var d=Mn;if(d===null)return i;for(var h=kr(d)||d.proxy,w=i.dirs||(i.dirs=[]),S=0;S<l.length;S++){var[N,D,M,X=f.EMPTY_OBJ]=l[S];f.isFunction(N)&&(N={mounted:N,updated:N}),N.deep&&Mr(D),w.push({dir:N,instance:h,value:D,oldValue:void 0,arg:M,modifiers:X})}return i}function Ii(i,l,d,h){for(var w=i.dirs,S=l&&l.dirs,N=0;N<w.length;N++){var D=w[N];S&&(D.oldValue=S[N].value);var M=D.dir[h];M&&(P.pauseTracking(),ne(M,d,8,[i.el,D,i,l]),P.resetTracking())}}function is(){return{app:null,config:{isNativeTag:f.NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}var Ss=0;function Sa(i,l){return function(h){var w=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;f.isFunction(h)||(h=Object.assign({},h)),w!=null&&!f.isObject(w)&&(w=null);var S=is(),N=new Set,D=!1,M=S.app={_uid:Ss++,_component:h,_props:w,_container:null,_context:S,_instance:null,version:Ia,get config(){return S.config},set config(X){},use(X){for(var fe=arguments.length,Be=new Array(fe>1?fe-1:0),re=1;re<fe;re++)Be[re-1]=arguments[re];return N.has(X)||(X&&f.isFunction(X.install)?(N.add(X),X.install(M,...Be)):f.isFunction(X)&&(N.add(X),X(M,...Be))),M},mixin(X){return S.mixins.includes(X)||S.mixins.push(X),M},component(X,fe){return fe?(S.components[X]=fe,M):S.components[X]},directive(X,fe){return fe?(S.directives[X]=fe,M):S.directives[X]},mount(X,fe,Be){if(!D){var re=Ut(h,w);return re.appContext=S,fe&&l?l(re,X):i(re,X,Be),D=!0,M._container=X,X.__vue_app__=M,kr(re.component)||re.component.proxy}},unmount(){D&&(i(null,M._container),delete M._container.__vue_app__)},provide(X,fe){return S.provides[X]=fe,M}};return M}}function Ni(i,l,d,h){var w=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1;if(f.isArray(i)){i.forEach((nt,Oe)=>Ni(nt,l&&(f.isArray(l)?l[Oe]:l),d,h,w));return}if(!(Ui(h)&&!w)){var S=h.shapeFlag&4?kr(h.component)||h.component.proxy:h.el,N=w?null:S,{i:D,r:M}=i,X=l&&l.r,fe=D.refs===f.EMPTY_OBJ?D.refs={}:D.refs,Be=D.setupState;if(X!=null&&X!==M&&(f.isString(X)?(fe[X]=null,f.hasOwn(Be,X)&&(Be[X]=null)):P.isRef(X)&&(X.value=null)),f.isFunction(M))ct(M,D,12,[N,fe]);else{var re=f.isString(M),de=P.isRef(M);if(re||de){var ke=()=>{if(i.f){var nt=re?fe[M]:M.value;w?f.isArray(nt)&&f.remove(nt,S):f.isArray(nt)?nt.includes(S)||nt.push(S):re?(fe[M]=[S],f.hasOwn(Be,M)&&(Be[M]=fe[M])):(M.value=[S],i.k&&(fe[i.k]=M.value))}else re?(fe[M]=N,f.hasOwn(Be,M)&&(Be[M]=N)):P.isRef(M)&&(M.value=N,i.k&&(fe[i.k]=N))};N?(ke.id=-1,or(ke,d)):ke()}}}}var gn=!1,jo=i=>/svg/.test(i.namespaceURI)&&i.tagName!=="foreignObject",To=i=>i.nodeType===8;function Un(i){var{mt:l,p:d,o:{patchProp:h,nextSibling:w,parentNode:S,remove:N,insert:D,createComment:M}}=i,X=(Oe,we)=>{if(!we.hasChildNodes()){d(null,Oe,we),Or();return}gn=!1,fe(we.firstChild,Oe,null,null,null),Or(),gn&&console.error("Hydration completed but contains mismatches.")},fe=function(Oe,we,Te,Se,qe){var He=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1,rt=To(Oe)&&Oe.data==="[",De=()=>ke(Oe,we,Te,Se,qe,rt),{type:Xe,ref:Ct,shapeFlag:Tt}=we,Dt=Oe.nodeType;we.el=Oe;var Pt=null;switch(Xe){case _e:Dt!==3?Pt=De():(Oe.data!==we.children&&(gn=!0,Oe.data=we.children),Pt=w(Oe));break;case ze:Dt!==8||rt?Pt=De():Pt=w(Oe);break;case ft:if(Dt!==1)Pt=De();else{Pt=Oe;for(var pt=!we.children.length,H=0;H<we.staticCount;H++)pt&&(we.children+=Pt.outerHTML),H===we.staticCount-1&&(we.anchor=Pt),Pt=w(Pt);return Pt}break;case ae:rt?Pt=de(Oe,we,Te,Se,qe,He):Pt=De();break;default:if(Tt&1)Dt!==1||we.type.toLowerCase()!==Oe.tagName.toLowerCase()?Pt=De():Pt=Be(Oe,we,Te,Se,qe,He);else if(Tt&6){we.slotScopeIds=qe;var q=S(Oe);if(l(we,q,null,Te,Se,jo(q),He),Pt=rt?nt(Oe):w(Oe),Ui(we)){var ce;rt?(ce=Ut(ae),ce.anchor=Pt?Pt.previousSibling:q.lastChild):ce=Oe.nodeType===3?sa(""):Ut("div"),ce.el=Oe,we.component.subTree=ce}}else Tt&64?Dt!==8?Pt=De():Pt=we.type.hydrate(Oe,we,Te,Se,qe,He,i,re):Tt&128&&(Pt=we.type.hydrate(Oe,we,Te,Se,jo(S(Oe)),qe,He,i,fe))}return Ct!=null&&Ni(Ct,null,Se,we),Pt},Be=(Oe,we,Te,Se,qe,He)=>{He=He||!!we.dynamicChildren;var{type:rt,props:De,patchFlag:Xe,shapeFlag:Ct,dirs:Tt}=we,Dt=rt==="input"&&Tt||rt==="option";if(Dt||Xe!==-1){if(Tt&&Ii(we,null,Te,"created"),De)if(Dt||!He||Xe&(16|32))for(var Pt in De)(Dt&&Pt.endsWith("value")||f.isOn(Pt)&&!f.isReservedProp(Pt))&&h(Oe,Pt,null,De[Pt],!1,void 0,Te);else De.onClick&&h(Oe,"onClick",null,De.onClick,!1,void 0,Te);var pt;if((pt=De&&De.onVnodeBeforeMount)&&hr(pt,Te,we),Tt&&Ii(we,null,Te,"beforeMount"),((pt=De&&De.onVnodeMounted)||Tt)&&fi(()=>{pt&&hr(pt,Te,we),Tt&&Ii(we,null,Te,"mounted")},Se),Ct&16&&!(De&&(De.innerHTML||De.textContent)))for(var H=re(Oe.firstChild,we,Oe,Te,Se,qe,He);H;){gn=!0;var q=H;H=H.nextSibling,N(q)}else Ct&8&&Oe.textContent!==we.children&&(gn=!0,Oe.textContent=we.children)}return Oe.nextSibling},re=(Oe,we,Te,Se,qe,He,rt)=>{rt=rt||!!we.dynamicChildren;for(var De=we.children,Xe=De.length,Ct=0;Ct<Xe;Ct++){var Tt=rt?De[Ct]:De[Ct]=Xn(De[Ct]);if(Oe)Oe=fe(Oe,Tt,Se,qe,He,rt);else{if(Tt.type===_e&&!Tt.children)continue;gn=!0,d(null,Tt,Te,null,Se,qe,jo(Te),He)}}return Oe},de=(Oe,we,Te,Se,qe,He)=>{var{slotScopeIds:rt}=we;rt&&(qe=qe?qe.concat(rt):rt);var De=S(Oe),Xe=re(w(Oe),we,De,Te,Se,qe,He);return Xe&&To(Xe)&&Xe.data==="]"?w(we.anchor=Xe):(gn=!0,D(we.anchor=M("]",De),De,Xe),Xe)},ke=(Oe,we,Te,Se,qe,He)=>{if(gn=!0,we.el=null,He)for(var rt=nt(Oe);;){var De=w(Oe);if(De&&De!==rt)N(De);else break}var Xe=w(Oe),Ct=S(Oe);return N(Oe),d(null,we,Ct,Xe,Te,Se,jo(Ct),qe),Xe},nt=Oe=>{for(var we=0;Oe;)if(Oe=w(Oe),Oe&&To(Oe)&&(Oe.data==="["&&we++,Oe.data==="]")){if(we===0)return w(Oe);we--}return Oe};return[X,fe]}var or=fi;function Kr(i){return ii(i)}function Fa(i){return ii(i,Un)}function ii(i,l){var d=f.getGlobalThis();d.__VUE__=!0;var{insert:h,remove:w,patchProp:S,forcePatchProp:N,createElement:D,createText:M,createComment:X,setText:fe,setElementText:Be,parentNode:re,nextSibling:de,setScopeId:ke=f.NOOP,cloneNode:nt,insertStaticContent:Oe}=i,we=function(W,te,me){var Ce=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null,Fe=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,it=arguments.length>5&&arguments[5]!==void 0?arguments[5]:null,ut=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,Ke=arguments.length>7&&arguments[7]!==void 0?arguments[7]:null,tt=arguments.length>8&&arguments[8]!==void 0?arguments[8]:!!te.dynamicChildren;if(W!==te){W&&!an(W,te)&&(Ce=pn(W),St(W,Fe,it,!0),W=null),te.patchFlag===-2&&(tt=!1,te.dynamicChildren=null);var{type:je,ref:It,shapeFlag:Vt}=te;switch(je){case _e:Te(W,te,me,Ce);break;case ze:Se(W,te,me,Ce);break;case ft:W==null&&qe(te,me,Ce,ut);break;case ae:H(W,te,me,Ce,Fe,it,ut,Ke,tt);break;default:Vt&1?De(W,te,me,Ce,Fe,it,ut,Ke,tt):Vt&6?q(W,te,me,Ce,Fe,it,ut,Ke,tt):(Vt&64||Vt&128)&&je.process(W,te,me,Ce,Fe,it,ut,Ke,tt,er)}It!=null&&Fe&&Ni(It,W&&W.ref,it,te||W,!te)}},Te=(W,te,me,Ce)=>{if(W==null)h(te.el=M(te.children,me),me,Ce);else{var Fe=te.el=W.el;te.children!==W.children&&fe(Fe,te.children)}},Se=(W,te,me,Ce)=>{W==null?h(te.el=X(te.children||"",me),me,Ce):te.el=W.el},qe=(W,te,me,Ce)=>{[W.el,W.anchor]=Oe(W.children,te,me,Ce,W.el,W.anchor)},He=(W,te,me)=>{for(var{el:Ce,anchor:Fe}=W,it;Ce&&Ce!==Fe;)it=de(Ce),h(Ce,te,me),Ce=it;h(Fe,te,me)},rt=W=>{for(var{el:te,anchor:me}=W,Ce;te&&te!==me;)Ce=de(te),w(te),te=Ce;w(me)},De=(W,te,me,Ce,Fe,it,ut,Ke,tt)=>{ut=ut||te.type==="svg",W==null?Xe(te,me,Ce,Fe,it,ut,Ke,tt):Dt(W,te,Fe,it,ut,Ke,tt)},Xe=(W,te,me,Ce,Fe,it,ut,Ke)=>{var tt,je,{type:It,props:Vt,shapeFlag:$t,transition:un,patchFlag:Vr,dirs:gr}=W;if(W.el&&nt!==void 0&&Vr===-1)tt=W.el=nt(W.el);else{if(tt=W.el=D(W.type,te),$t&8?Be(tt,W.children):$t&16&&Tt(W.children,tt,null,Ce,Fe,it&&It!=="foreignObject",ut,Ke),gr&&Ii(W,null,Ce,"created"),Vt){for(var $r in Vt)$r!=="value"&&!f.isReservedProp($r)&&S(tt,$r,null,Vt[$r],it,W.children,Ce,Fe,nn);"value"in Vt&&S(tt,"value",null,Vt.value),(je=Vt.onVnodeBeforeMount)&&hr(je,Ce,W)}Ct(tt,W,W.scopeId,ut,Ce)}Object.defineProperty(tt,"__vueParentComponent",{value:Ce,enumerable:!1}),gr&&Ii(W,null,Ce,"beforeMount");var vi=(!Fe||Fe&&!Fe.pendingBranch)&&un&&!un.persisted;vi&&un.beforeEnter(tt),h(tt,te,me),((je=Vt&&Vt.onVnodeMounted)||vi||gr)&&or(()=>{je&&hr(je,Ce,W),vi&&un.enter(tt),gr&&Ii(W,null,Ce,"mounted")},Fe)},Ct=(W,te,me,Ce,Fe)=>{if(me&&ke(W,me),Ce)for(var it=0;it<Ce.length;it++)ke(W,Ce[it]);if(Fe){var ut=Fe.subTree;if(te===ut){var Ke=Fe.vnode;Ct(W,Ke,Ke.scopeId,Ke.slotScopeIds,Fe.parent)}}},Tt=function(W,te,me,Ce,Fe,it,ut,Ke){for(var tt=arguments.length>8&&arguments[8]!==void 0?arguments[8]:0,je=tt;je<W.length;je++){var It=W[je]=Ke?Ri(W[je]):Xn(W[je]);we(null,It,te,me,Ce,Fe,it,ut,Ke)}},Dt=(W,te,me,Ce,Fe,it,ut)=>{var Ke=te.el=W.el,{patchFlag:tt,dynamicChildren:je,dirs:It}=te;tt|=W.patchFlag&16;var Vt=W.props||f.EMPTY_OBJ,$t=te.props||f.EMPTY_OBJ,un;me&&ki(me,!1),(un=$t.onVnodeBeforeUpdate)&&hr(un,me,te,W),It&&Ii(te,W,me,"beforeUpdate"),me&&ki(me,!0);var Vr=Fe&&te.type!=="foreignObject";if(je?Pt(W.dynamicChildren,je,Ke,me,Ce,Vr,it):ut||ht(W,te,Ke,null,me,Ce,Vr,it,!1),tt>0){if(tt&16)pt(Ke,te,Vt,$t,me,Ce,Fe);else if(tt&2&&Vt.class!==$t.class&&S(Ke,"class",null,$t.class,Fe),tt&4&&S(Ke,"style",Vt.style,$t.style,Fe),tt&8)for(var gr=te.dynamicProps,$r=0;$r<gr.length;$r++){var vi=gr[$r],Mo=Vt[vi],oo=$t[vi];(oo!==Mo||vi==="value"||N&&N(Ke,vi))&&S(Ke,vi,Mo,oo,Fe,W.children,me,Ce,nn)}tt&1&&W.children!==te.children&&Be(Ke,te.children)}else!ut&&je==null&&pt(Ke,te,Vt,$t,me,Ce,Fe);((un=$t.onVnodeUpdated)||It)&&or(()=>{un&&hr(un,me,te,W),It&&Ii(te,W,me,"updated")},Ce)},Pt=(W,te,me,Ce,Fe,it,ut)=>{for(var Ke=0;Ke<te.length;Ke++){var tt=W[Ke],je=te[Ke],It=tt.el&&(tt.type===ae||!an(tt,je)||tt.shapeFlag&(6|64))?re(tt.el):me;we(tt,je,It,null,Ce,Fe,it,ut,!0)}},pt=(W,te,me,Ce,Fe,it,ut)=>{if(me!==Ce){for(var Ke in Ce)if(!f.isReservedProp(Ke)){var tt=Ce[Ke],je=me[Ke];(tt!==je&&Ke!=="value"||N&&N(W,Ke))&&S(W,Ke,je,tt,ut,te.children,Fe,it,nn)}if(me!==f.EMPTY_OBJ)for(var It in me)!f.isReservedProp(It)&&!(It in Ce)&&S(W,It,me[It],null,ut,te.children,Fe,it,nn);"value"in Ce&&S(W,"value",me.value,Ce.value)}},H=(W,te,me,Ce,Fe,it,ut,Ke,tt)=>{var je=te.el=W?W.el:M("",me),It=te.anchor=W?W.anchor:M("",me),{patchFlag:Vt,dynamicChildren:$t,slotScopeIds:un}=te;un&&(Ke=Ke?Ke.concat(un):un),W==null?(h(je,me,Ce),h(It,me,Ce),Tt(te.children,me,It,Fe,it,ut,Ke,tt)):Vt>0&&Vt&64&&$t&&W.dynamicChildren?(Pt(W.dynamicChildren,$t,me,Fe,it,ut,Ke),(te.key!=null||Fe&&te===Fe.subTree)&&oa(W,te,!0)):ht(W,te,me,It,Fe,it,ut,Ke,tt)},q=(W,te,me,Ce,Fe,it,ut,Ke,tt)=>{te.slotScopeIds=Ke,W==null?te.shapeFlag&512?Fe.ctx.activate(te,me,Ce,ut,tt):ce(te,me,Ce,Fe,it,ut,tt):ve(W,te,tt)},ce=(W,te,me,Ce,Fe,it,ut)=>{var Ke=W.component=Dn(W,Ce,Fe);if(to(W)&&(Ke.ctx.renderer=er),Ha(Ke),Ke.asyncDep){if(Fe&&Fe.registerDep(Ke,ge),!W.el){var tt=Ke.subTree=Ut(ze);Se(null,tt,te,me)}return}if(ge(Ke,W,te,me,Fe,it,ut),Ke.$wxsModules){var je=I.resolveOwnerEl(Ke);if(je){je.setAttribute(I.ATTR_V_OWNER_ID,Ke.uid);var{$renderjsModules:It}=Ke.type;It&&je.setAttribute(I.ATTR_V_RENDERJS,It)}}},ve=(W,te,me)=>{var Ce=te.component=W.component;if(vr(W,te,me))if(Ce.asyncDep&&!Ce.asyncResolved){Ze(Ce,te,me);return}else Ce.next=te,Hr(Ce.update),Ce.update();else te.component=W.component,te.el=W.el,Ce.vnode=te},ge=(W,te,me,Ce,Fe,it,ut)=>{var Ke=()=>{if(W.isMounted){var{next:Ur,bu:hs,u:xs,parent:ao,vnode:Ja}=W,gs=Ur,xa;ki(W,!1),Ur?(Ur.el=Ja.el,Ze(W,Ur,ut)):Ur=Ja,hs&&f.invokeArrayFns(hs),(xa=Ur.props&&Ur.props.onVnodeBeforeUpdate)&&hr(xa,ao,Ur,Ja),ki(W,!0);var Za=zr(W),ha=W.subTree;W.subTree=Za,we(ha,Za,re(ha.el),pn(ha),W,Fe,it),Ur.el=Za.el,gs===null&&Nn(W,Za.el),xs&&or(xs,Fe),(xa=Ur.props&&Ur.props.onVnodeUpdated)&&or(()=>hr(xa,ao,Ur,Ja),Fe)}else{var It,{el:Vt,props:$t}=te,{bm:un,m:Vr,parent:gr}=W,$r=Ui(te);if(ki(W,!1),un&&f.invokeArrayFns(un),!$r&&(It=$t&&$t.onVnodeBeforeMount)&&hr(It,gr,te),ki(W,!0),Vt&&Bo){var vi=()=>{W.subTree=zr(W),Bo(Vt,W.subTree,W,Fe,null)};$r?te.type.__asyncLoader().then(()=>!W.isUnmounted&&vi()):vi()}else{var Mo=W.subTree=zr(W);we(null,Mo,me,Ce,W,Fe,it),te.el=Mo.el}if(Vr&&or(Vr,Fe),!$r&&(It=$t&&$t.onVnodeMounted)){var oo=te;or(()=>hr(It,gr,oo),Fe)}te.shapeFlag&256&&W.a&&or(W.a,Fe),W.isMounted=!0,te=me=Ce=null}},tt=W.effect=new P.ReactiveEffect(Ke,()=>en(W.update),W.scope),je=W.update=tt.run.bind(tt);je.id=W.uid,ki(W,!0),je()},Ze=(W,te,me)=>{te.component=W;var Ce=W.vnode.props;W.vnode=te,W.next=null,ta(W,te.props,Ce,me),ws(W,te.children,me),P.pauseTracking(),Xr(void 0,W.update),P.resetTracking()},ht=function(W,te,me,Ce,Fe,it,ut,Ke){var tt=arguments.length>8&&arguments[8]!==void 0?arguments[8]:!1,je=W&&W.children,It=W?W.shapeFlag:0,Vt=te.children,{patchFlag:$t,shapeFlag:un}=te;if($t>0){if($t&128){et(je,Vt,me,Ce,Fe,it,ut,Ke,tt);return}else if($t&256){Qe(je,Vt,me,Ce,Fe,it,ut,Ke,tt);return}}un&8?(It&16&&nn(je,Fe,it),Vt!==je&&Be(me,Vt)):It&16?un&16?et(je,Vt,me,Ce,Fe,it,ut,Ke,tt):nn(je,Fe,it,!0):(It&8&&Be(me,""),un&16&&Tt(Vt,me,Ce,Fe,it,ut,Ke,tt))},Qe=(W,te,me,Ce,Fe,it,ut,Ke,tt)=>{W=W||f.EMPTY_ARR,te=te||f.EMPTY_ARR;var je=W.length,It=te.length,Vt=Math.min(je,It),$t;for($t=0;$t<Vt;$t++){var un=te[$t]=tt?Ri(te[$t]):Xn(te[$t]);we(W[$t],un,me,null,Fe,it,ut,Ke,tt)}je>It?nn(W,Fe,it,!0,!1,Vt):Tt(te,me,Ce,Fe,it,ut,Ke,tt,Vt)},et=(W,te,me,Ce,Fe,it,ut,Ke,tt)=>{for(var je=0,It=te.length,Vt=W.length-1,$t=It-1;je<=Vt&&je<=$t;){var un=W[je],Vr=te[je]=tt?Ri(te[je]):Xn(te[je]);if(an(un,Vr))we(un,Vr,me,null,Fe,it,ut,Ke,tt);else break;je++}for(;je<=Vt&&je<=$t;){var gr=W[Vt],$r=te[$t]=tt?Ri(te[$t]):Xn(te[$t]);if(an(gr,$r))we(gr,$r,me,null,Fe,it,ut,Ke,tt);else break;Vt--,$t--}if(je>Vt){if(je<=$t)for(var vi=$t+1,Mo=vi<It?te[vi].el:Ce;je<=$t;)we(null,te[je]=tt?Ri(te[je]):Xn(te[je]),me,Mo,Fe,it,ut,Ke,tt),je++}else if(je>$t)for(;je<=Vt;)St(W[je],Fe,it,!0),je++;else{var oo=je,Ur=je,hs=new Map;for(je=Ur;je<=$t;je++){var xs=te[je]=tt?Ri(te[je]):Xn(te[je]);xs.key!=null&&hs.set(xs.key,je)}var ao,Ja=0,gs=$t-Ur+1,xa=!1,Za=0,ha=new Array(gs);for(je=0;je<gs;je++)ha[je]=0;for(je=oo;je<=Vt;je++){var Xo=W[je];if(Ja>=gs){St(Xo,Fe,it,!0);continue}var so=void 0;if(Xo.key!=null)so=hs.get(Xo.key);else for(ao=Ur;ao<=$t;ao++)if(ha[ao-Ur]===0&&an(Xo,te[ao])){so=ao;break}so===void 0?St(Xo,Fe,it,!0):(ha[so-Ur]=je+1,so>=Za?Za=so:xa=!0,we(Xo,te[so],me,null,Fe,it,ut,Ke,tt),Ja++)}var ql=xa?Aa(ha):f.EMPTY_ARR;for(ao=ql.length-1,je=gs-1;je>=0;je--){var El=Ur+je,vc=te[El],yl=El+1<It?te[El+1].el:Ce;ha[je]===0?we(null,vc,me,yl,Fe,it,ut,Ke,tt):xa&&(ao<0||je!==ql[ao]?Me(vc,me,yl,2):ao--)}}},Me=function(W,te,me,Ce){var Fe=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,{el:it,type:ut,transition:Ke,children:tt,shapeFlag:je}=W;if(je&6){Me(W.component.subTree,te,me,Ce);return}if(je&128){W.suspense.move(te,me,Ce);return}if(je&64){ut.move(W,te,me,er);return}if(ut===ae){h(it,te,me);for(var It=0;It<tt.length;It++)Me(tt[It],te,me,Ce);h(W.anchor,te,me);return}if(ut===ft){He(W,te,me);return}var Vt=Ce!==2&&je&1&&Ke;if(Vt)if(Ce===0)Ke.beforeEnter(it),h(it,te,me),or(()=>Ke.enter(it),Fe);else{var{leave:$t,delayLeave:un,afterLeave:Vr}=Ke,gr=()=>h(it,te,me),$r=()=>{$t(it,()=>{gr(),Vr&&Vr()})};un?un(it,gr,$r):$r()}else h(it,te,me)},St=function(W,te,me){var Ce=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,Fe=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,{type:it,props:ut,ref:Ke,children:tt,dynamicChildren:je,shapeFlag:It,patchFlag:Vt,dirs:$t}=W;if(Ke!=null&&Ni(Ke,null,me,W,!0),It&256){te.ctx.deactivate(W);return}var un=It&1&&$t,Vr=!Ui(W),gr;if(Vr&&(gr=ut&&ut.onVnodeBeforeUnmount)&&hr(gr,te,W),It&6)jt(W.component,me,Ce);else{if(It&128){W.suspense.unmount(me,Ce);return}un&&Ii(W,null,te,"beforeUnmount"),It&64?W.type.remove(W,te,me,Fe,er,Ce):je&&(it!==ae||Vt>0&&Vt&64)?nn(je,te,me,!1,!0):(it===ae&&Vt&(128|256)||!Fe&&It&16)&&nn(tt,te,me),Ce&&Et(W)}(Vr&&(gr=ut&&ut.onVnodeUnmounted)||un)&&or(()=>{gr&&hr(gr,te,W),un&&Ii(W,null,te,"unmounted")},me)},Et=W=>{var{type:te,el:me,anchor:Ce,transition:Fe}=W;if(te===ae){yt(me,Ce);return}if(te===ft){rt(W);return}var it=()=>{w(me),Fe&&!Fe.persisted&&Fe.afterLeave&&Fe.afterLeave()};if(W.shapeFlag&1&&Fe&&!Fe.persisted){var{leave:ut,delayLeave:Ke}=Fe,tt=()=>ut(me,it);Ke?Ke(W.el,it,tt):tt()}else it()},yt=(W,te)=>{for(var me;W!==te;)me=de(W),w(W),W=me;w(te)},jt=(W,te,me)=>{var{bum:Ce,scope:Fe,update:it,subTree:ut,um:Ke}=W;Ce&&f.invokeArrayFns(Ce),Fe.stop(),it&&(it.active=!1,St(ut,W,te,me)),Ke&&or(Ke,te),or(()=>{W.isUnmounted=!0},te),te&&te.pendingBranch&&!te.isUnmounted&&W.asyncDep&&!W.asyncResolved&&W.suspenseId===te.pendingId&&(te.deps--,te.deps===0&&te.resolve())},nn=function(W,te,me){for(var Ce=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,Fe=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,it=arguments.length>5&&arguments[5]!==void 0?arguments[5]:0,ut=it;ut<W.length;ut++)St(W[ut],te,me,Ce,Fe)},pn=W=>W.shapeFlag&6?pn(W.component.subTree):W.shapeFlag&128?W.suspense.next():de(W.anchor||W.el),Qn=(W,te,me)=>{W==null?te._vnode&&St(te._vnode,null,null,!0):we(te._vnode||null,W,te,null,null,null,me),Or(),te._vnode=W},er={p:we,um:St,m:Me,r:Et,mt:ce,mc:Tt,pc:ht,pbc:Pt,n:pn,o:i},Eo,Bo;return l&&([Eo,Bo]=l(er)),{render:Qn,hydrate:Eo,createApp:Sa(Qn,Eo)}}function ki(i,l){var{effect:d,update:h}=i;d.allowRecurse=h.allowRecurse=l}function oa(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,h=i.children,w=l.children;if(f.isArray(h)&&f.isArray(w))for(var S=0;S<h.length;S++){var N=h[S],D=w[S];D.shapeFlag&1&&!D.dynamicChildren&&((D.patchFlag<=0||D.patchFlag===32)&&(D=w[S]=Ri(w[S]),D.el=N.el),d||oa(N,D))}}function Aa(i){var l=i.slice(),d=[0],h,w,S,N,D,M=i.length;for(h=0;h<M;h++){var X=i[h];if(X!==0){if(w=d[d.length-1],i[w]<X){l[h]=w,d.push(h);continue}for(S=0,N=d.length-1;S<N;)D=S+N>>1,i[d[D]]<X?S=D+1:N=D;X<i[d[S]]&&(S>0&&(l[h]=d[S-1]),d[S]=h)}}for(S=d.length,N=d[S-1];S-- >0;)d[S]=N,N=l[N];return d}var Po=i=>i.__isTeleport,oi=i=>i&&(i.disabled||i.disabled===""),zo=i=>typeof SVGElement!="undefined"&&i instanceof SVGElement,Va=(i,l)=>{var d=i&&i.to;if(f.isString(d))if(l){var h=l(d);return h}else return null;else return d},aa={__isTeleport:!0,process(i,l,d,h,w,S,N,D,M,X){var{mc:fe,pc:Be,pbc:re,o:{insert:de,querySelector:ke,createText:nt,createComment:Oe}}=X,we=oi(l.props),{shapeFlag:Te,children:Se,dynamicChildren:qe}=l;if(i==null){var He=l.el=nt("",d),rt=l.anchor=nt("",d);de(He,d,h),de(rt,d,h);var De=l.target=Va(l.props,ke),Xe=l.targetAnchor=nt("",d);De&&(de(Xe,De),N=N||zo(De));var Ct=(ve,ge)=>{Te&16&&fe(Se,ve,ge,w,S,N,D,M)};we?Ct(d,rt):De&&Ct(De,Xe)}else{l.el=i.el;var Tt=l.anchor=i.anchor,Dt=l.target=i.target,Pt=l.targetAnchor=i.targetAnchor,pt=oi(i.props),H=pt?d:Dt,q=pt?Tt:Pt;if(N=N||zo(Dt),qe?(re(i.dynamicChildren,qe,H,w,S,N,D),oa(i,l,!0)):M||Be(i,l,H,q,w,S,N,D,!1),we)pt||Wo(l,d,Tt,X,1);else if((l.props&&l.props.to)!==(i.props&&i.props.to)){var ce=l.target=Va(l.props,ke);ce&&Wo(l,ce,null,X,0)}else pt&&Wo(l,Dt,Pt,X,1)}},remove(i,l,d,h,w,S){var{um:N,o:{remove:D}}=w,{shapeFlag:M,children:X,anchor:fe,targetAnchor:Be,target:re,props:de}=i;if(re&&D(Be),(S||!oi(de))&&(D(fe),M&16))for(var ke=0;ke<X.length;ke++){var nt=X[ke];N(nt,l,d,!0,!!nt.dynamicChildren)}},move:Wo,hydrate:_};function Wo(i,l,d,h){var{o:{insert:w},m:S}=h,N=arguments.length>4&&arguments[4]!==void 0?arguments[4]:2;N===0&&w(i.targetAnchor,l,d);var{el:D,anchor:M,shapeFlag:X,children:fe,props:Be}=i,re=N===2;if(re&&w(D,l,d),(!re||oi(Be))&&X&16)for(var de=0;de<fe.length;de++)S(fe[de],l,d,2);re&&w(M,l,d)}function _(i,l,d,h,w,S,N,D){var{o:{nextSibling:M,parentNode:X,querySelector:fe}}=N,Be=l.target=Va(l.props,fe);if(Be){var re=Be._lpa||Be.firstChild;l.shapeFlag&16&&(oi(l.props)?(l.anchor=D(M(i),l,X(i),d,h,w,S),l.targetAnchor=re):(l.anchor=M(i),l.targetAnchor=D(re,l,Be,d,h,w,S)),Be._lpa=l.targetAnchor&&M(l.targetAnchor))}return l.anchor&&M(l.anchor)}var R=aa,j="components",U="directives";function J(i,l){return Pe(j,i,!0,l)||i}var Z=Symbol();function se(i){return f.isString(i)?Pe(j,i,!1)||i:i||Z}function pe(i){return Pe(U,i)}function Pe(i,l){var d=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,h=Mn||dn;if(h){var w=h.type;if(i===j){var S=Ro(w);if(S&&(S===l||S===f.camelize(l)||S===f.capitalize(f.camelize(l))))return w}var N=ye(h[i]||w[i],l)||ye(h.appContext[i],l);return!N&&d?w:N}}function ye(i,l){return i&&(i[l]||i[f.camelize(l)]||i[f.capitalize(f.camelize(l))])}var ae=Symbol(void 0),_e=Symbol(void 0),ze=Symbol(void 0),ft=Symbol(void 0),xt=[],ot=null;function lt(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1;xt.push(ot=i?null:[])}function wt(){xt.pop(),ot=xt[xt.length-1]||null}var tn=1;function Kt(i){tn+=i}function dt(i){return i.dynamicChildren=tn>0?ot||f.EMPTY_ARR:null,wt(),tn>0&&ot&&ot.push(i),i}function zt(i,l,d,h,w,S){return dt(Ht(i,l,d,h,w,S,!0))}function Ot(i,l,d,h,w){return dt(Ut(i,l,d,h,w,!0))}function Jt(i){return i?i.__v_isVNode===!0:!1}function an(i,l){return i.type===l.type&&i.key===l.key}function mn(i){}var Rn="__vInternal",Io=i=>{var{key:l}=i;return l!=null?l:null},No=i=>{var{ref:l,ref_key:d,ref_for:h}=i;return l!=null?f.isString(l)||P.isRef(l)||f.isFunction(l)?{i:Mn,r:l,k:d,f:!!h}:l:null};function Ht(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,h=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,w=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,S=arguments.length>5&&arguments[5]!==void 0?arguments[5]:i===ae?0:1,N=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,D=arguments.length>7&&arguments[7]!==void 0?arguments[7]:!1,M={__v_isVNode:!0,__v_skip:!0,type:i,props:l,key:l&&Io(l),ref:l&&No(l),scopeId:Tr,slotScopeIds:null,children:d,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:S,patchFlag:h,dynamicProps:w,dynamicChildren:null,appContext:null};return D?(Yo(M,d),S&128&&i.normalize(M)):d&&(M.shapeFlag|=f.isString(d)?8:16),tn>0&&!N&&ot&&(M.patchFlag>0||S&6)&&M.patchFlag!==32&&ot.push(M),M}var Ut=Go;function Go(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,h=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,w=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,S=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1;if((!i||i===Z)&&(i=ze),Jt(i)){var N=ai(i,l,!0);return d&&Yo(N,d),N}if(Jo(i)&&(i=i.__vccOpts),l){l=Fr(l);var{class:D,style:M}=l;D&&!f.isString(D)&&(l.class=f.normalizeClass(D)),f.isObject(M)&&(P.isProxy(M)&&!f.isArray(M)&&(M=f.extend({},M)),l.style=f.normalizeStyle(M))}var X=f.isString(i)?1:mr(i)?128:Po(i)?64:f.isObject(i)?4:f.isFunction(i)?2:0;return Ht(i,l,d,h,w,X,S,!0)}function Fr(i){return i?P.isProxy(i)||Rn in i?f.extend({},i):i:null}function ai(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,{props:h,ref:w,patchFlag:S,children:N}=i,D=l?ar(h||{},l):h,M={__v_isVNode:!0,__v_skip:!0,type:i.type,props:D,key:D&&Io(D),ref:l&&l.ref?d&&w?f.isArray(w)?w.concat(No(l)):[w,No(l)]:No(l):w,scopeId:i.scopeId,slotScopeIds:i.slotScopeIds,children:N,target:i.target,targetAnchor:i.targetAnchor,staticCount:i.staticCount,shapeFlag:i.shapeFlag,patchFlag:l&&i.type!==ae?S===-1?16:S|16:S,dynamicProps:i.dynamicProps,dynamicChildren:i.dynamicChildren,appContext:i.appContext,dirs:i.dirs,transition:i.transition,component:i.component,suspense:i.suspense,ssContent:i.ssContent&&ai(i.ssContent),ssFallback:i.ssFallback&&ai(i.ssFallback),el:i.el,anchor:i.anchor};return M}function sa(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:" ",l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;return Ut(_e,null,i,l)}function wr(i,l){var d=Ut(ft,null,i);return d.staticCount=l,d}function Ln(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"",l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;return l?(lt(),Ot(ze,null,i)):Ut(ze,null,i)}function Xn(i){return i==null||typeof i=="boolean"?Ut(ze):f.isArray(i)?Ut(ae,null,i.slice()):typeof i=="object"?Ri(i):Ut(_e,null,String(i))}function Ri(i){return i.el===null||i.memo?i:ai(i)}function Yo(i,l){var d=0,{shapeFlag:h}=i;if(l==null)l=null;else if(f.isArray(l))d=16;else if(typeof l=="object")if(h&(1|64)){var w=l.default;w&&(w._c&&(w._d=!1),Yo(i,w()),w._c&&(w._d=!0));return}else{d=32;var S=l._;!S&&!(Rn in l)?l._ctx=Mn:S===3&&Mn&&(Mn.slots._===1?l._=1:(l._=2,i.patchFlag|=1024))}else f.isFunction(l)?(l={default:l,_ctx:Mn},d=32):(l=String(l),h&64?(d=16,l=[sa(l)]):d=8);i.children=l,i.shapeFlag|=d}function ar(){for(var i={},l=0;l<arguments.length;l++){var d=l<0||arguments.length<=l?void 0:arguments[l];for(var h in d)if(h==="class")i.class!==d.class&&(i.class=f.normalizeClass([i.class,d.class]));else if(h==="style")i.style=f.normalizeStyle([i.style,d.style]);else if(f.isOn(h)){var w=i[h],S=d[h];S&&w!==S&&!(f.isArray(w)&&w.includes(S))&&(i[h]=w?[].concat(w,S):S)}else h!==""&&(i[h]=d[h])}return i}function hr(i,l,d){var h=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;ne(i,l,7,[d,h])}function xi(i,l,d,h){var w,S=d&&d[h];if(f.isArray(i)||f.isString(i)){w=new Array(i.length);for(var N=0,D=i.length;N<D;N++)w[N]=l(i[N],N,void 0,S&&S[N])}else if(typeof i=="number"){w=new Array(i);for(var M=0;M<i;M++)w[M]=l(M+1,M,void 0,S&&S[M])}else if(f.isObject(i))if(i[Symbol.iterator])w=Array.from(i,(de,ke)=>l(de,ke,void 0,S&&S[ke]));else{var X=Object.keys(i);w=new Array(X.length);for(var fe=0,Be=X.length;fe<Be;fe++){var re=X[fe];w[fe]=l(i[re],re,fe,S&&S[fe])}}else w=[];return d&&(d[h]=w),w}function po(i,l){for(var d=0;d<l.length;d++){var h=l[d];if(f.isArray(h))for(var w=0;w<h.length;w++)i[h[w].name]=h[w].fn;else h&&(i[h.name]=h.fn)}return i}function la(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},h=arguments.length>3?arguments[3]:void 0,w=arguments.length>4?arguments[4]:void 0;if(Mn.isCE||Mn.parent&&Ui(Mn.parent)&&Mn.parent.isCE)return Ut("slot",l==="default"?null:{name:l},h&&h());var S=i[l];S&&S._c&&(S._d=!1),lt();var N=S&&$a(S(d)),D=Ot(ae,{key:d.key||"_".concat(l)},N||(h?h():[]),N&&i._===1?64:-2);return!w&&D.scopeId&&(D.slotScopeIds=[D.scopeId+"-s"]),S&&S._c&&(S._d=!0),D}function $a(i){return i.some(l=>Jt(l)?!(l.type===ze||l.type===ae&&!$a(l.children)):!0)?i:null}function Ua(i){var l={};for(var d in i)l[f.toHandlerKey(d)]=i[d];return l}var Gi=i=>i?ca(i)?kr(i)||i.proxy:Gi(i.parent):null,qo=f.extend(Object.create(null),{$:i=>i,$el:i=>i.vnode.el,$data:i=>i.data,$props:i=>i.props,$attrs:i=>i.attrs,$slots:i=>i.slots,$refs:i=>i.refs,$parent:i=>Gi(i.parent),$root:i=>Gi(i.root),$emit:i=>i.emit,$options:i=>Ye(i),$forceUpdate:i=>()=>en(i.update),$nextTick:i=>Xt.bind(i.proxy),$watch:i=>fo.bind(i)}),Ca={get(i,l){var{_:d}=i,{ctx:h,setupState:w,data:S,props:N,accessCache:D,type:M,appContext:X}=d,fe;if(l[0]!=="$"){var Be=D[l];if(Be!==void 0)switch(Be){case 1:return w[l];case 2:return S[l];case 4:return h[l];case 3:return N[l]}else{if(w!==f.EMPTY_OBJ&&f.hasOwn(w,l))return D[l]=1,w[l];if(S!==f.EMPTY_OBJ&&f.hasOwn(S,l))return D[l]=2,S[l];if((fe=d.propsOptions[0])&&f.hasOwn(fe,l))return D[l]=3,N[l];if(h!==f.EMPTY_OBJ&&f.hasOwn(h,l))return D[l]=4,h[l];z&&(D[l]=0)}}var re=qo[l],de,ke;if(re)return l==="$attrs"&&P.track(d,"get",l),re(d);if((de=M.__cssModules)&&(de=de[l]))return de;if(h!==f.EMPTY_OBJ&&f.hasOwn(h,l))return D[l]=4,h[l];if(ke=X.config.globalProperties,f.hasOwn(ke,l))return ke[l]},set(i,l,d){var{_:h}=i,{data:w,setupState:S,ctx:N}=h;return S!==f.EMPTY_OBJ&&f.hasOwn(S,l)?(S[l]=d,!0):w!==f.EMPTY_OBJ&&f.hasOwn(w,l)?(w[l]=d,!0):f.hasOwn(h.props,l)||l[0]==="$"&&l.slice(1)in h?!1:(N[l]=d,!0)},has(i,l){var{_:{data:d,setupState:h,accessCache:w,ctx:S,appContext:N,propsOptions:D}}=i,M;return!!w[l]||d!==f.EMPTY_OBJ&&f.hasOwn(d,l)||h!==f.EMPTY_OBJ&&f.hasOwn(h,l)||(M=D[0])&&f.hasOwn(M,l)||f.hasOwn(S,l)||f.hasOwn(qo,l)||f.hasOwn(N.config.globalProperties,l)},defineProperty(i,l,d){return d.get!=null?i._.accessCache[l]=0:f.hasOwn(d,"value")&&this.set(i,l,d.value,null),Reflect.defineProperty(i,l,d)}},Bi=f.extend({},Ca,{get(i,l){if(l!==Symbol.unscopables)return Ca.get(i,l,i)},has(i,l){var d=l[0]!=="_"&&!f.isGloballyWhitelisted(l);return d}}),os=is(),vo=0;function Dn(i,l,d){var h=i.type,w=(l?l.appContext:i.appContext)||os,S={uid:vo++,vnode:i,type:h,parent:l,appContext:w,root:null,next:null,subTree:null,effect:null,update:null,scope:new P.EffectScope(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:l?l.provides:Object.create(w.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:La(h,w),emitsOptions:wi(h,w),emit:null,emitted:null,propsDefaults:f.EMPTY_OBJ,inheritAttrs:h.inheritAttrs,ctx:f.EMPTY_OBJ,data:f.EMPTY_OBJ,props:f.EMPTY_OBJ,attrs:f.EMPTY_OBJ,slots:f.EMPTY_OBJ,refs:f.EMPTY_OBJ,setupState:f.EMPTY_OBJ,setupContext:null,suspense:d,suspenseId:d?d.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return S.ctx={_:S},S.root=l?l.root:S,S.emit=So.bind(null,S),i.ce&&i.ce(S),S}var dn=null,Nr=()=>dn||Mn,Sr=i=>{dn=i,i.scope.on()},pi=()=>{dn&&dn.scope.off(),dn=null};function ca(i){return i.vnode.shapeFlag&4}y.isInSSRComponentSetup=!1;function Ha(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;y.isInSSRComponentSetup=l;var{props:d,children:h}=i.vnode,w=ca(i);Ma(i,d,w,l),qr(i,h);var S=w?mo(i,l):void 0;return y.isInSSRComponentSetup=!1,S}function mo(i,l){var d=i.type;i.accessCache=Object.create(null),i.proxy=P.markRaw(new Proxy(i.ctx,Ca));var{setup:h}=d;if(h){var w=i.setupContext=h.length>1?Wn(i):null;Sr(i),P.pauseTracking();var S=ct(h,i,0,[i.props,w]);if(P.resetTracking(),pi(),f.isPromise(S)){if(S.then(pi,pi),l)return S.then(N=>{Ko(i,N,l)}).catch(N=>{Q(N,i,0)});i.asyncDep=S}else Ko(i,S,l)}else Rt(i,l)}function Ko(i,l,d){f.isFunction(l)?i.type.__ssrInlineRender?i.ssrRender=l:i.render=l:f.isObject(l)&&(i.setupState=P.proxyRefs(l)),Rt(i,d)}var kt,as;function xe(i){kt=i,as=l=>{l.render._rc&&(l.withProxy=new Proxy(l.ctx,Bi))}}var At=()=>!kt;function Rt(i,l,d){var h=i.type;if(!i.render){if(!l&&kt&&!h.render){var w=h.template;if(w){var{isCustomElement:S,compilerOptions:N}=i.appContext.config,{delimiters:D,compilerOptions:M}=h,X=f.extend(f.extend({isCustomElement:S,delimiters:D},N),M);h.render=kt(w,X)}}i.render=h.render||f.NOOP,as&&as(i)}Sr(i),P.pauseTracking(),L(i),P.resetTracking(),pi()}function cn(i){return new Proxy(i.attrs,{get(l,d){return P.track(i,"get","$attrs"),l[d]}})}function Wn(i){var l=h=>{i.exposed=h||{}},d;return{get attrs(){return d||(d=cn(i))},slots:i.slots,emit:i.emit,expose:l}}function kr(i){if(i.exposed)return i.exposeProxy||(i.exposeProxy=new Proxy(P.proxyRefs(P.markRaw(i.exposed)),{get(l,d){if(d in l)return l[d];if(d in qo)return qo[d](i)}}))}var ko=/(?:^|[-_])(\w)/g,_o=i=>i.replace(ko,l=>l.toUpperCase()).replace(/[-_]/g,"");function Ro(i){return f.isFunction(i)&&i.displayName||i.name}function Oa(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,h=Ro(l);if(!h&&l.__file){var w=l.__file.match(/([^/\\]+)\.\w+$/);w&&(h=w[1])}if(!h&&i&&i.parent){var S=N=>{for(var D in N)if(N[D]===l)return D};h=S(i.components||i.parent.type.components)||S(i.appContext.components)}return h?_o(h):d?"App":"Anonymous"}function Jo(i){return f.isFunction(i)&&"__vccOpts"in i}var Ta=(i,l)=>P.computed(i,l,y.isInSSRComponentSetup);function Pa(){return null}function As(){return null}function Zs(i){}function ua(i,l){return null}function Cs(){return ss().slots}function Xs(){return ss().attrs}function ss(){var i=Nr();return i.setupContext||(i.setupContext=Wn(i))}function Qs(i,l){var d=f.isArray(i)?i.reduce((S,N)=>(S[N]={},S),{}):i;for(var h in l){var w=d[h];w?f.isArray(w)||f.isFunction(w)?d[h]={type:w,default:l[h]}:w.default=l[h]:w===null&&(d[h]={default:l[h]})}return d}function el(i,l){var d={},h=function(S){l.includes(S)||Object.defineProperty(d,S,{enumerable:!0,get:()=>i[S]})};for(var w in i)h(w);return d}function tl(i){var l=Nr(),d=i();return pi(),f.isPromise(d)&&(d=d.catch(h=>{throw Sr(l),h})),[d,()=>Sr(l)]}function ja(i,l,d){var h=arguments.length;return h===2?f.isObject(l)&&!f.isArray(l)?Jt(l)?Ut(i,null,[l]):Ut(i,l):Ut(i,null,l):(h>3?d=Array.prototype.slice.call(arguments,2):h===3&&Jt(d)&&(d=[d]),Ut(i,l,d))}var za=Symbol(""),Hl=()=>{{var i=_r(za);return i||Nt("Server rendering context not provided. Make sure to only call useSSRContext() conditionally in the server build."),i}};function nl(){}function rl(i,l,d,h){var w=d[h];if(w&&ro(w,i))return w;var S=l();return S.memo=i.slice(),d[h]=S}function ro(i,l){var d=i.memo;if(d.length!=l.length)return!1;for(var h=0;h<d.length;h++)if(d[h]!==l[h])return!1;return tn>0&&ot&&ot.push(i),!0}var Ia="3.2.33",Wa={createComponentInstance:Dn,setupComponent:Ha,renderComponentRoot:zr,setCurrentRenderingInstance:Ji,isVNode:Jt,normalizeVNode:Xn},Ga=Wa,fa=null,Na=null;function ka(i,l){return i==="input"?new I.UniInputElement(i,l):i==="textarea"?new I.UniTextAreaElement(i,l):new I.UniElement(i,l)}function Os(i,l){return new I.UniTextNode(i,l)}function Ya(i,l){return new I.UniCommentNode(i,l)}var ls,cs={insert:(i,l,d)=>{l.insertBefore(i,d||null)},remove:i=>{var l=i.parentNode;l&&l.removeChild(i)},createElement:(i,l)=>ka(i,l),createText:(i,l)=>Os(i,l),createComment:(i,l)=>Ya(i,l),setText:(i,l)=>{i.nodeValue=l},setElementText:(i,l)=>{i.textContent=l},parentNode:i=>i.parentNode,nextSibling:i=>i.nextSibling,setScopeId(i,l){i.setAttribute(l,"")},cloneNode(i){var l=i.cloneNode(!0);return"_value"in i&&(l._value=i._value),l},insertStaticContent(i,l,d){var h=ls||(ls=ka("div"));h.innerHTML=i;for(var w=h.firstChild,S=w,N=S;S;)N=S,cs.insert(S,l,d),S=h.firstChild;return[w,N]}};function il(i,l){l==null&&(l=""),i.setAttribute("class",l)}function qa(i,l,d){if(!d)i.removeAttribute("style");else if(f.isString(d))l!==d&&i.setAttribute("style",d);else{var h={},w=l&&!f.isString(l);if(w){for(var S in l)d[S]==null&&(h[S]="");for(var N in d){var D=d[N];D!==l[N]&&(h[N]=D)}}else for(var M in d)h[M]=d[M];Object.keys(h).length&&i.setAttribute("style",h)}}function si(i,l,d){d==null?i.removeAttribute(l):i.setAttribute(l,d)}function io(i,l,d,h){i.addEventListener(l,d,h)}function Ts(i,l,d,h){i.removeEventListener(l,d,h)}function ol(i,l,d,h){var w=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,S=i._vei||(i._vei={}),N=S[l];if(h&&N)N.value=h;else{var[D,M]=us(l);if(h){var X=S[l]=sl(h,w);io(i,D,X,M)}else N&&(Ts(i,D,N,M),S[l]=void 0)}}var al=/(?:Once|Passive|Capture)$/;function us(i){var l;if(al.test(i)){l={};for(var d;d=i.match(al);)i=i.slice(0,i.length-d[0].length),l[d[0].toLowerCase()]=!0}return[f.hyphenate(i.slice(2)),l]}function sl(i,l){var d=w=>{ne(d.value,l,5,[w])};d.value=i;var h=new Set;return f.isArray(d.value)?d.value.forEach(w=>{w.modifiers&&w.modifiers.forEach(S=>{h.add(S)})}):(d.value.modifiers&&d.value.modifiers.forEach(w=>{h.add(w)}),Ps(d,l)),d.modifiers=[...h],d}function Ps(i,l){if(!!l){var{$wxsModules:d}=l;if(!!d){var h=i.value.toString();!d.find(w=>h.indexOf("."+w+".")>-1)||(i.wxsEvent=i.value())}}}var ll=function(i,l,d,h){var w=arguments.length>6?arguments[6]:void 0;switch(l){case"class":il(i,h);break;case"style":qa(i,d,h);break;default:if(f.isOn(l))f.isModelListener(l)||ol(i,l,d,h,w);else{if(f.isObject(h)){var S=d===h;if(h=I.JSON_PROTOCOL+JSON.stringify(h),S&&i.getAttribute(l)===h)return}else if(d===h)return;si(i,l,h)}break}};function jl(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"$style";{var l=Nr();if(!l)return f.EMPTY_OBJ;var d=l.type.__cssModules;if(!d)return f.EMPTY_OBJ;var h=d[i];return h||f.EMPTY_OBJ}}function cl(i){var l=Nr();if(!!l){var d=()=>Ka(l.subTree,i(l.proxy));ti(()=>Yn(d,{flush:"post"})),Yr(d)}}function Ka(i,l){if(i.shapeFlag&128){var d=i.suspense;i=d.activeBranch,d.pendingBranch&&!d.isHydrating&&d.effects.push(()=>{Ka(d.activeBranch,l)})}for(;i.component;)i=i.component.subTree;if(i.shapeFlag&1&&i.el)Is(i.el,l);else if(i.type===ae)i.children.forEach(S=>Ka(S,l));else if(i.type===ft)for(var{el:h,anchor:w}=i;h&&(Is(h,l),h!==w);)h=h.nextSibling}function Is(i,l){if(i.nodeType===1)for(var d in l)i.setAttribute("--".concat(d),l[d])}var bo="transition",Ra="animation",fs=(i,l)=>{var{slots:d}=l;return ja(Yt,fl(i),d)};fs.displayName="Transition";var ul={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},zl=fs.props=f.extend({},Yt.props,ul),Zo=function(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[];f.isArray(i)?i.forEach(d=>d(...l)):i&&i(...l)},Ns=i=>i?f.isArray(i)?i.some(l=>l.length>1):i.length>1:!1;function fl(i){var l={};for(var d in i)d in ul||(l[d]=i[d]);if(i.css===!1)return l;var{name:h="v",type:w,duration:S,enterFromClass:N="".concat(h,"-enter-from"),enterActiveClass:D="".concat(h,"-enter-active"),enterToClass:M="".concat(h,"-enter-to"),appearFromClass:X=N,appearActiveClass:fe=D,appearToClass:Be=M,leaveFromClass:re="".concat(h,"-leave-from"),leaveActiveClass:de="".concat(h,"-leave-active"),leaveToClass:ke="".concat(h,"-leave-to")}=i,nt=dl(S),Oe=nt&&nt[0],we=nt&&nt[1],{onBeforeEnter:Te,onEnter:Se,onEnterCancelled:qe,onLeave:He,onLeaveCancelled:rt,onBeforeAppear:De=Te,onAppear:Xe=Se,onAppearCancelled:Ct=qe}=l,Tt=(pt,H,q)=>{da(pt,H?Be:M),da(pt,H?fe:D),q&&q()},Dt=(pt,H)=>{da(pt,ke),da(pt,de),H&&H()},Pt=pt=>(H,q)=>{var ce=pt?Xe:Se,ve=()=>Tt(H,pt,q);Zo(ce,[H,ve]),hl(()=>{da(H,pt?X:N),xo(H,pt?Be:M),Ns(ce)||ds(H,w,Oe,ve)})};return f.extend(l,{onBeforeEnter(pt){Zo(Te,[pt]),xo(pt,N),xo(pt,D)},onBeforeAppear(pt){Zo(De,[pt]),xo(pt,X),xo(pt,fe)},onEnter:Pt(!1),onAppear:Pt(!0),onLeave(pt,H){var q=()=>Dt(pt,H);xo(pt,re),ml(),xo(pt,de),hl(()=>{da(pt,re),xo(pt,ke),Ns(He)||ds(pt,w,we,q)}),Zo(He,[pt,q])},onEnterCancelled(pt){Tt(pt,!1),Zo(qe,[pt])},onAppearCancelled(pt){Tt(pt,!0),Zo(Ct,[pt])},onLeaveCancelled(pt){Dt(pt),Zo(rt,[pt])}})}function dl(i){if(i==null)return null;if(f.isObject(i))return[ks(i.enter),ks(i.leave)];var l=ks(i);return[l,l]}function ks(i){var l=f.toNumber(i);return l}function xo(i,l){l.split(/\s+/).forEach(d=>d&&i.classList.add(d)),(i._vtc||(i._vtc=new Set)).add(l)}function da(i,l){l.split(/\s+/).forEach(h=>h&&i.classList.remove(h));var{_vtc:d}=i;d&&(d.delete(l),d.size||(i._vtc=void 0))}function hl(i){requestAnimationFrame(()=>{requestAnimationFrame(i)})}var Wl=0;function ds(i,l,d,h){var w=i._endId=++Wl,S=()=>{w===i._endId&&h()};if(d)return setTimeout(S,d);var{type:N,timeout:D,propCount:M}=gl(i,l);if(!N)return h();var X=N+"end",fe=0,Be=()=>{i.removeEventListener(X,re),S()},re=de=>{de.target===i&&++fe>=M&&Be()};setTimeout(()=>{fe<M&&Be()},D+1),i.addEventListener(X,re)}function gl(i,l){var d=window.getComputedStyle(i),h=ke=>(d[ke]||"").split(", "),w=h(bo+"Delay"),S=h(bo+"Duration"),N=pl(w,S),D=h(Ra+"Delay"),M=h(Ra+"Duration"),X=pl(D,M),fe=null,Be=0,re=0;l===bo?N>0&&(fe=bo,Be=N,re=S.length):l===Ra?X>0&&(fe=Ra,Be=X,re=M.length):(Be=Math.max(N,X),fe=Be>0?N>X?bo:Ra:null,re=fe?fe===bo?S.length:M.length:0);var de=fe===bo&&/\b(transform|all)(,|$)/.test(d[bo+"Property"]);return{type:fe,timeout:Be,propCount:re,hasTransform:de}}function pl(i,l){for(;i.length<l.length;)i=i.concat(i);return Math.max(...l.map((d,h)=>vl(d)+vl(i[h])))}function vl(i){return Number(i.slice(0,-1).replace(",","."))*1e3}function ml(){return document.body.offsetHeight}var _l=new WeakMap,Rs=new WeakMap,bl={name:"TransitionGroup",props:f.extend({},zl,{tag:String,moveClass:String}),setup(i,l){var{slots:d}=l,h=Nr(),w=Tn(),S,N;return Yr(()=>{if(!!S.length){var D=i.moveClass||"".concat(i.name||"v","-move");if(!!v(S[0].el,h.vnode.el,D)){S.forEach(Yl),S.forEach(o);var M=S.filter(c);ml(),M.forEach(X=>{var fe=X.el,Be=fe.style;xo(fe,D),Be.transform=Be.webkitTransform=Be.transitionDuration="";var re=fe._moveCb=de=>{de&&de.target!==fe||(!de||/transform$/.test(de.propertyName))&&(fe.removeEventListener("transitionend",re),fe._moveCb=null,da(fe,D))};fe.addEventListener("transitionend",re)})}}}),()=>{var D=P.toRaw(i),M=fl(D),X=D.tag||ae;S=N,N=d.default?nr(d.default()):[];for(var fe=0;fe<N.length;fe++){var Be=N[fe];Be.key!=null&&Kn(Be,qt(Be,M,w,h))}if(S)for(var re=0;re<S.length;re++){var de=S[re];Kn(de,qt(de,M,w,h)),_l.set(de,de.el.getBoundingClientRect())}return Ut(X,null,N)}}},Gl=bl;function Yl(i){var l=i.el;l._moveCb&&l._moveCb(),l._enterCb&&l._enterCb()}function o(i){Rs.set(i,i.el.getBoundingClientRect())}function c(i){var l=_l.get(i),d=Rs.get(i),h=l.left-d.left,w=l.top-d.top;if(h||w){var S=i.el.style;return S.transform=S.webkitTransform="translate(".concat(h,"px,").concat(w,"px)"),S.transitionDuration="0s",i}}function v(i,l,d){var h=i.cloneNode();i._vtc&&i._vtc.forEach(N=>{N.split(/\s+/).forEach(D=>D&&h.classList.remove(D))}),d.split(/\s+/).forEach(N=>N&&h.classList.add(N)),h.style.display="none";var w=l.nodeType===1?l:l.parentNode;w.appendChild(h);var{hasTransform:S}=gl(h);return w.removeChild(h),S}var b=i=>{var l=i.props["onUpdate:modelValue"];return f.isArray(l)?d=>f.invokeArrayFns(l,d):l},O={created(i,l,d){var{value:h,modifiers:{trim:w,number:S}}=l;i.value=h==null?"":h,i._assign=b(d),io(i,"input",N=>{var D=N.detail.value,M=i.pageNode;i.pageNode=null,i.value=D,i.pageNode=M,w?D=D.trim():S&&(D=f.toNumber(D)),i._assign(D)})},beforeUpdate(i,l,d){var{value:h}=l;i._assign=b(d);var w=h==null?"":h;i.value!==w&&(i.value=w)}},T=["ctrl","shift","alt","meta"],V={stop:i=>i.stopPropagation(),prevent:i=>i.preventDefault(),self:i=>i.target!==i.currentTarget,ctrl:i=>!i.ctrlKey,shift:i=>!i.shiftKey,alt:i=>!i.altKey,meta:i=>!i.metaKey,left:i=>"button"in i&&i.button!==0,middle:i=>"button"in i&&i.button!==1,right:i=>"button"in i&&i.button!==2,exact:(i,l)=>T.some(d=>i["".concat(d,"Key")]&&!l.includes(d))},Y=(i,l)=>{var d=function(h){for(var w=0;w<l.length;w++){var S=V[l[w]];if(S&&S(h,l))return}for(var N=arguments.length,D=new Array(N>1?N-1:0),M=1;M<N;M++)D[M-1]=arguments[M];return i(h,...D)};return d.modifiers=l,d},G={esc:"escape",space:" ",up:"arrow-up",left:"arrow-left",right:"arrow-right",down:"arrow-down",delete:"backspace"},ie=(i,l)=>d=>{if("key"in d){var h=f.hyphenate(d.key);if(l.some(w=>w===h||G[w]===h))return i(d)}},Re={beforeMount(i,l){var{value:d}=l;at(i,d)},updated(i,l){var{value:d,oldValue:h}=l;!d!=!h&&at(i,d)},beforeUnmount(i,l){var{value:d}=l;at(i,d)}};function at(i,l){i.setAttribute(".vShow",!!l)}var oe=f.extend({patchProp:ll,forcePatchProp:I.forcePatchProp},cs),Je;function Ge(){return Je||(Je=Kr(oe))}var vt=function(){Ge().render(...arguments)},Ne=function(){var i=Ge().createApp(...arguments),{mount:l}=i;return i.mount=d=>(f.isString(d)&&(d=Ya(d)),d&&l(d,!1,!1)),i},Ae=Ne;function Le(){}function We(){}return Object.defineProperty(y,"camelize",{enumerable:!0,get:function(){return f.camelize}}),Object.defineProperty(y,"capitalize",{enumerable:!0,get:function(){return f.capitalize}}),Object.defineProperty(y,"normalizeClass",{enumerable:!0,get:function(){return f.normalizeClass}}),Object.defineProperty(y,"normalizeProps",{enumerable:!0,get:function(){return f.normalizeProps}}),Object.defineProperty(y,"normalizeStyle",{enumerable:!0,get:function(){return f.normalizeStyle}}),Object.defineProperty(y,"toDisplayString",{enumerable:!0,get:function(){return f.toDisplayString}}),Object.defineProperty(y,"toHandlerKey",{enumerable:!0,get:function(){return f.toHandlerKey}}),Object.defineProperty(y,"EffectScope",{enumerable:!0,get:function(){return P.EffectScope}}),Object.defineProperty(y,"ReactiveEffect",{enumerable:!0,get:function(){return P.ReactiveEffect}}),Object.defineProperty(y,"customRef",{enumerable:!0,get:function(){return P.customRef}}),Object.defineProperty(y,"effect",{enumerable:!0,get:function(){return P.effect}}),Object.defineProperty(y,"effectScope",{enumerable:!0,get:function(){return P.effectScope}}),Object.defineProperty(y,"getCurrentScope",{enumerable:!0,get:function(){return P.getCurrentScope}}),Object.defineProperty(y,"isProxy",{enumerable:!0,get:function(){return P.isProxy}}),Object.defineProperty(y,"isReactive",{enumerable:!0,get:function(){return P.isReactive}}),Object.defineProperty(y,"isReadonly",{enumerable:!0,get:function(){return P.isReadonly}}),Object.defineProperty(y,"isRef",{enumerable:!0,get:function(){return P.isRef}}),Object.defineProperty(y,"isShallow",{enumerable:!0,get:function(){return P.isShallow}}),Object.defineProperty(y,"markRaw",{enumerable:!0,get:function(){return P.markRaw}}),Object.defineProperty(y,"onScopeDispose",{enumerable:!0,get:function(){return P.onScopeDispose}}),Object.defineProperty(y,"proxyRefs",{enumerable:!0,get:function(){return P.proxyRefs}}),Object.defineProperty(y,"reactive",{enumerable:!0,get:function(){return P.reactive}}),Object.defineProperty(y,"readonly",{enumerable:!0,get:function(){return P.readonly}}),Object.defineProperty(y,"ref",{enumerable:!0,get:function(){return P.ref}}),Object.defineProperty(y,"shallowReactive",{enumerable:!0,get:function(){return P.shallowReactive}}),Object.defineProperty(y,"shallowReadonly",{enumerable:!0,get:function(){return P.shallowReadonly}}),Object.defineProperty(y,"shallowRef",{enumerable:!0,get:function(){return P.shallowRef}}),Object.defineProperty(y,"stop",{enumerable:!0,get:function(){return P.stop}}),Object.defineProperty(y,"toRaw",{enumerable:!0,get:function(){return P.toRaw}}),Object.defineProperty(y,"toRef",{enumerable:!0,get:function(){return P.toRef}}),Object.defineProperty(y,"toRefs",{enumerable:!0,get:function(){return P.toRefs}}),Object.defineProperty(y,"triggerRef",{enumerable:!0,get:function(){return P.triggerRef}}),Object.defineProperty(y,"unref",{enumerable:!0,get:function(){return P.unref}}),y.BaseTransition=Yt,y.Comment=ze,y.Fragment=ae,y.KeepAlive=no,y.Static=ft,y.Suspense=Si,y.Teleport=R,y.Text=_e,y.Transition=fs,y.TransitionGroup=Gl,y.callWithAsyncErrorHandling=ne,y.callWithErrorHandling=ct,y.cloneVNode=ai,y.compatUtils=Na,y.computed=Ta,y.createApp=Ne,y.createBlock=Ot,y.createComment=Ya,y.createCommentVNode=Ln,y.createElement=ka,y.createElementBlock=zt,y.createElementVNode=Ht,y.createHydrationRenderer=Fa,y.createPropsRestProxy=el,y.createRenderer=Kr,y.createSSRApp=Ae,y.createSlots=po,y.createStaticVNode=wr,y.createTextNode=Os,y.createTextVNode=sa,y.createVNode=Ut,y.createVueApp=Ne,y.defineAsyncComponent=go,y.defineComponent=Ci,y.defineEmits=As,y.defineExpose=Zs,y.defineProps=Pa,y.getCurrentInstance=Nr,y.getTransitionRawChildren=nr,y.guardReactiveProps=Fr,y.h=ja,y.handleError=Q,y.initCustomFormatter=nl,y.inject=_r,y.injectHook=dr,y.isMemoSame=ro,y.isRuntimeOnly=At,y.isVNode=Jt,y.mergeDefaults=Qs,y.mergeProps=ar,y.nextTick=Xt,y.onActivated=fr,y.onBeforeActivate=Le,y.onBeforeDeactivate=We,y.onBeforeMount=ji,y.onBeforeUnmount=Pi,y.onBeforeUpdate=gi,y.onDeactivated=Er,y.onErrorCaptured=le,y.onMounted=ti,y.onRenderTracked=ee,y.onRenderTriggered=B,y.onServerPrefetch=Oo,y.onUnmounted=zi,y.onUpdated=Yr,y.openBlock=lt,y.popScopeId=ur,y.provide=di,y.pushScopeId=lo,y.queuePostFlushCb=zn,y.registerRuntimeCompiler=xe,y.render=vt,y.renderList=xi,y.renderSlot=la,y.resolveComponent=J,y.resolveDirective=pe,y.resolveDynamicComponent=se,y.resolveFilter=fa,y.resolveTransitionHooks=qt,y.setBlockTracking=Kt,y.setDevtoolsHook=jr,y.setTransitionHooks=Kn,y.ssrContextKey=za,y.ssrUtils=Ga,y.toHandlers=Ua,y.transformVNodeArgs=mn,y.useAttrs=Xs,y.useCssModule=jl,y.useCssVars=cl,y.useSSRContext=Hl,y.useSlots=Cs,y.useTransitionState=Tn,y.vModelText=O,y.vShow=Re,y.version=Ia,y.warn=Nt,y.watch=Ee,y.watchEffect=Yn,y.watchPostEffect=$i,y.watchSyncEffect=Qi,y.withAsyncContext=tl,y.withCtx=Zi,y.withDefaults=ua,y.withDirectives=Dr,y.withKeys=ie,y.withMemo=rl,y.withModifiers=Y,y.withScopeId=Fi,Object.defineProperty(y,"__esModule",{value:!0}),y}({},s,m,A);return k.__TYPE__="vue",k}function wp(p,s,m){let A=m.Vue,k=m.setTimeout,y=m.clearTimeout,I=m.setInterval,f=m.clearInterval,P=m.__uniConfig,$e=m.__uniRoutes,Nt=m.VueShared,bn=m.UniShared;var x=function(ne,Q,on){"use strict";var wn="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",$n=function(){let e=new Uint8Array(256);for(var t=0;t<wn.length;t++)e[wn.charCodeAt(t)]=t;return e}();function Sn(e){var t=new Uint8Array(e),n,r=t.length,a="";for(n=0;n<r;n+=3)a+=wn[t[n]>>2],a+=wn[(t[n]&3)<<4|t[n+1]>>4],a+=wn[(t[n+1]&15)<<2|t[n+2]>>6],a+=wn[t[n+2]&63];return r%3===2?a=a.substring(0,a.length-1)+"=":r%3===1&&(a=a.substring(0,a.length-2)+"=="),a}function ln(e){var t=e.length*.75,n=e.length,r,a=0,u,g,E,$;e[e.length-1]==="="&&(t--,e[e.length-2]==="="&&t--);var C=new ArrayBuffer(t),F=new Uint8Array(C);for(r=0;r<n;r+=4)u=$n[e.charCodeAt(r)],g=$n[e.charCodeAt(r+1)],E=$n[e.charCodeAt(r+2)],$=$n[e.charCodeAt(r+3)],F[a++]=u<<2|g>>4,F[a++]=(g&15)<<4|E>>2,F[a++]=(E&3)<<6|$&63;return C}let An=["original","compressed"],jn=["album","camera"],En=["GET","OPTIONS","HEAD","POST","PUT","DELETE","TRACE","CONNECT","PATCH"];function fn(e,t){return!e||t.indexOf(e)===-1?t[0]:e}function Bn(e,t){return!ne.isArray(e)||e.length===0||e.find(n=>t.indexOf(n)===-1)?t:e}function Cn(e,t){console.warn(`${e}: ${t}`)}function Cr(e,t,n,r){r||(r=Cn);for(let a in n){let u=Ve(a,t[a],n[a],!ne.hasOwn(t,a));ne.isString(u)&&r(e,u)}}function ui(e,t,n,r){if(!n)return;if(!ne.isArray(n))return Cr(e,t[0]||Object.create(null),n,r);let a=n.length,u=t.length;for(let g=0;g<a;g++){let E=n[g],$=Object.create(null);u>g&&($[E.name]=t[g]),Cr(e,$,{[E.name]:E},r)}}function Ve(e,t,n,r){ne.isPlainObject(n)||(n={type:n});let{type:a,required:u,validator:g}=n;if(u&&r)return'Missing required args: "'+e+'"';if(!(t==null&&!u)){if(a!=null){let E=!1,$=ne.isArray(a)?a:[a],C=[];for(let F=0;F<$.length&&!E;F++){let{valid:ue,expectedType:be}=bt(t,$[F]);C.push(be||""),E=ue}if(!E)return Xt(e,t,C)}if(g)return g(t)}}let st=ne.makeMap("String,Number,Boolean,Function,Symbol");function bt(e,t){let n,r=hn(t);if(st(r)){let a=typeof e;n=a===r.toLowerCase(),!n&&a==="object"&&(n=e instanceof t)}else r==="Object"?n=ne.isObject(e):r==="Array"?n=ne.isArray(e):n=e instanceof t||ne.toRawType(e)===hn(t);return{valid:n,expectedType:r}}function Xt(e,t,n){let r=`Invalid args: type check failed for args "${e}". Expected ${n.map(ne.capitalize).join(", ")}`,a=n[0],u=ne.toRawType(t),g=en(t,a),E=en(t,u);return n.length===1&&cr(a)&&!Hr(a,u)&&(r+=` with value ${g}`),r+=`, got ${u} `,cr(u)&&(r+=`with value ${E}.`),r}function hn(e){let t=e&&e.toString().match(/^\s*function (\w+)/);return t?t[1]:""}function en(e,t){return t==="String"?`"${e}"`:t==="Number"?`${Number(e)}`:`${e}`}function cr(e){return["string","number","boolean"].some(n=>e.toLowerCase()===n)}function Hr(...e){return e.some(t=>t.toLowerCase()==="boolean")}function Zr(e){return function(){try{return e.apply(e,arguments)}catch(t){console.error(t)}}}let Ei=1,zn={};function Xr(e,t,n,r=!1){return zn[e]={name:t,keepAlive:r,callback:n},e}function Or(e,t,n){if(typeof e=="number"){let r=zn[e];if(r)return r.keepAlive||delete zn[e],r.callback(t,n)}return t}function yi(e){for(let t in zn)if(zn[t].name===e)return!0;return!1}function Ki(e,t){for(let n in zn){let r=zn[n];r.callback===t&&r.name===e&&delete zn[n]}}function Di(e){ct.off("api."+e)}function jr(e){ct.on("api."+e,t=>{for(let n in zn){let r=zn[n];r.name===e&&r.callback(t)}})}function So(e,t){return Xr(Ei++,e,t,!0)}let wi="success",On="fail",Mn="complete";function Tr(e){let t={};for(let n in e){let r=e[n];ne.isFunction(r)&&(t[n]=Zr(r),delete e[n])}return t}function Ji(e,t){return!e||e.indexOf(":fail")===-1?t+":ok":t+e.substring(e.indexOf(":fail"))}function lo(e,t={},{beforeAll:n,beforeSuccess:r}={}){ne.isPlainObject(t)||(t={});let{success:a,fail:u,complete:g}=Tr(t),E=ne.isFunction(a),$=ne.isFunction(u),C=ne.isFunction(g),F=Ei++;return Xr(F,e,ue=>{ue=ue||{},ue.errMsg=Ji(ue.errMsg,e),ne.isFunction(n)&&n(ue),ue.errMsg===e+":ok"?(ne.isFunction(r)&&r(ue,t),E&&a(ue)):$&&u(ue),C&&g(ue)}),F}let ur="success",Fi="fail",Zi="complete",In={},zr={};function Vo(e){return function(t){return e(t)||t}}function Ao(e,t){let n=!1;for(let r=0;r<e.length;r++){let a=e[r];if(n)n=Promise.resolve(Vo(a));else{let u=a(t);if(ne.isPromise(u)&&(n=Promise.resolve(u)),u===!1)return{then(){},catch(){}}}}return n||{then(r){return r(t)},catch(){}}}function Vi(e,t={}){return[ur,Fi,Zi].forEach(n=>{let r=e[n];if(!ne.isArray(r))return;let a=t[n];t[n]=function(g){Ao(r,g).then(E=>ne.isFunction(a)&&a(E)||E)}}),t}function vr(e,t){let n=[];ne.isArray(In.returnValue)&&n.push(...In.returnValue);let r=zr[e];return r&&ne.isArray(r.returnValue)&&n.push(...r.returnValue),n.forEach(a=>{t=a(t)||t}),t}function Qr(e){let t=Object.create(null);Object.keys(In).forEach(r=>{r!=="returnValue"&&(t[r]=In[r].slice())});let n=zr[e];return n&&Object.keys(n).forEach(r=>{r!=="returnValue"&&(t[r]=(t[r]||[]).concat(n[r]))}),t}function Nn(e,t,n,r){let a=Qr(e);return a&&Object.keys(a).length?ne.isArray(a.invoke)?Ao(a.invoke,n).then(g=>t(Vi(a,g),...r)):t(Vi(a,n),...r):t(n,...r)}function mr(e){return!!(ne.isPlainObject(e)&&[wi,On,Mn].find(t=>ne.isFunction(e[t])))}function co(e){return e}function Si(e,t){return(n={},...r)=>mr(n)?vr(e,Nn(e,t,n,r)):vr(e,new Promise((a,u)=>{Nn(e,t,ne.extend(n,{success:a,fail:u}),r)}))}function Wr(e,t){let n=e[0];if(!t||!ne.isPlainObject(t.formatArgs)&&ne.isPlainObject(n))return;let r=t.formatArgs,a=Object.keys(r);for(let u=0;u<a.length;u++){let g=a[u],E=r[g];if(ne.isFunction(E)){let $=E(e[0][g],n);if(ne.isString($))return $}else ne.hasOwn(n,g)||(n[g]=E)}}function Co(e,t,n){return Or(e,ne.extend(n||{},{errMsg:t+":ok"}))}function Gr(e,t,n,r){return Or(e,ne.extend({errMsg:t+":fail"+(n?" "+n:"")},r))}function Ai(e,t,n,r){if(r&&r.beforeInvoke){let u=r.beforeInvoke(t);if(ne.isString(u))return u}let a=Wr(t,r);if(a)return a}function uo(e){if(!ne.isFunction(e))throw new Error('Invalid args: type check failed for args "callback". Expected Function')}function $o(e,t,n){return r=>{uo(r);let a=Ai(e,[r],void 0,n);if(a)throw new Error(a);let u=!yi(e);So(e,r),u&&(jr(e),t())}}function Xi(e,t,n){return r=>{uo(r);let a=Ai(e,[r],void 0,n);if(a)throw new Error(a);e=e.replace("off","on"),Ki(e,r),yi(e)||(Di(e),t())}}function fi(e){return!e||ne.isString(e)?e:e.stack?(console.error(e.message+Q.LINEFEED+e.stack),e.message):e}function ei(e,t,n,r){return a=>{let u=lo(e,a,r),g=Ai(e,[a],n,r);return g?Gr(u,e,g):t(a,{resolve:E=>Co(u,e,E),reject:(E,$)=>Gr(u,e,fi(E),$)})}}function di(e,t,n,r){return(...a)=>{let u=Ai(e,a,n,r);if(u)throw new Error(u);return t.apply(null,a)}}function _r(e,t,n,r){return ei(e,t,n,r)}function Yn(e,t,n){return $o(e,t,n)}function $i(e,t,n){return Xi(e,t,n)}function Qi(e,t,n,r){return Si(e,ei(e,t,void 0,r))}function Ft(e,t,n,r){return di(e,t,void 0,r)}function Ee(e,t,n,r){return Si(e,_r(e,t,void 0,r))}let hi="base64ToArrayBuffer",fo=[{name:"base64",type:String,required:!0}],Br="arrayBufferToBase64",Mr=[{name:"arrayBuffer",type:[ArrayBuffer,Uint8Array],required:!0}],Tn=Ft(hi,e=>ln(e),fo),qn=Ft(Br,e=>Sn(e),Mr);function ho(){if(typeof __SYSTEM_INFO__!="undefined")return window.__SYSTEM_INFO__;let{resolutionWidth:e}=s.screen.getCurrentSize()||{resolutionWidth:0};return{platform:(s.os.name||"").toLowerCase(),pixelRatio:s.screen.scale,windowWidth:Math.round(e)}}function Yt(e,t,n){e.$page.meta.isNVue?qt(e,t,n):eo(e,t,n)}function eo(e,t,n){ct.invokeViewMethod("requestComponentInfo",{reqs:t.map(r=>(r.component&&(r.component=r.component.$el.nodeId),r))},e.$page.id,n)}function qt(e,t,n){let r=Lr(t),a=new Array(r.length);br(r,e.$el,a),Kn(e.$requireNativePlugin("dom"),a,0,[],u=>{n(u)})}function Lr(e){let t=[];for(let n=0;n<e.length;n++){let r=e[n].selector;r.indexOf("#")===0&&t.push(r.substring(1))}return t}function br(e,t,n){let r=t.children;if(!ne.isArray(r))return!1;for(let a=0;a<r.length;a++){let u=r[a];if(u.attr){let g=e.indexOf(u.attr.id);if(g>=0&&(n[g]={id:e[g],ref:u.ref,dataset:Q.parseNVueDataset(u.attr)},e.length===1))break}u.children&&br(e,u,n)}}function Kn(e,t,n,r,a){let u=t[n];e.getComponentRect(u.ref,g=>{g.size.id=u.id,g.size.dataset=u.dataset,r.push(g.size),n+=1,n<t.length?Kn(e,t,n,r,a):a(r)})}function nr(e,t){ct.invokeViewMethod("setPageMeta",t,e.$page.id)}let Ci=Array.isArray,Ui=e=>e!==null&&typeof e=="object",go=["{","}"];class Oi{constructor(){this._caches=Object.create(null)}interpolate(t,n,r=go){if(!n)return[t];let a=this._caches[t];return a||(a=no(t,r),this._caches[t]=a),Hi(a,n)}}let to=/^(?:\d)+/,Uo=/^(?:\w)+/;function no(e,[t,n]){let r=[],a=0,u="";for(;a<e.length;){let g=e[a++];if(g===t){u&&r.push({type:"text",value:u}),u="";let E="";for(g=e[a++];g!==void 0&&g!==n;)E+=g,g=e[a++];let $=g===n,C=to.test(E)?"list":$&&Uo.test(E)?"named":"unknown";r.push({value:E,type:C})}else u+=g}return u&&r.push({type:"text",value:u}),r}function Hi(e,t){let n=[],r=0,a=Ci(t)?"list":Ui(t)?"named":"unknown";if(a==="unknown")return n;for(;r<e.length;){let u=e[r];switch(u.type){case"text":n.push(u.value);break;case"list":n.push(t[parseInt(u.value,10)]);break;case"named":a==="named"&&n.push(t[u.value]);break;case"unknown":break}r++}return n}let fr="zh-Hans",Er="zh-Hant",Jn="en",Pr="fr",rr="es",Ti=Object.prototype.hasOwnProperty,dr=(e,t)=>Ti.call(e,t),Ir=new Oi;function ji(e,t){return!!t.find(n=>e.indexOf(n)!==-1)}function ti(e,t){return t.find(n=>e.indexOf(n)===0)}function gi(e,t){if(!e)return;if(e=e.trim().replace(/_/g,"-"),t&&t[e])return e;if(e=e.toLowerCase(),e==="chinese")return fr;if(e.indexOf("zh")===0)return e.indexOf("-hans")>-1?fr:e.indexOf("-hant")>-1||ji(e,["-tw","-hk","-mo","-cht"])?Er:fr;let n=ti(e,[Jn,Pr,rr]);if(n)return n}class Yr{constructor({locale:t,fallbackLocale:n,messages:r,watcher:a,formater:u}){this.locale=Jn,this.fallbackLocale=Jn,this.message={},this.messages={},this.watchers=[],n&&(this.fallbackLocale=n),this.formater=u||Ir,this.messages=r||{},this.setLocale(t||Jn),a&&this.watchLocale(a)}setLocale(t){let n=this.locale;this.locale=gi(t,this.messages)||this.fallbackLocale,this.messages[this.locale]||(this.messages[this.locale]={}),this.message=this.messages[this.locale],n!==this.locale&&this.watchers.forEach(r=>{r(this.locale,n)})}getLocale(){return this.locale}watchLocale(t){let n=this.watchers.push(t)-1;return()=>{this.watchers.splice(n,1)}}add(t,n,r=!0){let a=this.messages[t];a?r?Object.assign(a,n):Object.keys(n).forEach(u=>{dr(a,u)||(a[u]=n[u])}):this.messages[t]=n}f(t,n,r){return this.formater.interpolate(t,n,r).join("")}t(t,n,r){let a=this.message;return typeof n=="string"?(n=gi(n,this.messages),n&&(a=this.messages[n])):r=n,dr(a,t)?this.formater.interpolate(a[t],r).join(""):(console.warn(`Cannot translate the value of keypath ${t}. Use the value of keypath as default.`),t)}}function Pi(e,t){e.$watchLocale?e.$watchLocale(n=>{t.setLocale(n)}):e.$watch(()=>e.$locale,n=>{t.setLocale(n)})}function zi(){return typeof Lt!="undefined"&&Lt.getLocale?Lt.getLocale():typeof global!="undefined"&&global.getLocale?global.getLocale():Jn}function Oo(e,t={},n,r){typeof e!="string"&&([e,t]=[t,e]),typeof e!="string"&&(e=zi()),typeof n!="string"&&(n=typeof P!="undefined"&&P.fallbackLocale||Jn);let a=new Yr({locale:e,fallbackLocale:n,messages:t,watcher:r}),u=(g,E)=>{if(typeof Hn!="function")u=function($,C){return a.t($,C)};else{let $=!1;u=function(C,F){let ue=Hn().$vm;return ue&&(ue.$locale,$||($=!0,Pi(ue,a))),a.t(C,F)}}return u(g,E)};return{i18n:a,f(g,E,$){return a.f(g,E,$)},t(g,E){return u(g,E)},add(g,E,$=!0){return a.add(g,E,$)},watch(g){return a.watchLocale(g)},getLocale(){return a.getLocale()},setLocale(g){return a.setLocale(g)}}}function B(e,t){return e.indexOf(t[0])>-1}let ee=Q.once(()=>typeof P!="undefined"&&P.locales&&!!Object.keys(P.locales).length),le;function z(){let e=Lt.getLocale(),t=P.locales;return t[e]||t[P.fallbackLocale]||t.en||{}}function L(e){return B(e,Q.I18N_JSON_DELIMITERS)?Ye().f(e,z(),Q.I18N_JSON_DELIMITERS):e}function K(e,t){if(t.length===1){if(e){let r=e[t[0]];if(ne.isString(r)&&B(r,Q.I18N_JSON_DELIMITERS))return e}return}let n=t.shift();return K(e&&e[n],t)}function he(e,t){return t.map(n=>Ue(e,n))}function Ue(e,t){let n=K(e,t);if(!n)return!1;let r=t[t.length-1],a=n[r];return Object.defineProperty(n,r,{get(){return L(a)},set(u){a=u}}),!0}function Ye(){if(!le){let e;if(typeof Hn=="function"?e=p.requireModule("plus").getLanguage():e=s.webview.currentWebview().getStyle().locale,le=Oo(e),ee()){let t=Object.keys(P.locales||{});t.length&&t.forEach(n=>le.add(n,P.locales[n])),le.setLocale(e)}}return le}function gt(e,t,n){return t.reduce((r,a,u)=>(r[e+a]=n[u],r),{})}let yn=Q.once(()=>{let e="uni.app.",t=["quit"];Ye().add(Jn,gt(e,t,["Press back button again to exit"]),!1),Ye().add(rr,gt(e,t,["Pulse otra vez para salir"]),!1),Ye().add(Pr,gt(e,t,["Appuyez \xE0 nouveau pour quitter l'application"]),!1),Ye().add(fr,gt(e,t,["\u518D\u6309\u4E00\u6B21\u9000\u51FA\u5E94\u7528"]),!1),Ye().add(Er,gt(e,t,["\u518D\u6309\u4E00\u6B21\u9000\u51FA\u61C9\u7528"]),!1)}),ni=Q.once(()=>{let e="uni.showActionSheet.",t=["cancel"];Ye().add(Jn,gt(e,t,["Cancel"]),!1),Ye().add(rr,gt(e,t,["Cancelar"]),!1),Ye().add(Pr,gt(e,t,["Annuler"]),!1),Ye().add(fr,gt(e,t,["\u53D6\u6D88"]),!1),Ye().add(Er,gt(e,t,["\u53D6\u6D88"]),!1)}),ir=Q.once(()=>{let e="uni.showModal.",t=["cancel","confirm"];Ye().add(Jn,gt(e,t,["Cancel","OK"]),!1),Ye().add(rr,gt(e,t,["Cancelar","OK"]),!1),Ye().add(Pr,gt(e,t,["Annuler","OK"]),!1),Ye().add(fr,gt(e,t,["\u53D6\u6D88","\u786E\u5B9A"]),!1),Ye().add(Er,gt(e,t,["\u53D6\u6D88","\u78BA\u5B9A"]),!1)}),Zn=Q.once(()=>{let e="uni.chooseImage.",t=["cancel","sourceType.album","sourceType.camera"];Ye().add(Jn,gt(e,t,["Cancel","Album","Camera"]),!1),Ye().add(rr,gt(e,t,["Cancelar","\xC1lbum","C\xE1mara"]),!1),Ye().add(Pr,gt(e,t,["Annuler","Album","Cam\xE9ra"]),!1),Ye().add(fr,gt(e,t,["\u53D6\u6D88","\u4ECE\u76F8\u518C\u9009\u62E9","\u62CD\u6444"]),!1),Ye().add(Er,gt(e,t,["\u53D6\u6D88","\u5F9E\u76F8\u518A\u9078\u64C7","\u62CD\u651D"]),!1)}),kn=Q.once(()=>{let e="uni.chooseVideo.",t=["cancel","sourceType.album","sourceType.camera"];Ye().add(Jn,gt(e,t,["Cancel","Album","Camera"]),!1),Ye().add(rr,gt(e,t,["Cancelar","\xC1lbum","C\xE1mara"]),!1),Ye().add(Pr,gt(e,t,["Annuler","Album","Cam\xE9ra"]),!1),Ye().add(fr,gt(e,t,["\u53D6\u6D88","\u4ECE\u76F8\u518C\u9009\u62E9","\u62CD\u6444"]),!1),Ye().add(Er,gt(e,t,["\u53D6\u6D88","\u5F9E\u76F8\u518A\u9078\u64C7","\u62CD\u651D"]),!1)}),Wi=Q.once(()=>{let e="uni.previewImage.",t=["cancel","button.save","save.success","save.fail"];Ye().add(Jn,gt(e,t,["Cancel","Save Image","Saved successfully","Save failed"]),!1),Ye().add(rr,gt(e,t,["Cancelar","Guardar imagen","Guardado exitosamente","Error al guardar"]),!1),Ye().add(Pr,gt(e,t,["Annuler","Guardar imagen","Enregistr\xE9 avec succ\xE8s","\xC9chec de la sauvegarde"]),!1),Ye().add(fr,gt(e,t,["\u53D6\u6D88","\u4FDD\u5B58\u56FE\u50CF","\u4FDD\u5B58\u56FE\u50CF\u5230\u76F8\u518C\u6210\u529F","\u4FDD\u5B58\u56FE\u50CF\u5230\u76F8\u518C\u5931\u8D25"]),!1),Ye().add(Er,gt(e,t,["\u53D6\u6D88","\u4FDD\u5B58\u5716\u50CF","\u4FDD\u5B58\u5716\u50CF\u5230\u76F8\u518A\u6210\u529F","\u4FDD\u5B58\u5716\u50CF\u5230\u76F8\u518A\u5931\u6557"]),!1)}),ea=Q.once(()=>{let e="uni.setClipboardData.",t=["success","fail"];Ye().add(Jn,gt(e,t,["Content copied","Copy failed, please copy manually"]),!1),Ye().add(rr,gt(e,t,["Contenido copiado","Error al copiar, copie manualmente"]),!1),Ye().add(Pr,gt(e,t,["Contenu copi\xE9","\xC9chec de la copie, copiez manuellement"]),!1),Ye().add(fr,gt(e,t,["\u5185\u5BB9\u5DF2\u590D\u5236","\u590D\u5236\u5931\u8D25\uFF0C\u8BF7\u624B\u52A8\u590D\u5236"]),!1),Ye().add(Er,gt(e,t,["\u5167\u5BB9\u5DF2\u5FA9\u5236","\u5FA9\u5236\u5931\u6557\uFF0C\u8ACB\u624B\u52D5\u5FA9\u88FD"]),!1)}),Ma=Q.once(()=>{let e="uni.scanCode.",t=["title","album","fail","flash.on","flash.off"];Ye().add(Jn,gt(e,t,["Scan code","Album","Recognition failure","Tap to turn light on","Tap to turn light off"]),!1),Ye().add(rr,gt(e,t,["C\xF3digo de escaneo","\xC1lbum","\xC9chec de la reconnaissance","Toque para encender la luz","Toque para apagar la luz"]),!1),Ye().add(Pr,gt(e,t,["Code d\u2019analyse","Album","Fallo de reconocimiento","Appuyez pour activer l'\xE9clairage","Appuyez pour d\xE9sactiver l'\xE9clairage"]),!1),Ye().add(fr,gt(e,t,["\u626B\u7801","\u76F8\u518C","\u8BC6\u522B\u5931\u8D25","\u8F7B\u89E6\u7167\u4EAE","\u8F7B\u89E6\u5173\u95ED"]),!1),Ye().add(Er,gt(e,t,["\u6383\u78BC","\u76F8\u518A","\u8B58\u5225\u5931\u6557","\u8F15\u89F8\u7167\u4EAE","\u8F15\u89F8\u95DC\u9589"]),!1)}),ta=Q.once(()=>{let e="uni.startSoterAuthentication.",t=["authContent"];Ye().add(Jn,gt(e,t,["Fingerprint recognition"]),!1),Ye().add(rr,gt(e,t,["Reconocimiento de huellas dactilares"]),!1),Ye().add(Pr,gt(e,t,["Reconnaissance de l'empreinte digitale"]),!1),Ye().add(fr,gt(e,t,["\u6307\u7EB9\u8BC6\u522B\u4E2D..."]),!1),Ye().add(Er,gt(e,t,["\u6307\u7D0B\u8B58\u5225\u4E2D..."]),!1)});function ba(e){if(ee())return he(e,[["titleText"],["searchInput","placeholder"]])}function Ea(e){if(ee()){let t="caption";return he(e,[["contentdown",t],["contentover",t],["contentrefresh",t]])}}function La(e){let t=new Q.Emitter;return{on(n,r){return t.on(n,r)},once(n,r){return t.once(n,r)},off(n,r){return t.off(n,r)},emit(n,...r){return t.emit(n,...r)},subscribe(n,r,a=!1){t[a?"once":"on"](`${e}.${n}`,r)},unsubscribe(n,r){t.off(`${e}.${n}`,r)},subscribeHandler(n,r,a){t.emit(`${e}.${n}`,r,a)}}}let na="invokeViewApi",ra="invokeServiceApi";function ia(e){return e=e+"",e.indexOf("rpx")!==-1||e.indexOf("upx")!==-1}function Ho(e,t=!1){if(t)return ya(e);if(typeof e=="string"){let n=parseInt(e)||0;return ia(e)?Lt.upx2px(n):n}return e}function ya(e){return ia(e)?e.replace(/(\d+(\.\d+)?)[ru]px/g,(t,n)=>Lt.upx2px(parseFloat(n))+"px"):e}function yr(e){let t=Q.resolveComponentInstance(e);if(t.$page)return t.$page.id;if(!t.$)return;let n=t.$.root.proxy;if(n&&n.$page)return n.$page.id}function ri(){let e=Pn(),t=e.length;if(t)return e[t-1]}function wa(){let e=ri();if(e)return e.$page.meta}function Da(){let e=wa();return e?e.id:-1}function qr(){let e=ri();if(e)return e.$vm}let ws=["navigationBar","pullToRefresh"];function Dr(){return JSON.parse(JSON.stringify(P.globalStyle||{}))}function Ii(e,t){let n=Dr(),r=ne.extend({id:t},n,e);ws.forEach(u=>{r[u]=ne.extend({},n[u],e[u])});let{navigationBar:a}=r;return a.titleText&&a.titleImage&&(a.titleText=""),r}function is(e){return JSON.parse(Ho(JSON.stringify(e),!0))}function Ss(e){return e.offset&&(e.offset=Ho(e.offset)),e.height&&(e.height=Ho(e.height)),e.range&&(e.range=Ho(e.range)),e}function Sa(e,t,n,r,a){let{id:u,route:g}=r;return{id:u,path:Q.addLeadingSlash(g),route:g,fullPath:t,options:n,meta:r,openType:e,eventChannel:a,statusBarStyle:r.navigationBar.titleColor==="#000000"?"dark":"light"}}function Ni(e,t,n){let r=e.$[t];!ne.isArray(r)||n.__weh&&ne.remove(r,n.__weh)}function gn(e,t,n){if(ne.isString(e))n=t,t=e,e=qr();else if(typeof e=="number"){let a=Pn().find(u=>u.$page.id===e);a?e=a.$vm:e=qr()}if(!e)return;if(e.__call_hook)return e.__call_hook(t,n);let r=e.$[t];return r&&Q.invokeArrayFns(r,n)}function jo(e){if(e.indexOf("/")===0)return e;let t="",n=Pn();return n.length&&(t=n[n.length-1].$page.route),To(t,e)}function To(e,t){if(t.indexOf("/")===0)return t;if(t.indexOf("./")===0)return To(e,t.slice(2));let n=t.split("/"),r=n.length,a=0;for(;a<r&&n[a]==="..";a++);n.splice(0,a),t=n.join("/");let u=e.length>0?e.split("/"):[];return u.splice(u.length-a-1,a+1),Q.addLeadingSlash(u.concat(n).join("/"))}function Un(e,t=!1){return t?$e.find(n=>n.path===e||n.alias===e):$e.find(n=>n.path===e)}function or(e){let t=Un(e);if(t)return t.meta}let Kr,Fa,ii;function ki(){return typeof window=="object"&&typeof navigator=="object"&&typeof document=="object"?"webview":"v8"}function oa(){return Kr.webview.currentWebview().id}let Aa,Po,oi={};function zo(e){let t=e.data&&e.data.__message;if(!t||!t.__page)return;let n=t.__page,r=oi[n];r&&r(t),t.keep||delete oi[n]}function Va(e,t){ki()==="v8"?ii?(Aa&&Aa.close(),Aa=new ii(oa()),Aa.onmessage=zo):Po||(Po=Fa.requireModule("globalEvent"),Po.addEventListener("plusMessage",zo)):window.__plusMessage=zo,oi[e]=t}class aa{constructor(t){this.webview=t}sendMessage(t){let n=JSON.parse(JSON.stringify({__message:{data:t}})),r=this.webview.id;ii?new ii(r).postMessage(n):Kr.webview.postMessageToUniNView&&Kr.webview.postMessageToUniNView(n,r)}close(){this.webview.close()}}function Wo({context:e={},url:t,data:n={},style:r={},onMessage:a,onClose:u}){Kr=e.plus||s,Fa=e.weex||(typeof p=="object"?p:null),ii=e.BroadcastChannel||(typeof BroadcastChannel=="object"?BroadcastChannel:null);let g={autoBackButton:!0,titleSize:"17px"},E=`page${Date.now()}`;r=ne.extend({},r),r.titleNView!==!1&&r.titleNView!=="none"&&(r.titleNView=ne.extend(g,r.titleNView));let $={top:0,bottom:0,usingComponents:{},popGesture:"close",scrollIndicator:"none",animationType:"pop-in",animationDuration:200,uniNView:{path:`/${t}.js`,defaultFontSize:16,viewport:Kr.screen.resolutionWidth}};r=ne.extend($,r);let C=Kr.webview.create("",E,r,{extras:{from:oa(),runtime:ki(),data:n,useGlobalEvent:!ii}});return C.addEventListener("close",u),Va(E,F=>{typeof a=="function"&&a(F.data),F.keep||C.close("auto")}),C.show(r.animationType,r.animationDuration),new aa(C)}let _=(e,t)=>ct.emit("api."+e,t),R=1;function j(){return Da()+"."+na}let U=(e,t,n,r)=>{let{subscribe:a,publishHandler:u}=ct,g=r?R++:0;r&&a(na+"."+g,r,!0),u(j(),{id:g,name:e,args:t},n)},J=(e,t,n,r)=>{let{subscribe:a,unsubscribe:u,publishHandler:g}=ct,E=R++,$=na+"."+E;return a($,n),g(j(),{id:E,name:e,args:t},r),()=>{u($)}},Z=Object.create(null);function se(){ct.subscribe(ra,Pe)}function pe(e,t){Z[e]||(Z[e]=t)}function Pe({id:e,name:t,args:n},r){let a=g=>{e&&ct.publishHandler(ra+"."+e,g,r)},u=Z[t];u?u(n,a):a({})}let ye=ne.extend(La("view"),{invokeOnCallback:_,invokeViewMethod:U,invokeViewMethodKeepAlive:J});function ae(){let{on:e}=ct;e(Q.ON_RESIZE,_e),e(Q.ON_APP_ENTER_FOREGROUND,ze),e(Q.ON_APP_ENTER_BACKGROUND,ft)}function _e(e){gn(ri(),Q.ON_RESIZE,e),ct.invokeOnCallback("onWindowResize",e)}function ze(e){let t=ri();gn(Hn(),Q.ON_SHOW,e),gn(t,Q.ON_SHOW)}function ft(){gn(Hn(),Q.ON_HIDE),gn(ri(),Q.ON_HIDE)}let xt=[Q.ON_PAGE_SCROLL,Q.ON_REACH_BOTTOM];function ot(){xt.forEach(e=>ct.subscribe(e,lt(e)))}function lt(e){return(t,n)=>{gn(parseInt(n),e,t)}}function wt(){ae(),ot()}function tn(e){e.$vm=e,e.$mpType="app";let t=on.ref(Ye().getLocale());Object.defineProperty(e,"$locale",{get(){return t.value},set(n){t.value=n}})}function Kt(e,t){e.route=t.route,e.$vm=e,e.$page=t,e.$mpType="page",t.meta.isTabBar&&(e.$.__isTabBar=!0,e.$.__isActive=!0)}function dt(){return{path:"",query:{},scene:1001,referrerInfo:{appId:"",extraData:{}}}}function zt(e,t){let n=e.$options||{};n.globalData=ne.extend(n.globalData||{},t),Object.defineProperty(e,"globalData",{get(){return n.globalData},set(r){n.globalData=r}})}function Ot(e){if(e.indexOf("//")===0)return"https:"+e;if(Q.SCHEME_RE.test(e)||Q.DATA_RE.test(e))return e;if(an(e))return"file://"+Jt(e);let t="file://"+Jt("_www");if(e.indexOf("/")===0)return e.startsWith("/storage/")||e.startsWith("/sdcard/")||e.includes("/Containers/Data/Application/")?"file://"+e:t+e;if(e.indexOf("../")===0||e.indexOf("./")===0){if(typeof __id__=="string")return t+To(Q.addLeadingSlash(__id__),e);{let n=ri();if(n)return t+To(Q.addLeadingSlash(n.route),e)}}return e}let Jt=Q.cacheStringFunction(e=>s.io.convertLocalFileSystemURL(e).replace(/^\/?apps\//,"/android_asset/apps/").replace(/\/$/,""));function an(e){return e.indexOf("_www")===0||e.indexOf("_doc")===0||e.indexOf("_documents")===0||e.indexOf("_downloads")===0}let mn="success",Rn="fail",No=[mn,Rn,"complete"];function Ht(e,t,n,r){if(!e)return;if(typeof n=="undefined")return e[t]();let[,a]=ai(n,r);return Object.keys(a).length?e[t](sa(t,a)):e[t]()}function Ut(e,t,n,r){if(!e)return;let[a,u]=ai(n,r);return Object.keys(u).length?e[t](a,sa(t,u)):e[t](a)}function Go(e,t){let n=Fr(e,t.$el);return n||console.error("Can not find `"+e+"`")}function Fr(e,t){if(!e||!t)return;if(t.attr&&t.attr.id===e)return t;let n=t.children;if(!!n)for(let r=0,a=n.length;r<a;r++){let u=Fr(e,n[r]);if(u)return u}}function ai(e={},t){let n=Object.create(null),r=function(u){let g=e[u];ne.isFunction(g)&&(n[u]=g,delete e[u])};return No.forEach(r),t&&t.forEach(r),[e,n]}function sa(e,t){return function(r){let a=r.type;delete r.type;let u=t[a];if(a===mn?r.errMsg=`${e}:ok`:a===Rn&&(r.errMsg=e+":fail "+(r.msg?" "+r.msg:"")),delete r.code,delete r.msg,ne.isFunction(u)&&u(r),a===mn||a===Rn){let g=t.complete;ne.isFunction(g)&&g(r)}}}let wr={play(e){return Ht(e,"play")},pause(e){return Ht(e,"pause")},seek(e,t){return Ut(e,"seek",t.position)},stop(e){return Ht(e,"stop")},sendDanmu(e,t){return Ut(e,"sendDanmu",t)},playbackRate(e,t){return Ut(e,"playbackRate",t.rate)},requestFullScreen(e,t={}){return Ut(e,"requestFullScreen",t)},exitFullScreen(e){return Ht(e,"exitFullScreen")},showStatusBar(e){return Ht(e,"showStatusBar")},hideStatusBar(e){return Ht(e,"hideStatusBar")}};function Ln(e,t,n,r){let a=Pn().find(u=>u.$page.id===t);if(a==null?void 0:a.$page.meta.isNVue){let u=a.$vm;return wr[n](Go(e,u),r)}ct.invokeViewMethod("video."+e,{videoId:e,type:n,data:r},t)}let Xn={getCenterLocation(e,t){return Ht(e,"getCenterLocation",t)},moveToLocation(e,t){return Ut(e,"moveToLocation",t)},translateMarker(e,t){return Ut(e,"translateMarker",t,["animationEnd"])},includePoints(e,t){return Ut(e,"includePoints",t)},getRegion(e,t){return Ht(e,"getRegion",t)},getScale(e,t){return Ht(e,"getScale",t)},addCustomLayer(e,t){return Ut(e,"addCustomLayer",t)},removeCustomLayer(e,t){return Ut(e,"removeCustomLayer",t)},addGroundOverlay(e,t){return Ut(e,"addGroundOverlay",t)},removeGroundOverlay(e,t){return Ut(e,"removeGroundOverlay",t)},updateGroundOverlay(e,t){return Ut(e,"updateGroundOverlay",t)},initMarkerCluster(e,t){return Ut(e,"initMarkerCluster",t)},addMarkers(e,t){return Ut(e,"addMarkers",t)},removeMarkers(e,t){return Ut(e,"removeMarkers",t)},moveAlong(e,t){return Ut(e,"moveAlong",t)},openMapApp(e,t){return Ut(e,"openMapApp",t)},on(e,t){return e.on(t.name,t.callback)}};function Ri(e,t,n,r,a){let u=Pn().find(g=>g.$page.id===t);if(u==null?void 0:u.$page.meta.isNVue){let g=u.$vm;return Xn[n](Go(e,g),r)}ct.invokeViewMethod("map."+e,{type:n,data:r},t,a)}function Yo(e){return`IntersectionObserver.${e}`}function ar({reqId:e,component:t,options:n,callback:r},a){let u=Yo(e);ct.invokeViewMethod("addIntersectionObserver",{reqId:e,component:t.$el.nodeId,options:n,eventName:u},a),ct.subscribe(u,r)}function hr({reqId:e,component:t},n){ct.invokeViewMethod("removeIntersectionObserver",{reqId:e,component:t.$el.nodeId},n),ct.unsubscribe(Yo(e))}function xi(e){return`MediaQueryObserver.${e}`}function po({reqId:e,component:t,options:n,callback:r},a){let u=xi(e);ct.invokeViewMethod("addMediaQueryObserver",{reqId:e,component:t.$el.nodeId,options:n,eventName:u},a),ct.subscribe(u,r)}function la({reqId:e,component:t},n){ct.invokeViewMethod("removeMediaQueryObserver",{reqId:e,component:t.$el.nodeId},n),ct.unsubscribe(xi(e))}function $a(e){let t=e.split("/");return t[t.length-1]}function Ua(e){let t=e.split(".");return t.length>1?"."+t[t.length-1]:""}let Gi=200,qo=["unknown","none","ethernet","wifi","2g","3g","4g","5g"],Ca="_doc/uniapp_temp",Bi=`${Ca}_${Date.now()}`,os="backbutton";function vo(){Lt.navigateBack({from:"backbutton",success(){}})}let Dn=dt(),dn=dt();function Nr(){return ne.extend({},dn)}function Sr(){return ne.extend({},Dn)}function pi({path:e,query:t,referrerInfo:n}){ne.extend(Dn,{path:e,query:t?Q.parseQuery(t):{},referrerInfo:n||{}})}function ca({path:e,query:t,referrerInfo:n}){return ne.extend(dn,{path:e,query:t?Q.parseQuery(t):{},referrerInfo:n||{}}),ne.extend(Dn,dn),ne.extend({},dn)}function Ha(){let e=p.requireModule("plus");if(e.getRedirectInfo){let{path:t,query:n,extraData:r,userAction:a,fromAppid:u}=e.getRedirectInfo()||{},g={appId:u,extraData:{}};return r&&(g.extraData=r),{path:t||"",query:n?"?"+n:"",referrerInfo:g,userAction:a}}}function mo(e){var t={exports:{}};return e(t,t.exports),t.exports}var Ko=mo(function(e,t){var n=typeof Uint8Array!="undefined"&&typeof Uint16Array!="undefined"&&typeof Int32Array!="undefined";function r(g,E){return Object.prototype.hasOwnProperty.call(g,E)}t.assign=function(g){for(var E=Array.prototype.slice.call(arguments,1);E.length;){var $=E.shift();if(!!$){if(typeof $!="object")throw new TypeError($+"must be non-object");for(var C in $)r($,C)&&(g[C]=$[C])}}return g},t.shrinkBuf=function(g,E){return g.length===E?g:g.subarray?g.subarray(0,E):(g.length=E,g)};var a={arraySet:function(g,E,$,C,F){if(E.subarray&&g.subarray){g.set(E.subarray($,$+C),F);return}for(var ue=0;ue<C;ue++)g[F+ue]=E[$+ue]},flattenChunks:function(g){var E,$,C,F,ue,be;for(C=0,E=0,$=g.length;E<$;E++)C+=g[E].length;for(be=new Uint8Array(C),F=0,E=0,$=g.length;E<$;E++)ue=g[E],be.set(ue,F),F+=ue.length;return be}},u={arraySet:function(g,E,$,C,F){for(var ue=0;ue<C;ue++)g[F+ue]=E[$+ue]},flattenChunks:function(g){return[].concat.apply([],g)}};t.setTyped=function(g){g?(t.Buf8=Uint8Array,t.Buf16=Uint16Array,t.Buf32=Int32Array,t.assign(t,a)):(t.Buf8=Array,t.Buf16=Array,t.Buf32=Array,t.assign(t,u))},t.setTyped(n)}),kt=Ko,as=4,xe=0,At=1,Rt=2;function cn(e){for(var t=e.length;--t>=0;)e[t]=0}var Wn=0,kr=1,ko=2,_o=3,Ro=258,Oa=29,Jo=256,Ta=Jo+1+Oa,Pa=30,As=19,Zs=2*Ta+1,ua=15,Cs=16,Xs=7,ss=256,Qs=16,el=17,tl=18,ja=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],za=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],Hl=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],nl=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],rl=512,ro=new Array((Ta+2)*2);cn(ro);var Ia=new Array(Pa*2);cn(Ia);var Wa=new Array(rl);cn(Wa);var Ga=new Array(Ro-_o+1);cn(Ga);var fa=new Array(Oa);cn(fa);var Na=new Array(Pa);cn(Na);function ka(e,t,n,r,a){this.static_tree=e,this.extra_bits=t,this.extra_base=n,this.elems=r,this.max_length=a,this.has_stree=e&&e.length}var Os,Ya,ls;function cs(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}function il(e){return e<256?Wa[e]:Wa[256+(e>>>7)]}function qa(e,t){e.pending_buf[e.pending++]=t&255,e.pending_buf[e.pending++]=t>>>8&255}function si(e,t,n){e.bi_valid>Cs-n?(e.bi_buf|=t<<e.bi_valid&65535,qa(e,e.bi_buf),e.bi_buf=t>>Cs-e.bi_valid,e.bi_valid+=n-Cs):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=n)}function io(e,t,n){si(e,n[t*2],n[t*2+1])}function Ts(e,t){var n=0;do n|=e&1,e>>>=1,n<<=1;while(--t>0);return n>>>1}function ol(e){e.bi_valid===16?(qa(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=e.bi_buf&255,e.bi_buf>>=8,e.bi_valid-=8)}function al(e,t){var n=t.dyn_tree,r=t.max_code,a=t.stat_desc.static_tree,u=t.stat_desc.has_stree,g=t.stat_desc.extra_bits,E=t.stat_desc.extra_base,$=t.stat_desc.max_length,C,F,ue,be,Ie,_t,Bt=0;for(be=0;be<=ua;be++)e.bl_count[be]=0;for(n[e.heap[e.heap_max]*2+1]=0,C=e.heap_max+1;C<Zs;C++)F=e.heap[C],be=n[n[F*2+1]*2+1]+1,be>$&&(be=$,Bt++),n[F*2+1]=be,!(F>r)&&(e.bl_count[be]++,Ie=0,F>=E&&(Ie=g[F-E]),_t=n[F*2],e.opt_len+=_t*(be+Ie),u&&(e.static_len+=_t*(a[F*2+1]+Ie)));if(Bt!==0){do{for(be=$-1;e.bl_count[be]===0;)be--;e.bl_count[be]--,e.bl_count[be+1]+=2,e.bl_count[$]--,Bt-=2}while(Bt>0);for(be=$;be!==0;be--)for(F=e.bl_count[be];F!==0;)ue=e.heap[--C],!(ue>r)&&(n[ue*2+1]!==be&&(e.opt_len+=(be-n[ue*2+1])*n[ue*2],n[ue*2+1]=be),F--)}}function us(e,t,n){var r=new Array(ua+1),a=0,u,g;for(u=1;u<=ua;u++)r[u]=a=a+n[u-1]<<1;for(g=0;g<=t;g++){var E=e[g*2+1];E!==0&&(e[g*2]=Ts(r[E]++,E))}}function sl(){var e,t,n,r,a,u=new Array(ua+1);for(n=0,r=0;r<Oa-1;r++)for(fa[r]=n,e=0;e<1<<ja[r];e++)Ga[n++]=r;for(Ga[n-1]=r,a=0,r=0;r<16;r++)for(Na[r]=a,e=0;e<1<<za[r];e++)Wa[a++]=r;for(a>>=7;r<Pa;r++)for(Na[r]=a<<7,e=0;e<1<<za[r]-7;e++)Wa[256+a++]=r;for(t=0;t<=ua;t++)u[t]=0;for(e=0;e<=143;)ro[e*2+1]=8,e++,u[8]++;for(;e<=255;)ro[e*2+1]=9,e++,u[9]++;for(;e<=279;)ro[e*2+1]=7,e++,u[7]++;for(;e<=287;)ro[e*2+1]=8,e++,u[8]++;for(us(ro,Ta+1,u),e=0;e<Pa;e++)Ia[e*2+1]=5,Ia[e*2]=Ts(e,5);Os=new ka(ro,ja,Jo+1,Ta,ua),Ya=new ka(Ia,za,0,Pa,ua),ls=new ka(new Array(0),Hl,0,As,Xs)}function Ps(e){var t;for(t=0;t<Ta;t++)e.dyn_ltree[t*2]=0;for(t=0;t<Pa;t++)e.dyn_dtree[t*2]=0;for(t=0;t<As;t++)e.bl_tree[t*2]=0;e.dyn_ltree[ss*2]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0}function ll(e){e.bi_valid>8?qa(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0}function jl(e,t,n,r){ll(e),r&&(qa(e,n),qa(e,~n)),kt.arraySet(e.pending_buf,e.window,t,n,e.pending),e.pending+=n}function cl(e,t,n,r){var a=t*2,u=n*2;return e[a]<e[u]||e[a]===e[u]&&r[t]<=r[n]}function Ka(e,t,n){for(var r=e.heap[n],a=n<<1;a<=e.heap_len&&(a<e.heap_len&&cl(t,e.heap[a+1],e.heap[a],e.depth)&&a++,!cl(t,r,e.heap[a],e.depth));)e.heap[n]=e.heap[a],n=a,a<<=1;e.heap[n]=r}function Is(e,t,n){var r,a,u=0,g,E;if(e.last_lit!==0)do r=e.pending_buf[e.d_buf+u*2]<<8|e.pending_buf[e.d_buf+u*2+1],a=e.pending_buf[e.l_buf+u],u++,r===0?io(e,a,t):(g=Ga[a],io(e,g+Jo+1,t),E=ja[g],E!==0&&(a-=fa[g],si(e,a,E)),r--,g=il(r),io(e,g,n),E=za[g],E!==0&&(r-=Na[g],si(e,r,E)));while(u<e.last_lit);io(e,ss,t)}function bo(e,t){var n=t.dyn_tree,r=t.stat_desc.static_tree,a=t.stat_desc.has_stree,u=t.stat_desc.elems,g,E,$=-1,C;for(e.heap_len=0,e.heap_max=Zs,g=0;g<u;g++)n[g*2]!==0?(e.heap[++e.heap_len]=$=g,e.depth[g]=0):n[g*2+1]=0;for(;e.heap_len<2;)C=e.heap[++e.heap_len]=$<2?++$:0,n[C*2]=1,e.depth[C]=0,e.opt_len--,a&&(e.static_len-=r[C*2+1]);for(t.max_code=$,g=e.heap_len>>1;g>=1;g--)Ka(e,n,g);C=u;do g=e.heap[1],e.heap[1]=e.heap[e.heap_len--],Ka(e,n,1),E=e.heap[1],e.heap[--e.heap_max]=g,e.heap[--e.heap_max]=E,n[C*2]=n[g*2]+n[E*2],e.depth[C]=(e.depth[g]>=e.depth[E]?e.depth[g]:e.depth[E])+1,n[g*2+1]=n[E*2+1]=C,e.heap[1]=C++,Ka(e,n,1);while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],al(e,t),us(n,$,e.bl_count)}function Ra(e,t,n){var r,a=-1,u,g=t[0*2+1],E=0,$=7,C=4;for(g===0&&($=138,C=3),t[(n+1)*2+1]=65535,r=0;r<=n;r++)u=g,g=t[(r+1)*2+1],!(++E<$&&u===g)&&(E<C?e.bl_tree[u*2]+=E:u!==0?(u!==a&&e.bl_tree[u*2]++,e.bl_tree[Qs*2]++):E<=10?e.bl_tree[el*2]++:e.bl_tree[tl*2]++,E=0,a=u,g===0?($=138,C=3):u===g?($=6,C=3):($=7,C=4))}function fs(e,t,n){var r,a=-1,u,g=t[0*2+1],E=0,$=7,C=4;for(g===0&&($=138,C=3),r=0;r<=n;r++)if(u=g,g=t[(r+1)*2+1],!(++E<$&&u===g)){if(E<C)do io(e,u,e.bl_tree);while(--E!==0);else u!==0?(u!==a&&(io(e,u,e.bl_tree),E--),io(e,Qs,e.bl_tree),si(e,E-3,2)):E<=10?(io(e,el,e.bl_tree),si(e,E-3,3)):(io(e,tl,e.bl_tree),si(e,E-11,7));E=0,a=u,g===0?($=138,C=3):u===g?($=6,C=3):($=7,C=4)}}function ul(e){var t;for(Ra(e,e.dyn_ltree,e.l_desc.max_code),Ra(e,e.dyn_dtree,e.d_desc.max_code),bo(e,e.bl_desc),t=As-1;t>=3&&e.bl_tree[nl[t]*2+1]===0;t--);return e.opt_len+=3*(t+1)+5+5+4,t}function zl(e,t,n,r){var a;for(si(e,t-257,5),si(e,n-1,5),si(e,r-4,4),a=0;a<r;a++)si(e,e.bl_tree[nl[a]*2+1],3);fs(e,e.dyn_ltree,t-1),fs(e,e.dyn_dtree,n-1)}function Zo(e){var t=4093624447,n;for(n=0;n<=31;n++,t>>>=1)if(t&1&&e.dyn_ltree[n*2]!==0)return xe;if(e.dyn_ltree[9*2]!==0||e.dyn_ltree[10*2]!==0||e.dyn_ltree[13*2]!==0)return At;for(n=32;n<Jo;n++)if(e.dyn_ltree[n*2]!==0)return At;return xe}var Ns=!1;function fl(e){Ns||(sl(),Ns=!0),e.l_desc=new cs(e.dyn_ltree,Os),e.d_desc=new cs(e.dyn_dtree,Ya),e.bl_desc=new cs(e.bl_tree,ls),e.bi_buf=0,e.bi_valid=0,Ps(e)}function dl(e,t,n,r){si(e,(Wn<<1)+(r?1:0),3),jl(e,t,n,!0)}function ks(e){si(e,kr<<1,3),io(e,ss,ro),ol(e)}function xo(e,t,n,r){var a,u,g=0;e.level>0?(e.strm.data_type===Rt&&(e.strm.data_type=Zo(e)),bo(e,e.l_desc),bo(e,e.d_desc),g=ul(e),a=e.opt_len+3+7>>>3,u=e.static_len+3+7>>>3,u<=a&&(a=u)):a=u=n+5,n+4<=a&&t!==-1?dl(e,t,n,r):e.strategy===as||u===a?(si(e,(kr<<1)+(r?1:0),3),Is(e,ro,Ia)):(si(e,(ko<<1)+(r?1:0),3),zl(e,e.l_desc.max_code+1,e.d_desc.max_code+1,g+1),Is(e,e.dyn_ltree,e.dyn_dtree)),Ps(e),r&&ll(e)}function da(e,t,n){return e.pending_buf[e.d_buf+e.last_lit*2]=t>>>8&255,e.pending_buf[e.d_buf+e.last_lit*2+1]=t&255,e.pending_buf[e.l_buf+e.last_lit]=n&255,e.last_lit++,t===0?e.dyn_ltree[n*2]++:(e.matches++,t--,e.dyn_ltree[(Ga[n]+Jo+1)*2]++,e.dyn_dtree[il(t)*2]++),e.last_lit===e.lit_bufsize-1}var hl=fl,Wl=dl,ds=xo,gl=da,pl=ks,vl={_tr_init:hl,_tr_stored_block:Wl,_tr_flush_block:ds,_tr_tally:gl,_tr_align:pl};function ml(e,t,n,r){for(var a=e&65535|0,u=e>>>16&65535|0,g=0;n!==0;){g=n>2e3?2e3:n,n-=g;do a=a+t[r++]|0,u=u+a|0;while(--g);a%=65521,u%=65521}return a|u<<16|0}var _l=ml;function Rs(){for(var e,t=[],n=0;n<256;n++){e=n;for(var r=0;r<8;r++)e=e&1?3988292384^e>>>1:e>>>1;t[n]=e}return t}var bl=Rs();function Gl(e,t,n,r){var a=bl,u=r+n;e^=-1;for(var g=r;g<u;g++)e=e>>>8^a[(e^t[g])&255];return e^-1}var Yl=Gl,o={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},c=vl,v=_l,b=Yl,O=o,T=0,V=1,Y=3,G=4,ie=5,Re=0,at=1,oe=-2,Je=-3,Ge=-5,vt=-1,Ne=1,Ae=2,Le=3,We=4,i=0,l=2,d=8,h=9,w=15,S=8,N=29,D=256,M=D+1+N,X=30,fe=19,Be=2*M+1,re=15,de=3,ke=258,nt=ke+de+1,Oe=32,we=42,Te=69,Se=73,qe=91,He=103,rt=113,De=666,Xe=1,Ct=2,Tt=3,Dt=4,Pt=3;function pt(e,t){return e.msg=O[t],t}function H(e){return(e<<1)-(e>4?9:0)}function q(e){for(var t=e.length;--t>=0;)e[t]=0}function ce(e){var t=e.state,n=t.pending;n>e.avail_out&&(n=e.avail_out),n!==0&&(kt.arraySet(e.output,t.pending_buf,t.pending_out,n,e.next_out),e.next_out+=n,t.pending_out+=n,e.total_out+=n,e.avail_out-=n,t.pending-=n,t.pending===0&&(t.pending_out=0))}function ve(e,t){c._tr_flush_block(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,ce(e.strm)}function ge(e,t){e.pending_buf[e.pending++]=t}function Ze(e,t){e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=t&255}function ht(e,t,n,r){var a=e.avail_in;return a>r&&(a=r),a===0?0:(e.avail_in-=a,kt.arraySet(t,e.input,e.next_in,a,n),e.state.wrap===1?e.adler=v(e.adler,t,a,n):e.state.wrap===2&&(e.adler=b(e.adler,t,a,n)),e.next_in+=a,e.total_in+=a,a)}function Qe(e,t){var n=e.max_chain_length,r=e.strstart,a,u,g=e.prev_length,E=e.nice_match,$=e.strstart>e.w_size-nt?e.strstart-(e.w_size-nt):0,C=e.window,F=e.w_mask,ue=e.prev,be=e.strstart+ke,Ie=C[r+g-1],_t=C[r+g];e.prev_length>=e.good_match&&(n>>=2),E>e.lookahead&&(E=e.lookahead);do if(a=t,!(C[a+g]!==_t||C[a+g-1]!==Ie||C[a]!==C[r]||C[++a]!==C[r+1])){r+=2,a++;do;while(C[++r]===C[++a]&&C[++r]===C[++a]&&C[++r]===C[++a]&&C[++r]===C[++a]&&C[++r]===C[++a]&&C[++r]===C[++a]&&C[++r]===C[++a]&&C[++r]===C[++a]&&r<be);if(u=ke-(be-r),r=be-ke,u>g){if(e.match_start=t,g=u,u>=E)break;Ie=C[r+g-1],_t=C[r+g]}}while((t=ue[t&F])>$&&--n!==0);return g<=e.lookahead?g:e.lookahead}function et(e){var t=e.w_size,n,r,a,u,g;do{if(u=e.window_size-e.lookahead-e.strstart,e.strstart>=t+(t-nt)){kt.arraySet(e.window,e.window,t,t,0),e.match_start-=t,e.strstart-=t,e.block_start-=t,r=e.hash_size,n=r;do a=e.head[--n],e.head[n]=a>=t?a-t:0;while(--r);r=t,n=r;do a=e.prev[--n],e.prev[n]=a>=t?a-t:0;while(--r);u+=t}if(e.strm.avail_in===0)break;if(r=ht(e.strm,e.window,e.strstart+e.lookahead,u),e.lookahead+=r,e.lookahead+e.insert>=de)for(g=e.strstart-e.insert,e.ins_h=e.window[g],e.ins_h=(e.ins_h<<e.hash_shift^e.window[g+1])&e.hash_mask;e.insert&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[g+de-1])&e.hash_mask,e.prev[g&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=g,g++,e.insert--,!(e.lookahead+e.insert<de)););}while(e.lookahead<nt&&e.strm.avail_in!==0)}function Me(e,t){var n=65535;for(n>e.pending_buf_size-5&&(n=e.pending_buf_size-5);;){if(e.lookahead<=1){if(et(e),e.lookahead===0&&t===T)return Xe;if(e.lookahead===0)break}e.strstart+=e.lookahead,e.lookahead=0;var r=e.block_start+n;if((e.strstart===0||e.strstart>=r)&&(e.lookahead=e.strstart-r,e.strstart=r,ve(e,!1),e.strm.avail_out===0)||e.strstart-e.block_start>=e.w_size-nt&&(ve(e,!1),e.strm.avail_out===0))return Xe}return e.insert=0,t===G?(ve(e,!0),e.strm.avail_out===0?Tt:Dt):(e.strstart>e.block_start&&(ve(e,!1),e.strm.avail_out===0),Xe)}function St(e,t){for(var n,r;;){if(e.lookahead<nt){if(et(e),e.lookahead<nt&&t===T)return Xe;if(e.lookahead===0)break}if(n=0,e.lookahead>=de&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+de-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),n!==0&&e.strstart-n<=e.w_size-nt&&(e.match_length=Qe(e,n)),e.match_length>=de)if(r=c._tr_tally(e,e.strstart-e.match_start,e.match_length-de),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=de){e.match_length--;do e.strstart++,e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+de-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart;while(--e.match_length!==0);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+1])&e.hash_mask;else r=c._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(r&&(ve(e,!1),e.strm.avail_out===0))return Xe}return e.insert=e.strstart<de-1?e.strstart:de-1,t===G?(ve(e,!0),e.strm.avail_out===0?Tt:Dt):e.last_lit&&(ve(e,!1),e.strm.avail_out===0)?Xe:Ct}function Et(e,t){for(var n,r,a;;){if(e.lookahead<nt){if(et(e),e.lookahead<nt&&t===T)return Xe;if(e.lookahead===0)break}if(n=0,e.lookahead>=de&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+de-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=de-1,n!==0&&e.prev_length<e.max_lazy_match&&e.strstart-n<=e.w_size-nt&&(e.match_length=Qe(e,n),e.match_length<=5&&(e.strategy===Ne||e.match_length===de&&e.strstart-e.match_start>4096)&&(e.match_length=de-1)),e.prev_length>=de&&e.match_length<=e.prev_length){a=e.strstart+e.lookahead-de,r=c._tr_tally(e,e.strstart-1-e.prev_match,e.prev_length-de),e.lookahead-=e.prev_length-1,e.prev_length-=2;do++e.strstart<=a&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+de-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart);while(--e.prev_length!==0);if(e.match_available=0,e.match_length=de-1,e.strstart++,r&&(ve(e,!1),e.strm.avail_out===0))return Xe}else if(e.match_available){if(r=c._tr_tally(e,0,e.window[e.strstart-1]),r&&ve(e,!1),e.strstart++,e.lookahead--,e.strm.avail_out===0)return Xe}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(r=c._tr_tally(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<de-1?e.strstart:de-1,t===G?(ve(e,!0),e.strm.avail_out===0?Tt:Dt):e.last_lit&&(ve(e,!1),e.strm.avail_out===0)?Xe:Ct}function yt(e,t){for(var n,r,a,u,g=e.window;;){if(e.lookahead<=ke){if(et(e),e.lookahead<=ke&&t===T)return Xe;if(e.lookahead===0)break}if(e.match_length=0,e.lookahead>=de&&e.strstart>0&&(a=e.strstart-1,r=g[a],r===g[++a]&&r===g[++a]&&r===g[++a])){u=e.strstart+ke;do;while(r===g[++a]&&r===g[++a]&&r===g[++a]&&r===g[++a]&&r===g[++a]&&r===g[++a]&&r===g[++a]&&r===g[++a]&&a<u);e.match_length=ke-(u-a),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=de?(n=c._tr_tally(e,1,e.match_length-de),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(n=c._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),n&&(ve(e,!1),e.strm.avail_out===0))return Xe}return e.insert=0,t===G?(ve(e,!0),e.strm.avail_out===0?Tt:Dt):e.last_lit&&(ve(e,!1),e.strm.avail_out===0)?Xe:Ct}function jt(e,t){for(var n;;){if(e.lookahead===0&&(et(e),e.lookahead===0)){if(t===T)return Xe;break}if(e.match_length=0,n=c._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,n&&(ve(e,!1),e.strm.avail_out===0))return Xe}return e.insert=0,t===G?(ve(e,!0),e.strm.avail_out===0?Tt:Dt):e.last_lit&&(ve(e,!1),e.strm.avail_out===0)?Xe:Ct}function nn(e,t,n,r,a){this.good_length=e,this.max_lazy=t,this.nice_length=n,this.max_chain=r,this.func=a}var pn;pn=[new nn(0,0,0,0,Me),new nn(4,4,8,4,St),new nn(4,5,16,8,St),new nn(4,6,32,32,St),new nn(4,4,16,16,Et),new nn(8,16,32,32,Et),new nn(8,16,128,128,Et),new nn(8,32,128,256,Et),new nn(32,128,258,1024,Et),new nn(32,258,258,4096,Et)];function Qn(e){e.window_size=2*e.w_size,q(e.head),e.max_lazy_match=pn[e.level].max_lazy,e.good_match=pn[e.level].good_length,e.nice_match=pn[e.level].nice_length,e.max_chain_length=pn[e.level].max_chain,e.strstart=0,e.block_start=0,e.lookahead=0,e.insert=0,e.match_length=e.prev_length=de-1,e.match_available=0,e.ins_h=0}function er(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=d,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new kt.Buf16(Be*2),this.dyn_dtree=new kt.Buf16((2*X+1)*2),this.bl_tree=new kt.Buf16((2*fe+1)*2),q(this.dyn_ltree),q(this.dyn_dtree),q(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new kt.Buf16(re+1),this.heap=new kt.Buf16(2*M+1),q(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new kt.Buf16(2*M+1),q(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function Eo(e){var t;return!e||!e.state?pt(e,oe):(e.total_in=e.total_out=0,e.data_type=l,t=e.state,t.pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?we:rt,e.adler=t.wrap===2?0:1,t.last_flush=T,c._tr_init(t),Re)}function Bo(e){var t=Eo(e);return t===Re&&Qn(e.state),t}function W(e,t){return!e||!e.state||e.state.wrap!==2?oe:(e.state.gzhead=t,Re)}function te(e,t,n,r,a,u){if(!e)return oe;var g=1;if(t===vt&&(t=6),r<0?(g=0,r=-r):r>15&&(g=2,r-=16),a<1||a>h||n!==d||r<8||r>15||t<0||t>9||u<0||u>We)return pt(e,oe);r===8&&(r=9);var E=new er;return e.state=E,E.strm=e,E.wrap=g,E.gzhead=null,E.w_bits=r,E.w_size=1<<E.w_bits,E.w_mask=E.w_size-1,E.hash_bits=a+7,E.hash_size=1<<E.hash_bits,E.hash_mask=E.hash_size-1,E.hash_shift=~~((E.hash_bits+de-1)/de),E.window=new kt.Buf8(E.w_size*2),E.head=new kt.Buf16(E.hash_size),E.prev=new kt.Buf16(E.w_size),E.lit_bufsize=1<<a+6,E.pending_buf_size=E.lit_bufsize*4,E.pending_buf=new kt.Buf8(E.pending_buf_size),E.d_buf=1*E.lit_bufsize,E.l_buf=(1+2)*E.lit_bufsize,E.level=t,E.strategy=u,E.method=n,Bo(e)}function me(e,t){return te(e,t,d,w,S,i)}function Ce(e,t){var n,r,a,u;if(!e||!e.state||t>ie||t<0)return e?pt(e,oe):oe;if(r=e.state,!e.output||!e.input&&e.avail_in!==0||r.status===De&&t!==G)return pt(e,e.avail_out===0?Ge:oe);if(r.strm=e,n=r.last_flush,r.last_flush=t,r.status===we)if(r.wrap===2)e.adler=0,ge(r,31),ge(r,139),ge(r,8),r.gzhead?(ge(r,(r.gzhead.text?1:0)+(r.gzhead.hcrc?2:0)+(r.gzhead.extra?4:0)+(r.gzhead.name?8:0)+(r.gzhead.comment?16:0)),ge(r,r.gzhead.time&255),ge(r,r.gzhead.time>>8&255),ge(r,r.gzhead.time>>16&255),ge(r,r.gzhead.time>>24&255),ge(r,r.level===9?2:r.strategy>=Ae||r.level<2?4:0),ge(r,r.gzhead.os&255),r.gzhead.extra&&r.gzhead.extra.length&&(ge(r,r.gzhead.extra.length&255),ge(r,r.gzhead.extra.length>>8&255)),r.gzhead.hcrc&&(e.adler=b(e.adler,r.pending_buf,r.pending,0)),r.gzindex=0,r.status=Te):(ge(r,0),ge(r,0),ge(r,0),ge(r,0),ge(r,0),ge(r,r.level===9?2:r.strategy>=Ae||r.level<2?4:0),ge(r,Pt),r.status=rt);else{var g=d+(r.w_bits-8<<4)<<8,E=-1;r.strategy>=Ae||r.level<2?E=0:r.level<6?E=1:r.level===6?E=2:E=3,g|=E<<6,r.strstart!==0&&(g|=Oe),g+=31-g%31,r.status=rt,Ze(r,g),r.strstart!==0&&(Ze(r,e.adler>>>16),Ze(r,e.adler&65535)),e.adler=1}if(r.status===Te)if(r.gzhead.extra){for(a=r.pending;r.gzindex<(r.gzhead.extra.length&65535)&&!(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>a&&(e.adler=b(e.adler,r.pending_buf,r.pending-a,a)),ce(e),a=r.pending,r.pending===r.pending_buf_size));)ge(r,r.gzhead.extra[r.gzindex]&255),r.gzindex++;r.gzhead.hcrc&&r.pending>a&&(e.adler=b(e.adler,r.pending_buf,r.pending-a,a)),r.gzindex===r.gzhead.extra.length&&(r.gzindex=0,r.status=Se)}else r.status=Se;if(r.status===Se)if(r.gzhead.name){a=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>a&&(e.adler=b(e.adler,r.pending_buf,r.pending-a,a)),ce(e),a=r.pending,r.pending===r.pending_buf_size)){u=1;break}r.gzindex<r.gzhead.name.length?u=r.gzhead.name.charCodeAt(r.gzindex++)&255:u=0,ge(r,u)}while(u!==0);r.gzhead.hcrc&&r.pending>a&&(e.adler=b(e.adler,r.pending_buf,r.pending-a,a)),u===0&&(r.gzindex=0,r.status=qe)}else r.status=qe;if(r.status===qe)if(r.gzhead.comment){a=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>a&&(e.adler=b(e.adler,r.pending_buf,r.pending-a,a)),ce(e),a=r.pending,r.pending===r.pending_buf_size)){u=1;break}r.gzindex<r.gzhead.comment.length?u=r.gzhead.comment.charCodeAt(r.gzindex++)&255:u=0,ge(r,u)}while(u!==0);r.gzhead.hcrc&&r.pending>a&&(e.adler=b(e.adler,r.pending_buf,r.pending-a,a)),u===0&&(r.status=He)}else r.status=He;if(r.status===He&&(r.gzhead.hcrc?(r.pending+2>r.pending_buf_size&&ce(e),r.pending+2<=r.pending_buf_size&&(ge(r,e.adler&255),ge(r,e.adler>>8&255),e.adler=0,r.status=rt)):r.status=rt),r.pending!==0){if(ce(e),e.avail_out===0)return r.last_flush=-1,Re}else if(e.avail_in===0&&H(t)<=H(n)&&t!==G)return pt(e,Ge);if(r.status===De&&e.avail_in!==0)return pt(e,Ge);if(e.avail_in!==0||r.lookahead!==0||t!==T&&r.status!==De){var $=r.strategy===Ae?jt(r,t):r.strategy===Le?yt(r,t):pn[r.level].func(r,t);if(($===Tt||$===Dt)&&(r.status=De),$===Xe||$===Tt)return e.avail_out===0&&(r.last_flush=-1),Re;if($===Ct&&(t===V?c._tr_align(r):t!==ie&&(c._tr_stored_block(r,0,0,!1),t===Y&&(q(r.head),r.lookahead===0&&(r.strstart=0,r.block_start=0,r.insert=0))),ce(e),e.avail_out===0))return r.last_flush=-1,Re}return t!==G?Re:r.wrap<=0?at:(r.wrap===2?(ge(r,e.adler&255),ge(r,e.adler>>8&255),ge(r,e.adler>>16&255),ge(r,e.adler>>24&255),ge(r,e.total_in&255),ge(r,e.total_in>>8&255),ge(r,e.total_in>>16&255),ge(r,e.total_in>>24&255)):(Ze(r,e.adler>>>16),Ze(r,e.adler&65535)),ce(e),r.wrap>0&&(r.wrap=-r.wrap),r.pending!==0?Re:at)}function Fe(e){var t;return!e||!e.state?oe:(t=e.state.status,t!==we&&t!==Te&&t!==Se&&t!==qe&&t!==He&&t!==rt&&t!==De?pt(e,oe):(e.state=null,t===rt?pt(e,Je):Re))}function it(e,t){var n=t.length,r,a,u,g,E,$,C,F;if(!e||!e.state||(r=e.state,g=r.wrap,g===2||g===1&&r.status!==we||r.lookahead))return oe;for(g===1&&(e.adler=v(e.adler,t,n,0)),r.wrap=0,n>=r.w_size&&(g===0&&(q(r.head),r.strstart=0,r.block_start=0,r.insert=0),F=new kt.Buf8(r.w_size),kt.arraySet(F,t,n-r.w_size,r.w_size,0),t=F,n=r.w_size),E=e.avail_in,$=e.next_in,C=e.input,e.avail_in=n,e.next_in=0,e.input=t,et(r);r.lookahead>=de;){a=r.strstart,u=r.lookahead-(de-1);do r.ins_h=(r.ins_h<<r.hash_shift^r.window[a+de-1])&r.hash_mask,r.prev[a&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=a,a++;while(--u);r.strstart=a,r.lookahead=de-1,et(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=de-1,r.match_available=0,e.next_in=$,e.input=C,e.avail_in=E,r.wrap=g,Re}var ut=me,Ke=te,tt=Bo,je=Eo,It=W,Vt=Ce,$t=Fe,un=it,Vr="pako deflate (from Nodeca project)",gr={deflateInit:ut,deflateInit2:Ke,deflateReset:tt,deflateResetKeep:je,deflateSetHeader:It,deflate:Vt,deflateEnd:$t,deflateSetDictionary:un,deflateInfo:Vr},$r=!0,vi=!0;try{String.fromCharCode.apply(null,[0])}catch(e){$r=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){vi=!1}for(var Mo=new kt.Buf8(256),oo=0;oo<256;oo++)Mo[oo]=oo>=252?6:oo>=248?5:oo>=240?4:oo>=224?3:oo>=192?2:1;Mo[254]=Mo[254]=1;var Ur=function(e){var t,n,r,a,u,g=e.length,E=0;for(a=0;a<g;a++)n=e.charCodeAt(a),(n&64512)===55296&&a+1<g&&(r=e.charCodeAt(a+1),(r&64512)===56320&&(n=65536+(n-55296<<10)+(r-56320),a++)),E+=n<128?1:n<2048?2:n<65536?3:4;for(t=new kt.Buf8(E),u=0,a=0;u<E;a++)n=e.charCodeAt(a),(n&64512)===55296&&a+1<g&&(r=e.charCodeAt(a+1),(r&64512)===56320&&(n=65536+(n-55296<<10)+(r-56320),a++)),n<128?t[u++]=n:n<2048?(t[u++]=192|n>>>6,t[u++]=128|n&63):n<65536?(t[u++]=224|n>>>12,t[u++]=128|n>>>6&63,t[u++]=128|n&63):(t[u++]=240|n>>>18,t[u++]=128|n>>>12&63,t[u++]=128|n>>>6&63,t[u++]=128|n&63);return t};function hs(e,t){if(t<65534&&(e.subarray&&vi||!e.subarray&&$r))return String.fromCharCode.apply(null,kt.shrinkBuf(e,t));for(var n="",r=0;r<t;r++)n+=String.fromCharCode(e[r]);return n}var xs=function(e){return hs(e,e.length)},ao=function(e){for(var t=new kt.Buf8(e.length),n=0,r=t.length;n<r;n++)t[n]=e.charCodeAt(n);return t},Ja=function(e,t){var n,r,a,u,g=t||e.length,E=new Array(g*2);for(r=0,n=0;n<g;){if(a=e[n++],a<128){E[r++]=a;continue}if(u=Mo[a],u>4){E[r++]=65533,n+=u-1;continue}for(a&=u===2?31:u===3?15:7;u>1&&n<g;)a=a<<6|e[n++]&63,u--;if(u>1){E[r++]=65533;continue}a<65536?E[r++]=a:(a-=65536,E[r++]=55296|a>>10&1023,E[r++]=56320|a&1023)}return hs(E,r)},gs=function(e,t){var n;for(t=t||e.length,t>e.length&&(t=e.length),n=t-1;n>=0&&(e[n]&192)===128;)n--;return n<0||n===0?t:n+Mo[e[n]]>t?n:t},xa={string2buf:Ur,buf2binstring:xs,binstring2buf:ao,buf2string:Ja,utf8border:gs};function Za(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}var ha=Za,Xo=gr,so=xa,ql=ha,El=Object.prototype.toString,vc=0,yl=4,wl=0,Sf=1,Af=2,jp=-1,zp=0,Wp=8;function Bs(e){if(!(this instanceof Bs))return new Bs(e);this.options=kt.assign({level:jp,method:Wp,chunkSize:16384,windowBits:15,memLevel:8,strategy:zp,to:""},e||{});var t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new ql,this.strm.avail_out=0;var n=Xo.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(n!==wl)throw new Error(O[n]);if(t.header&&Xo.deflateSetHeader(this.strm,t.header),t.dictionary){var r;if(typeof t.dictionary=="string"?r=so.string2buf(t.dictionary):El.call(t.dictionary)==="[object ArrayBuffer]"?r=new Uint8Array(t.dictionary):r=t.dictionary,n=Xo.deflateSetDictionary(this.strm,r),n!==wl)throw new Error(O[n]);this._dict_set=!0}}Bs.prototype.push=function(e,t){var n=this.strm,r=this.options.chunkSize,a,u;if(this.ended)return!1;u=t===~~t?t:t===!0?yl:vc,typeof e=="string"?n.input=so.string2buf(e):El.call(e)==="[object ArrayBuffer]"?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;do{if(n.avail_out===0&&(n.output=new kt.Buf8(r),n.next_out=0,n.avail_out=r),a=Xo.deflate(n,u),a!==Sf&&a!==wl)return this.onEnd(a),this.ended=!0,!1;(n.avail_out===0||n.avail_in===0&&(u===yl||u===Af))&&(this.options.to==="string"?this.onData(so.buf2binstring(kt.shrinkBuf(n.output,n.next_out))):this.onData(kt.shrinkBuf(n.output,n.next_out)))}while((n.avail_in>0||n.avail_out===0)&&a!==Sf);return u===yl?(a=Xo.deflateEnd(this.strm),this.onEnd(a),this.ended=!0,a===wl):(u===Af&&(this.onEnd(wl),n.avail_out=0),!0)},Bs.prototype.onData=function(e){this.chunks.push(e)},Bs.prototype.onEnd=function(e){e===wl&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=kt.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};function cu(e,t){var n=new Bs(t);if(n.push(e,!0),n.err)throw n.msg||O[n.err];return n.result}function Gp(e,t){return t=t||{},t.raw=!0,cu(e,t)}function Yp(e,t){return t=t||{},t.gzip=!0,cu(e,t)}var qp=Bs,Kp=cu,Jp=Gp,Zp=Yp,Xp={Deflate:qp,deflate:Kp,deflateRaw:Jp,gzip:Zp},mc=30,Qp=12,ev=function(t,n){var r,a,u,g,E,$,C,F,ue,be,Ie,_t,Bt,Zt,Mt,xn,Fn,sn,mt,vn,rn,Wt,_n,lr,Gt;r=t.state,a=t.next_in,lr=t.input,u=a+(t.avail_in-5),g=t.next_out,Gt=t.output,E=g-(n-t.avail_out),$=g+(t.avail_out-257),C=r.dmax,F=r.wsize,ue=r.whave,be=r.wnext,Ie=r.window,_t=r.hold,Bt=r.bits,Zt=r.lencode,Mt=r.distcode,xn=(1<<r.lenbits)-1,Fn=(1<<r.distbits)-1;e:do{Bt<15&&(_t+=lr[a++]<<Bt,Bt+=8,_t+=lr[a++]<<Bt,Bt+=8),sn=Zt[_t&xn];t:for(;;){if(mt=sn>>>24,_t>>>=mt,Bt-=mt,mt=sn>>>16&255,mt===0)Gt[g++]=sn&65535;else if(mt&16){vn=sn&65535,mt&=15,mt&&(Bt<mt&&(_t+=lr[a++]<<Bt,Bt+=8),vn+=_t&(1<<mt)-1,_t>>>=mt,Bt-=mt),Bt<15&&(_t+=lr[a++]<<Bt,Bt+=8,_t+=lr[a++]<<Bt,Bt+=8),sn=Mt[_t&Fn];n:for(;;){if(mt=sn>>>24,_t>>>=mt,Bt-=mt,mt=sn>>>16&255,mt&16){if(rn=sn&65535,mt&=15,Bt<mt&&(_t+=lr[a++]<<Bt,Bt+=8,Bt<mt&&(_t+=lr[a++]<<Bt,Bt+=8)),rn+=_t&(1<<mt)-1,rn>C){t.msg="invalid distance too far back",r.mode=mc;break e}if(_t>>>=mt,Bt-=mt,mt=g-E,rn>mt){if(mt=rn-mt,mt>ue&&r.sane){t.msg="invalid distance too far back",r.mode=mc;break e}if(Wt=0,_n=Ie,be===0){if(Wt+=F-mt,mt<vn){vn-=mt;do Gt[g++]=Ie[Wt++];while(--mt);Wt=g-rn,_n=Gt}}else if(be<mt){if(Wt+=F+be-mt,mt-=be,mt<vn){vn-=mt;do Gt[g++]=Ie[Wt++];while(--mt);if(Wt=0,be<vn){mt=be,vn-=mt;do Gt[g++]=Ie[Wt++];while(--mt);Wt=g-rn,_n=Gt}}}else if(Wt+=be-mt,mt<vn){vn-=mt;do Gt[g++]=Ie[Wt++];while(--mt);Wt=g-rn,_n=Gt}for(;vn>2;)Gt[g++]=_n[Wt++],Gt[g++]=_n[Wt++],Gt[g++]=_n[Wt++],vn-=3;vn&&(Gt[g++]=_n[Wt++],vn>1&&(Gt[g++]=_n[Wt++]))}else{Wt=g-rn;do Gt[g++]=Gt[Wt++],Gt[g++]=Gt[Wt++],Gt[g++]=Gt[Wt++],vn-=3;while(vn>2);vn&&(Gt[g++]=Gt[Wt++],vn>1&&(Gt[g++]=Gt[Wt++]))}}else if((mt&64)===0){sn=Mt[(sn&65535)+(_t&(1<<mt)-1)];continue n}else{t.msg="invalid distance code",r.mode=mc;break e}break}}else if((mt&64)===0){sn=Zt[(sn&65535)+(_t&(1<<mt)-1)];continue t}else if(mt&32){r.mode=Qp;break e}else{t.msg="invalid literal/length code",r.mode=mc;break e}break}}while(a<u&&g<$);vn=Bt>>3,a-=vn,Bt-=vn<<3,_t&=(1<<Bt)-1,t.next_in=a,t.next_out=g,t.avail_in=a<u?5+(u-a):5-(a-u),t.avail_out=g<$?257+($-g):257-(g-$),r.hold=_t,r.bits=Bt},Sl=15,Cf=852,Of=592,Tf=0,uu=1,Pf=2,tv=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],nv=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],rv=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],iv=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64],ov=function(t,n,r,a,u,g,E,$){var C=$.bits,F=0,ue=0,be=0,Ie=0,_t=0,Bt=0,Zt=0,Mt=0,xn=0,Fn=0,sn,mt,vn,rn,Wt,_n=null,lr=0,Gt,ma=new kt.Buf16(Sl+1),zc=new kt.Buf16(Sl+1),Wc=null,Hg=0,jg,Gc,Yc;for(F=0;F<=Sl;F++)ma[F]=0;for(ue=0;ue<a;ue++)ma[n[r+ue]]++;for(_t=C,Ie=Sl;Ie>=1&&ma[Ie]===0;Ie--);if(_t>Ie&&(_t=Ie),Ie===0)return u[g++]=1<<24|64<<16|0,u[g++]=1<<24|64<<16|0,$.bits=1,0;for(be=1;be<Ie&&ma[be]===0;be++);for(_t<be&&(_t=be),Mt=1,F=1;F<=Sl;F++)if(Mt<<=1,Mt-=ma[F],Mt<0)return-1;if(Mt>0&&(t===Tf||Ie!==1))return-1;for(zc[1]=0,F=1;F<Sl;F++)zc[F+1]=zc[F]+ma[F];for(ue=0;ue<a;ue++)n[r+ue]!==0&&(E[zc[n[r+ue]]++]=ue);if(t===Tf?(_n=Wc=E,Gt=19):t===uu?(_n=tv,lr-=257,Wc=nv,Hg-=257,Gt=256):(_n=rv,Wc=iv,Gt=-1),Fn=0,ue=0,F=be,Wt=g,Bt=_t,Zt=0,vn=-1,xn=1<<_t,rn=xn-1,t===uu&&xn>Cf||t===Pf&&xn>Of)return 1;for(;;){jg=F-Zt,E[ue]<Gt?(Gc=0,Yc=E[ue]):E[ue]>Gt?(Gc=Wc[Hg+E[ue]],Yc=_n[lr+E[ue]]):(Gc=32+64,Yc=0),sn=1<<F-Zt,mt=1<<Bt,be=mt;do mt-=sn,u[Wt+(Fn>>Zt)+mt]=jg<<24|Gc<<16|Yc|0;while(mt!==0);for(sn=1<<F-1;Fn&sn;)sn>>=1;if(sn!==0?(Fn&=sn-1,Fn+=sn):Fn=0,ue++,--ma[F]===0){if(F===Ie)break;F=n[r+E[ue]]}if(F>_t&&(Fn&rn)!==vn){for(Zt===0&&(Zt=_t),Wt+=be,Bt=F-Zt,Mt=1<<Bt;Bt+Zt<Ie&&(Mt-=ma[Bt+Zt],!(Mt<=0));)Bt++,Mt<<=1;if(xn+=1<<Bt,t===uu&&xn>Cf||t===Pf&&xn>Of)return 1;vn=Fn&rn,u[vn]=_t<<24|Bt<<16|Wt-g|0}}return Fn!==0&&(u[Wt+Fn]=F-Zt<<24|64<<16|0),$.bits=_t,0},av=ev,Kl=ov,sv=0,If=1,Nf=2,kf=4,lv=5,_c=6,Ms=0,cv=1,uv=2,Qo=-2,Rf=-3,xf=-4,fv=-5,Bf=8,Mf=1,Lf=2,Df=3,Ff=4,Vf=5,$f=6,Uf=7,Hf=8,jf=9,zf=10,bc=11,Xa=12,fu=13,Wf=14,du=15,Gf=16,Yf=17,qf=18,Kf=19,Ec=20,yc=21,Jf=22,Zf=23,Xf=24,Qf=25,ed=26,hu=27,td=28,nd=29,pr=30,rd=31,dv=32,hv=852,gv=592,pv=15,vv=pv;function id(e){return(e>>>24&255)+(e>>>8&65280)+((e&65280)<<8)+((e&255)<<24)}function mv(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new kt.Buf16(320),this.work=new kt.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function od(e){var t;return!e||!e.state?Qo:(t=e.state,e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=t.wrap&1),t.mode=Mf,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new kt.Buf32(hv),t.distcode=t.distdyn=new kt.Buf32(gv),t.sane=1,t.back=-1,Ms)}function ad(e){var t;return!e||!e.state?Qo:(t=e.state,t.wsize=0,t.whave=0,t.wnext=0,od(e))}function sd(e,t){var n,r;return!e||!e.state||(r=e.state,t<0?(n=0,t=-t):(n=(t>>4)+1,t<48&&(t&=15)),t&&(t<8||t>15))?Qo:(r.window!==null&&r.wbits!==t&&(r.window=null),r.wrap=n,r.wbits=t,ad(e))}function ld(e,t){var n,r;return e?(r=new mv,e.state=r,r.window=null,n=sd(e,t),n!==Ms&&(e.state=null),n):Qo}function _v(e){return ld(e,vv)}var cd=!0,gu,pu;function bv(e){if(cd){var t;for(gu=new kt.Buf32(512),pu=new kt.Buf32(32),t=0;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(Kl(If,e.lens,0,288,gu,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;Kl(Nf,e.lens,0,32,pu,0,e.work,{bits:5}),cd=!1}e.lencode=gu,e.lenbits=9,e.distcode=pu,e.distbits=5}function ud(e,t,n,r){var a,u=e.state;return u.window===null&&(u.wsize=1<<u.wbits,u.wnext=0,u.whave=0,u.window=new kt.Buf8(u.wsize)),r>=u.wsize?(kt.arraySet(u.window,t,n-u.wsize,u.wsize,0),u.wnext=0,u.whave=u.wsize):(a=u.wsize-u.wnext,a>r&&(a=r),kt.arraySet(u.window,t,n-r,a,u.wnext),r-=a,r?(kt.arraySet(u.window,t,n-r,r,0),u.wnext=r,u.whave=u.wsize):(u.wnext+=a,u.wnext===u.wsize&&(u.wnext=0),u.whave<u.wsize&&(u.whave+=a))),0}function Ev(e,t){var n,r,a,u,g,E,$,C,F,ue,be,Ie,_t,Bt,Zt=0,Mt,xn,Fn,sn,mt,vn,rn,Wt,_n=new kt.Buf8(4),lr,Gt,ma=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&e.avail_in!==0)return Qo;n=e.state,n.mode===Xa&&(n.mode=fu),g=e.next_out,a=e.output,$=e.avail_out,u=e.next_in,r=e.input,E=e.avail_in,C=n.hold,F=n.bits,ue=E,be=$,Wt=Ms;e:for(;;)switch(n.mode){case Mf:if(n.wrap===0){n.mode=fu;break}for(;F<16;){if(E===0)break e;E--,C+=r[u++]<<F,F+=8}if(n.wrap&2&&C===35615){n.check=0,_n[0]=C&255,_n[1]=C>>>8&255,n.check=b(n.check,_n,2,0),C=0,F=0,n.mode=Lf;break}if(n.flags=0,n.head&&(n.head.done=!1),!(n.wrap&1)||(((C&255)<<8)+(C>>8))%31){e.msg="incorrect header check",n.mode=pr;break}if((C&15)!==Bf){e.msg="unknown compression method",n.mode=pr;break}if(C>>>=4,F-=4,rn=(C&15)+8,n.wbits===0)n.wbits=rn;else if(rn>n.wbits){e.msg="invalid window size",n.mode=pr;break}n.dmax=1<<rn,e.adler=n.check=1,n.mode=C&512?zf:Xa,C=0,F=0;break;case Lf:for(;F<16;){if(E===0)break e;E--,C+=r[u++]<<F,F+=8}if(n.flags=C,(n.flags&255)!==Bf){e.msg="unknown compression method",n.mode=pr;break}if(n.flags&57344){e.msg="unknown header flags set",n.mode=pr;break}n.head&&(n.head.text=C>>8&1),n.flags&512&&(_n[0]=C&255,_n[1]=C>>>8&255,n.check=b(n.check,_n,2,0)),C=0,F=0,n.mode=Df;case Df:for(;F<32;){if(E===0)break e;E--,C+=r[u++]<<F,F+=8}n.head&&(n.head.time=C),n.flags&512&&(_n[0]=C&255,_n[1]=C>>>8&255,_n[2]=C>>>16&255,_n[3]=C>>>24&255,n.check=b(n.check,_n,4,0)),C=0,F=0,n.mode=Ff;case Ff:for(;F<16;){if(E===0)break e;E--,C+=r[u++]<<F,F+=8}n.head&&(n.head.xflags=C&255,n.head.os=C>>8),n.flags&512&&(_n[0]=C&255,_n[1]=C>>>8&255,n.check=b(n.check,_n,2,0)),C=0,F=0,n.mode=Vf;case Vf:if(n.flags&1024){for(;F<16;){if(E===0)break e;E--,C+=r[u++]<<F,F+=8}n.length=C,n.head&&(n.head.extra_len=C),n.flags&512&&(_n[0]=C&255,_n[1]=C>>>8&255,n.check=b(n.check,_n,2,0)),C=0,F=0}else n.head&&(n.head.extra=null);n.mode=$f;case $f:if(n.flags&1024&&(Ie=n.length,Ie>E&&(Ie=E),Ie&&(n.head&&(rn=n.head.extra_len-n.length,n.head.extra||(n.head.extra=new Array(n.head.extra_len)),kt.arraySet(n.head.extra,r,u,Ie,rn)),n.flags&512&&(n.check=b(n.check,r,Ie,u)),E-=Ie,u+=Ie,n.length-=Ie),n.length))break e;n.length=0,n.mode=Uf;case Uf:if(n.flags&2048){if(E===0)break e;Ie=0;do rn=r[u+Ie++],n.head&&rn&&n.length<65536&&(n.head.name+=String.fromCharCode(rn));while(rn&&Ie<E);if(n.flags&512&&(n.check=b(n.check,r,Ie,u)),E-=Ie,u+=Ie,rn)break e}else n.head&&(n.head.name=null);n.length=0,n.mode=Hf;case Hf:if(n.flags&4096){if(E===0)break e;Ie=0;do rn=r[u+Ie++],n.head&&rn&&n.length<65536&&(n.head.comment+=String.fromCharCode(rn));while(rn&&Ie<E);if(n.flags&512&&(n.check=b(n.check,r,Ie,u)),E-=Ie,u+=Ie,rn)break e}else n.head&&(n.head.comment=null);n.mode=jf;case jf:if(n.flags&512){for(;F<16;){if(E===0)break e;E--,C+=r[u++]<<F,F+=8}if(C!==(n.check&65535)){e.msg="header crc mismatch",n.mode=pr;break}C=0,F=0}n.head&&(n.head.hcrc=n.flags>>9&1,n.head.done=!0),e.adler=n.check=0,n.mode=Xa;break;case zf:for(;F<32;){if(E===0)break e;E--,C+=r[u++]<<F,F+=8}e.adler=n.check=id(C),C=0,F=0,n.mode=bc;case bc:if(n.havedict===0)return e.next_out=g,e.avail_out=$,e.next_in=u,e.avail_in=E,n.hold=C,n.bits=F,uv;e.adler=n.check=1,n.mode=Xa;case Xa:if(t===lv||t===_c)break e;case fu:if(n.last){C>>>=F&7,F-=F&7,n.mode=hu;break}for(;F<3;){if(E===0)break e;E--,C+=r[u++]<<F,F+=8}switch(n.last=C&1,C>>>=1,F-=1,C&3){case 0:n.mode=Wf;break;case 1:if(bv(n),n.mode=Ec,t===_c){C>>>=2,F-=2;break e}break;case 2:n.mode=Yf;break;case 3:e.msg="invalid block type",n.mode=pr}C>>>=2,F-=2;break;case Wf:for(C>>>=F&7,F-=F&7;F<32;){if(E===0)break e;E--,C+=r[u++]<<F,F+=8}if((C&65535)!==(C>>>16^65535)){e.msg="invalid stored block lengths",n.mode=pr;break}if(n.length=C&65535,C=0,F=0,n.mode=du,t===_c)break e;case du:n.mode=Gf;case Gf:if(Ie=n.length,Ie){if(Ie>E&&(Ie=E),Ie>$&&(Ie=$),Ie===0)break e;kt.arraySet(a,r,u,Ie,g),E-=Ie,u+=Ie,$-=Ie,g+=Ie,n.length-=Ie;break}n.mode=Xa;break;case Yf:for(;F<14;){if(E===0)break e;E--,C+=r[u++]<<F,F+=8}if(n.nlen=(C&31)+257,C>>>=5,F-=5,n.ndist=(C&31)+1,C>>>=5,F-=5,n.ncode=(C&15)+4,C>>>=4,F-=4,n.nlen>286||n.ndist>30){e.msg="too many length or distance symbols",n.mode=pr;break}n.have=0,n.mode=qf;case qf:for(;n.have<n.ncode;){for(;F<3;){if(E===0)break e;E--,C+=r[u++]<<F,F+=8}n.lens[ma[n.have++]]=C&7,C>>>=3,F-=3}for(;n.have<19;)n.lens[ma[n.have++]]=0;if(n.lencode=n.lendyn,n.lenbits=7,lr={bits:n.lenbits},Wt=Kl(sv,n.lens,0,19,n.lencode,0,n.work,lr),n.lenbits=lr.bits,Wt){e.msg="invalid code lengths set",n.mode=pr;break}n.have=0,n.mode=Kf;case Kf:for(;n.have<n.nlen+n.ndist;){for(;Zt=n.lencode[C&(1<<n.lenbits)-1],Mt=Zt>>>24,xn=Zt>>>16&255,Fn=Zt&65535,!(Mt<=F);){if(E===0)break e;E--,C+=r[u++]<<F,F+=8}if(Fn<16)C>>>=Mt,F-=Mt,n.lens[n.have++]=Fn;else{if(Fn===16){for(Gt=Mt+2;F<Gt;){if(E===0)break e;E--,C+=r[u++]<<F,F+=8}if(C>>>=Mt,F-=Mt,n.have===0){e.msg="invalid bit length repeat",n.mode=pr;break}rn=n.lens[n.have-1],Ie=3+(C&3),C>>>=2,F-=2}else if(Fn===17){for(Gt=Mt+3;F<Gt;){if(E===0)break e;E--,C+=r[u++]<<F,F+=8}C>>>=Mt,F-=Mt,rn=0,Ie=3+(C&7),C>>>=3,F-=3}else{for(Gt=Mt+7;F<Gt;){if(E===0)break e;E--,C+=r[u++]<<F,F+=8}C>>>=Mt,F-=Mt,rn=0,Ie=11+(C&127),C>>>=7,F-=7}if(n.have+Ie>n.nlen+n.ndist){e.msg="invalid bit length repeat",n.mode=pr;break}for(;Ie--;)n.lens[n.have++]=rn}}if(n.mode===pr)break;if(n.lens[256]===0){e.msg="invalid code -- missing end-of-block",n.mode=pr;break}if(n.lenbits=9,lr={bits:n.lenbits},Wt=Kl(If,n.lens,0,n.nlen,n.lencode,0,n.work,lr),n.lenbits=lr.bits,Wt){e.msg="invalid literal/lengths set",n.mode=pr;break}if(n.distbits=6,n.distcode=n.distdyn,lr={bits:n.distbits},Wt=Kl(Nf,n.lens,n.nlen,n.ndist,n.distcode,0,n.work,lr),n.distbits=lr.bits,Wt){e.msg="invalid distances set",n.mode=pr;break}if(n.mode=Ec,t===_c)break e;case Ec:n.mode=yc;case yc:if(E>=6&&$>=258){e.next_out=g,e.avail_out=$,e.next_in=u,e.avail_in=E,n.hold=C,n.bits=F,av(e,be),g=e.next_out,a=e.output,$=e.avail_out,u=e.next_in,r=e.input,E=e.avail_in,C=n.hold,F=n.bits,n.mode===Xa&&(n.back=-1);break}for(n.back=0;Zt=n.lencode[C&(1<<n.lenbits)-1],Mt=Zt>>>24,xn=Zt>>>16&255,Fn=Zt&65535,!(Mt<=F);){if(E===0)break e;E--,C+=r[u++]<<F,F+=8}if(xn&&(xn&240)===0){for(sn=Mt,mt=xn,vn=Fn;Zt=n.lencode[vn+((C&(1<<sn+mt)-1)>>sn)],Mt=Zt>>>24,xn=Zt>>>16&255,Fn=Zt&65535,!(sn+Mt<=F);){if(E===0)break e;E--,C+=r[u++]<<F,F+=8}C>>>=sn,F-=sn,n.back+=sn}if(C>>>=Mt,F-=Mt,n.back+=Mt,n.length=Fn,xn===0){n.mode=ed;break}if(xn&32){n.back=-1,n.mode=Xa;break}if(xn&64){e.msg="invalid literal/length code",n.mode=pr;break}n.extra=xn&15,n.mode=Jf;case Jf:if(n.extra){for(Gt=n.extra;F<Gt;){if(E===0)break e;E--,C+=r[u++]<<F,F+=8}n.length+=C&(1<<n.extra)-1,C>>>=n.extra,F-=n.extra,n.back+=n.extra}n.was=n.length,n.mode=Zf;case Zf:for(;Zt=n.distcode[C&(1<<n.distbits)-1],Mt=Zt>>>24,xn=Zt>>>16&255,Fn=Zt&65535,!(Mt<=F);){if(E===0)break e;E--,C+=r[u++]<<F,F+=8}if((xn&240)===0){for(sn=Mt,mt=xn,vn=Fn;Zt=n.distcode[vn+((C&(1<<sn+mt)-1)>>sn)],Mt=Zt>>>24,xn=Zt>>>16&255,Fn=Zt&65535,!(sn+Mt<=F);){if(E===0)break e;E--,C+=r[u++]<<F,F+=8}C>>>=sn,F-=sn,n.back+=sn}if(C>>>=Mt,F-=Mt,n.back+=Mt,xn&64){e.msg="invalid distance code",n.mode=pr;break}n.offset=Fn,n.extra=xn&15,n.mode=Xf;case Xf:if(n.extra){for(Gt=n.extra;F<Gt;){if(E===0)break e;E--,C+=r[u++]<<F,F+=8}n.offset+=C&(1<<n.extra)-1,C>>>=n.extra,F-=n.extra,n.back+=n.extra}if(n.offset>n.dmax){e.msg="invalid distance too far back",n.mode=pr;break}n.mode=Qf;case Qf:if($===0)break e;if(Ie=be-$,n.offset>Ie){if(Ie=n.offset-Ie,Ie>n.whave&&n.sane){e.msg="invalid distance too far back",n.mode=pr;break}Ie>n.wnext?(Ie-=n.wnext,_t=n.wsize-Ie):_t=n.wnext-Ie,Ie>n.length&&(Ie=n.length),Bt=n.window}else Bt=a,_t=g-n.offset,Ie=n.length;Ie>$&&(Ie=$),$-=Ie,n.length-=Ie;do a[g++]=Bt[_t++];while(--Ie);n.length===0&&(n.mode=yc);break;case ed:if($===0)break e;a[g++]=n.length,$--,n.mode=yc;break;case hu:if(n.wrap){for(;F<32;){if(E===0)break e;E--,C|=r[u++]<<F,F+=8}if(be-=$,e.total_out+=be,n.total+=be,be&&(e.adler=n.check=n.flags?b(n.check,a,be,g-be):v(n.check,a,be,g-be)),be=$,(n.flags?C:id(C))!==n.check){e.msg="incorrect data check",n.mode=pr;break}C=0,F=0}n.mode=td;case td:if(n.wrap&&n.flags){for(;F<32;){if(E===0)break e;E--,C+=r[u++]<<F,F+=8}if(C!==(n.total&4294967295)){e.msg="incorrect length check",n.mode=pr;break}C=0,F=0}n.mode=nd;case nd:Wt=cv;break e;case pr:Wt=Rf;break e;case rd:return xf;case dv:default:return Qo}return e.next_out=g,e.avail_out=$,e.next_in=u,e.avail_in=E,n.hold=C,n.bits=F,(n.wsize||be!==e.avail_out&&n.mode<pr&&(n.mode<hu||t!==kf))&&ud(e,e.output,e.next_out,be-e.avail_out),ue-=e.avail_in,be-=e.avail_out,e.total_in+=ue,e.total_out+=be,n.total+=be,n.wrap&&be&&(e.adler=n.check=n.flags?b(n.check,a,be,e.next_out-be):v(n.check,a,be,e.next_out-be)),e.data_type=n.bits+(n.last?64:0)+(n.mode===Xa?128:0)+(n.mode===Ec||n.mode===du?256:0),(ue===0&&be===0||t===kf)&&Wt===Ms&&(Wt=fv),Wt}function yv(e){if(!e||!e.state)return Qo;var t=e.state;return t.window&&(t.window=null),e.state=null,Ms}function wv(e,t){var n;return!e||!e.state||(n=e.state,(n.wrap&2)===0)?Qo:(n.head=t,t.done=!1,Ms)}function Sv(e,t){var n=t.length,r,a,u;return!e||!e.state||(r=e.state,r.wrap!==0&&r.mode!==bc)?Qo:r.mode===bc&&(a=1,a=v(a,t,n,0),a!==r.check)?Rf:(u=ud(e,t,n,n),u?(r.mode=rd,xf):(r.havedict=1,Ms))}var Av=ad,Cv=sd,Ov=od,Tv=_v,Pv=ld,Iv=Ev,Nv=yv,kv=wv,Rv=Sv,xv="pako inflate (from Nodeca project)",Bv={inflateReset:Av,inflateReset2:Cv,inflateResetKeep:Ov,inflateInit:Tv,inflateInit2:Pv,inflate:Iv,inflateEnd:Nv,inflateGetHeader:kv,inflateSetDictionary:Rv,inflateInfo:xv},Mv={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};function Lv(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}var Dv=Lv,Al=Bv,Rr=Mv,Fv=Dv,fd=Object.prototype.toString;function Ls(e){if(!(this instanceof Ls))return new Ls(e);this.options=kt.assign({chunkSize:16384,windowBits:0,to:""},e||{});var t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,t.windowBits===0&&(t.windowBits=-15)),t.windowBits>=0&&t.windowBits<16&&!(e&&e.windowBits)&&(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&(t.windowBits&15)===0&&(t.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new ql,this.strm.avail_out=0;var n=Al.inflateInit2(this.strm,t.windowBits);if(n!==Rr.Z_OK)throw new Error(O[n]);if(this.header=new Fv,Al.inflateGetHeader(this.strm,this.header),t.dictionary&&(typeof t.dictionary=="string"?t.dictionary=so.string2buf(t.dictionary):fd.call(t.dictionary)==="[object ArrayBuffer]"&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(n=Al.inflateSetDictionary(this.strm,t.dictionary),n!==Rr.Z_OK)))throw new Error(O[n])}Ls.prototype.push=function(e,t){var n=this.strm,r=this.options.chunkSize,a=this.options.dictionary,u,g,E,$,C,F=!1;if(this.ended)return!1;g=t===~~t?t:t===!0?Rr.Z_FINISH:Rr.Z_NO_FLUSH,typeof e=="string"?n.input=so.binstring2buf(e):fd.call(e)==="[object ArrayBuffer]"?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;do{if(n.avail_out===0&&(n.output=new kt.Buf8(r),n.next_out=0,n.avail_out=r),u=Al.inflate(n,Rr.Z_NO_FLUSH),u===Rr.Z_NEED_DICT&&a&&(u=Al.inflateSetDictionary(this.strm,a)),u===Rr.Z_BUF_ERROR&&F===!0&&(u=Rr.Z_OK,F=!1),u!==Rr.Z_STREAM_END&&u!==Rr.Z_OK)return this.onEnd(u),this.ended=!0,!1;n.next_out&&(n.avail_out===0||u===Rr.Z_STREAM_END||n.avail_in===0&&(g===Rr.Z_FINISH||g===Rr.Z_SYNC_FLUSH))&&(this.options.to==="string"?(E=so.utf8border(n.output,n.next_out),$=n.next_out-E,C=so.buf2string(n.output,E),n.next_out=$,n.avail_out=r-$,$&&kt.arraySet(n.output,n.output,E,$,0),this.onData(C)):this.onData(kt.shrinkBuf(n.output,n.next_out))),n.avail_in===0&&n.avail_out===0&&(F=!0)}while((n.avail_in>0||n.avail_out===0)&&u!==Rr.Z_STREAM_END);return u===Rr.Z_STREAM_END&&(g=Rr.Z_FINISH),g===Rr.Z_FINISH?(u=Al.inflateEnd(this.strm),this.onEnd(u),this.ended=!0,u===Rr.Z_OK):(g===Rr.Z_SYNC_FLUSH&&(this.onEnd(Rr.Z_OK),n.avail_out=0),!0)},Ls.prototype.onData=function(e){this.chunks.push(e)},Ls.prototype.onEnd=function(e){e===Rr.Z_OK&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=kt.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};function vu(e,t){var n=new Ls(t);if(n.push(e,!0),n.err)throw n.msg||O[n.err];return n.result}function Vv(e,t){return t=t||{},t.raw=!0,vu(e,t)}var $v=Ls,Uv=vu,Hv=Vv,jv=vu,zv={Inflate:$v,inflate:Uv,inflateRaw:Hv,ungzip:jv},Wv=Xp,Gv=zv,Yv=kt.assign,dd={};Yv(dd,Wv,Gv,Rr);var hd=dd;let qv="upx2px",Kv=[{name:"upx",type:[Number,String],required:!0}],Jv=1e-4,Zv=750,gd=!1,mu=0,pd=0,vd=960,md=375;function Xv(){let{platform:e,pixelRatio:t,windowWidth:n}=ho();mu=n,pd=t,gd=e==="ios"}function _d(e,t){let n=Number(e);return isNaN(n)?t:n}function Qv(){let e=P.globalStyle||{};vd=_d(e.rpxCalcMaxDeviceWidth,960),md=_d(e.rpxCalcBaseDeviceWidth,375)}let em=Ft(qv,(e,t)=>{if(mu===0&&(Xv(),Qv()),e=Number(e),e===0)return 0;let n=t||mu;n=n<=vd?n:md;let r=e/Zv*n;return r<0&&(r=-r),r=Math.floor(r+Jv),r===0&&(pd===1||!gd?r=1:r=.5),e<0?-r:r},Kv),tm="addInterceptor",nm="removeInterceptor",bd=[{name:"method",type:[String,Object],required:!0}],rm=bd;function Ed(e,t){Object.keys(t).forEach(n=>{ne.isFunction(t[n])&&(e[n]=im(e[n],t[n]))})}function yd(e,t){!e||!t||Object.keys(t).forEach(n=>{let r=e[n],a=t[n];ne.isArray(r)&&ne.isFunction(a)&&ne.remove(r,a)})}function im(e,t){let n=t?e?e.concat(t):ne.isArray(t)?t:[t]:e;return n&&om(n)}function om(e){let t=[];for(let n=0;n<e.length;n++)t.indexOf(e[n])===-1&&t.push(e[n]);return t}let am=Ft(tm,(e,t)=>{typeof e=="string"&&ne.isPlainObject(t)?Ed(zr[e]||(zr[e]={}),t):ne.isPlainObject(e)&&Ed(In,e)},bd),sm=Ft(nm,(e,t)=>{typeof e=="string"?ne.isPlainObject(t)?yd(zr[e],t):delete zr[e]:ne.isPlainObject(e)&&yd(In,e)},rm),lm={},cm="$on",wd=[{name:"event",type:String,required:!0},{name:"callback",type:Function,required:!0}],um="$once",fm=wd,dm="$off",hm=[{name:"event",type:[String,Array]},{name:"callback",type:Function}],gm="$emit",pm=[{name:"event",type:String,required:!0}],Ds=new Q.Emitter,vm=Ft(cm,(e,t)=>(Ds.on(e,t),()=>Ds.off(e,t)),wd),mm=Ft(um,(e,t)=>(Ds.once(e,t),()=>Ds.off(e,t)),fm),_m=Ft(dm,(e,t)=>{if(!e){Ds.e={};return}Array.isArray(e)||(e=[e]),e.forEach(n=>Ds.off(n,t))},hm),bm=Ft(gm,(e,...t)=>{Ds.emit(e,...t)},pm),Sd=[{name:"id",type:String,required:!0}],Em="createVideoContext",ym="createMapContext",wm=Sd,Sm="createCanvasContext",Am=[{name:"canvasId",type:String,required:!0},{name:"componentInstance",type:Object}],Cm="createInnerAudioContext",Om="createLivePusherContext",Tm=Sd.concat({name:"componentInstance",type:Object}),Pm=[.5,.8,1,1.25,1.5,2];class _u{constructor(t,n){this.id=t,this.pageId=n}play(){Ln(this.id,this.pageId,"play")}pause(){Ln(this.id,this.pageId,"pause")}stop(){Ln(this.id,this.pageId,"stop")}seek(t){Ln(this.id,this.pageId,"seek",{position:t})}sendDanmu(t){Ln(this.id,this.pageId,"sendDanmu",t)}playbackRate(t){~Pm.indexOf(t)||(t=1),Ln(this.id,this.pageId,"playbackRate",{rate:t})}requestFullScreen(t={}){Ln(this.id,this.pageId,"requestFullScreen",t)}exitFullScreen(){Ln(this.id,this.pageId,"exitFullScreen")}showStatusBar(){Ln(this.id,this.pageId,"showStatusBar")}hideStatusBar(){Ln(this.id,this.pageId,"hideStatusBar")}}let Im=Ft(Em,(e,t)=>t?new _u(e,yr(t)):new _u(e,yr(qr()))),Nm=(e,t)=>{let n=t.errMsg||"";new RegExp("\\:\\s*fail").test(n)?e.fail&&e.fail(t):e.success&&e.success(t),e.complete&&e.complete(t)},Mi=(e,t,n,r)=>{Ri(e,t,n,r,a=>{r&&Nm(r,a)})};class bu{constructor(t,n){this.id=t,this.pageId=n}getCenterLocation(t){Mi(this.id,this.pageId,"getCenterLocation",t)}moveToLocation(t){Mi(this.id,this.pageId,"moveToLocation",t)}getScale(t){Mi(this.id,this.pageId,"getScale",t)}getRegion(t){Mi(this.id,this.pageId,"getRegion",t)}includePoints(t){Mi(this.id,this.pageId,"includePoints",t)}translateMarker(t){Mi(this.id,this.pageId,"translateMarker",t)}$getAppMap(){return s.maps.getMapById(this.pageId+"-map-"+this.id)}addCustomLayer(t){Mi(this.id,this.pageId,"addCustomLayer",t)}removeCustomLayer(t){Mi(this.id,this.pageId,"removeCustomLayer",t)}addGroundOverlay(t){Mi(this.id,this.pageId,"addGroundOverlay",t)}removeGroundOverlay(t){Mi(this.id,this.pageId,"removeGroundOverlay",t)}updateGroundOverlay(t){Mi(this.id,this.pageId,"updateGroundOverlay",t)}initMarkerCluster(t){Mi(this.id,this.pageId,"initMarkerCluster",t)}addMarkers(t){Mi(this.id,this.pageId,"addMarkers",t)}removeMarkers(t){Mi(this.id,this.pageId,"removeMarkers",t)}moveAlong(t){Mi(this.id,this.pageId,"moveAlong",t)}openMapApp(t){Mi(this.id,this.pageId,"openMapApp",t)}on(t){Mi(this.id,this.pageId,"on",t)}}let km=Ft(ym,(e,t)=>t?new bu(e,yr(t)):new bu(e,yr(qr())),wm);function ps(e,t){return function(n,r){n?r[e]=Math.round(n):typeof t!="undefined"&&(r[e]=t)}}let Ad=ps("width"),Cd=ps("height"),Rm="canvasGetImageData",Od={formatArgs:{x:ps("x"),y:ps("y"),width:Ad,height:Cd}},Td={canvasId:{type:String,required:!0},x:{type:Number,required:!0},y:{type:Number,required:!0},width:{type:Number,required:!0},height:{type:Number,required:!0}},xm="canvasPutImageData",Bm=Od,Mm=ne.extend({data:{type:Uint8ClampedArray,required:!0}},Td,{height:{type:Number}}),Pd={PNG:"png",JPG:"jpg",JPEG:"jpg"},Lm="canvasToTempFilePath",Dm={formatArgs:{x:ps("x",0),y:ps("y",0),width:Ad,height:Cd,destWidth:ps("destWidth"),destHeight:ps("destHeight"),fileType(e,t){e=(e||"").toUpperCase();let n=Pd[e];n||(n=Pd.PNG),t.fileType=n},quality(e,t){t.quality=e&&e>0&&e<1?e:1}}},Fm={x:Number,y:Number,width:Number,height:Number,destWidth:Number,destHeight:Number,canvasId:{type:String,required:!0},fileType:String,quality:Number};function wc(e,t,n,r,a){ct.invokeViewMethod(`canvas.${e}`,{type:n,data:r},t,u=>{a&&a(u)})}var Vm=["scale","rotate","translate","setTransform","transform"],$m=["drawImage","fillText","fill","stroke","fillRect","strokeRect","clearRect","strokeText"],Um=["setFillStyle","setTextAlign","setStrokeStyle","setGlobalAlpha","setShadow","setFontSize","setLineCap","setLineJoin","setLineWidth","setMiterLimit","setTextBaseline","setLineDash"];function Hm(e,t){let r=document.createElement("canvas").getContext("2d");return r.font=t,r.measureText(e).width||0}let Id={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgrey:"#a9a9a9",darkgreen:"#006400",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",grey:"#808080",green:"#008000",greenyellow:"#adff2f",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgrey:"#d3d3d3",lightgreen:"#90ee90",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",rebeccapurple:"#663399",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32",transparent:"#00000000"};function Eu(e){e=e||"#000000";var t=null;if((t=/^#([0-9|A-F|a-f]{6})$/.exec(e))!=null){let r=parseInt(t[1].slice(0,2),16),a=parseInt(t[1].slice(2,4),16),u=parseInt(t[1].slice(4),16);return[r,a,u,255]}if((t=/^#([0-9|A-F|a-f]{3})$/.exec(e))!=null){let r=t[1].slice(0,1),a=t[1].slice(1,2),u=t[1].slice(2,3);return r=parseInt(r+r,16),a=parseInt(a+a,16),u=parseInt(u+u,16),[r,a,u,255]}if((t=/^rgb\((.+)\)$/.exec(e))!=null)return t[1].split(",").map(function(r){return Math.min(255,parseInt(r.trim()))}).concat(255);if((t=/^rgba\((.+)\)$/.exec(e))!=null)return t[1].split(",").map(function(r,a){return a===3?Math.floor(255*parseFloat(r.trim())):Math.min(255,parseInt(r.trim()))});var n=e.toLowerCase();if(ne.hasOwn(Id,n)){t=/^#([0-9|A-F|a-f]{6,8})$/.exec(Id[n]);let r=parseInt(t[1].slice(0,2),16),a=parseInt(t[1].slice(2,4),16),u=parseInt(t[1].slice(4,6),16),g=parseInt(t[1].slice(6,8),16);return g=g>=0?g:255,[r,a,u,g]}return console.error("unsupported color:"+e),[0,0,0,255]}class Nd{constructor(t,n){this.type=t,this.data=n,this.colorStop=[]}addColorStop(t,n){this.colorStop.push([t,Eu(n)])}}class jm{constructor(t,n){this.type="pattern",this.data=t,this.colorStop=n}}class zm{constructor(t){this.width=t}}class Jl{constructor(t,n){this.id=t,this.pageId=n,this.actions=[],this.path=[],this.subpath=[],this.drawingState=[],this.state={lineDash:[0,0],shadowOffsetX:0,shadowOffsetY:0,shadowBlur:0,shadowColor:[0,0,0,0],font:"10px sans-serif",fontSize:10,fontWeight:"normal",fontStyle:"normal",fontFamily:"sans-serif"}}draw(t=!1,n){var r=[...this.actions];this.actions=[],this.path=[],wc(this.id,this.pageId,"actionsChanged",{actions:r,reserve:t},n)}createLinearGradient(t,n,r,a){return new Nd("linear",[t,n,r,a])}createCircularGradient(t,n,r){return new Nd("radial",[t,n,r])}createPattern(t,n){if(n===void 0)console.error("Failed to execute 'createPattern' on 'CanvasContext': 2 arguments required, but only 1 present.");else if(["repeat","repeat-x","repeat-y","no-repeat"].indexOf(n)<0)console.error("Failed to execute 'createPattern' on 'CanvasContext': The provided type ('"+n+"') is not one of 'repeat', 'no-repeat', 'repeat-x', or 'repeat-y'.");else return new jm(t,n)}measureText(t){let n=this.state.font,r=0;{let a=s.webview.all().find(u=>u.getURL().endsWith("www/__uniappview.html"));a&&(r=Number(a.evalJSSync(`(${Hm.toString()})(${JSON.stringify(t)},${JSON.stringify(n)})`)))}return new zm(r)}save(){this.actions.push({method:"save",data:[]}),this.drawingState.push(this.state)}restore(){this.actions.push({method:"restore",data:[]}),this.state=this.drawingState.pop()||{lineDash:[0,0],shadowOffsetX:0,shadowOffsetY:0,shadowBlur:0,shadowColor:[0,0,0,0],font:"10px sans-serif",fontSize:10,fontWeight:"normal",fontStyle:"normal",fontFamily:"sans-serif"}}beginPath(){this.path=[],this.subpath=[]}moveTo(t,n){this.path.push({method:"moveTo",data:[t,n]}),this.subpath=[[t,n]]}lineTo(t,n){this.path.length===0&&this.subpath.length===0?this.path.push({method:"moveTo",data:[t,n]}):this.path.push({method:"lineTo",data:[t,n]}),this.subpath.push([t,n])}quadraticCurveTo(t,n,r,a){this.path.push({method:"quadraticCurveTo",data:[t,n,r,a]}),this.subpath.push([r,a])}bezierCurveTo(t,n,r,a,u,g){this.path.push({method:"bezierCurveTo",data:[t,n,r,a,u,g]}),this.subpath.push([u,g])}arc(t,n,r,a,u,g=!1){this.path.push({method:"arc",data:[t,n,r,a,u,g]}),this.subpath.push([t,n])}rect(t,n,r,a){this.path.push({method:"rect",data:[t,n,r,a]}),this.subpath=[[t,n]]}arcTo(t,n,r,a,u){this.path.push({method:"arcTo",data:[t,n,r,a,u]}),this.subpath.push([r,a])}clip(){this.actions.push({method:"clip",data:[...this.path]})}closePath(){this.path.push({method:"closePath",data:[]}),this.subpath.length&&(this.subpath=[this.subpath.shift()])}clearActions(){this.actions=[],this.path=[],this.subpath=[]}getActions(){var t=[...this.actions];return this.clearActions(),t}set lineDashOffset(t){this.actions.push({method:"setLineDashOffset",data:[t]})}set globalCompositeOperation(t){this.actions.push({method:"setGlobalCompositeOperation",data:[t]})}set shadowBlur(t){this.actions.push({method:"setShadowBlur",data:[t]})}set shadowColor(t){this.actions.push({method:"setShadowColor",data:[t]})}set shadowOffsetX(t){this.actions.push({method:"setShadowOffsetX",data:[t]})}set shadowOffsetY(t){this.actions.push({method:"setShadowOffsetY",data:[t]})}set font(t){var n=this;this.state.font=t;var r=t.match(/^(([\w\-]+\s)*)(\d+r?px)(\/(\d+\.?\d*(r?px)?))?\s+(.*)/);if(r){var a=r[1].trim().split(/\s/),u=parseFloat(r[3]),g=r[7],E=[];a.forEach(function(C,F){["italic","oblique","normal"].indexOf(C)>-1?(E.push({method:"setFontStyle",data:[C]}),n.state.fontStyle=C):["bold","normal"].indexOf(C)>-1?(E.push({method:"setFontWeight",data:[C]}),n.state.fontWeight=C):F===0?(E.push({method:"setFontStyle",data:["normal"]}),n.state.fontStyle="normal"):F===1&&$()}),a.length===1&&$(),a=E.map(function(C){return C.data[0]}).join(" "),this.state.fontSize=u,this.state.fontFamily=g,this.actions.push({method:"setFont",data:[`${a} ${u}px ${g}`]})}else console.warn("Failed to set 'font' on 'CanvasContext': invalid format.");function $(){E.push({method:"setFontWeight",data:["normal"]}),n.state.fontWeight="normal"}}get font(){return this.state.font}set fillStyle(t){this.setFillStyle(t)}set strokeStyle(t){this.setStrokeStyle(t)}set globalAlpha(t){t=Math.floor(255*parseFloat(t)),this.actions.push({method:"setGlobalAlpha",data:[t]})}set textAlign(t){this.actions.push({method:"setTextAlign",data:[t]})}set lineCap(t){this.actions.push({method:"setLineCap",data:[t]})}set lineJoin(t){this.actions.push({method:"setLineJoin",data:[t]})}set lineWidth(t){this.actions.push({method:"setLineWidth",data:[t]})}set miterLimit(t){this.actions.push({method:"setMiterLimit",data:[t]})}set textBaseline(t){this.actions.push({method:"setTextBaseline",data:[t]})}}let Wm=Q.once(()=>{[...Vm,...$m].forEach(function(e){function t(n){switch(n){case"fill":case"stroke":return function(){this.actions.push({method:n+"Path",data:[...this.path]})};case"fillRect":return function(r,a,u,g){this.actions.push({method:"fillPath",data:[{method:"rect",data:[r,a,u,g]}]})};case"strokeRect":return function(r,a,u,g){this.actions.push({method:"strokePath",data:[{method:"rect",data:[r,a,u,g]}]})};case"fillText":case"strokeText":return function(r,a,u,g){var E=[r.toString(),a,u];typeof g=="number"&&E.push(g),this.actions.push({method:n,data:E})};case"drawImage":return function(r,a,u,g,E,$,C,F,ue){ue===void 0&&($=a,C=u,F=g,ue=E,a=void 0,u=void 0,g=void 0,E=void 0);var be;function Ie(_t){return typeof _t=="number"}be=Ie(a)&&Ie(u)&&Ie(g)&&Ie(E)?[r,$,C,F,ue,a,u,g,E]:Ie(F)&&Ie(ue)?[r,$,C,F,ue]:[r,$,C],this.actions.push({method:n,data:be})};default:return function(...r){this.actions.push({method:n,data:r})}}}Jl.prototype[e]=t(e)}),Um.forEach(function(e){function t(n){switch(n){case"setFillStyle":case"setStrokeStyle":return function(r){typeof r!="object"?this.actions.push({method:n,data:["normal",Eu(r)]}):this.actions.push({method:n,data:[r.type,r.data,r.colorStop]})};case"setGlobalAlpha":return function(r){r=Math.floor(255*parseFloat(r)),this.actions.push({method:n,data:[r]})};case"setShadow":return function(r,a,u,g){g=Eu(g),this.actions.push({method:n,data:[r,a,u,g]}),this.state.shadowBlur=u,this.state.shadowColor=g,this.state.shadowOffsetX=r,this.state.shadowOffsetY=a};case"setLineDash":return function(r,a){r=r||[0,0],a=a||0,this.actions.push({method:n,data:[r,a]}),this.state.lineDash=r};case"setFontSize":return function(r){this.state.font=this.state.font.replace(/\d+\.?\d*px/,r+"px"),this.state.fontSize=r,this.actions.push({method:n,data:[r]})};default:return function(...r){this.actions.push({method:n,data:r})}}}Jl.prototype[e]=t(e)})}),Gm=Ft(Sm,(e,t)=>{if(Wm(),t)return new Jl(e,yr(t));let n=yr(qr());if(n)return new Jl(e,n);ct.emit(Q.ON_ERROR,"createCanvasContext:fail")},Am),Ym=Ee(Rm,({canvasId:e,x:t,y:n,width:r,height:a},{resolve:u,reject:g})=>{let E=yr(qr());if(!E){g();return}function $(C){if(C.errMsg&&C.errMsg.indexOf("fail")!==-1){g("",C);return}let F=C.data;F&&F.length&&(C.compressed&&(F=hd.inflateRaw(F)),C.data=new Uint8ClampedArray(F)),delete C.compressed,u(C)}wc(e,E,"getImageData",{x:t,y:n,width:r,height:a},$)},Td,Od),qm=Ee(xm,({canvasId:e,data:t,x:n,y:r,width:a,height:u},{resolve:g,reject:E})=>{var $=yr(qr());if(!$){E();return}let C,F=()=>{wc(e,$,"putImageData",{data:t,x:n,y:r,width:a,height:u,compressed:C},ue=>{if(ue.errMsg&&ue.errMsg.indexOf("fail")!==-1){E();return}g(ue)})};s.os.name!=="iOS"||typeof __WEEX_DEVTOOL__=="boolean"?(t=hd.deflateRaw(t,{to:"string"}),C=!0):t=Array.prototype.slice.call(t),F()},Mm,Bm),Km=Ee(Lm,({x:e=0,y:t=0,width:n,height:r,destWidth:a,destHeight:u,canvasId:g,fileType:E,quality:$},{resolve:C,reject:F})=>{var ue=yr(qr());if(!ue){F();return}let be=`${Bi}/canvas`;wc(g,ue,"toTempFilePath",{x:e,y:t,width:n,height:r,destWidth:a,destHeight:u,fileType:E,quality:$,dirname:be},Ie=>{if(Ie.errMsg&&Ie.errMsg.indexOf("fail")!==-1){F("",Ie);return}C(Ie)})},Fm,Dm),kd=["onCanplay","onPlay","onPause","onStop","onEnded","onTimeUpdate","onError","onWaiting","onSeeking","onSeeked"],Jm=["offCanplay","offPlay","offPause","offStop","offEnded","offTimeUpdate","offError","offWaiting","offSeeking","offSeeked"],Zm={thresholds:[0],initialRatio:0,observeAll:!1},Xm=["top","right","bottom","left"],Qm=1;function Rd(e={}){return Xm.map(t=>`${Number(e[t])||0}px`).join(" ")}class xd{constructor(t,n){this._pageId=yr(t),this._component=t,this._options=ne.extend({},Zm,n)}relativeTo(t,n){return this._options.relativeToSelector=t,this._options.rootMargin=Rd(n),this}relativeToViewport(t){return this._options.relativeToSelector=void 0,this._options.rootMargin=Rd(t),this}observe(t,n){!ne.isFunction(n)||(this._options.selector=t,this._reqId=Qm++,ar({reqId:this._reqId,component:this._component,options:this._options,callback:n},this._pageId))}disconnect(){this._reqId&&hr({reqId:this._reqId,component:this._component},this._pageId)}}let e_=Ft("createIntersectionObserver",(e,t)=>(e=Q.resolveComponentInstance(e),e&&!yr(e)&&(t=e,e=null),e?new xd(e,t):new xd(qr(),t))),t_=1;class Bd{constructor(t){this._pageId=t.$page&&t.$page.id,this._component=t}observe(t,n){!ne.isFunction(n)||(this._reqId=t_++,po({reqId:this._reqId,component:this._component,options:t,callback:n},this._pageId))}disconnect(){this._reqId&&la({reqId:this._reqId,component:this._component},this._pageId)}}let n_=Ft("createMediaQueryObserver",e=>(e=Q.resolveComponentInstance(e),e&&!yr(e)&&(e=null),e?new Bd(e):new Bd(qr()))),r_=0,yu={};function i_(e,t,n,r){let a={options:r},u=r&&("success"in r||"fail"in r||"complete"in r);if(u){let g=String(r_++);a.callbackId=g,yu[g]=r}ct.invokeViewMethod(`editor.${e}`,{type:n,data:a},t,({callbackId:g,data:E})=>{u&&(Q.callOptions(yu[g],E),delete yu[g])})}class o_{constructor(t,n){this.id=t,this.pageId=n}format(t,n){this._exec("format",{name:t,value:n})}insertDivider(){this._exec("insertDivider")}insertImage(t){this._exec("insertImage",t)}insertText(t){this._exec("insertText",t)}setContents(t){this._exec("setContents",t)}getContents(t){this._exec("getContents",t)}clear(t){this._exec("clear",t)}removeFormat(t){this._exec("removeFormat",t)}undo(t){this._exec("undo",t)}redo(t){this._exec("redo",t)}blur(t){this._exec("blur",t)}getSelectionText(t){this._exec("getSelectionText",t)}scrollIntoView(t){this._exec("scrollIntoView",t)}_exec(t,n){i_(this.id,this.pageId,t,n)}}let a_={canvas:Jl,map:bu,video:_u,editor:o_};function Md(e){if(e&&e.contextInfo){let{id:t,type:n,page:r}=e.contextInfo,a=a_[n];e.context=new a(t,r),delete e.contextInfo}}class wu{constructor(t,n,r,a){this._selectorQuery=t,this._component=n,this._selector=r,this._single=a}boundingClientRect(t){return this._selectorQuery._push(this._selector,this._component,this._single,{id:!0,dataset:!0,rect:!0,size:!0},t),this._selectorQuery}fields(t,n){return this._selectorQuery._push(this._selector,this._component,this._single,t,n),this._selectorQuery}scrollOffset(t){return this._selectorQuery._push(this._selector,this._component,this._single,{id:!0,dataset:!0,scrollOffset:!0},t),this._selectorQuery}context(t){return this._selectorQuery._push(this._selector,this._component,this._single,{context:!0},t),this._selectorQuery}node(t){return this._selectorQuery}}class s_{constructor(t){this._component=void 0,this._page=t,this._queue=[],this._queueCb=[]}exec(t){return Yt(this._page,this._queue,n=>{let r=this._queueCb;n.forEach((a,u)=>{Array.isArray(a)?a.forEach(Md):Md(a);let g=r[u];typeof g=="function"&&g.call(this,a)}),typeof t=="function"&&t.call(this,n)}),this._nodesRef}in(t){return this._component=Q.resolveComponentInstance(t),this}select(t){return this._nodesRef=new wu(this,this._component,t,!0)}selectAll(t){return this._nodesRef=new wu(this,this._component,t,!1)}selectViewport(){return this._nodesRef=new wu(this,null,"",!0)}_push(t,n,r,a,u){this._queue.push({component:n,selector:t,single:r,fields:a}),this._queueCb.push(u)}}let l_=Ft("createSelectorQuery",e=>(e=Q.resolveComponentInstance(e),e&&!yr(e)&&(e=null),new s_(e||qr()))),c_="createAnimation",u_={formatArgs:{}},f_={duration:Number,timingFunction:String,delay:Number,transformOrigin:String},d_={duration:400,timingFunction:"linear",delay:0,transformOrigin:"50% 50% 0"};class Ld{constructor(t){this.actions=[],this.currentTransform={},this.currentStepAnimates=[],this.option=ne.extend({},d_,t)}_getOption(t){let n={transition:ne.extend({},this.option,t),transformOrigin:""};return n.transformOrigin=n.transition.transformOrigin,delete n.transition.transformOrigin,n}_pushAnimates(t,n){this.currentStepAnimates.push({type:t,args:n})}_converType(t){return t.replace(/[A-Z]/g,n=>`-${n.toLowerCase()}`)}_getValue(t){return typeof t=="number"?`${t}px`:t}export(){let t=this.actions;return this.actions=[],{actions:t}}step(t){return this.currentStepAnimates.forEach(n=>{n.type!=="style"?this.currentTransform[n.type]=n:this.currentTransform[`${n.type}.${n.args[0]}`]=n}),this.actions.push({animates:Object.values(this.currentTransform),option:this._getOption(t)}),this.currentStepAnimates=[],this}}let h_=Q.once(()=>{let e=["matrix","matrix3d","rotate","rotate3d","rotateX","rotateY","rotateZ","scale","scale3d","scaleX","scaleY","scaleZ","skew","skewX","skewY","translate","translate3d","translateX","translateY","translateZ"],t=["opacity","backgroundColor"],n=["width","height","left","right","top","bottom"];e.concat(t,n).forEach(r=>{Ld.prototype[r]=function(...a){return t.concat(n).includes(r)?this._pushAnimates("style",[this._converType(r),n.includes(r)?this._getValue(a[0]):a[0]]):this._pushAnimates(r,a),this}})}),g_=Ft(c_,e=>(h_(),new Ld(e)),f_,u_),Dd="onTabBarMidButtonTap",p_=Yn(Dd,()=>{}),v_="onWindowResize",m_="offWindowResize",__=Yn(v_,()=>{}),b_=$i(m_,()=>{}),Fd="setLocale",E_="getLocale",Vd="onLocaleChange",y_=Ft(E_,()=>{let e=Hn({allowDefault:!0});return e&&e.$vm?e.$vm.$locale:Ye().getLocale()}),w_=Yn(Vd,()=>{}),S_=Ft(Fd,e=>{let t=Hn();return t&&t.$vm.$locale!==e?(t.$vm.$locale=e,Pn().forEach(a=>{ct.publishHandler(Fd,e,a.$page.id)}),p.requireModule("plus").setLanguage(e),ct.invokeOnCallback(Vd,{locale:e}),!0):!1}),A_=Ee("setPageMeta",(e,{resolve:t})=>{t(nr(qr(),e))}),C_=Ee("getSelectedTextRange",(e,{resolve:t,reject:n})=>{ct.invokeViewMethod("getSelectedTextRange",{},Da(),r=>{typeof r.end=="undefined"&&typeof r.start=="undefined"?n("no focused"):t(r)})}),Sc={[Q.ON_UNHANDLE_REJECTION]:[],[Q.ON_PAGE_NOT_FOUND]:[],[Q.ON_ERROR]:[],[Q.ON_SHOW]:[],[Q.ON_HIDE]:[]};function Zl(e,t){let n=Hn({allowDefault:!0});if(n&&n.$vm)return on.injectHook(e,t,n.$vm.$);Sc[e].push(t)}function O_(e){Object.keys(Sc).forEach(t=>{Sc[t].forEach(n=>{on.injectHook(t,n,e)})})}function Xl(e,t){let n=Hn({allowDefault:!0});if(n&&n.$vm)return Ni(n.$vm,e,t);ne.remove(Sc[e],t)}function T_(e){Zl(Q.ON_UNHANDLE_REJECTION,e)}function P_(e){Xl(Q.ON_UNHANDLE_REJECTION,e)}function I_(e){Zl(Q.ON_PAGE_NOT_FOUND,e)}function N_(e){Xl(Q.ON_PAGE_NOT_FOUND,e)}function k_(e){Zl(Q.ON_ERROR,e)}function R_(e){Xl(Q.ON_ERROR,e)}function x_(e){Zl(Q.ON_SHOW,e)}function B_(e){Xl(Q.ON_SHOW,e)}function M_(e){Zl(Q.ON_HIDE,e)}function L_(e){Xl(Q.ON_HIDE,e)}let D_=Ft("getEnterOptionsSync",()=>Sr()),F_=Ft("getLaunchOptionsSync",()=>Nr()),Ac,$d;function Ud(e){try{return JSON.parse(e)}catch(t){}return e}function V_(e){e.type==="clientId"?(Ac=e.cid,$d=e.errMsg,Hd(Ac,e.errMsg)):e.type==="pushMsg"?Fs.forEach(t=>{t({type:"receive",data:Ud(e.message)})}):e.type==="click"&&Fs.forEach(t=>{t({type:"click",data:Ud(e.message)})})}let Su=[];function Hd(e,t){Su.forEach(n=>{n(e,t)}),Su.length=0}function $_(e){ne.isPlainObject(e)||(e={});let{success:t,fail:n,complete:r}=Tr(e),a=ne.isFunction(t),u=ne.isFunction(n),g=ne.isFunction(r);Su.push((E,$)=>{let C;E?(C={errMsg:"getPushCid:ok",cid:E},a&&t(C)):(C={errMsg:"getPushCid:fail"+($?" "+$:"")},u&&n(C)),g&&r(C)}),typeof Ac!="undefined"&&Promise.resolve().then(()=>Hd(Ac,$d))}let Fs=[],U_=e=>{Fs.indexOf(e)===-1&&Fs.push(e)},H_=e=>{if(!e)Fs.length=0;else{let t=Fs.indexOf(e);t>-1&&Fs.splice(t,1)}},j_="getBackgroundAudioManager",z_="makePhoneCall",W_={phoneNumber:String},G_="addPhoneContact",Y_={formatArgs:{firstName(e){if(!e)return"addPhoneContact:fail parameter error: parameter.firstName should not be empty;"}}},q_={firstName:{type:String,required:!0},photoFilePath:String,nickName:String,lastName:String,middleName:String,remark:String,mobilePhoneNumber:String,weChatNumber:String,addressCountry:String,addressState:String,addressCity:String,addressStreet:String,addressPostalCode:String,organization:String,title:String,workFaxNumber:String,workPhoneNumber:String,hostNumber:String,email:String,url:String,workAddressCountry:String,workAddressState:String,workAddressCity:String,workAddressStreet:String,workAddressPostalCode:String,homeFaxNumber:String,homePhoneNumber:String,homeAddressCountry:String,homeAddressState:String,homeAddressCity:String,homeAddressStreet:String,homeAddressPostalCode:String},K_="getClipboardData",J_="setClipboardData",Z_={formatArgs:{showToast:!0},beforeInvoke(){ea()},beforeSuccess(e,t){if(!t.showToast)return;let{t:n}=Ye(),r=n("uni.setClipboardData.success");r&&Lt.showToast({title:r,icon:"success",mask:!1})}},X_={data:{type:String,required:!0},showToast:{type:Boolean}},jd="onAccelerometer",Q_="offAccelerometer",eb="startAccelerometer",tb="stopAccelerometer",zd="onCompass",nb="offCompass",rb="startCompass",ib="stopCompass",ob="vibrateShort",ab="vibrateLong",Wd="onBluetoothDeviceFound",Gd="onBluetoothAdapterStateChange",Yd="onBLEConnectionStateChange",qd="onBLECharacteristicValueChange",sb="startBluetoothDevicesDiscovery",lb={services:Array,allowDuplicatesKey:Boolean,interval:Number},cb="getConnectedBluetoothDevices",ub={services:{type:Array,required:!0}},fb="createBLEConnection",db={deviceId:{type:String,required:!0}},hb="closeBLEConnection",gb={deviceId:{type:String,required:!0}},pb="getBLEDeviceServices",vb={deviceId:{type:String,required:!0}},mb="getBLEDeviceCharacteristics",_b={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0}},bb="notifyBLECharacteristicValueChange",Eb={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0},characteristicId:{type:String,required:!0},state:{type:Boolean,required:!0}},yb="readBLECharacteristicValue",wb={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0},characteristicId:{type:String,required:!0}},Sb="writeBLECharacteristicValue",Ab={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0},characteristicId:{type:String,required:!0},value:{type:Array,required:!0}},Cb="setBLEMTU",Ob={deviceId:{type:String,required:!0},mtu:{type:Number,required:!0}},Tb="getBLEDeviceRSSI",Pb={deviceId:{type:String,required:!0}},Kd="onBeaconUpdate",Jd="onBeaconServiceChange",Ib="getBeacons",Nb="startBeaconDiscovery",kb={uuids:{type:Array,required:!0}},Rb="stopBeaconDiscovery",xb="getScreenBrightness",Bb="setScreenBrightness",Mb="setKeepScreenOn",Lb="soterAuthentication",Db="checkIsSoterEnrolledInDevice",Fb=["fingerPrint","facial","speech"],Vb={formatArgs:{checkAuthMode(e,t){if(!e||!Fb.includes(e))return"checkAuthMode \u586B\u5199\u9519\u8BEF"}}},$b={checkAuthMode:String},Ub="checkIsSoterEnrolledInDevice",Hb={formatArgs:{requestAuthModes(e,t){if(!e.includes("fingerPrint")&&!e.includes("facial"))return"requestAuthModes \u586B\u5199\u9519\u8BEF"}}},jb={requestAuthModes:{type:Array,required:!0},challenge:String,authContent:String},zb="scanCode",Wb={onlyFromCamera:Boolean,scanType:Array,autoDecodeCharSet:Boolean},Gb="getStorage",Zd={key:{type:String,required:!0}},Yb="getStorageSync",Xd=[{name:"key",type:String,required:!0}],qb="setStorage",Kb={key:{type:String,required:!0},data:{required:!0}},Jb="setStorageSync",Zb=[{name:"key",type:String,required:!0},{name:"data",required:!0}],Qd="removeStorage",Xb=Zd,Qb=Xd,e0="saveFile",t0={formatArgs:{tempFilePath(e,t){t.tempFilePath=Ot(e)}}},n0={tempFilePath:{type:String,required:!0}},r0="getSavedFileList",i0="removeSavedFile",o0={formatArgs:{filePath(e,t){t.filePath=Ot(e)}}},a0={filePath:{type:String,required:!0}},s0="getFileInfo",l0={formatArgs:{filePath(e,t){t.filePath=Ot(e)}}},c0={filePath:{type:String,required:!0}},u0="getSavedFileInfo",f0={formatArgs:{filePath(e,t){t.filePath=Ot(e)}}},d0={filePath:{type:String,required:!0}},h0="openDocument",g0={formatArgs:{filePath(e,t){t.filePath=Ot(e)}}},p0={filePath:{type:String,required:!0},fileType:String},v0="hideKeyboard",m0="showKeyboard",_0="chooseLocation",b0={keyword:String,latitude:Number,longitude:Number},E0="getLocation",eh=["wgs84","gcj02"],y0={formatArgs:{type(e,t){e=(e||"").toLowerCase(),eh.indexOf(e)===-1?t.type=eh[0]:t.type=e},altitude(e,t){t.altitude=e||!1}}},w0={type:String,altitude:Boolean},S0="openLocation",A0={formatArgs:{scale(e,t){e=Math.floor(e),t.scale=e>=5&&e<=18?e:18}}},C0={latitude:{type:Number,required:!0},longitude:{type:Number,required:!0},scale:Number,name:String,address:String},O0="chooseImage",T0={formatArgs:{count(e,t){(!e||e<=0)&&(t.count=9)},sizeType(e,t){t.sizeType=Bn(e,An)},sourceType(e,t){t.sourceType=Bn(e,jn)},extension(e,t){if(e instanceof Array&&e.length===0)return"param extension should not be empty.";e||(t.extension=["*"])}}},P0={count:Number,sizeType:[Array,String],sourceType:Array,extension:Array},I0="chooseVideo",N0={formatArgs:{sourceType(e,t){t.sourceType=Bn(e,jn)},compressed:!0,maxDuration:60,camera:"back",extension(e,t){if(e instanceof Array&&e.length===0)return"param extension should not be empty.";e||(t.extension=["*"])}}},k0={sourceType:Array,compressed:Boolean,maxDuration:Number,camera:String,extension:Array},R0="getImageInfo",x0={formatArgs:{src(e,t){t.src=Ot(e)}}},B0={src:{type:String,required:!0}},M0="previewImage",L0={formatArgs:{urls(e,t){t.urls=e.map(n=>typeof n=="string"&&n?Ot(n):"")},current(e,t){typeof e=="number"?t.current=e>0&&e<t.urls.length?e:0:typeof e=="string"&&e&&(t.current=Ot(e))}}},D0={urls:{type:Array,required:!0},current:{type:[Number,String]}},F0="closePreviewImage",V0="getVideoInfo",$0={formatArgs:{src(e,t){t.src=Ot(e)}}},U0={src:{type:String,required:!0}},H0="saveImageToPhotosAlbum",j0={formatArgs:{filePath(e,t){t.filePath=Ot(e)}}},z0={filePath:{type:String,required:!0}},W0="saveVideoToPhotosAlbum",G0={formatArgs:{filePath(e,t){t.filePath=Ot(e)}}},Y0={filePath:{type:String,required:!0}},q0="getRecorderManager",K0="compressImage",J0={formatArgs:{src(e,t){t.src=Ot(e)}}},Z0={src:{type:String,required:!0}},X0="compressVideo",Q0={formatArgs:{src(e,t){t.src=Ot(e)}}},eE={src:{type:String,required:!0},quality:String,bitrate:Number,fps:Number,resolution:Number},tE="request",nE={JSON:"json"},rE=["text","arraybuffer"],iE="text",th=encodeURIComponent;function oE(e,t){let n=e.split("#"),r=n[1]||"";n=n[0].split("?");let a=n[1]||"";e=n[0];let u=a.split("&").filter(E=>E),g={};u.forEach(E=>{let $=E.split("=");g[$[0]]=$[1]});for(let E in t)if(ne.hasOwn(t,E)){let $=t[E];typeof $=="undefined"||$===null?$="":ne.isPlainObject($)&&($=JSON.stringify($)),g[th(E)]=th($)}return a=Object.keys(g).map(E=>`${E}=${g[E]}`).join("&"),e+(a?"?"+a:"")+(r?"#"+r:"")}let aE={method:String,data:[Object,String,Array,ArrayBuffer],url:{type:String,required:!0},header:Object,dataType:String,responseType:String,withCredentials:Boolean},sE={formatArgs:{method(e,t){t.method=fn((e||"").toUpperCase(),En)},data(e,t){t.data=e||""},url(e,t){t.method===En[0]&&ne.isPlainObject(t.data)&&Object.keys(t.data).length&&(t.url=oE(e,t.data))},header(e,t){let n=t.header=e||{};t.method!==En[0]&&(Object.keys(n).find(r=>r.toLowerCase()==="content-type")||(n["Content-Type"]="application/json"))},dataType(e,t){t.dataType=(e||nE.JSON).toLowerCase()},responseType(e,t){t.responseType=(e||"").toLowerCase(),rE.indexOf(t.responseType)===-1&&(t.responseType=iE)}}},lE="configMTLS",cE={certificates:{type:Array,required:!0}},uE={formatArgs:{certificates(e){if(e.some(t=>ne.toRawType(t.host)!=="String"))return"\u53C2\u6570\u914D\u7F6E\u9519\u8BEF\uFF0C\u8BF7\u786E\u8BA4\u540E\u91CD\u8BD5"}}},fE="downloadFile",dE={formatArgs:{header(e,t){t.header=e||{}}}},hE={url:{type:String,required:!0},header:Object,timeout:Number},gE="uploadFile",pE={formatArgs:{filePath(e,t){e&&(t.filePath=Ot(e))},header(e,t){t.header=e||{}},formData(e,t){t.formData=e||{}}}},vE={url:{type:String,required:!0},files:Array,filePath:String,name:String,header:Object,formData:Object,timeout:Number},mE="connectSocket",_E={formatArgs:{header(e,t){t.header=e||{}},method(e,t){t.method=fn((e||"").toUpperCase(),En)},protocols(e,t){typeof e=="string"&&(t.protocols=[e])}}},bE={url:{type:String,required:!0},header:{type:Object},method:String,protocols:[Array,String]},EE="sendSocketMessage",yE={data:[String,ArrayBuffer]},wE="closeSocket",SE={code:Number,reason:String};function AE(e){if(typeof e!="string")return e;let t=e.indexOf("?");if(t===-1)return e;let n=e.slice(t+1).trim().replace(/^(\?|#|&)/,"");if(!n)return e;e=e.slice(0,t);let r=[];return n.split("&").forEach(a=>{let u=a.replace(/\+/g," ").split("="),g=u.shift(),E=u.length>0?u.join("="):"";r.push(g+"="+encodeURIComponent(E))}),r.length?e+"?"+r.join("&"):e}let CE=["slide-in-right","slide-in-left","slide-in-top","slide-in-bottom","fade-in","zoom-out","zoom-fade-out","pop-in","none"],OE=["slide-out-right","slide-out-left","slide-out-top","slide-out-bottom","fade-out","zoom-in","zoom-fade-in","pop-out","none"],Cl={url:{type:String,required:!0}},Au="navigateTo",Cu="redirectTo",nh="reLaunch",Cc="switchTab",TE="navigateBack",Ou="preloadPage",rh="unPreloadPage",PE=ne.extend({},Cl,ih(CE)),IE=ne.extend({delta:{type:Number}},ih(OE)),NE=Cl,kE=Cl,RE=Cl,xE=Cl,BE=Cl,ME=Tc(Au),LE=Tc(Cu),DE=Tc(nh),FE=Tc(Cc),VE={formatArgs:{delta(e,t){e=parseInt(e+"")||1,t.delta=Math.min(Pn().length-1,e)}}};function ih(e){return{animationType:{type:String,validator(t){if(t&&e.indexOf(t)===-1)return"`"+t+"` is not supported for `animationType` (supported values are: `"+e.join("`|`")+"`)"}},animationDuration:{type:Number}}}let Oc;function $E(){Oc=""}function Tc(e){return{formatArgs:{url:UE(e)},beforeAll:$E}}function UE(e){return function(n,r){if(!n)return'Missing required args: "url"';n=jo(n);let a=n.split("?")[0],u=Un(a,!0);if(!u)return"page `"+n+"` is not found";if(e===Au||e===Cu){if(u.meta.isTabBar)return`can not ${e} a tabbar page`}else if(e===Cc&&!u.meta.isTabBar)return"can not switch to no-tabBar page";if((e===Cc||e===Ou)&&u.meta.isTabBar&&r.openType!=="appLaunch"&&(n=a),u.meta.isEntry&&(n=n.replace(u.alias,"/")),r.url=AE(n),e!==rh){if(e===Ou){if(!u.meta.isNVue)return"can not preload vue page";if(u.meta.isTabBar){let g=Pn(),E=u.path.slice(1);if(g.find($=>$.route===E))return"tabBar page `"+E+"` already exists"}return}if(Oc===n&&r.openType!=="appLaunch")return`${Oc} locked`;P.ready&&(Oc=n)}}}let HE="hideLoading",jE="hideToast",oh="loadFontFace",zE={family:{type:String,required:!0},source:{type:String,required:!0},desc:Object},WE=["#ffffff","#000000"],GE="setNavigationBarColor",YE={formatArgs:{animation(e,t){e||(e={duration:0,timingFunc:"linear"}),t.animation={duration:e.duration||0,timingFunc:e.timingFunc||"linear"}}}},qE={frontColor:{type:String,required:!0,validator(e){if(WE.indexOf(e)===-1)return`invalid frontColor "${e}"`}},backgroundColor:{type:String,required:!0},animation:Object},KE="setNavigationBarTitle",JE={title:{type:String,required:!0}},ZE="showNavigationBarLoading",XE="hideNavigationBarLoading",ah="pageScrollTo",QE={scrollTop:Number,selector:String,duration:Number},ey={formatArgs:{duration:300}},ty="showActionSheet",ny={itemList:{type:Array,required:!0},title:String,itemColor:String,popover:Object},ry={formatArgs:{itemColor:"#000"}},iy="showLoading",oy={title:String,mask:Boolean},ay={formatArgs:{title:"",mask:!1}},sy="showModal",ly={title:String,content:String,showCancel:Boolean,cancelText:String,cancelColor:String,confirmText:String,confirmColor:String},cy={beforeInvoke(){ir()},formatArgs:{title:"",content:"",showCancel:!0,cancelText(e,t){if(!ne.hasOwn(t,"cancelText")){let{t:n}=Ye();t.cancelText=n("uni.showModal.cancel")}},cancelColor:"#000",confirmText(e,t){if(!ne.hasOwn(t,"confirmText")){let{t:n}=Ye();t.confirmText=n("uni.showModal.confirm")}},confirmColor:Q.PRIMARY_COLOR}},uy="showToast",fy=["success","loading","none","error"],dy={title:String,icon:String,image:String,duration:Number,mask:Boolean},hy={formatArgs:{title:"",icon(e,t){t.icon=fn(e,fy)},image(e,t){e?t.image=Ot(e):t.image=""},duration:1500,mask:!1}},gy="startPullDownRefresh",py="stopPullDownRefresh",Ql={index:{type:Number,required:!0}},vs={beforeInvoke(){let e=wa();if(e&&!e.isTabBar)return"not TabBar page"},formatArgs:{index(e){if(!P.tabBar.list[e])return"tabbar item not found"}}},vy="setTabBarItem",my=ne.extend({text:String,iconPath:String,selectedIconPath:String,pagePath:String},Ql),_y={beforeInvoke:vs.beforeInvoke,formatArgs:ne.extend({pagePath(e,t){e&&(t.pagePath=Q.removeLeadingSlash(e))}},vs.formatArgs)},by="setTabBarStyle",Ey={color:String,selectedColor:String,backgroundColor:String,backgroundImage:String,backgroundRepeat:String,borderStyle:String},yy=/^(linear|radial)-gradient\(.+?\);?$/,wy={beforeInvoke:vs.beforeInvoke,formatArgs:{backgroundImage(e,t){e&&!yy.test(e)&&(t.backgroundImage=Ot(e))},borderStyle(e,t){e&&(t.borderStyle=e==="white"?"white":"black")}}},Sy="hideTabBar",sh={animation:Boolean},Ay="showTabBar",Cy=sh,Oy="hideTabBarRedDot",Ty=Ql,Py=vs,Iy="showTabBarRedDot",Ny=Ql,ky=vs,Ry="removeTabBarBadge",xy=Ql,By=vs,My="setTabBarBadge",Ly=ne.extend({text:{type:String,required:!0}},Ql),Dy={beforeInvoke:vs.beforeInvoke,formatArgs:ne.extend({text(e,t){Q.getLen(e)>=4&&(t.text="...")}},vs.formatArgs)},Fy="getProvider",Vy={service:{type:String,required:!0}},$y="login",Uy={provider:String,scopes:[String,Array],timeout:Number,univerifyStyle:Object,onlyAuthorize:Boolean},Hy="getUserInfo",jy={provider:String,withCredentials:Boolean,timeout:Number,lang:String},zy="ggetUserProfilegetUserProfile",Wy={provider:String,withCredentials:Boolean,timeout:Number,lang:String},Gy="preLogin",Yy={UNIVERIFY:"univerify"},qy={formatArgs:{provider(e,t){if(Object.values(Yy).indexOf(String(e))<0)return"provider error"}}},Ky={provider:{type:String,required:!0}},Jy="closeAuthView",Zy="getCheckBoxState",Xy="getUniverifyManager",Qy="share",lh=["WXSceneSession","WXSceneTimeline","WXSceneFavorite"],ew={formatArgs:{scene(e,t){let{provider:n,openCustomerServiceChat:r}=t;if(n==="weixin"&&!r&&(!e||!lh.includes(e)))return`\u5206\u4EAB\u5230\u5FAE\u4FE1\u65F6\uFF0Cscene\u5FC5\u987B\u4E3A\u4EE5\u4E0B\u5176\u4E2D\u4E00\u4E2A\uFF1A${lh.join("\u3001")}`},summary(e,t){if(t.type===1&&!e)return"\u5206\u4EAB\u7EAF\u6587\u672C\u65F6\uFF0Csummary\u5FC5\u586B"},href(e,t){if(t.type===0&&!e)return"\u5206\u4EAB\u56FE\u6587\u65F6\uFF0Chref\u5FC5\u586B"},imageUrl(e,t){if([0,2,5].includes(Number(t.type))&&!e)return"\u5206\u4EAB\u56FE\u6587\u3001\u7EAF\u56FE\u7247\u3001\u5C0F\u7A0B\u5E8F\u65F6\uFF0CimageUrl\u5FC5\u586B\uFF0C\u63A8\u8350\u4F7F\u7528\u5C0F\u4E8E20Kb\u7684\u56FE\u7247"},mediaUrl(e,t){if([3,4].includes(Number(t.type))&&!e)return"\u5206\u4EAB\u97F3\u4E50\u3001\u89C6\u9891\u65F6\uFF0CmediaUrl\u5FC5\u586B"},miniProgram(e,t){if(t.type===5&&!e)return"\u5206\u4EAB\u5C0F\u7A0B\u5E8F\u65F6\uFF0CminiProgram\u5FC5\u586B"},corpid(e,t){if(t.openCustomerServiceChat&&!e)return"\u4F7F\u7528\u6253\u5F00\u5BA2\u670D\u529F\u80FD\u65F6 corpid \u5FC5\u586B"},customerUrl(e,t){if(t.openCustomerServiceChat&&!e)return"\u4F7F\u7528\u6253\u5F00\u5BA2\u670D\u529F\u80FD\u65F6 customerUrl \u5FC5\u586B"}}},tw={provider:{type:String,required:!0},type:Number,title:String,scene:String,summary:String,href:String,imageUrl:String,mediaUrl:String,miniProgram:Object},nw="shareWithSystem",ch=["text","image"],rw={formatArgs:{type(e,t){if(e&&!ch.includes(e))return"\u5206\u4EAB\u53C2\u6570 type \u4E0D\u6B63\u786E\u3002\u53EA\u652F\u6301text\u3001image";t.type=fn(e,ch)}}},iw={type:String,summary:String,href:String,imageUrl:String},ow="requestPayment",aw={provider:{type:String,required:!0},orderInfo:{type:[String,Object],required:!0},timeStamp:String,nonceStr:String,package:String,signType:String,paySign:String},sw="createRewardedVideoAd",lw={formatArgs:{adpid:"",adUnitId:""}},cw={adpid:String,adUnitId:String},uw="createFullScreenVideoAd",fw={formatArgs:{adpid:""}},dw={adpid:String},hw="createInterstitialAd",gw={formatArgs:{adpid:"",adUnitId:""}},pw={adpid:String,adUnitId:String},vw="createInteractiveAd",mw={formatArgs:{adpid(e,t){if(!e)return"adpid should not be empty.";e&&(t.adpid=e)},provider(e,t){if(!e)return"provider should not be empty.";e&&(t.provider=e)}}},_w={adpid:{type:String,required:!0},provider:{type:String,required:!0}};function Vs(e,t){return function(r){delete r.code,delete r.message,typeof t=="function"&&(r=t(r)),e(r)}}function sr(e,t){return function(r){r=r||{},t=r.message||t||"",delete r.message,e(t,ne.extend({code:0},r))}}function Ol(e,t){return function(){e()(function(r){r&&(delete r.code,delete r.message),ct.invokeOnCallback(t,r)})}}function li(e,t,n){return function(r,{resolve:a,reject:u}){e()(ne.extend({},typeof t=="function"?t(r):r,{success:Vs(a,n),fail:sr(u)}))}}function uh(e=""){if(!(P.tabBar&&Array.isArray(P.tabBar.list)))return!1;try{if(!e){let n=Pn();if(!n.length)return!1;let r=n[n.length-1];return r?r.$page.meta.isTabBar:!1}/^\//.test(e)||(e=Q.addLeadingSlash(e));let t=Un(e);return t&&t.meta.isTabBar}catch(t){}return!1}let ga="__TYPE",bw="uni-storage-keys";function Tu(e){let t=["object","string","number","boolean","undefined"];try{let n=typeof e=="string"?JSON.parse(e):e,r=n.type;if(t.indexOf(r)>=0){let a=Object.keys(n);if(a.length===2&&"data"in n){if(typeof n.data===r)return n.data;if(r==="object"&&/^\d{4}-\d{2}-\d{2}T\d{2}\:\d{2}\:\d{2}\.\d{3}Z$/.test(n.data))return new Date(n.data)}else if(a.length===1)return""}}catch(n){}}let Ew=Ft(Jb,(e,t)=>{let n=typeof t,r=n==="string"?t:JSON.stringify({type:n,data:t});try{n==="string"&&Tu(r)!==void 0?s.storage.setItem(e+ga,n):s.storage.removeItem(e+ga),s.storage.setItem(e,r)}catch(a){}},Zb),yw=Ee(qb,({key:e,data:t},{resolve:n,reject:r})=>{let a=typeof t,u=a==="string"?t:JSON.stringify({type:a,data:t});try{let g=s.storage;a==="string"&&Tu(u)!==void 0?g.setItemAsync(e+ga,a):g.removeItemAsync(e+ga),g.setItemAsync(e,u,n,sr(r))}catch(g){r(g.message)}},Kb);function Pu(e,t){let n=t;if(e!=="string"||e==="string"&&t==='{"type":"undefined"}')try{let r=JSON.parse(t),a=Tu(r);if(a!==void 0)n=a;else if(e&&(n=r,typeof r=="string")){r=JSON.parse(r);let u=typeof r;u==="number"&&e==="date"?n=new Date(r):u===(["null","array"].indexOf(e)<0?e:"object")&&(n=r)}}catch(r){}return n}let ww=Ft(Yb,(e,t)=>{let n=s.storage.getItem(e),a=(s.storage.getItem(e+ga)||"").toLowerCase();return typeof n!="string"?"":Pu(a,n)},Xd),Sw=Ee(Gb,({key:e},{resolve:t,reject:n})=>{let r=s.storage;r.getItemAsync(e,function(a){r.getItemAsync(e+ga,function(u){let E=(u.data||"").toLowerCase();t({data:Pu(E,a.data)})},function(){t({data:Pu("",a.data)})})},sr(n))},Zd),Aw=Ft(Qd,e=>{s.storage.removeItem(e+ga),s.storage.removeItem(e)},Qb),Cw=Ee(Qd,({key:e},{resolve:t,reject:n})=>{s.storage.removeItemAsync(e+ga),s.storage.removeItemAsync(e,t,sr(n))},Xb),Ow=Ft("clearStorageSync",()=>{s.storage.clear()}),Tw=Ee("clearStorage",(e,{resolve:t,reject:n})=>{s.storage.clearAsync(t,sr(n))}),fh=Ft("getStorageInfoSync",()=>{let e=s.storage.getLength()||0,t=[],n=0;for(let r=0;r<e;r++){let a=s.storage.key(r);if(a!==bw&&(a.indexOf(ga)<0||a.indexOf(ga)+ga.length!==a.length)){let u=s.storage.getItem(a);n+=a.length+u.length,t.push(a)}}return{keys:t,currentSize:Math.ceil(n*2/1024),limitSize:Number.MAX_VALUE}}),Pw=Ee("getStorageInfo",(e,{resolve:t})=>{t(fh())}),Iw=Ee(s0,(e,{resolve:t,reject:n})=>{s.io.getFileInfo(ne.extend(e,{success:Vs(t),fail:sr(n)}))},c0,l0),Nw=0,dh="uniapp_save",kw=`_doc/${dh}`;function Rw(e,t){t=t||function(){},s.io.requestFileSystem(s.io.PRIVATE_DOC,n=>{n.root.getDirectory(dh,{create:!0},e,t)},t)}let xw=Ee(e0,({tempFilePath:e},{resolve:t,reject:n})=>{let r=sr(n),a=`${Date.now()}${Nw++}${Ua(e)}`;s.io.resolveLocalFileSystemURL(e,u=>{Rw(g=>{u.copyTo(g,a,()=>{let E=kw+"/"+a;t({savedFilePath:E})},r)},r)},r)},n0,t0),Bw="uniapp_save";function Mw(e,t){t=t||function(){},s.io.requestFileSystem(s.io.PRIVATE_DOC,n=>{n.root.getDirectory(Bw,{create:!0},e,t)},t)}let Lw=Ee(r0,(e,{resolve:t,reject:n})=>{let r=sr(n);Mw(a=>{var u=a.createReader(),g=[];u.readEntries(E=>{E&&E.length?E.forEach($=>{$.getMetadata(C=>{g.push({filePath:s.io.convertAbsoluteFileSystem($.fullPath),createTime:C.modificationTime.getTime(),size:C.size}),g.length===E.length&&t({fileList:g})},r,!1)}):t({fileList:g})},r)},r)}),Dw=Ee(u0,({filePath:e},{resolve:t,reject:n})=>{let r=sr(n);s.io.resolveLocalFileSystemURL(e,a=>{a.getMetadata(u=>{t({createTime:u.modificationTime.getTime(),size:u.size})},r,!1)},r)},d0,f0),Fw=Ee(i0,({filePath:e},{resolve:t,reject:n})=>{let r=sr(n);s.io.resolveLocalFileSystemURL(e,a=>{a.remove(()=>{t()},r)},r)},a0,o0),Vw=Ee(h0,({filePath:e,fileType:t},{resolve:n,reject:r})=>{let a=sr(r);s.runtime.openDocument(Ot(e),void 0,n,a)},p0,g0),$w=s.os.name==="iOS",Lo,Iu=!0,tr;function Uw(e,t,n){!tr||(e==="none"?(tr.hideTabBarRedDot({index:t}),tr.removeTabBarBadge({index:t})):e==="text"?tr.setTabBarBadge({index:t,text:n}):e==="redDot"&&tr.showTabBarRedDot({index:t}))}function Hw(e,t,n,r,a,u){let g={index:e};if(t!==void 0&&(g.text=t),n&&(g.iconPath=Ot(n)),r&&(g.selectedIconPath=Ot(r)),u!==void 0&&(g.iconfont=u),a!==void 0){g.visible=Lo.list[e].visible=a,delete g.index;let E=Lo.list.map($=>({visible:$.visible}));E[e]=g,tr&&tr.setTabBarItems({list:E})}else tr&&tr.setTabBarItem(g)}function jw(e){tr&&tr.setTabBarStyle(e)}function zw(e){Iu=!1,tr&&tr.hideTabBar({animation:e})}function Ww(e){Iu=!0,tr&&tr.showTabBar({animation:e})}let Pc=[];var ci={id:"0",init(e,t){e&&e.list.length&&(Lo=e);try{tr=p.requireModule("uni-tabview")}catch(n){console.log(`uni.requireNativePlugin("uni-tabview") error ${n}`)}tr.onMaskClick(()=>{Pc.forEach(n=>{n()})}),tr&&tr.onClick(({index:n})=>{t(Lo.list[n],n)}),tr&&tr.onMidButtonClick(()=>ct.invokeOnCallback(Dd))},indexOf(e){let t=Lo&&Lo.list&&Lo.list.length;if(t){for(let n=0;n<t;n++)if(Lo.list[n].pagePath===e||Lo.list[n].pagePath===`${e}.html`)return n}return-1},switchTab(e){let t=this.indexOf(e);return t>=0?(tr&&tr.switchSelect({index:t}),!0):!1},setTabBarBadge:Uw,setTabBarItem:Hw,setTabBarStyle:jw,hideTabBar:zw,showTabBar:Ww,append(e){tr&&tr.append({id:e.id},({code:t})=>{t!==0&&k(()=>{this.append(e)},20)})},get visible(){return Iu},get height(){return(Lo&&Lo.height?parseFloat(Lo.height):Q.TABBAR_HEIGHT)+s.navigator.getSafeAreaInsets().deviceBottom},get cover(){return $w&&["extralight","light","dark"].indexOf(Lo.blurEffect)>=0},setStyle({mask:e}){tr.setMask({color:e})},addEventListener(e,t){Pc.push(t)},removeEventListener(e,t){let n=Pc.indexOf(t);Pc.splice(n,1)}};function Ic(){let e=ri();return e?e.$getAppWebview():null}function hh(e){return e?e.$getAppWebview():Ic()}let gh=null;function ph(){return gh}function Nu(e){gh=e}function ku(e=""){if(!(P.tabBar&&Array.isArray(P.tabBar.list)))return!1;try{if(!e){let n=Pn();if(!n.length)return!1;let r=n[n.length-1];return r?r.$page.meta.isTabBar:!1}/^\//.test(e)||(e=Q.addLeadingSlash(e));let t=$e.find(n=>n.path===e);return t&&t.meta.isTabBar}catch(t){}return!1}function Ru(){return s.navigator.isImmersedStatusbar()?Math.round(s.os.name==="iOS"?s.navigator.getSafeAreaInsets().top:s.navigator.getStatusbarHeight()):0}function vh(){let e=s.navigator.getStatusBarStyle();return e==="UIStatusBarStyleBlackTranslucent"||e==="UIStatusBarStyleBlackOpaque"||e==="null"?e="light":e==="UIStatusBarStyleDefault"&&(e="dark"),e}let xu;function Gw(){return xu=xu||s.device.uuid,xu}function Yw(){let{resolutionWidth:e,resolutionHeight:t}=s.screen.getCurrentSize()||{resolutionWidth:0,resolutionHeight:0};return{screenWidth:Math.round(e),screenHeight:Math.round(t)}}let mh=Ft("getSystemInfoSync",()=>{let e=s.os.name.toLowerCase(),t=e==="ios",n=e==="android",{screenWidth:r,screenHeight:a}=Yw(),u=Ru(),g,E={height:0,cover:!1},$=Ic();if($){let Zt=$.getStyle(),Mt=Zt&&Zt.titleNView;Mt&&Mt.type&&Mt.type!=="none"&&(E.height=Mt.type==="transparent"?0:u+Q.NAVBAR_HEIGHT,E.cover=Mt.type==="transparent"||Mt.type==="float"),g=$.getSafeAreaInsets()}else g=s.navigator.getSafeAreaInsets();let C={height:0,cover:!1};uh()&&(C.height=ci.visible?ci.height:0,C.cover=ci.cover);let F=E.cover?E.height:0,ue=C.cover?C.height:0,be=a-E.height-C.height,Ie=a-(E.cover?0:E.height)-(C.cover?0:C.height),_t=r;(!C.height||C.cover)&&!g.bottom&&g.deviceBottom&&(be-=g.deviceBottom,Ie-=g.deviceBottom),g=t?g:{left:0,right:0,top:E.height&&!E.cover?0:u,bottom:0};let Bt={left:g.left,right:_t-g.right,top:g.top,bottom:Ie-g.bottom,width:_t-g.left-g.right,height:Ie-g.top-g.bottom};return{brand:s.device.vendor,model:s.device.model,pixelRatio:s.screen.scale,screenWidth:r,screenHeight:a,windowWidth:_t,windowHeight:be,statusBarHeight:u,language:s.os.language,system:`${t?"iOS":n?"Android":""} ${s.os.version}`,version:s.runtime.innerVersion,platform:e,SDKVersion:"",windowTop:F,windowBottom:ue,safeArea:Bt,safeAreaInsets:{top:g.top,right:g.right,bottom:g.bottom,left:g.left},deviceId:Gw()}}),qw=Ee("getSystemInfo",(e,{resolve:t})=>t(mh())),Tl=null,Kw=Yn(zd,()=>{_h()}),Jw=$i(nb,()=>{bh()}),_h=Ee(rb,(e,{resolve:t,reject:n})=>{Tl||(Tl=s.orientation.watchOrientation(r=>{ct.invokeOnCallback(zd,{direction:r.magneticHeading})},r=>{n(r.message),Tl=null},{frequency:Gi})),k(t,Gi)}),bh=Ee(ib,(e,{resolve:t})=>{Tl&&(s.orientation.clearWatch(Tl),Tl=null),t()}),Zw=Ee(ob,(e,{resolve:t})=>{s.device.vibrate(15),t()}),Xw=Ee(ab,(e,{resolve:t})=>{s.device.vibrate(400),t()}),Pl=null,Qw=Yn(jd,()=>{Eh()}),eS=$i(Q_,()=>{yh()}),Eh=Ee(eb,(e,{resolve:t,reject:n})=>{Pl||(Pl=s.accelerometer.watchAcceleration(r=>{ct.invokeOnCallback(jd,{x:r&&r.xAxis||0,y:r&&r.yAxis||0,z:r&&r.zAxis||0})},r=>{Pl=null,n(`startAccelerometer:fail ${r.message}`)},{frequency:Gi})),k(t,Gi)}),yh=Ee(tb,(e,{resolve:t})=>{Pl&&(s.accelerometer.clearWatch(Pl),Pl=null),t()}),tS=Yn(Wd,Ol(()=>s.bluetooth.onBluetoothDeviceFound.bind(s.bluetooth),Wd)),nS=Yn(Gd,Ol(()=>s.bluetooth.onBluetoothAdapterStateChange.bind(s.bluetooth),Gd)),rS=Yn(Yd,Ol(()=>s.bluetooth.onBLEConnectionStateChange.bind(s.bluetooth),Yd)),iS=Yn(qd,Ol(()=>s.bluetooth.onBLECharacteristicValueChange.bind(s.bluetooth),qd)),oS=Ee("openBluetoothAdapter",li(()=>s.bluetooth.openBluetoothAdapter.bind(s.bluetooth))),aS=Ee("closeBluetoothAdapter",li(()=>s.bluetooth.closeBluetoothAdapter.bind(s.bluetooth))),sS=Ee("getBluetoothAdapterState",li(()=>s.bluetooth.getBluetoothAdapterState.bind(s.bluetooth))),lS=Ee(sb,li(()=>s.bluetooth.startBluetoothDevicesDiscovery.bind(s.bluetooth)),lb),cS=Ee("stopBluetoothDevicesDiscovery",li(()=>s.bluetooth.stopBluetoothDevicesDiscovery.bind(s.bluetooth))),uS=Ee("getBluetoothDevices",li(()=>s.bluetooth.getBluetoothDevices.bind(s.bluetooth))),fS=Ee(cb,li(()=>s.bluetooth.getConnectedBluetoothDevices.bind(s.bluetooth)),ub),dS=Ee(fb,li(()=>s.bluetooth.createBLEConnection.bind(s.bluetooth)),db),hS=Ee(hb,li(()=>s.bluetooth.closeBLEConnection.bind(s.bluetooth)),gb),gS=Ee(pb,li(()=>s.bluetooth.getBLEDeviceServices.bind(s.bluetooth)),vb),pS=Ee(mb,li(()=>s.bluetooth.getBLEDeviceCharacteristics.bind(s.bluetooth)),_b),vS=Ee(bb,li(()=>s.bluetooth.notifyBLECharacteristicValueChange.bind(s.bluetooth)),Eb),mS=Ee(yb,li(()=>s.bluetooth.readBLECharacteristicValue.bind(s.bluetooth)),wb),_S=Ee(Sb,li(()=>s.bluetooth.writeBLECharacteristicValue.bind(s.bluetooth)),Ab),bS=Ee(Cb,li(()=>s.bluetooth.setBLEMTU.bind(s.bluetooth)),Ob),ES=Ee(Tb,li(()=>s.bluetooth.getBLEDeviceRSSI.bind(s.bluetooth)),Pb),yS=Yn(Kd,Ol(()=>s.ibeacon.onBeaconUpdate.bind(s.ibeacon),Kd)),wS=Yn(Jd,Ol(()=>s.ibeacon.onBeaconServiceChange.bind(s.ibeacon),Jd)),SS=Ee(Ib,li(()=>s.ibeacon.getBeacons.bind(s.ibeacon))),AS=Ee(Nb,li(()=>s.ibeacon.startBeaconDiscovery.bind(s.ibeacon)),kb),CS=Ee(Rb,li(()=>s.ibeacon.stopBeaconDiscovery.bind(s.ibeacon))),OS=Ee(z_,({phoneNumber:e},{resolve:t})=>(s.device.dial(e),t()),W_),TS={name:{givenName:"firstName",middleName:"middleName",familyName:"lastName"},nickname:"nickName",photos:{type:"url",value:"photoFilePath"},note:"remark",phoneNumbers:[{type:"mobile",value:"mobilePhoneNumber"},{type:"work",value:"workPhoneNumber"},{type:"company",value:"hostNumber"},{type:"home fax",value:"homeFaxNumber"},{type:"work fax",value:"workFaxNumber"}],emails:[{type:"home",value:"email"}],urls:[{type:"other",value:"url"}],organizations:[{type:"company",name:"organization",title:"title"}],ims:[{type:"other",value:"weChatNumber"}],addresses:[{type:"other",preferred:!0,country:"addressCountry",region:"addressState",locality:"addressCity",streetAddress:"addressStreet",postalCode:"addressPostalCode"},{type:"home",country:"homeAddressCountry",region:"homeAddressState",locality:"homeAddressCity",streetAddress:"homeAddressStreet",postalCode:"homeAddressPostalCode"},{type:"company",country:"workAddressCountry",region:"workAddressState",locality:"workAddressCity",streetAddress:"workAddressStreet",postalCode:"workAddressPostalCode"}]},PS=["type","preferred"];function Bu(e,t,n){let r=0;return Object.keys(n).forEach(a=>{let u=n[a];typeof u!=="object"?PS.indexOf(a)!==-1?e[a]=n[a]:typeof t[u]!="undefined"?(r++,e[a]=t[u]):delete e[a]:u instanceof Array?(e[a]=[],u.forEach(E=>{let $={};Bu($,t,E)&&e[a].push($)}),e[a].length?r++:delete e[a]):(e[a]={},Bu(e[a],t,u)?r++:delete e[a])}),r}let IS=Ee(G_,(e,{resolve:t,reject:n})=>{!e.photoFilePath&&(e.photoFilePath=""),s.contacts.getAddressBook(s.contacts.ADDRESSBOOK_PHONE,r=>{let a=r.create();Bu(a,e,TS),a.save(()=>t(),u=>n())},r=>n())},q_,Y_);function Do(e){return typeof p!="undefined"?p.requireModule(e):__requireNativePlugin__(e)}function wh(e,t,n){return Do("plus").sendNativeEvent(e,t,n)}let NS=Ee(K_,(e,{resolve:t,reject:n})=>{Do("clipboard").getString(a=>{a.result==="success"?t({data:a.data}):n("getClipboardData:fail")})}),kS=Ee(J_,(e,{resolve:t})=>{Do("clipboard").setString(e.data),t()},X_,Z_),Sh="onNetworkStatusChange";function Ah(){Ch().then(({networkType:e})=>{ct.invokeOnCallback(Sh,{isConnected:e!=="none",networkType:e})})}let RS=Yn(Sh,()=>{s.globalEvent.addEventListener("netchange",Ah)}),xS=$i("offNetworkStatusChange",()=>{s.globalEvent.removeEventListener("netchange",Ah)}),Ch=Ee("getNetworkType",(e,{resolve:t})=>{let n=qo[s.networkinfo.getCurrentType()]||"unknown";return t({networkType:n})});function Oh(){if(s.os.name.toLowerCase()!=="ios")return!1;let t=Do("faceID");return!!(t&&t.isSupport())}function Th(){return!!(s.fingerprint&&s.fingerprint.isSupport())}let Ph=e=>{let t=[];return Th()&&t.push("fingerPrint"),Oh()&&t.push("facial"),e&&e({supportMode:t}),{supportMode:t,errMsg:"checkIsSupportSoterAuthentication:ok"}},BS=Ee(Lb,(e,{resolve:t,reject:n})=>{Ph(t)}),Ih=({checkAuthMode:e,resolve:t,reject:n})=>{let r=(u,g)=>n&&n(u,g),a=u=>t&&t(u);if(e==="fingerPrint"){if(Th()){let u=s.fingerprint.isKeyguardSecure()&&s.fingerprint.isEnrolledFingerprints();return a({isEnrolled:u}),{isEnrolled:u,errMsg:"checkIsSoterEnrolledInDevice:ok"}}return r("not support",{isEnrolled:!1}),{isEnrolled:!1,errMsg:"checkIsSoterEnrolledInDevice:fail not support"}}else if(e==="facial"){if(Oh()){let u=Do("faceID"),g=u&&u.isKeyguardSecure()&&u.isEnrolledFaceID();return a({isEnrolled:g}),{isEnrolled:g,errMsg:"checkIsSoterEnrolledInDevice:ok"}}return r("not support",{isEnrolled:!1}),{isEnrolled:!1,errMsg:"checkIsSoterEnrolledInDevice:fail not support"}}return r("not support",{isEnrolled:!1}),{isEnrolled:!1,errMsg:"checkIsSoterEnrolledInDevice:fail not support"}},MS=Ee(Db,({checkAuthMode:e},{resolve:t,reject:n})=>{Ih({checkAuthMode:e,resolve:t,reject:n})},$b,Vb),LS=Ee(Ub,({requestAuthModes:e,challenge:t=!1,authContent:n},{resolve:r,reject:a})=>{ta();let{t:u}=Ye(),g=Ph().supportMode;if(g.length===0)return{authMode:"fingerPrint",errCode:90001,errMsg:"startSoterAuthentication:fail"};let E=[];if(e.map((F,ue)=>{g.indexOf(F)>-1&&E.push(F)}),E.length===0)return{authMode:"fingerPrint",errCode:90003,errMsg:"startSoterAuthentication:fail no corresponding mode"};let $=[];if(E.map((F,ue)=>{Ih({checkAuthMode:F}).isEnrolled&&$.push(F)}),$.length===0)return{authMode:E[0],errCode:90011,errMsg:`startSoterAuthentication:fail no ${E[0]} enrolled`};let C=$[0];C==="fingerPrint"?(s.os.name.toLowerCase()==="android"&&(s.nativeUI.showWaiting(n||u("uni.startSoterAuthentication.authContent")).onclose=function(){s.fingerprint.cancel()}),s.fingerprint.authenticate(()=>{s.nativeUI.closeWaiting(),r({authMode:C,errCode:0})},F=>{let ue={authMode:C};switch(F.code){case F.AUTHENTICATE_MISMATCH:break;case F.AUTHENTICATE_OVERLIMIT:s.nativeUI.closeWaiting(),a("authenticate freeze. please try again later",ne.extend(ue,{errCode:90010}));break;case F.CANCEL:s.nativeUI.closeWaiting(),a("cancel",ne.extend(ue,{errCode:90008}));break;default:s.nativeUI.closeWaiting(),a("",ne.extend(ue,{errCode:90007}));break}},{message:n})):C==="facial"&&Do("faceID").authenticate({message:n},ue=>{let be={authMode:C};if(ue.type==="success"&&ue.code===0)r({authMode:C,errCode:0});else switch(ue.code){case 4:a("",ne.extend(be,{errCode:90009}));break;case 5:a("authenticate freeze. please try again later",ne.extend(be,{errCode:90010}));break;case 6:a("",ne.extend(be,{errCode:90008}));break;default:a("",ne.extend(be,{errCode:90007}));break}})},jb,Hb),DS=Ee(zb,(e,{resolve:t,reject:n})=>{Ma();let{t:r}=Ye(),u=vh()!=="light",g,E=!1,$=Wo({url:"__uniappscan",data:Object.assign({},e,{messages:{fail:r("uni.scanCode.fail"),"flash.on":r("uni.scanCode.flash.on"),"flash.off":r("uni.scanCode.flash.off")}}),style:{animationType:e.animationType||"pop-in",titleNView:{autoBackButton:!0,type:"float",titleText:e.titleText||r("uni.scanCode.title"),titleColor:"#ffffff",backgroundColor:"rgba(0,0,0,0)",buttons:e.onlyFromCamera?[]:[{text:e.albumText||r("uni.scanCode.album"),fontSize:"17px",width:"60px",onclick:()=>{$.sendMessage({type:"gallery"})}}]},popGesture:"close",background:"#000000",backButtonAutoControl:"close"},onMessage({event:C,detail:F}){g=F,E=C==="marked"},onClose(){u&&s.navigator.setStatusBarStyle("dark"),g?E?(delete g.message,t(g)):n(g.message):n("cancel")}});u&&(s.navigator.setStatusBarStyle("light"),$.webview.addEventListener("popGesture",({type:C,result:F})=>{C==="start"?s.navigator.setStatusBarStyle("dark"):C==="end"&&!F&&s.navigator.setStatusBarStyle("light")}))},Wb),FS=Yn(Q.ON_THEME_CHANGE,()=>{ct.on(Q.ON_THEME_CHANGE,e=>{ct.invokeOnCallback(Q.ON_THEME_CHANGE,e)})}),VS=Ee(xb,(e,{resolve:t})=>{let n=s.screen.getBrightness(!1);t({value:n})}),$S=Ee(Bb,(e,{resolve:t})=>{s.screen.setBrightness(e.value,!1),t()}),US=Ee(Mb,(e,{resolve:t})=>{s.device.setWakelock(!!e.keepScreenOn),t()}),HS=Ee(R0,(e,{resolve:t,reject:n})=>{let r=Bi+"/download/";s.io.getImageInfo(ne.extend(e,{savePath:r,filename:r,success:Vs(t),fail:sr(n)}))},B0,x0),jS=Ee(V0,(e,{resolve:t,reject:n})=>{s.io.getVideoInfo({filePath:e.src,success:r=>({orientation:r.orientation,type:r.type,duration:r.duration,size:r.size,height:r.height,width:r.width,fps:r.fps||30,bitrate:r.bitrate}),fail:sr(n)})},U0,$0),zS=Ee(M0,({current:e=0,indicator:t="number",loop:n=!1,urls:r,longPressActions:a},{resolve:u,reject:g})=>{Wi();let{t:E}=Ye();r=r.map(C=>Ot(C));let $=Number(e);isNaN($)?(e=r.indexOf(Ot(e)),e=e<0?0:e):e=$,s.nativeUI.previewImage(r,{current:e,indicator:t,loop:n,onLongPress:function(C){let F=[],ue="",be=a&&ne.isPlainObject(a);be?(F=a.itemList?a.itemList:[],ue=a.itemColor?a.itemColor:"#000000"):(F=[E("uni.previewImage.button.save")],ue="#000000");let Ie={buttons:F.map(_t=>({title:_t,color:ue})),cancel:E("uni.previewImage.cancel")};s.nativeUI.actionSheet(Ie,_t=>{if(_t.index>0){if(be){typeof a.success=="function"&&a.success({tapIndex:_t.index-1,index:C.index});return}s.gallery.save(C.url,()=>{s.nativeUI.toast(E("uni.previewImage.save.success"))},function(){s.nativeUI.toast(E("uni.previewImage.save.fail"))})}else be&&typeof a.fail=="function"&&a.fail({errMsg:"showActionSheet:fail cancel"})})}}),u()},D0,L0),WS=Ee(F0,(e,{resolve:t,reject:n})=>{try{s.nativeUI.closePreviewImage(),t()}catch(r){n()}}),Mu,Il=!1,Lu,Nl=(e,t={})=>{GS(ne.extend({state:e},t))},ec={start({duration:e=6e4,sampleRate:t,numberOfChannels:n,encodeBitRate:r,format:a="mp3",frameSize:u}){if(Il)return Nl("start");Mu=s.audio.getRecorder(),Mu.record({format:a,samplerate:t?String(t):"",filename:Bi+"/recorder/"},g=>Nl("stop",{tempFilePath:g}),g=>Nl("error",{errMsg:g.message})),Lu=k(()=>{ec.stop()},e),Nl("start"),Il=!0},stop(){Il&&(Mu.stop(),Il=!1,Lu&&y(Lu))},pause(){Il&&Nl("error",{errMsg:"Unsupported operation: pause"})},resume(){Il&&Nl("error",{errMsg:"Unsupported operation: resume"})}},$s={pause:null,resume:null,start:null,stop:null,error:null};function GS(e){let t=e.state;delete e.state,delete e.errMsg,t&&typeof $s[t]=="function"&&$s[t](e)}class YS{constructor(){}onError(t){$s.error=t}onFrameRecorded(t){}onInterruptionBegin(t){}onInterruptionEnd(t){}onPause(t){$s.pause=t}onResume(t){$s.resume=t}onStart(t){$s.start=t}onStop(t){$s.stop=t}pause(){ec.pause()}resume(){ec.resume()}start(t){ec.start(t)}stop(){ec.stop()}}let Nh,qS=Ft(q0,()=>Nh||(Nh=new YS)),KS=Ee(W0,(e,{resolve:t,reject:n})=>{s.gallery.save(e.filePath,Vs(t),sr(n))},Y0,G0),JS=Ee(H0,(e,{resolve:t,reject:n})=>{s.gallery.save(e.filePath,Vs(t),sr(n))},z0,j0),ZS=Ee(K0,(e,{resolve:t,reject:n})=>{let r=`${Bi}/compressed/${Date.now()}_${$a(e.src)}`;s.zip.compressImage(ne.extend({},e,{dst:r}),()=>{t({tempFilePath:r})},n)},Z0,J0),XS=Ee(X0,(e,{resolve:t,reject:n})=>{let r=`${Bi}/compressed/${Date.now()}_${$a(e.src)}`;s.zip.compressVideo(ne.extend({},e,{filename:r}),()=>{t({tempFilePath:r})},n)},eE,Q0);function QS(e){return new Promise((t,n)=>{s.io.resolveLocalFileSystemURL(e,function(r){r.getMetadata(t,n,!1)},n)})}let eA=Ee(O0,({count:e,sizeType:t,sourceType:n,crop:r}={},{resolve:a,reject:u})=>{Zn();let{t:g}=Ye(),E=sr(u);function $(ue){let be=[],Ie=[];Promise.all(ue.map(_t=>QS(_t))).then(_t=>{_t.forEach((Bt,Zt)=>{let Mt=ue[Zt];Ie.push(Mt),be.push({path:Mt,size:Bt.size})}),a({tempFilePaths:Ie,tempFiles:be})}).catch(E)}function C(){s.camera.getCamera().captureImage(be=>$([be]),E,{filename:Bi+"/camera/",resolution:"high",crop:r,sizeType:t})}function F(){s.gallery.pick(({files:ue})=>$(ue),E,{maximum:e,multiple:!0,system:!1,filename:Bi+"/gallery/",permissionAlert:!0,crop:r,sizeType:t})}if(n.length===1){if(n.includes("album")){F();return}else if(n.includes("camera")){C();return}}s.nativeUI.actionSheet({cancel:g("uni.chooseImage.cancel"),buttons:[{title:g("uni.chooseImage.sourceType.camera")},{title:g("uni.chooseImage.sourceType.album")}]},ue=>{switch(ue.index){case 1:C();break;case 2:F();break;default:E();break}})},P0,T0),tA=Ee(I0,({sourceType:e,compressed:t,maxDuration:n,camera:r},{resolve:a,reject:u})=>{kn();let{t:g}=Ye(),E=sr(u);function $(ue){s.io.getVideoInfo({filePath:ue,success(be){let Ie={errMsg:"chooseVideo:ok",tempFilePath:ue,size:be.size,duration:be.duration,width:be.width,height:be.height};a(Ie)},fail:E})}function C(){s.gallery.pick(({files:ue})=>$(ue[0]),E,{filter:"video",system:!1,multiple:!0,maximum:1,filename:Bi+"/gallery/",permissionAlert:!0,videoCompress:t})}function F(){s.camera.getCamera().startVideoCapture($,E,{index:r==="front"?"2":"1",videoMaximumDuration:n,filename:Bi+"/camera/",videoCompress:t})}if(e.length===1){if(e.includes("album")){C();return}else if(e.includes("camera")){F();return}}s.nativeUI.actionSheet({cancel:g("uni.chooseVideo.cancel"),buttons:[{title:g("uni.chooseVideo.sourceType.camera")},{title:g("uni.chooseVideo.sourceType.album")}]},ue=>{switch(ue.index){case 1:F();break;case 2:C();break;default:E();break}})},k0,N0),nA=Ee(m0,(e,{resolve:t})=>{s.key.showSoftKeybord(),t()}),rA=Ee(v0,(e,{resolve:t})=>{s.key.hideSoftKeybord(),t()});function kh(e){ct.invokeOnCallback(Q.ON_KEYBOARD_HEIGHT_CHANGE,e)}let iA=Yn(Q.ON_KEYBOARD_HEIGHT_CHANGE,()=>{ct.on(Q.ON_KEYBOARD_HEIGHT_CHANGE,kh)}),oA=$i(Q.ON_KEYBOARD_HEIGHT_CHANGE,()=>{ct.off(Q.ON_KEYBOARD_HEIGHT_CHANGE,kh)});class aA{constructor(t){this._callbacks=[],this._downloader=t,t.addEventListener("statechanged",(n,r)=>{n.downloadedSize&&n.totalSize&&this._callbacks.forEach(a=>{a({progress:Math.round(n.downloadedSize/n.totalSize*100),totalBytesWritten:n.downloadedSize,totalBytesExpectedToWrite:n.totalSize})})})}abort(){this._downloader.abort()}onProgressUpdate(t){typeof t=="function"&&this._callbacks.push(t)}offProgressUpdate(t){let n=this._callbacks.indexOf(t);n>=0&&this._callbacks.splice(n,1)}onHeadersReceived(t){throw new Error("Method not implemented.")}offHeadersReceived(t){throw new Error("Method not implemented.")}}let sA=Qi(fE,({url:e,header:t,timeout:n},{resolve:r,reject:a})=>{n=(n||P.networkTimeout&&P.networkTimeout.request||60*1e3)/1e3;let u=s.downloader.createDownload(e,{timeout:n,filename:Bi+"/download/",retry:0,retryInterval:0},(E,$)=>{$?r({tempFilePath:E.filename,statusCode:$}):a(`statusCode: ${$}`)}),g=new aA(u);for(let E in t)ne.hasOwn(t,E)&&u.setRequestHeader(E,t[E]);return u.start(),g},hE,dE),lA=e=>{let t=e["Set-Cookie"]||e["set-cookie"],n=[];if(!t)return[];t[0]==="["&&t[t.length-1]==="]"&&(t=t.slice(1,-1));let r=t.split(";");for(let a=0;a<r.length;a++)r[a].indexOf("Expires=")!==-1||r[a].indexOf("expires=")!==-1?n.push(r[a].replace(",","")):n.push(r[a]);return n=n.join(";").split(","),n};function cA(e,t){if(typeof e.data=="string"&&e.data.charCodeAt(0)===65279&&(e.data=e.data.slice(1)),e.statusCode=parseInt(String(e.statusCode),10),ne.isPlainObject(e.header)&&(e.header=Object.keys(e.header).reduce(function(n,r){let a=e.header[r];return Array.isArray(a)?n[r]=a.join(","):typeof a=="string"&&(n[r]=a),n},{})),t.dataType&&t.dataType.toLowerCase()==="json")try{e.data=JSON.parse(e.data)}catch(n){}return e}class uA{constructor(t){this._requestTask=t}abort(){this._requestTask.abort()}offHeadersReceived(){}onHeadersReceived(){}}let fA=Qi(tE,(e,{resolve:t,reject:n})=>{let{header:r,method:a,data:u,timeout:g,url:E,responseType:$,sslVerify:C,firstIpv4:F,tls:ue}=e,be;for(let mt in r)if(mt.toLowerCase()==="content-type"){be=r[mt];break}a!=="GET"&&be.indexOf("application/json")===0&&ne.isPlainObject(u)&&(u=JSON.stringify(u));let Ie=Do("stream"),_t={},Bt,Zt,Mt=!1;for(let mt in r)if(!Mt&&mt.toLowerCase()==="content-type"){if(Mt=!0,_t["Content-Type"]=r[mt],a!=="GET"&&r[mt].indexOf("application/x-www-form-urlencoded")===0&&typeof u!="string"&&!(u instanceof ArrayBuffer)){let vn=[];for(let rn in u)ne.hasOwn(u,rn)&&vn.push(encodeURIComponent(rn)+"="+encodeURIComponent(u[rn]));u=vn.join("&")}}else _t[mt]=r[mt];!Mt&&a==="POST"&&(_t["Content-Type"]="application/x-www-form-urlencoded; charset=UTF-8"),g&&(Bt=k(()=>{Zt=!0,n("timeout")},g+200));let xn={method:a,url:E.trim(),headers:_t,type:$==="arraybuffer"?"base64":"text",timeout:g||6e5,sslVerify:!C,firstIpv4:F,tls:ue},Fn=!1;a!=="GET"&&(toString.call(u)==="[object ArrayBuffer]"?Fn=!0:xn.body=typeof u=="string"?u:JSON.stringify(u));let sn=({ok:mt,status:vn,data:rn,headers:Wt,errorMsg:_n})=>{if(Zt)return;Bt&&y(Bt);let lr=vn;if(lr>0)t(cA({data:mt&&$==="arraybuffer"?Tn(rn):rn,statusCode:lr,header:Wt,cookies:lA(Wt)},e));else{let Gt="abort statusCode:"+lr;_n&&(Gt=Gt+" "+_n),n(Gt)}};return Fn?Ie.fetchWithArrayBuffer({"@type":"binary",base64:qn(u)},xn,sn):Ie.fetch(xn,sn),new uA({abort(){Zt=!0,Bt&&y(Bt),n("abort")}})},aE,sE),dA=Ee(lE,({certificates:e},{resolve:t,reject:n})=>{Do("stream").configMTLS(e,({type:a,code:u,message:g})=>{switch(a){case"success":t({code:u});break;case"fail":n(g,{code:u});break}})},cE,uE),kl=[],Rl={},Du={open:"",close:"",error:"",message:""},tc;function hA(e){let t=String(Date.now()),n;try{tc||(tc=Do("uni-webSocket"),gA(tc)),tc.WebSocket({id:t,url:e.url,protocol:Array.isArray(e.protocols)?e.protocols.join(","):e.protocols,header:e.header})}catch(r){n=r}return{socket:tc,socketId:t,errMsg:n}}function gA(e){e.onopen(t=>{let n=Rl[t.id];!n||n._socketOnOpen()}),e.onmessage(t=>{let n=Rl[t.id];!n||n._socketOnMessage(t)}),e.onerror(t=>{let n=Rl[t.id];!n||n._socketOnError()}),e.onclose(t=>{let n=Rl[t.id];!n||n._socketOnClose()})}class pA{constructor(t,n){this.id=n,this._socket=t,this._callbacks={open:[],close:[],error:[],message:[]},this.CLOSED=3,this.CLOSING=2,this.CONNECTING=0,this.OPEN=1,this.readyState=this.CLOSED,!!this._socket}_socketOnOpen(){this.readyState=this.OPEN,this.socketStateChange("open")}_socketOnMessage(t){this.socketStateChange("message",{data:typeof t.data=="object"?Tn(t.data.base64):t.data})}_socketOnError(){this.socketStateChange("error"),this.onErrorOrClose()}_socketOnClose(){this.socketStateChange("close"),this.onErrorOrClose()}onErrorOrClose(){this.readyState=this.CLOSED,delete Rl[this.id];let t=kl.indexOf(this);t>=0&&kl.splice(t,1)}socketStateChange(t,n={}){let r=t==="message"?n:{};this===kl[0]&&Du[t]&&ct.invokeOnCallback(Du[t],r),this._callbacks[t].forEach(a=>{typeof a=="function"&&a(r)})}send(t,n=!0){this.readyState!==this.OPEN&&Q.callOptions(t,"sendSocketMessage:fail WebSocket is not connected");try{this._socket.send({id:this.id,data:typeof t.data=="object"?{"@type":"binary",base64:qn(t.data)}:t.data}),n&&Q.callOptions(t,"sendSocketMessage:ok")}catch(r){n&&Q.callOptions(t,`sendSocketMessage:fail ${r}`)}}close(t,n=!0){this.readyState=this.CLOSING;try{this._socket.close(ne.extend({id:this.id,args:t})),n&&Q.callOptions(t,"closeSocket:ok")}catch(r){n&&Q.callOptions(t,`closeSocket:fail ${r}`)}}onOpen(t){this._callbacks.open.push(t)}onClose(t){this._callbacks.close.push(t)}onError(t){this._callbacks.error.push(t)}onMessage(t){this._callbacks.message.push(t)}}let vA=Qi(mE,({url:e,protocols:t,header:n,method:r},{resolve:a,reject:u})=>{let{socket:g,socketId:E,errMsg:$}=hA({url:e,protocols:t,header:n,method:r}),C=new pA(g,E);return $?k(()=>{u($)},0):(kl.push(C),Rl[E]=C),k(()=>{a()},0),C},bE,_E),mA=Ee(EE,(e,{resolve:t,reject:n})=>{let r=kl[0];if(!r||r.readyState!==r.OPEN){n("WebSocket is not connected");return}r.send({data:e.data},!1),t()},yE),_A=Ee(wE,(e,{resolve:t,reject:n})=>{let r=kl[0];if(!r){n("WebSocket is not connected");return}r.readyState=r.CLOSING,r.close(e,!1),t()},SE);function Nc(e){let t=`onSocket${ne.capitalize(e)}`;return Yn(t,()=>{Du[e]=t})}let bA=Nc("open"),EA=Nc("error"),yA=Nc("message"),wA=Nc("close");class SA{constructor(t){this._callbacks=[],this._uploader=t,t.addEventListener("statechanged",(n,r)=>{n.uploadedSize&&n.totalSize&&this._callbacks.forEach(a=>{a({progress:parseInt(String(n.uploadedSize/n.totalSize*100)),totalBytesSent:n.uploadedSize,totalBytesExpectedToSend:n.totalSize})})})}abort(){this._uploader.abort()}onProgressUpdate(t){typeof t=="function"&&this._callbacks.push(t)}onHeadersReceived(){}offProgressUpdate(t){let n=this._callbacks.indexOf(t);n>=0&&this._callbacks.splice(n,1)}offHeadersReceived(){}}let AA=Qi(gE,({url:e,timeout:t,header:n,formData:r,files:a,filePath:u,name:g},{resolve:E,reject:$})=>{let C=s.uploader.createUpload(e,{timeout:t,retry:0,retryInterval:0},(ue,be)=>{be?E({data:ue.responseText,statusCode:be}):$(`statusCode: ${be}`)});for(let ue in n)ne.hasOwn(n,ue)&&C.setRequestHeader(ue,String(n[ue]));for(let ue in r)ne.hasOwn(r,ue)&&C.addData(ue,String(r[ue]));a&&a.length?a.forEach(ue=>{C.addFile(Ot(ue.uri),{key:ue.name||"file"})}):C.addFile(Ot(u),{key:g});let F=new SA(C);return C.start(),F},vE,pE),ms={},CA=["play","canplay","ended","stop","waiting","seeking","seeked","pause"],Rh="playback",OA=e=>{let t=ms[e];!t||t.initStateChage||(t.initStateChage=!0,t.addEventListener("error",n=>{xh({state:"error",audioId:e,errMsg:"MediaError",errCode:n.code})}),CA.forEach(n=>{t.addEventListener(n,()=>{n==="play"?t.isStopped=!1:n==="stop"&&(t.isStopped=!0),xh({state:n,audioId:e})})}))};function TA(){let e=`${Date.now()}${Math.random()}`,t=ms[e]=s.audio.createPlayer("");return t.src="",t.volume=1,t.startTime=0,t.setSessionCategory(Rh),{errMsg:"createAudioInstance:ok",audioId:e}}function PA({audioId:e,src:t,startTime:n,autoplay:r=!1,loop:a=!1,obeyMuteSwitch:u,volume:g,sessionCategory:E=Rh,playbackRate:$}){let C=ms[e];if(C){let F={loop:a,autoplay:r};if(t){let ue=Ot(t);C.src!==ue&&(C.src=F.src=ue)}n&&(C.startTime=F.startTime=n),typeof g=="number"&&(C.volume=F.volume=g),C.setStyles(F),E&&C.setSessionCategory(E),$&&C.playbackRate&&C.playbackRate($),OA(e)}return{errMsg:"setAudioState:ok"}}function IA({audioId:e}){let t=ms[e];if(!t)return{errMsg:"getAudioState:fail"};let{src:n,startTime:r,volume:a}=t;return{errMsg:"getAudioState:ok",duration:1e3*(t.getDuration()||0),currentTime:t.isStopped?0:1e3*t.getPosition(),paused:t.isPaused(),src:n,volume:a,startTime:1e3*r,buffered:1e3*t.getBuffered()}}function NA({operationType:e,audioId:t,currentTime:n}){let r=ms[t];switch(e){case"play":case"pause":case"stop":r[e==="play"&&r.isPaused()?"resume":e]();break;case"seek":typeof n!="undefined"&&r.seekTo(n/1e3);break}return{errMsg:"operateAudio:ok"}}let Fu=Object.create(null),xh=({state:e,audioId:t,errMsg:n,errCode:r})=>{let a=Fu[t];if(a)if(Bh(a,e,n,r),e==="play"){let u=a.currentTime;a.__timing=I(()=>{a.currentTime!==u&&Bh(a,"timeUpdate")},200)}else(e==="pause"||e==="stop"||e==="error")&&f(a.__timing)},kA=[{name:"src",cache:!0},{name:"startTime",default:0,cache:!0},{name:"autoplay",default:!1,cache:!0},{name:"loop",default:!1,cache:!0},{name:"obeyMuteSwitch",default:!0,readonly:!0,cache:!0},{name:"duration",readonly:!0},{name:"currentTime",readonly:!0},{name:"paused",readonly:!0},{name:"buffered",readonly:!0},{name:"volume"},{name:"playbackRate",cache:!0}];class Vu{constructor(t){this.id=t,this._callbacks={},this._options={},kd.forEach(n=>{this._callbacks[n]=[]}),kA.forEach(n=>{let r=n.name;Object.defineProperty(this,r,{get:()=>{let a=n.cache?this._options:IA({audioId:this.id}),u=r in a?a[r]:n.default;return typeof u=="number"&&r!=="volume"?u/1e3:u},set:n.readonly?void 0:a=>{this._options[r]=a,PA(ne.extend({},this._options,{audioId:this.id}))}})}),RA()}play(){this._operate("play")}pause(){this._operate("pause")}stop(){this._operate("stop")}seek(t){this._operate("seek",{currentTime:t*1e3})}destroy(){f(this.__timing),ms[this.id]&&(ms[this.id].close(),delete ms[this.id]),delete Fu[this.id]}_operate(t,n){NA(ne.extend({},n,{audioId:this.id,operationType:t}))}}let RA=Q.once(()=>{kd.forEach(e=>{Vu.prototype[e]=function(t){typeof t=="function"&&this._callbacks[e].push(t)}}),Jm.forEach(e=>{Vu.prototype[e]=function(t){let n=this._callbacks[e],r=n.indexOf(t);r>=0&&n.splice(r,1)}})});function Bh(e,t,n,r){let a=`on${ne.capitalize(t)}`;e._callbacks[a].forEach(u=>{typeof u=="function"&&u(t==="error"?{errMsg:n,errCode:r}:{})})}let xA=Ft(Cm,()=>{let{audioId:e}=TA(),t=new Vu(e);return Fu[e]=t,t}),BA=["canplay","play","pause","stop","ended","timeUpdate","prev","next","error","waiting"],Mh={canplay:[],play:[],pause:[],stop:[],ended:[],timeUpdate:[],prev:[],next:[],error:[],waiting:[]},Qt,$u=null,MA=250,LA=["play","pause","ended","stop","canplay"];function DA(){kc(),$u=I(()=>{xl({state:"timeUpdate"})},MA)}function kc(){$u!==null&&f($u)}function FA(){if(Qt)return;let e=ct.invokeOnCallback;Qt=s.audio.createPlayer({autoplay:!0,backgroundControl:!0}),Qt.src=Qt.title=Qt.epname=Qt.singer=Qt.coverImgUrl=Qt.webUrl="",Qt.startTime=0,LA.forEach(t=>{Qt.addEventListener(t,()=>{t==="play"?(Qt.isStopped=!1,DA()):t==="stop"&&(Qt.isStopped=!0),(t==="pause"||t==="ended"||t==="stop")&&kc();let n=`onMusic${t[0].toUpperCase()+t.slice(1)}`;e(n,{dataUrl:Qt.src,errMsg:`${n}:ok`}),xl({state:t,dataUrl:Qt.src})})}),Qt.addEventListener("waiting",()=>{kc(),xl({state:"waiting",dataUrl:Qt.src})}),Qt.addEventListener("error",t=>{kc(),e("onMusicError",{dataUrl:Qt.src,errMsg:"Error:"+t.message}),xl({state:"error",dataUrl:Qt.src,errMsg:t.message,errCode:t.code})}),Qt.addEventListener("prev",()=>{xl({state:"prev"})}),Qt.addEventListener("next",()=>{xl({state:"next"})})}function VA(){let e={duration:0,currentTime:0,paused:!1,src:"",buffered:0,title:"",epname:"",singer:"",coverImgUrl:"",webUrl:"",startTime:0,errMsg:"getBackgroundAudioState:ok"};if(Qt){let t={duration:Qt.getDuration()||0,currentTime:Qt.isStopped?0:Qt.getPosition(),paused:Qt.isPaused(),src:Qt.src,buffered:Qt.getBuffered(),title:Qt.title,epname:Qt.epname,singer:Qt.singer,coverImgUrl:Qt.coverImgUrl,webUrl:Qt.webUrl,startTime:Qt.startTime};e=ne.extend(e,t)}return e}function Lh(e,t){FA();let n=["src","startTime","coverImgUrl","webUrl","singer","epname","title"];if(t==="playbackRate"){let a=e[t];Qt.playbackRate&&Qt.playbackRate(parseFloat(a));return}let r={};Object.keys(e).forEach(a=>{if(n.indexOf(a)>=0){let u=e[a];a===n[0]&&u&&(u=Ot(u)),Qt[a]=r[a]=u}}),Qt.setStyles(r)}function $A({operationType:e,src:t,position:n,api:r="operateMusicPlayer",title:a,coverImgUrl:u}){var g=["resume","pause","stop"];return g.indexOf(e)>0?Qt&&Qt[e]():e==="play"?(Lh({src:t,startTime:n,title:a,coverImgUrl:u}),Qt.play()):e==="seek"&&Qt&&Qt.seekTo(n),{errMsg:`${r}:ok`}}function UA({operationType:e,src:t,startTime:n,currentTime:r}){return $A({operationType:e,src:t,position:n||r||0,api:"operateBackgroundAudio"})}function xl({state:e,errMsg:t,errCode:n,dataUrl:r}){Mh[e].forEach(a=>{ne.isFunction(a)&&a(e==="error"?{errMsg:t,errCode:n}:{})})}let HA=Q.once(()=>{BA.forEach(e=>{Dh.prototype[`on${ne.capitalize(e)}`]=function(t){Mh[e].push(t)}})}),jA=[{name:"duration",readonly:!0},{name:"currentTime",readonly:!0},{name:"paused",readonly:!0},{name:"src",cache:!0},{name:"startTime",default:0,cache:!0},{name:"buffered",readonly:!0},{name:"title",cache:!0},{name:"epname",cache:!0},{name:"singer",cache:!0},{name:"coverImgUrl",cache:!0},{name:"webUrl",cache:!0},{name:"protocol",readonly:!0,default:"http"},{name:"playbackRate",default:1,cache:!0}];class Dh{constructor(){this._options={},jA.forEach(t=>{let n=t.name;Object.defineProperty(this,n,{get:()=>{let r=t.cache?this._options:VA();return n in r?r[n]:t.default},set:t.readonly?void 0:r=>{this._options[n]=r,Lh(this._options,n)}})}),HA()}play(){this._operate("play")}pause(){this._operate("pause")}stop(){this._operate("stop")}seek(t){this._operate("seek",{currentTime:t})}_operate(t,n){UA(ne.extend({},n,{operationType:t}))}}let Fh,zA=Ft(j_,()=>Fh||(Fh=new Dh));class WA{constructor(t,n){this.id=t,this.ctx=n}start(t){return Ht(this.ctx,"start",t)}stop(t){return Ht(this.ctx,"stop",t)}pause(t){return Ht(this.ctx,"pause",t)}resume(t){return Ht(this.ctx,"resume",t)}switchCamera(t){return Ht(this.ctx,"switchCamera",t)}snapshot(t){return Ht(this.ctx,"snapshot",t)}toggleTorch(t){return Ht(this.ctx,"toggleTorch",t)}playBGM(t){return Ut(this.ctx,"playBGM",t)}stopBGM(t){return Ht(this.ctx,"stopBGM",t)}pauseBGM(t){return Ht(this.ctx,"pauseBGM",t)}resumeBGM(t){return Ht(this.ctx,"resumeBGM",t)}setBGMVolume(t){return Ut(this.ctx,"setBGMVolume",t)}startPreview(t){return Ht(this.ctx,"startPreview",t)}stopPreview(t){return Ht(this.ctx,"stopPreview",t)}}function _s(e,t,n,r){ct.invokeViewMethod("livepusher."+e,{livePusherId:e,type:n,data:r},t)}class GA{constructor(t,n){this.id=t,this.pageId=n}start(){_s(this.id,this.pageId,"start")}stop(){_s(this.id,this.pageId,"stop")}pause(){_s(this.id,this.pageId,"pause")}resume(){_s(this.id,this.pageId,"resume")}switchCamera(){_s(this.id,this.pageId,"switchCamera")}startPreview(){_s(this.id,this.pageId,"preview")}stopPreview(){_s(this.id,this.pageId,"stop")}snapshot(){_s(this.id,this.pageId,"snapshot")}}let YA=Ft(Om,(e,t)=>{if(t.$page.meta.isNVue){if(!t)return console.warn("uni.createLivePusherContext: 2 arguments required, but only 1 present");let n=Go(e,t);return n?new WA(e,n):console.warn("Can not find `"+e+"`")}return new GA(e,t.$page.id)},Tm),mi=3.141592653589793,Rc=6378245,xc=.006693421622965943;function qA(e,t){if(t=+t,e=+e,Vh(e,t))return[e,t];let n=$h(e-105,t-35),r=Uh(e-105,t-35),a=t/180*mi,u=Math.sin(a);u=1-xc*u*u;let g=Math.sqrt(u);n=n*180/(Rc*(1-xc)/(u*g)*mi),r=r*180/(Rc/g*Math.cos(a)*mi);let E=t+n,$=e+r;return[e*2-$,t*2-E]}function KA(e,t){if(t=+t,e=+e,Vh(e,t))return[e,t];let n=$h(e-105,t-35),r=Uh(e-105,t-35),a=t/180*mi,u=Math.sin(a);u=1-xc*u*u;let g=Math.sqrt(u);n=n*180/(Rc*(1-xc)/(u*g)*mi),r=r*180/(Rc/g*Math.cos(a)*mi);let E=t+n;return[e+r,E]}let Vh=function(e,t){return e<72.004||e>137.8347||t<.8293||t>55.8271||!1},$h=function(e,t){let n=-100+2*e+3*t+.2*t*t+.1*e*t+.2*Math.sqrt(Math.abs(e));return n+=(20*Math.sin(6*e*mi)+20*Math.sin(2*e*mi))*2/3,n+=(20*Math.sin(t*mi)+40*Math.sin(t/3*mi))*2/3,n+=(160*Math.sin(t/12*mi)+320*Math.sin(t*mi/30))*2/3,n},Uh=function(e,t){let n=300+e+2*t+.1*e*e+.1*e*t+.1*Math.sqrt(Math.abs(e));return n+=(20*Math.sin(6*e*mi)+20*Math.sin(2*e*mi))*2/3,n+=(20*Math.sin(e*mi)+40*Math.sin(e/3*mi))*2/3,n+=(150*Math.sin(e/12*mi)+300*Math.sin(e/30*mi))*2/3,n};function Hh(e,t,n){let r=t.coords;if(e!==t.coordsType){let a;e==="wgs84"?a=qA(r.longitude,r.latitude):e==="gcj02"&&(a=KA(r.longitude,r.latitude)),a&&(r.longitude=a[0],r.latitude=a[1])}n({type:e,altitude:r.altitude||0,latitude:r.latitude,longitude:r.longitude,speed:r.speed,accuracy:r.accuracy,address:t.address,errMsg:"getLocation:ok"})}let JA=Ee(E0,({type:e="wgs84",geocode:t=!1,altitude:n=!1,highAccuracyExpireTime:r,isHighAccuracy:a=!1},{resolve:u,reject:g})=>{s.geolocation.getCurrentPosition(E=>{Hh(e,E,u)},E=>{if(E.code===1501){Hh(e,E,u);return}g("getLocation:fail "+E.message)},{geocode:t,enableHighAccuracy:a||n,timeout:r,coordsType:e})},w0,y0),ZA=Ee(_0,(e,{resolve:t,reject:n})=>{let a=vh()!=="light",u,g=Wo({url:"__uniappchooselocation",data:e,style:{animationType:e.animationType||"slide-in-bottom",titleNView:!1,popGesture:"close",scrollIndicator:"none"},onMessage({event:E,detail:$}){E==="selected"&&(u=$)},onClose(){a&&s.navigator.setStatusBarStyle("dark"),u?t(u):n("cancel")}});a&&(s.navigator.setStatusBarStyle("light"),g.webview.addEventListener("popGesture",({type:E,result:$})=>{E==="start"?s.navigator.setStatusBarStyle("dark"):E==="end"&&!$&&s.navigator.setStatusBarStyle("light")}))},b0),XA=Ee(S0,(e,{resolve:t,reject:n})=>(Wo({url:"__uniappopenlocation",data:e,style:{titleNView:{type:"transparent"},popGesture:"close",backButtonAutoControl:"close"},onClose(){n("cancel")}}),t()),C0,A0),QA=Ee(sy,({title:e="",content:t="",showCancel:n=!0,cancelText:r,cancelColor:a,confirmText:u,confirmColor:g,editable:E=!1,placeholderText:$=""}={},{resolve:C})=>{let F=n?[r,u]:[u],ue=E?$:F;t=t||" ",s.nativeUI[E?"prompt":"confirm"](t,be=>{if(n){let Ie=be.index===1,_t={confirm:Ie,cancel:be.index===0||be.index===-1};Ie&&E&&(_t.content=be.value),C(_t)}else{let Ie={confirm:be.index===0,cancel:!1};E&&(Ie.content=be.value),C(Ie)}},e,ue,F)},ly,cy),eC=Ee(ty,({itemList:e=[],itemColor:t="#000000",title:n="",popover:r},{resolve:a,reject:u})=>{ni();let{t:g}=Ye(),E={title:n,cancel:g("uni.showActionSheet.cancel"),buttons:e.map($=>({title:$,color:t}))};s.nativeUI.actionSheet(ne.extend(E,{popover:r}),$=>{$.index>0?a({tapIndex:$.index-1}):u("showActionSheet:fail cancel")})},ny,ry),nc,Uu=!1,Bc="",Mc,tC=Ee(iy,(e,t)=>jh(ne.extend({},e,{type:"loading",icon:"loading"}),t),oy,ay),jh=({title:e="",icon:t="success",image:n="",duration:r=1500,mask:a=!1,position:u,type:g="toast",style:E},{resolve:$,reject:C})=>{if(Lc(""),Bc=g,["top","center","bottom"].includes(String(u)))s.nativeUI.toast(e,{verticalAlign:u}),Uu=!0;else{t&&!~["success","loading","error","none"].indexOf(t)&&(t="success");let F={modal:a,back:"transmit",padding:"10px",size:"16px"};!n&&(!t||t==="none")?F.loading={display:"none"}:(F.width="140px",F.height="112px"),n?F.loading={display:"block",height:"55px",icon:n,interval:r}:["success","error"].indexOf(t)!==-1&&(F.loading={display:"block",height:"55px",icon:t==="success"?"__uniappsuccess.png":"__uniapperror.png",interval:r});try{nc=s.nativeUI.showWaiting(e,ne.extend(F,E))}catch(ue){C(`${ue}`)}}return Bc==="toast"&&(Mc=k(()=>{Lc("")},r)),$()},nC=Ee(uy,jh,dy,hy),rC=Ee(jE,(e,t)=>Lc("toast",t)),iC=Ee(HE,(e,t)=>Lc("loading",t));function Lc(e="toast",t){return e&&e!==Bc||(Mc&&(y(Mc),Mc=null),Uu?s.nativeUI.closeToast():nc&&nc.close&&nc.close(),nc=null,Uu=!1,Bc=""),t&&t.resolve()}let oC=Ee(gy,(e,{resolve:t,reject:n})=>{let r=ph();if(r&&r.endPullToRefresh(),r=Ic(),!r)return n();r.beginPullToRefresh(),Nu(r),t()}),aC=Ee(py,(e,{resolve:t,reject:n})=>{let r=ph()||Ic();if(!r)return n();r.endPullToRefresh(),Nu(null),t()}),sC=Ee(oh,(e,{resolve:t,reject:n})=>{let r=yr(qr());ct.invokeViewMethod(oh,e,r,a=>{a?n(a):t()})},zE),lC=Ee(ah,(e,{resolve:t})=>{let n=yr(qr());ct.invokeViewMethod(ah,e,n,t)},QE,ey),cC=Ee(KE,({__page__:e,title:t},{resolve:n,reject:r})=>{let a=hh(e);if(a){let u=a.getStyle();u&&u.titleNView&&a.setStyle({titleNView:{titleText:t}}),n()}else r()},JE),uC=Ee(ZE,(e,{resolve:t})=>{s.nativeUI.showWaiting("",{modal:!1}),t()}),fC=Ee(XE,(e,{resolve:t})=>{s.nativeUI.closeWaiting(),t()});function dC(e){let t=Pn();!t.length||(t[t.length-1].$page.statusBarStyle=e)}let hC=Ee(GE,({__page__:e,frontColor:t,backgroundColor:n},{resolve:r,reject:a})=>{let u=hh(e);if(u){let g={};t&&(g.titleColor=t),n&&(g.backgroundColor=n);let E=t==="#000000"?"dark":"light";s.navigator.setStatusBarStyle(E),dC(E);let $=u.getStyle();$&&$.titleNView&&($.titleNView.autoBackButton&&(g.backButton=g.backButton||{},g.backButton.color=t),u.setStyle({titleNView:g})),r()}else a()},qE,YE),gC=Ee(My,({index:e,text:t},{resolve:n,reject:r})=>{ci.setTabBarBadge("text",e,t),n()},Ly,Dy),pC=Ee(vy,({index:e,text:t,iconPath:n,selectedIconPath:r,pagePath:a,visible:u,iconfont:g},{resolve:E,reject:$})=>{ci.setTabBarItem(e,t,n,r,u,g);let C=a&&$e.find(({path:F})=>F===a);if(C){let F=C.meta;F.isTabBar=!0,F.tabBarIndex=e,F.isQuit=!0;let ue=P.tabBar;ue&&ue.list&&ue.list[e]&&a&&(ue.list[e].pagePath=a.startsWith("/")?a.substring(1):a)}E()},my,_y),vC=Ee(by,(e={},{resolve:t,reject:n})=>{if(!ku())return n("not TabBar page");let r={black:"rgba(0,0,0,0.4)",white:"rgba(255,255,255,0.4)"},a=e.borderStyle;a&&a in r&&(e.borderStyle=r[a]),ci.setTabBarStyle(e),t()},Ey,wy),mC=Ee(Sy,(e,{resolve:t,reject:n})=>{let r=e&&e.animation;if(!ku())return n("not TabBar page");ci.hideTabBar(Boolean(r)),t()},sh),_C=Ee(Ay,(e,{resolve:t,reject:n})=>{let r=e&&e.animation;if(!ku())return n("not TabBar page");ci.showTabBar(Boolean(r)),t()},Cy),bC=Ee(Iy,({index:e},{resolve:t,reject:n})=>{ci.setTabBarBadge("redDot",e),t()},Ny,ky),zh=e=>ci.setTabBarBadge("none",e),EC=Ee(Ry,({index:e},{resolve:t,reject:n})=>{zh(e),t()},xy,By),yC=Ee(Oy,({index:e},{resolve:t,reject:n})=>{zh(e),t()},Ty,Py),Wh="vdSync",wC="__uniapp__service",Bl="onWebviewReady",SC=0,AC="webviewInserted",CC="webviewRemoved",Gh="UniAppSubNVue";class OC{constructor(t,n){this.callbacks=[];let r=this.webview=s.webview.getWebviewById(t);if(this.isSub=n||!1,r.__uniapp_mask_id){let a=this.maskWebview=r.__uniapp_mask_id==="0"?{setStyle({mask:g}){Do("uni-tabview").setMask({color:g})}}:s.webview.getWebviewById(r.__uniapp_mask_id),u=function(){a.setStyle({mask:"none"})};r.addEventListener("hide",u),r.addEventListener("close",u)}}show(...t){if(this.maskWebview){let n=this.webview.__uniapp_mask;this.maskWebview.setStyle({mask:n})}this.webview.show(...t)}hide(...t){this.webview.hide(...t)}setStyle(t){this.webview.setStyle(t)}initMessage(){if(this.messageReady)return;this.messageReady=!0;let t=r=>{if(r.data&&r.data.type===Gh){let a=r.data.target;a.id===this.webview.id&&a.isSub===this.isSub&&this.callbacks.forEach(u=>{u({origin:this.webview.__uniapp_host,data:r.data.data})})}};Do("globalEvent").addEventListener("plusMessage",t),this.webview.addEventListener("close",()=>{this.callbacks.length=0})}postMessage(t){s.webview.postMessageToUniNView({type:Gh,data:t,target:{id:this.webview.id,isSub:!this.isSub}},wC)}onMessage(t){this.initMessage(),this.callbacks.push(t)}}let TC=function(e,t){return new OC(e,t)},rc,Yh=s.navigator.setStatusBarStyle;function PC(e){Yh=e}function qh(e){rc=e,Yh(e)}s.navigator.setStatusBarStyle=qh;function Qa(e){if(!e){let t=ri();if(!t||(e=t.$page.statusBarStyle,!e||e===rc))return}e!==rc&&(rc=e,s.navigator.setStatusBarStyle(e))}function IC(e,t,n,r,a,u,g){s!==n&&(A=on=e,p=t,s=n,PC(s.navigator.setStatusBarStyle),s.navigator.setStatusBarStyle=qh,k=r,y=a,I=u,f=g),P.serviceReady=!0}function NC(){let e=["ArrayBuffer","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array"],t={};for(let n=0;n<e.length;n++){let r=e[n];t[r]=global[r]}return t}let Kh={oauth(e){s.oauth.getServices(t=>{t=t;let n=[];t.forEach(({id:r})=>{n.push(r)}),e(null,n)},t=>{t=t,e(t)})},share(e){s.share.getServices(t=>{t=t;let n=[];t.forEach(({id:r})=>{n.push(r)}),e(null,n)},t=>{e(t)})},payment(e){s.payment.getChannels(t=>{let n=[];t.forEach(({id:r})=>{n.push(r)}),e(null,n)},t=>{e(t)})},push(e){typeof p!="undefined"||typeof s!="undefined"?e(null,[s.push.getClientInfo().id]):e(null,[])}},kC=Ee(Fy,({service:e},{resolve:t,reject:n})=>{Kh[e]?Kh[e]((r,a)=>{r?n(r.message):t({service:e,provider:a})}):n("service not found")},Vy),Dc;function ic(e){return new Promise((t,n)=>{s.oauth.getServices(r=>{let a=r.find(({id:u})=>u===e);a?t(a):n(new Error("provider not find"))},n)})}let Jh=Ee($y,(e,{resolve:t,reject:n})=>{let r=e.provider||"weixin",a=sr(n),u=r==="apple",g=u?{scope:"email"}:e.univerifyStyle?{univerifyStyle:BC(e.univerifyStyle,a)}:{};ic(r).then(E=>{function $(){if(e.onlyAuthorize&&r==="weixin"){E.authorize(({code:C})=>{t({code:C,authResult:""})},a);return}E.login(C=>{let F=C.target.authResult,ue=C.target.appleInfo;t({code:F.code,authResult:F,appleInfo:ue})},a,g)}u||r==="univerify"?$():E.logout($,$)}).catch(a)},Uy),Zh=(e,{resolve:t,reject:n})=>{let r=e.provider||"weixin",a=sr(n);ic(r).then(u=>{u.getUserInfo(g=>{let E={nickName:""};if(r==="weixin"){let C=u.userInfo;C&&(E={openId:C.openid,nickName:C.nickname,gender:C.sex,city:C.city,province:C.province,country:C.country,avatarUrl:C.headimgurl,unionId:C.unionid})}else if(r==="apple"){let C=u.appleInfo;C&&(E={openId:C.user,fullName:C.fullName,email:C.email,authorizationCode:C.authorizationCode,identityToken:C.identityToken,realUserStatus:C.realUserStatus})}else E=u.userInfo,E&&(E.openId=E.openId||E.openid||u.authResult.openid,E.nickName=E.nickName||E.nickname,E.avatarUrl=E.avatarUrl||E.headimgurl);let $={};e.data&&e.data.api_name==="webapi_getuserinfo"?$.data={data:JSON.stringify(E),rawData:"",signature:"",encryptedData:"",iv:""}:$.userInfo=E,t($)},a)}).catch(()=>{n("\u8BF7\u5148\u8C03\u7528 uni.login")})},RC=Ee(Hy,Zh,jy),xC=Ee(zy,Zh,Wy),Xh=Ee(Gy,({provider:e},{resolve:t,reject:n})=>{let r=Vs(t),a=sr(n);ic(e).then(u=>u.preLogin(r,a)).catch(a)},Ky,qy),Qh=()=>ic("univerify").then(e=>e.closeAuthView()),eg=Ft(Jy,Qh),tg=Ee(Zy,(e,{resolve:t,reject:n})=>{let r=Vs(t),a=sr(n);try{ic("univerify").then(u=>{let g=u.getCheckBoxState();r({state:g})})}catch(u){a(u)}});function BC(e,t){return ne.isPlainObject(e)&&ne.isPlainObject(e.buttons)&&ne.toTypeString(e.buttons.list)==="[object Array]"&&e.buttons.list.forEach((n,r)=>{e.buttons.list[r].onclick=function(){let a={code:"30008",message:"\u7528\u6237\u70B9\u51FB\u4E86\u81EA\u5B9A\u4E49\u6309\u94AE",index:r,provider:n.provider};ne.isPlainObject(Dc)?Dc._triggerUniverifyButtonsClick(a):Qh().then(()=>{t(a)})}}),e}class MC{constructor(){this.provider="univerify",this.eventName="api.univerifyButtonsClick"}close(){return eg()}login(t){return Jh(this._getOptions(t))}getCheckBoxState(t){return tg(t)}preLogin(t){return Xh(this._getOptions(t))}onButtonsClick(t){ct.on(this.eventName,t)}offButtonsClick(t){ct.off(this.eventName,t)}_triggerUniverifyButtonsClick(t){ct.emit(this.eventName,t)}_getOptions(t={}){return ne.extend({},t,{provider:this.provider})}}let LC=Ft(Xy,()=>Dc||(Dc=new MC)),DC=Ft("registerRuntime",e=>{ne.extend(jsRuntime,e)}),FC={0:{name:"web",title:"\u56FE\u6587"},1:{name:"text",title:"\u7EAF\u6587\u5B57"},2:{name:"image",title:"\u7EAF\u56FE\u7247"},3:{name:"music",title:"\u97F3\u4E50"},4:{name:"video",title:"\u89C6\u9891"},5:{name:"miniProgram",title:"\u5C0F\u7A0B\u5E8F"}},VC=e=>{e.type=e.type||0;let{provider:t,type:n,title:r,summary:a,href:u,imageUrl:g,mediaUrl:E,scene:$,miniProgram:C,openCustomerServiceChat:F,corpid:ue,customerUrl:be}=e;typeof g=="string"&&g&&(g=Ot(g));let Ie=FC[n];if(Ie){let _t={provider:t,type:Ie.name,title:r,content:a,href:u,pictures:[g],thumbs:g?[g]:void 0,media:E,miniProgram:C,extra:{scene:$},openCustomerServiceChat:F,corpid:ue,url:be};return t==="weixin"&&(n===1||n===2)&&delete _t.thumbs,_t}return"\u5206\u4EAB\u53C2\u6570 type \u4E0D\u6B63\u786E"},ng=function(e,t,n,r,a="share"){let u=sr(r),g=t.openCustomerServiceChat?"openCustomerServiceChat":"send";try{e[g](t,()=>{n()},u)}catch(E){u({message:`${t.provider} ${g} \u65B9\u6CD5\u8C03\u7528\u5931\u8D25`})}},$C=Ee(Qy,(e,{resolve:t,reject:n})=>{let r=VC(e),a=sr(n);if(typeof r=="string")return n(r);s.share.getServices(u=>{let g=u.find(({id:E})=>E===r.provider);g?g.authenticated?ng(g,r,t,n):g.authorize(()=>ng(g,r,t,n),a):n("service not found")},a)},tw,ew),UC=Ee(nw,({type:e,imageUrl:t,summary:n,href:r},{resolve:a,reject:u})=>{let g=sr(u);typeof t=="string"&&t&&(t=Ot(t)),s.share.sendWithSystem({type:e,pictures:t?[t]:void 0,content:n,href:r},()=>a(),g)},iw,rw),HC=Ee(ow,(e,{resolve:t,reject:n})=>{let r=e.provider,a=sr(n);s.payment.getChannels(u=>{let g=u.find(({id:E})=>E===r);g?s.payment.request(g,e.orderInfo,E=>{t(E)},a):n("service not found")},a)},aw),rg=wh,jC=Ee("navigateToMiniProgram",(e,{resolve:t,reject:n})=>{rg("navigateToUniMP",e,r=>{if(r.errMsg&&r.errMsg.indexOf(":ok")===-1)return n(r.errMsg.split(" ")[1]);t()})}),ig=[];function og(e){ig.push(e)}let zC=og;function WC(e,t){ig.forEach(n=>n(e,t))}let yo={load:"load",close:"close",error:"error",adClicked:"adClicked"};class ag{constructor(){this._callbacks={}}onLoad(t){this._addEventListener(yo.load,t)}onClose(t){this._addEventListener(yo.close,t)}onError(t){this._addEventListener(yo.error,t)}offLoad(t){this._removeEventListener(yo.load,t)}offClose(t){this._removeEventListener(yo.close,t)}offError(t){this._removeEventListener(yo.error,t)}_addEventListener(t,n){typeof n=="function"&&(this._callbacks[t]||(this._callbacks[t]=[]),this._callbacks[t].push(n))}_removeEventListener(t,n){let r=this._callbacks[t],a=r.indexOf(n);a>-1&&r.splice(a,1)}_dispatchEvent(t,n){this._callbacks[t].forEach(r=>{r(n||{})})}}class Hu extends ag{constructor(t,n){super();this.preload=!0,this._isLoaded=!1,this._isLoading=!1,this._loadPromiseResolve=null,this._loadPromiseReject=null,this._showPromiseResolve=null,this._showPromiseReject=null,this.preload=n.preload!==void 0?n.preload:!1;let r=this._adInstance=t;r.onLoad(()=>{this._isLoaded=!0,this._isLoading=!1,this._loadPromiseResolve!=null&&(this._loadPromiseResolve(),this._loadPromiseResolve=null),this._showPromiseResolve!=null&&(this._showPromiseResolve(),this._showPromiseResolve=null,this._showAd()),this._dispatchEvent(yo.load,{})}),r.onClose(a=>{this._isLoaded=!1,this._isLoading=!1,this._dispatchEvent(yo.close,a),this.preload===!0&&this._loadAd()}),r.onError(a=>{this._isLoading=!1;let u={code:a.code,errMsg:a.message};this._dispatchEvent(yo.error,u);let g=new Error(JSON.stringify(u));this._loadPromiseReject!=null&&(this._loadPromiseReject(g),this._loadPromiseReject=null),this._showPromiseReject!=null&&(this._showPromiseReject(g),this._showPromiseReject=null)}),r.onAdClicked&&r.onAdClicked(()=>{this._dispatchEvent(yo.adClicked,{})})}getProvider(){return this._adInstance.getProvider()}load(){return new Promise((t,n)=>{this._loadPromiseResolve=t,this._loadPromiseReject=n,!this._isLoading&&(this._isLoaded?t(""):this._loadAd())})}show(){return new Promise((t,n)=>{this._showPromiseResolve=t,this._showPromiseReject=n,!this._isLoading&&(this._isLoaded?(this._showAd(),t("")):this._loadAd())})}destroy(){this._adInstance.destroy()}_loadAd(){this._isLoaded=!1,this._isLoading=!0,this._adInstance.load()}_showAd(){this._adInstance.show()}}class GC extends Hu{constructor(t){super(s.ad.createRewardedVideoAd(t),t);this._loadAd()}}let YC=Ft(sw,e=>new GC(e),cw,lw);class qC extends Hu{constructor(t){super(s.ad.createFullScreenVideoAd(t),t);this.preload=!1}}let KC=Ft(uw,e=>new qC(e),dw,fw);class JC extends Hu{constructor(t){super(s.ad.createInterstitialAd(t),t);this.preload=!1,this._loadAd()}}let ZC=Ft(hw,e=>new JC(e),pw,gw),pa={},Us={};function XC(e){let t=e.provider;if(pa[t]||(pa[t]={}),typeof pa[t].plugin=="object"){e.success(pa[t].plugin);return}if(Us[t]||(Us[t]=[]),Us[t].push(e),pa[t].status===!0){e.__plugin=pa[t].plugin;return}pa[t].status=!0;let n=Do(t);if(!n||!n.initSDK){Us[t].forEach(r=>{r.fail({code:-1,message:"provider ["+t+"] invalid"})}),Us[t].length=0,pa[t].status=!1;return}pa[t].plugin=n,e.__plugin=n,n.initSDK(r=>{let a=r.code===1||r.code==="1";a?pa[t].plugin=n:pa[t].status=!1,Us[t].forEach(u=>{a?u.success(u.__plugin):u.fail(r)}),Us[t].length=0})}class QC extends ag{constructor(t){super();this._adpid="",this._provider="",this._userData=null,this._isLoaded=!1,this._isLoading=!1,this._loadPromiseResolve=null,this._loadPromiseReject=null,this._showPromiseResolve=null,this._showPromiseReject=null,this._adInstance=null,this._adError="",this._adpid=t.adpid,this._provider=t.provider,this._userData=t.userData,k(()=>{this._init()})}_init(){this._adError="",XC({provider:this._provider,success:t=>{this._adInstance=t,this._userData&&this.bindUserData(this._userData),this._loadAd()},fail:t=>{this._adError=t,this._loadPromiseReject!=null&&(this._loadPromiseReject(this._createError(t)),this._loadPromiseReject=null),this._dispatchEvent(yo.error,t)}})}getProvider(){return this._provider}load(){return new Promise((t,n)=>{if(this._loadPromiseResolve=t,this._loadPromiseReject=n,!this._isLoading){if(this._adError){this._init();return}this._isLoaded?t(""):this._loadAd()}})}show(){return new Promise((t,n)=>{if(this._showPromiseResolve=t,this._showPromiseReject=n,!this._isLoading){if(this._adError){this._init();return}this._isLoaded?(this._showAd(),t("")):this._loadAd()}})}reportExposure(){this._adInstance!==null&&this._adInstance.reportExposure()}bindUserData(t){this._adInstance!==null&&this._adInstance.bindUserData(t)}destroy(){this._adInstance!==null&&this._adInstance.destroy&&this._adInstance.destroy({adpid:this._adpid})}_loadAd(){if(this._adInstance!==null){if(this._isLoading===!0)return;this._isLoading=!0,this._adInstance.loadData({adpid:this._adpid},t=>{this._isLoaded=!0,this._isLoading=!1,this._loadPromiseResolve!=null&&(this._loadPromiseResolve(),this._loadPromiseResolve=null),this._showPromiseResolve!=null&&(this._showPromiseResolve(),this._showPromiseResolve=null,this._showAd()),this._dispatchEvent(yo.load,t)},t=>{this._isLoading=!1,this._showPromiseReject!=null&&(this._showPromiseReject(this._createError(t)),this._showPromiseReject=null),this._dispatchEvent(yo.error,t)})}}_showAd(){this._adInstance!==null&&this._isLoaded===!0&&this._adInstance.show({adpid:this._adpid},()=>{this._isLoaded=!1},t=>{this._isLoaded=!1,this._showPromiseReject!=null&&(this._showPromiseReject(this._createError(t)),this._showPromiseReject=null),this._dispatchEvent(yo.error,t)})}_createError(t){return new Error(JSON.stringify(t))}}let eO=Ft(vw,e=>new QC(e),_w,mw),sg=s.os.name==="Android"&&parseInt(s.os.version)<6,tO=sg?"slide-in-right":"pop-in",Fc=300,lg=sg?"slide-out-right":"pop-out",nO="_www/__uniappview.html",rO="webviewId",iO="uniMPNativeEvent",cg;function ug(){return cg}function oO(e){let t=e.$.appContext;cg=ne.extend(t.app,{mountPage(n,r,a){let u=on.createVNode(n,r);u.appContext=t,u.__page_container__=a,on.render(u,a);let g=u.component.proxy;return g.__page_container__=a,g},unmountPage:n=>{let{__page_container__:r}=n;r&&(r.isUnmounted=!0,on.render(null,r))}})}let es=[];function Vc(e){if(!e.$page.meta.isNVue)return es.push(e);let n=es.findIndex(r=>r.$page.id===e.$page.id);n>-1?es.splice(n,1,e):es.push(e)}function oc(e){return es.find(t=>t.$page.id===e)}function ju(){return es}function aO(){let e=[];return es.forEach(t=>{t.$.__isTabBar?t.$.__isActive&&e.push(t):e.push(t)}),e}function sO(){let e=ri();!e||ac(e)}function ac(e){let t=es.findIndex(n=>n===e);t!==-1&&(e.$page.meta.isNVue||ug().unmountPage(e),es.splice(t,1))}function lO(e,t,n){n&&t.isNVue&&(e.uniNView={path:n,defaultFontSize:P.defaultFontSize,viewport:P.viewport})}let cO=/^#[a-z0-9]{6}$/i;function fg(e){return e&&(cO.test(e)||e==="transparent")}function uO(e,t){let{backgroundColor:n}=t;!n||!fg(n)||(e.background||(e.background=n),e.backgroundColorTop||(e.backgroundColorTop=n))}function fO(e,t){e.popGesture==="hide"&&delete e.popGesture,t.isQuit&&(e.popGesture=s.os.name==="iOS"?"appback":"none")}function dO(e,t){if(!t.enablePullDownRefresh)return;let n=Ss(ne.extend({},s.os.name==="Android"?gO:pO,t.pullToRefresh));e.pullToRefresh=hO(n,t)}function hO(e,t){let n=Ea(e);if(!n)return e;let[r,a,u]=n;return(r||a||u)&&Lt.onLocaleChange(()=>{let g=s.webview.getWebviewById(t.id+"");if(!g)return;let E={support:!0};r&&(E.contentdown={caption:e.contentdown.caption}),a&&(E.contentover={caption:e.contentover.caption}),u&&(E.contentrefresh={caption:e.contentrefresh.caption}),g.setStyle({pullToRefresh:E})}),e}let gO={support:!0,style:"circle"},pO={support:!0,style:"default",height:"50px",range:"200px",contentdown:{caption:""},contentover:{caption:""},contentrefresh:{caption:""}};function vO(e,t){let{navigationBar:n}=t;if(n.style==="custom")return!1;let r=!0;t.isQuit&&(r=!1);let a={autoBackButton:r};Object.keys(n).forEach(u=>{let g=n[u];u==="backgroundColor"?a.backgroundColor=fg(g)?g:Q.BACKGROUND_COLOR:u==="titleImage"&&g?a.tags=_O(g):u==="buttons"&&ne.isArray(g)?a.buttons=g.map((E,$)=>(E.onclick=bO($),E)):a[u]=g}),e.titleNView=mO(a,t)}function mO(e,t){let n=ba(e);if(!n)return e;let[r,a]=n;return(r||a)&&Lt.onLocaleChange(()=>{let u=s.webview.getWebviewById(t.id+"");if(!u)return;let g={};r&&(g.titleText=e.titleText),a&&(g.searchInput={placeholder:e.searchInput.placeholder}),u.setStyle({titleNView:g})}),e}function _O(e){return[{tag:"img",src:e,position:{left:"auto",top:"auto",width:"auto",height:"26px"}}]}function bO(e){return function(n){n.index=e,gn(Q.ON_NAVIGATION_BAR_BUTTON_TAP,n)}}function dg(e,t,n){let r={bounce:"vertical"};return Object.keys(t).forEach(a=>{EO.indexOf(a)===-1&&(r[a]=t[a])}),n.id!=="1"&&lO(r,t,e),fO(r,t),uO(r,t),vO(r,t),dO(r,t),r}let EO=["id","route","isNVue","isQuit","isEntry","isTabBar","tabBarIndex","windowTop","topWindow","leftWindow","rightWindow","maxWidth","usingComponents","disableScroll","enablePullDownRefresh","navigationBar","pullToRefresh","onReachBottomDistance","pageOrientation","backgroundColor"],hg=2;function gg(){return hg}function pg(){return hg++}function vg(e){return e}function mg(e,t){let n=t?Q.stringifyQuery(t,vg):"";return{path:e.slice(1),query:n&&n.slice(1)}}function yO(e,t,n){let r=n?Q.stringifyQuery(n,vg):"";return{isTab:e,arguments:JSON.stringify({path:t.slice(1),query:r&&r.slice(1)})}}function wO({path:e,query:t,routeOptions:n,webviewExtras:r}){let a=pg(),u=dg(e,n.meta,{id:a+""});return u.uniPageUrl=mg(e,t),u.isTab=!!n.meta.isTabBar,s.webview.create("",String(a),u,ne.extend({nvue:!0,__path__:e,__query__:JSON.stringify(t)},r))}let Yi;function _g(e){Yi=e}function SO(){return Yi}function AO(){return(!Yi||Yi.__uniapp_route)&&(Yi=s.webview.create(nO,String(pg()),{contentAdjust:!1})),Yi}function CO(e){let{popupSubNVueWebviews:t}=e;!t||e.addEventListener("close",()=>{Object.keys(t).forEach(n=>{t[n].close("none")})})}function bg(e){return P.realEntryPagePath&&e.$page.route===P.entryPagePath}function Eg(){P.entryPagePath=P.realEntryPagePath,delete P.realEntryPagePath,Lt.reLaunch({url:Q.addLeadingSlash(P.entryPagePath)})}function OO(e){let t;e.addEventListener("popGesture",n=>{if(n.type==="start"){let r=Pn(),a=r[r.length-2];t=rc;let u=a&&a.$page.statusBarStyle;u&&Qa(u)}else if(n.type==="end"&&!n.result)Qa(t);else if(n.type==="end"&&n.result){let r=ri();sO(),Qa(),r&&bg(r)?Eg():gn(Q.ON_SHOW)}})}function TO(e){if(e.nvue)return;let t=e.id,{subscribe:n,unsubscribe:r}=ct,a=(u,g)=>{if(t!==g)return;r(Bl,a);let E=oc(parseInt(g));E&&E.__page_container__.restore()};e.addEventListener("recovery",()=>{n(Bl,a)})}function PO(e){let{emit:t}=ct,n=function({width:r,height:a}){let g={deviceOrientation:Math.abs(s.navigator.getOrientation())===90?"landscape":"portrait",size:{windowWidth:Math.ceil(r),windowHeight:Math.ceil(a)}};t(Q.ON_RESIZE,g,parseInt(e.id))};e.addEventListener("resize",Q.debounce(n,50,{setTimeout:k,clearTimeout:y}))}let yg={pullToRefresh:Q.ON_PULL_DOWN_REFRESH,titleNViewSearchInputChanged:Q.ON_NAVIGATION_BAR_SEARCH_INPUT_CHANGED,titleNViewSearchInputConfirmed:Q.ON_NAVIGATION_BAR_SEARCH_INPUT_CONFIRMED,titleNViewSearchInputClicked:Q.ON_NAVIGATION_BAR_SEARCH_INPUT_CLICKED,titleNViewSearchInputFocusChanged:Q.ON_NAVIGATION_BAR_SEARCH_INPUT_FOCUS_CHANGED};function IO(e){let t=parseInt(e.id);Object.keys(yg).forEach(n=>{let r=yg[n];e.addEventListener(n,a=>{r===Q.ON_PULL_DOWN_REFRESH&&Nu(e),gn(t,r,a)})}),CO(e),PO(e),s.os.name==="iOS"&&(TO(e),OO(e))}function NO(e,t,n,r){let a=dg(t,r,e);a.uniPageUrl=mg(t,n);let u=!!r.isTabBar;r.isNVue?a.isTab=u:a.debugRefresh=yO(u,t,n),a.locale=p.requireModule("plus").getLanguage(),e.setStyle(a)}function kO(e,t,n){(n.subNVues||[]).forEach(a=>{if(!a.path)return;let u=is(a.style||{}),g=a.type==="navigationBar",E=a.type==="popup";u.uniNView={path:a.path.replace(".nvue",".js"),defaultFontSize:P.defaultFontSize,viewport:P.viewport};let $={__uniapp_host:t,__uniapp_origin:u.uniNView.path.split("?")[0].replace(".js",""),__uniapp_origin_id:e.id,__uniapp_origin_type:e.__uniapp_type},C;g?(u.position="dock",u.dock="top",u.top="0",u.width="100%",u.height=String(Q.NAVBAR_HEIGHT+Ru()),delete u.left,delete u.right,delete u.bottom,delete u.margin):E&&(u.position="absolute",uh(t)?C=ci:C=e,$.__uniapp_mask=u.mask||"rgba(0,0,0,0.5)",$.__uniapp_mask_id=C.id),delete u.mask;let F=s.webview.create("",a.id,u,$);if(E){C.popupSubNVueWebviews||(C.popupSubNVueWebviews={}),C.popupSubNVueWebviews[F.id]=F;let ue=function(){C.setStyle({mask:"none"}),F.hide("auto")};C.addEventListener("maskClick",ue);let be=!1;F.addEventListener("show",()=>{be||(s.key.removeEventListener("backbutton",vo),s.key.addEventListener("backbutton",ue),be=!0)}),F.addEventListener("hide",()=>{be&&(s.key.removeEventListener("backbutton",ue),s.key.addEventListener("backbutton",vo),be=!1)}),F.addEventListener("close",()=>{delete C.popupSubNVueWebviews[F.id],be&&(s.key.removeEventListener("backbutton",ue),s.key.addEventListener("backbutton",vo),be=!1)})}else e.append(F)})}function RO(e,t,n,r){(e.id==="1"||!r.isNVue)&&NO(e,t,n,r),kO(e,t,r),IO(e)}function wg(e){return e.routeOptions.meta.isNVue?wO(e):gg()===2?s.webview.getLaunchWebview():SO()}function Sg(e,t){ct.once(Bl+"."+e,t)}let va=!1;function Ag(e,t,n){va={path:e,nvue:or(e).isNVue,callback:t}}function Cg(e,t,n){ac(e),Hs(e.$getAppWebview(),t,n)}function $c(e,t,n=!1){if(!n&&va)return console.error(`Waiting to navigate to: ${va.path}, do not operate continuously: ${e}.`);if(P.renderer==="native")return Pn().length===0?Ag(e,t,"waitForReady"):t();let r=!Yi||Yi&&Yi.__uniapp_route,a=Yi&&!Yi.loaded;r||a?Ag(e,t,r?"waitForCreate":"waitForReady"):t(),a&&Sg(Yi.id,Uc)}function Uc(){if(!va)return;let{callback:e}=va;return va=!1,e()}function Og(){if(P.renderer==="native")return va&&va.nvue?Uc():void 0;let e=AO();if(!!va){if(va.nvue)return Uc();e.loaded?va.callback():Sg(e.id,Uc)}}function Hs(e,t,n){e[e.__preload__?"hide":"close"](t,n)}function Hc(e,t,n,r,a){typeof a=="undefined"&&(a=e.nvue?0:100);let u=function(){u._called||(u._called=!0,r&&r(),Og())};u._called=!1,k(()=>{let g=k(()=>{u()},n+150);e.show(t,n,()=>{u._called||y(g),u()})},a)}function xO(e,t){let n=e.children();if(!n||!n.length)return t();let r=n.find(a=>a.id.indexOf(rO)===0)||n[0];r.canBack(({canBack:a})=>{a?r.back():t()})}let BO=Ee(TE,(e,{resolve:t,reject:n})=>{let r=ri();if(!r)return n("getCurrentPages is empty");if(gn(r,Q.ON_BACK_PRESS,{from:e.from}))return t();if(Lt.hideToast(),Lt.hideLoading(),r.$page.meta.isQuit)MO();else if(bg(r))Eg();else{let{delta:a,animationType:u,animationDuration:g}=e;LO(a,u,g)}return t()},IE,VE),jc=0;function MO(){yn(),jc?Date.now()-jc<2e3&&s.runtime.quit():(jc=Date.now(),s.nativeUI.toast(Ye().t("uni.app.quit")),k(()=>{jc=0},2e3))}function LO(e,t,n){let r=Pn(),a=r.length,u=r[a-1];e>1&&r.slice(a-e,a-1).reverse().forEach($=>{Hs(s.webview.getWebviewById($.$page.id+""),"none",0)});let g=function($){t?Hs($,t,n||Fc):u.$page.openType==="redirectTo"?Hs($,lg,Fc):Hs($,"auto"),r.slice(a-e,a).forEach(C=>ac(C)),Qa(),gn(Q.ON_SHOW)},E=s.webview.getWebviewById(u.$page.id+"");if(!u.__uniapp_webview)return g(E);xO(E,()=>{g(E)})}class DO extends Q.UniNode{constructor(t,n,r=!1){super(Q.NODE_TYPE_PAGE,"#page",null);this._id=1,this._created=!1,this._updating=!1,this._createActionMap=new Map,this.updateActions=[],this.dicts=[],this.nodeId=0,this.pageId=t,this.pageNode=this,this.options=n,this.isUnmounted=!1,this.createAction=[Q.ACTION_TYPE_PAGE_CREATE,n],this.createdAction=[Q.ACTION_TYPE_PAGE_CREATED],this.normalizeDict=this._normalizeDict.bind(this),this._update=this.update.bind(this),r&&this.setup()}_normalizeDict(t,n=!0){if(!ne.isPlainObject(t))return this.addDict(t);let r=[];return Object.keys(t).forEach(a=>{let u=[this.addDict(a)],g=t[a];n?u.push(this.addDict(g)):u.push(g),r.push(u)}),r}addDict(t){let{dicts:n}=this,r=n.indexOf(t);return r>-1?r:n.push(t)-1}onInjectHook(t){(t===Q.ON_PAGE_SCROLL||t===Q.ON_REACH_BOTTOM)&&!this.scrollAction&&(this.scrollAction=[Q.ACTION_TYPE_PAGE_SCROLL,this.options.onReachBottomDistance],this.push(this.scrollAction))}onCreate(t,n){return $O(this,t.nodeId,n),t}onInsertBefore(t,n,r){return UO(this,n,t.nodeId,r&&r.nodeId||-1),n}onRemoveChild(t){return HO(this,t.nodeId),t}onAddEvent(t,n,r){t.parentNode&&jO(this,t.nodeId,n,r)}onAddWxsEvent(t,n,r,a){t.parentNode&&zO(this,t.nodeId,n,r,a)}onRemoveEvent(t,n){t.parentNode&&WO(this,t.nodeId,n)}onSetAttribute(t,n,r){t.parentNode&&YO(this,t.nodeId,n,r)}onRemoveAttribute(t,n){t.parentNode&&qO(this,t.nodeId,n)}onTextContent(t,n){t.parentNode&&Pg(this,t.nodeId,n)}onNodeValue(t,n){t.parentNode&&Pg(this,t.nodeId,n)}genId(){return this._id++}push(t,n){if(!this.isUnmounted){switch(t[0]){case Q.ACTION_TYPE_CREATE:this._createActionMap.set(t[1],t);break;case Q.ACTION_TYPE_INSERT:let r=this._createActionMap.get(t[1]);r?(r[3]=t[2],r[4]=t[3],n&&(r[5]=n)):(n&&(t[4]=n),this.updateActions.push(t));break}t[0]!==Q.ACTION_TYPE_INSERT&&this.updateActions.push(t),this._updating||(this._updating=!0,on.queuePostFlushCb(this._update))}}restore(){this.clear(),this.push(this.createAction),this.scrollAction&&this.push(this.scrollAction);let t=n=>{this.onCreate(n,n.nodeName),this.onInsertBefore(n.parentNode,n,null),n.childNodes.forEach(r=>{t(r)})};this.childNodes.forEach(n=>t(n)),this.push(this.createdAction)}setup(){this.send([this.createAction])}update(){let{dicts:t,updateActions:n,_createActionMap:r}=this;this._created||(this._created=!0,n.push(this.createdAction)),n.length&&(t.length&&n.unshift([SC,t]),this.send(n)),this.clear()}clear(){this.dicts.length=0,this.updateActions.length=0,this._updating=!1,this._createActionMap.clear()}send(t){ct.publishHandler(Wh,t,this.pageId)}fireEvent(t,n){let r=Tg(t,this);r&&r.dispatchEvent(n)}}function FO(e){let t=oc(e);return t?t.__page_container__:null}function zu(e,t,n){if(typeof n=="number"&&(n=FO(n)),n[e]===t)return n;let{childNodes:r}=n;for(let a=0;a<r.length;a++){let u=zu(e,t,r[a]);if(u)return u}return null}function Tg(e,t){return zu("nodeId",e,t)}function VO(e,t){return zu("nodeName",e.toUpperCase(),t)}function $O(e,t,n){e.push([Q.ACTION_TYPE_CREATE,t,e.addDict(n),-1,-1])}function UO(e,t,n,r){let a=t.toJSON({attr:!0,normalize:e.normalizeDict});e.push([Q.ACTION_TYPE_INSERT,t.nodeId,n,r],Object.keys(a).length?a:void 0)}function HO(e,t){e.push([Q.ACTION_TYPE_REMOVE,t])}function jO(e,t,n,r){e.push([Q.ACTION_TYPE_ADD_EVENT,t,e.addDict(n),r])}function zO(e,t,n,r,a){e.push([Q.ACTION_TYPE_ADD_WXS_EVENT,t,e.addDict(n),e.addDict(r),a])}function WO(e,t,n){e.push([Q.ACTION_TYPE_REMOVE_EVENT,t,e.addDict(n)])}function GO(e,t,n){return t==="style"&&ne.isPlainObject(n)?e.normalizeDict(n):e.addDict(n)}function YO(e,t,n,r){e.push([Q.ACTION_TYPE_SET_ATTRIBUTE,t,e.addDict(n),GO(e,n,r)])}function qO(e,t,n){e.push([Q.ACTION_TYPE_REMOVE_ATTRIBUTE,t,e.addDict(n)])}function Pg(e,t,n){e.push([Q.ACTION_TYPE_SET_TEXT,t,e.addDict(n)])}function KO(e,t,n){return new DO(e,t,n)}function Ig(e){let t=e.setup;return e.inheritAttrs=!1,e.setup=(n,r)=>{let{attrs:{__pageId:a,__pagePath:u,__pageQuery:g,__pageInstance:E}}=r,C=on.getCurrentInstance().proxy;if(Kt(C,E),Vc(Ng(a,C,E)),on.onMounted(()=>{on.nextTick(()=>{gn(C,Q.ON_READY)})}),on.onBeforeUnmount(()=>{gn(C,Q.ON_UNLOAD)}),t)return t(g,r)},e}function Ng(e,t,n){let r=()=>s.webview.getWebviewById(e+"");return t.$getAppWebview=r,t.$.ctx.$scope={$getAppWebview:r},t.getOpenerEventChannel=()=>(n.eventChannel||(n.eventChannel=new Q.EventChannel(e)),n.eventChannel),t}function JO(e){return ne.isFunction(e)}let kg=new Map;function ZO(e,t){kg.set(e,Q.once(QO(t)))}function XO(e,t,n,r,a){let u=KO(e,a,!0),g=ug(),E=kg.get(t)(),$=C=>g.mountPage(C,{__pageId:e,__pagePath:t,__pageQuery:n,__pageInstance:r},u);return ne.isPromise(E)?E.then(C=>$(C)):$(E)}function QO(e){return()=>JO(e)?e().then(t=>Ig(t)):Ig(e)}let Rg=!1;function xg(){if(Rg)return;Rg=!0;let e,t;if(p.requireModule("plus").getRedirectInfo){let{path:u,query:g,referrerInfo:E}=Ha();u&&(e=u,t=g),P.referrerInfo=E}else{let u=s.runtime.arguments;if(!u)return;try{let g=JSON.parse(u);e=g.path||g.pathName,t=g.query?"?"+g.query:""}catch(g){}}if(!e||e===P.entryPagePath){t&&(P.entryPageQuery=t);return}let r=Q.addLeadingSlash(e),a=Un(r);!a||(a.meta.isTabBar||(P.realEntryPagePath=P.realEntryPagePath||P.entryPagePath),P.entryPagePath=e,P.entryPageQuery=t)}function Bg(e,t){let n=JSON.parse(JSON.stringify(Un(e)));return n.meta=Ii(n.meta),t!=="preloadPage"&&!P.realEntryPagePath&&(t==="reLaunch"||Pn().length===0)?n.meta.isQuit=!0:n.meta.isTabBar||(n.meta.isQuit=!1),n}let Ba={};function eT(e){let t=Object.keys(Ba).find(n=>Ba[n].id===e.id);t&&delete Ba[t]}function tT({url:e}){let t=Ba[e];return t&&(t.__page__&&Pn().find(n=>n===t.__page__)?t.__preload__=!1:t.close("none"),delete Ba[e]),t}function nT({url:e,path:t,query:n}){if(!Ba[e]){let r=Bg(t,"preloadPage");Ba[e]=wg({path:t,routeOptions:r,query:n,webviewExtras:{__preload__:!0}})}return Ba[e]}function sc({url:e,path:t,query:n,openType:r,webview:a,nvuePageVm:u,eventChannel:g}){if(a&&xg(),Ba[e]){a=Ba[e];let be=a;if(be.__page__)if(Pn().find(Ie=>Ie===be.__page__))a=void 0;else return g&&(be.__page__.$page.eventChannel=g),Vc(be.__page__),be}let E=Bg(t,r);a?(a=s.webview.getWebviewById(a.id),a.nvue=E.meta.isNVue):a=wg({path:t,routeOptions:E,query:n}),E.meta.id=parseInt(a.id),!!E.meta.isTabBar&&ci.append(a),RO(a,t,n,E.meta);let C=t.slice(1);a.__uniapp_route=C;let F=Sa(r,e,n,E.meta,g),ue=parseInt(a.id);return a.nvue?u?iT(ue,u,F):oT(ue,a,F):XO(ue,C,n,F,rT(E)),a}function rT({meta:e}){let t=Ru(),{platform:n,pixelRatio:r,windowWidth:a}=ho();return{css:!0,route:e.route,version:1,locale:"",platform:n,pixelRatio:r,windowWidth:a,disableScroll:e.disableScroll===!0,onPageScroll:!1,onPageReachBottom:!1,onReachBottomDistance:ne.hasOwn(e,"onReachBottomDistance")?e.onReachBottomDistance:Q.ON_REACH_BOTTOM_DISTANCE,statusbarHeight:t,windowTop:e.navigationBar.type==="float"?t+Q.NAVBAR_HEIGHT:0,windowBottom:ci.indexOf(e.route)>=0&&ci.cover?ci.height:0}}function iT(e,t,n){Kt(t,n),Vc(Ng(e,t,n)),e===1&&(P.splashscreen&&P.splashscreen.autoclose&&!P.splashscreen.alwaysShowBeforeRender&&s.navigator.closeSplashscreen(),P.onReady(function(){Og()}))}function oT(e,t,n){let r={$:{},$getAppWebview(){return t},getOpenerEventChannel(){return n.eventChannel||(n.eventChannel=new Q.EventChannel(e)),n.eventChannel},__setup(a,u){a.$getAppWebview=()=>t,a.getOpenerEventChannel=u.getOpenerEventChannel,Kt(a,n),t.__preload__&&(t.__page__=a);let g=ju(),E=g.findIndex($=>$===u);E>-1&&g.splice(E,1,a)}};Kt(r,n),t.__preload__?t.__page__=r:Vc(r)}let Mg=(e,{resolve:t,reject:n})=>{let{url:r,events:a,animationType:u,animationDuration:g}=e,{path:E,query:$}=Q.parseUrl(r),[C,F]=lT(E,u,g);$c(E,()=>{sT({url:r,path:E,query:$,events:a,aniType:C,aniDuration:F}).then(t).catch(n)},e.openType==="appLaunch")},aT=Ee(Au,Mg,PE,ME);function sT({url:e,path:t,query:n,events:r,aniType:a,aniDuration:u}){gn(Q.ON_HIDE);let g=new Q.EventChannel(gg()+1,r);return new Promise(E=>{Hc(sc({url:e,path:t,query:n,openType:"navigateTo",eventChannel:g}),a,u,()=>{E({eventChannel:g})}),Qa()})}function lT(e,t,n){let{globalStyle:r}=P,a=or(e);return[t||a.animationType||r.animationType||tO,n||a.animationDuration||r.animationDuration||Fc]}let cT=Ee(Cu,({url:e},{resolve:t,reject:n})=>{let{path:r,query:a}=Q.parseUrl(e);$c(r,()=>{uT({url:e,path:r,query:a}).then(t).catch(n)})},NE,LE);function uT({url:e,path:t,query:n}){let r=ri();return r&&ac(r),new Promise(a=>{Hc(sc({url:e,path:t,query:n,openType:"redirectTo"}),"none",0,()=>{if(r){let u=r.$getAppWebview();u.__preload__&&eT(u),u.close("none")}a(void 0)}),Qa()})}let fT=({url:e},{resolve:t,reject:n})=>{let{path:r,query:a}=Q.parseUrl(e);$c(r,()=>{dT({url:e,path:r,query:a}).then(t).catch(n)})};function dT({url:e,path:t,query:n}){return new Promise(r=>{let a=ju().slice(0);$e.find(g=>g.path===t).meta.isTabBar&&ci.switchTab(t.slice(1)),Hc(sc({url:e,path:t,query:n,openType:"reLaunch"}),"none",0,()=>{a.forEach(g=>Cg(g,"none")),r(void 0)}),Qa()})}let hT=Ee(nh,fT,kE,DE),Lg=(e,{resolve:t,reject:n})=>{let{url:r}=e,{path:a,query:u}=Q.parseUrl(r);$c(a,()=>{pT({url:r,path:a,query:u}).then(t).catch(n)},e.openType==="appLaunch")},gT=Ee(Cc,Lg,RE,FE);function pT({url:e,path:t,query:n}){ci.switchTab(t.slice(1));let r=Pn(),a=r.length,u=!1,g=!1,E;a>=1&&(E=r[a-1],E&&!E.$.__isTabBar?(g=!0,r.reverse().forEach(C=>{!C.$.__isTabBar&&C!==E&&Cg(C,"none")}),ac(E),k(()=>{E.$page.openType==="redirectTo"?Hs(E.$getAppWebview(),lg,Fc):Hs(E.$getAppWebview(),"auto")},100)):u=!0);let $;return ju().forEach(C=>{Q.addLeadingSlash(C.route)===t?(C.$.__isActive||(g=!0),C.$.__isActive=!0,$=C):C.$.__isTabBar&&(C.$.__isActive=!1)}),E===$&&(u=!1),E&&u&&gn(E,Q.ON_HIDE),new Promise(C=>{if($){let F=$.$getAppWebview();F.show("none"),g&&!F.__preload__&&gn($,Q.ON_SHOW),Qa(),C(void 0)}else Hc(sc({url:e,path:t,query:n,openType:"switchTab"}),"none",0,()=>{Qa(),C(void 0)},70)})}let vT=Ft(rh,({url:e})=>{let t=tT({url:e});return t?{id:t.id,url:e,errMsg:"unPreloadPage:ok"}:{url:e,errMsg:"unPreloadPage:fail not found"}},BE),mT=Ee(Ou,({url:e},{resolve:t,reject:n})=>{let r=e.split("?"),a=r[0],u=Q.parseQuery(r[1]||""),g=nT({url:e,path:a,query:u});t({id:g.id,url:e,errMsg:"preloadPage:ok"})},xE);var _T={__proto__:null,sendHostEvent:rg,navigateToMiniProgram:jC,onHostEventReceive:og,onNativeEventReceive:zC,navigateTo:aT,reLaunch:hT,switchTab:gT,upx2px:em,addInterceptor:am,removeInterceptor:sm,interceptors:lm,arrayBufferToBase64:qn,base64ToArrayBuffer:Tn,createIntersectionObserver:e_,createMediaQueryObserver:n_,createSelectorQuery:l_,createVideoContext:Im,createMapContext:km,createAnimation:g_,onWindowResize:__,offWindowResize:b_,onTabBarMidButtonTap:p_,createCanvasContext:Gm,canvasGetImageData:Ym,canvasPutImageData:qm,canvasToTempFilePath:Km,getSelectedTextRange:C_,getLocale:y_,setLocale:S_,$on:vm,$off:_m,$once:mm,$emit:bm,onCreateVueApp:Q.onCreateVueApp,onLocaleChange:w_,setPageMeta:A_,getEnterOptionsSync:D_,getLaunchOptionsSync:F_,getPushCid:$_,onPushMessage:U_,offPushMessage:H_,onAppHide:M_,onAppShow:x_,onError:k_,onPageNotFound:I_,onUnhandledRejection:T_,offAppHide:L_,offAppShow:B_,offError:R_,offPageNotFound:N_,offUnhandledRejection:P_,invokePushCallback:V_,setStorageSync:Ew,setStorage:yw,getStorageSync:ww,getStorage:Sw,removeStorageSync:Aw,removeStorage:Cw,clearStorageSync:Ow,clearStorage:Tw,getStorageInfoSync:fh,getStorageInfo:Pw,getFileInfo:Iw,saveFile:xw,getSavedFileList:Lw,getSavedFileInfo:Dw,removeSavedFile:Fw,openDocument:Vw,getSystemInfoSync:mh,getSystemInfo:qw,onCompassChange:Kw,offCompassChange:Jw,startCompass:_h,stopCompass:bh,vibrateShort:Zw,vibrateLong:Xw,onAccelerometerChange:Qw,offAccelerometerChange:eS,startAccelerometer:Eh,stopAccelerometer:yh,onBluetoothDeviceFound:tS,onBluetoothAdapterStateChange:nS,onBLEConnectionStateChange:rS,onBLECharacteristicValueChange:iS,openBluetoothAdapter:oS,closeBluetoothAdapter:aS,getBluetoothAdapterState:sS,startBluetoothDevicesDiscovery:lS,stopBluetoothDevicesDiscovery:cS,getBluetoothDevices:uS,getConnectedBluetoothDevices:fS,createBLEConnection:dS,closeBLEConnection:hS,getBLEDeviceServices:gS,getBLEDeviceCharacteristics:pS,notifyBLECharacteristicValueChange:vS,readBLECharacteristicValue:mS,writeBLECharacteristicValue:_S,setBLEMTU:bS,getBLEDeviceRSSI:ES,onBeaconUpdate:yS,onBeaconServiceChange:wS,getBeacons:SS,startBeaconDiscovery:AS,stopBeaconDiscovery:CS,makePhoneCall:OS,addPhoneContact:IS,getClipboardData:NS,setClipboardData:kS,onNetworkStatusChange:RS,offNetworkStatusChange:xS,getNetworkType:Ch,checkIsSupportSoterAuthentication:BS,checkIsSoterEnrolledInDevice:MS,startSoterAuthentication:LS,scanCode:DS,onThemeChange:FS,getScreenBrightness:VS,setScreenBrightness:$S,setKeepScreenOn:US,getImageInfo:HS,getVideoInfo:jS,previewImage:zS,closePreviewImage:WS,getRecorderManager:qS,saveVideoToPhotosAlbum:KS,saveImageToPhotosAlbum:JS,compressImage:ZS,compressVideo:XS,chooseImage:eA,chooseVideo:tA,showKeyboard:nA,hideKeyboard:rA,onKeyboardHeightChange:iA,offKeyboardHeightChange:oA,downloadFile:sA,request:fA,configMTLS:dA,connectSocket:vA,sendSocketMessage:mA,closeSocket:_A,onSocketOpen:bA,onSocketError:EA,onSocketMessage:yA,onSocketClose:wA,uploadFile:AA,createInnerAudioContext:xA,getBackgroundAudioManager:zA,createLivePusherContext:YA,getLocation:JA,chooseLocation:ZA,openLocation:XA,showModal:QA,showActionSheet:eC,showLoading:tC,showToast:nC,hideToast:rC,hideLoading:iC,startPullDownRefresh:oC,stopPullDownRefresh:aC,loadFontFace:sC,pageScrollTo:lC,setNavigationBarTitle:cC,showNavigationBarLoading:uC,hideNavigationBarLoading:fC,setNavigationBarColor:hC,setTabBarBadge:gC,setTabBarItem:pC,setTabBarStyle:vC,hideTabBar:mC,showTabBar:_C,showTabBarRedDot:bC,removeTabBarBadge:EC,hideTabBarRedDot:yC,getSubNVueById:TC,restoreGlobal:IC,requireGlobal:NC,getProvider:kC,login:Jh,getUserInfo:RC,getUserProfile:xC,preLogin:Xh,closeAuthView:eg,getCheckBoxState:tg,getUniverifyManager:LC,registerRuntime:DC,share:$C,shareWithSystem:UC,requestPayment:HC,requireNativePlugin:Do,sendNativeEvent:wh,createRewardedVideoAd:YC,createFullScreenVideoAd:KC,createInterstitialAd:ZC,createInteractiveAd:eO,navigateBack:BO,redirectTo:cT,unPreloadPage:vT,preloadPage:mT};let bT=ne.extend(ye,{publishHandler:ET});function ET(e,t,n){t=JSON.stringify(t),ne.isArray(n)||(n=[n]);let r=`typeof UniViewJSBridge !== 'undefined' && UniViewJSBridge.subscribeHandler("${e}",${t},__PAGE_ID__)`;n.forEach(a=>{let u=String(a),g=s.webview.getWebviewById(u);g&&g.evalJS(r.replace("__PAGE_ID__",u))})}function yT(){let{tabBar:e}=P;if(!(e&&e.list&&e.list.length))return;let{entryPagePath:n}=P;e.selectedIndex=0;let r=e.list.findIndex(a=>a.pagePath===n);ci.init(e,(a,u)=>{Lt.switchTab({url:Q.addLeadingSlash(a.pagePath),openType:"switchTab",from:"tabBar",success(){gn(Q.ON_TAB_ITEM_TAP,{index:u,text:a.text,pagePath:a.pagePath})}})}),r!==-1&&(e.selectedIndex=r,r!==0&&ci.switchTab(n))}function wT(){let e=s.globalEvent,t=p.requireModule("globalEvent"),n=ct.emit;p.config.preload?s.key.addEventListener(os,vo):e.addEventListener("splashclosed",()=>{s.key.addEventListener(os,vo)}),e.addEventListener("pause",()=>{n(Q.ON_APP_ENTER_BACKGROUND)}),e.addEventListener("resume",()=>{let a=Ha();a&&a.userAction&&pi(a),n(Q.ON_APP_ENTER_FOREGROUND,Sr())}),t.addEventListener("uistylechange",function(a){let u={theme:a.uistyle};n(Q.ON_THEME_CHANGE,u)});let r=0;e.addEventListener("KeyboardHeightChange",function(a){r!==a.height&&(r=a.height,n(Q.ON_KEYBOARD_HEIGHT_CHANGE,{height:r}))}),t.addEventListener(iO,function(a){a&&a.event&&WC(a.event,a.data)}),e.addEventListener("plusMessage",Dg),e.addEventListener("WebviewPostMessage",Dg)}function Dg({data:e}){e&&e.type&&ct.subscribeHandler("plusMessage."+e.type,e.args)}function Fg(e,t,n=!1){ct.subscribe("plusMessage."+e,t,n)}function ST(e){O_(e.$);let{entryPagePath:t,entryPageQuery:n,referrerInfo:r}=P,a=ca({path:t,query:n,referrerInfo:r});gn(e,Q.ON_LAUNCH,a),gn(e,Q.ON_SHOW,a);let u=p.requireModule("plus").getAppState;(u&&Number(u()))===2&&gn(e,Q.ON_HIDE,a)}function Vg(e){return e=e.replace(/\/$/,""),e.indexOf("_")===0?s.io.convertLocalFileSystemURL(e):e}function AT(){let e=Vg(Ca),t=Vg(Bi),n=t.split("/");n.pop();let r=n.join("/");s.io.resolveLocalFileSystemURL(s.io.convertAbsoluteFileSystem(r),a=>{a.createReader().readEntries(function(g){let E=g;E&&E.length&&E.forEach(function($){$.isDirectory&&$.fullPath.indexOf(e)===0&&$.fullPath.indexOf(t)!==0&&$.removeRecursively()})})})}function CT(e,t,n){n.fireEvent(e,t)}function OT(e,t){let n=oc(parseInt(t));if(!n)return;let r=n.__page_container__;e.forEach(a=>{switch(a[0]){case Q.ACTION_TYPE_EVENT:CT(a[1],a[2],r);break}})}let $g={};function TT(e,t,n){let{adpid:r,width:a}=e,u=r+"-"+a,g=$g[u];if(g&&g.length>0){t(g.splice(0,1)[0]);return}s.ad.getAds(e,E=>{let $=E.ads;t($.splice(0,1)[0]),$g[u]=g?g.concat($):$},E=>{n({errCode:E.code,errMsg:E.message})})}function PT(){pe("getAdData",(e,t)=>{TT(e,n=>{t({code:0,data:n})},n=>{t({code:1,message:n})})})}let IT=["switchTab","reLaunch","redirectTo","navigateTo","navigateBack"];function NT(){IT.forEach(e=>{pe(e,t=>{Lt[e](ne.extend(t,{fail(n){console.error(n.errMsg)}}))})})}let Ug=!1;function kT(e,t){let n=t==="1";if(!(n&&Ug)){if(n?(Ug=!0,_g(s.webview.getLaunchWebview())):Yi||_g(s.webview.getWebviewById(t)),Yi.id!==t)return console.error(`webviewReady[${Yi.id}][${t}] not match`);Yi.loaded=!0,ct.emit(Bl+"."+t),n&&RT()}}function RT(){let{autoclose:e,alwaysShowBeforeRender:t}=P.splashscreen;e&&!t&&s.navigator.closeSplashscreen();let n=Q.addLeadingSlash(P.entryPagePath),r=Un(n);if(!r.meta.isNVue){let a={url:n+(P.entryPageQuery||""),openType:"appLaunch"},u={resolve(){},reject(){}};return r.meta.isTabBar?Lg(a,u):Mg(a,u)}}function xT(e,t){let n=oc(parseInt(t));n&&(n.__uniapp_webview=!0)}function BT(e,t){let n=oc(parseInt(t));n&&delete n.__uniapp_webview}let MT=({name:e,arg:t},n)=>{e==="postMessage"?LT(n[0],t):Lt[e](ne.extend(t,{fail(r){console.error(r.errMsg)}}))};function LT(e,t){let n=VO("web-view",parseInt(e));n&&n.dispatchEvent(Q.createUniEvent({type:"onMessage",target:Object.create(null),currentTarget:Object.create(null),detail:{data:[t]}}))}function DT({nodeId:e,ownerId:t,method:n,args:r},a){let u=Tg(e,parseInt(a));if(!u)return;let g=FT(t,u.__vueParentComponent);!g||!g[n]||g[n](r)}function FT(e,t){if(!t)return null;if(t.uid===e)return t.proxy;let n=t.parent;for(;n;){if(n.uid===e)return n.proxy;n=n.parent}return t.proxy}function VT(){let{subscribe:e,subscribeHandler:t,publishHandler:n}=ct;if(Fg("subscribeHandler",({type:r,data:a,pageId:u})=>{t(r,a,u)}),Fg(Q.WEB_INVOKE_APPSERVICE,({data:r,webviewIds:a})=>{MT(r,a)}),P.renderer!=="native"){e(Bl,kT),e(Wh,OT),se(),PT(),NT(),e(AC,xT),e(CC,BT),e(Q.ON_WXS_INVOKE_CALL_METHOD,DT);let r=Un(Q.addLeadingSlash(P.entryPagePath));r&&!r.meta.isNVue&&n(Bl,{},1)}}let Ml,Wu={globalData:{}};function $T({allowDefault:e=!1}={}){if(Ml)return Ml;if(e)return Wu;console.error("[warn]: getApp() failed. Learn more: https://uniapp.dcloud.io/collocation/frame/window?id=getapp.")}function UT(e){if(Lt.Vuex&&e.$store){let{useStore:t}=Lt.Vuex;Lt.Vuex.useStore=n=>n?t(n):e.$store}oO(e),Ml=e,tn(Ml),ne.extend(Ml,Wu),zt(Ml,Wu.globalData),wt(),xg(),yT(),wT(),VT(),ST(e),k(AT,1e4),P.ready=!0}var HT={uni:_T,getApp:$T,getCurrentPages:aO,__definePage:ZO,__registerApp:UT,__registerPage:sc,UniServiceJSBridge:bT};return HT}(Nt,bn,A);x=x.default||x;let Lt=x.uni,Hn=x.getApp,Pn=x.getCurrentPages,ct=x.UniServiceJSBridge;return x}var Sp=A1(T1);var df,hf,gf,rs,pf,vf,mf;function Ap(){return rs?{__definePage:df,__registerApp:hf,__registerPage:gf,uni:rs,wx:rs,getApp:pf,getCurrentPages:vf,UniServiceJSBridge:mf}:{}}function Cp(p){let{weex:s,plus:m,VueShared:A}=p;return rs||({__definePage:df,__registerApp:hf,__registerPage:gf,uni:rs,getApp:pf,getCurrentPages:vf,UniServiceJSBridge:mf}=wp(s,m,p),rs.VueShared=A,Wg(rs)),{__definePage:df,__registerApp:hf,__registerPage:gf,plus:m,uni:rs,wx:rs,getApp:pf,getCurrentPages:vf,UniServiceJSBridge:mf}}function Op(p,s){let{__uniConfig:m}=s;if(!m)return;let A=s.weex;A.document.__$automator__=!!m.automator;let k=m.renderer!=="native"&&A.config.bundleUrl.indexOf("app-service.js")!==-1;if(Jr(s,Ap()),k?Sp(s):(Kg(p,s),pp(s.Vue.parseClassStyles)),Jr(s,Cp(s)),A.config.plus_web_id==="1"){let P=A.requireModule("plus");P.setDefaultFontSize&&P.setDefaultFontSize(Math.round(s.plus.screen.resolutionWidth/20))}let{scale:y,deviceWidth:I,platform:f}=global.WXEnvironment;if(f.toLowerCase()==="ios"){let P=Math.ceil(I/y);A.requireModule("meta").setViewport({width:P,roundOffDeviation:!1})}}var qs=class extends Ys{constructor(s){super();this.nodeType=8;this.type="comment";this.value="";this.value=s}toString(){return"<!-- "+this.value+" -->"}};function wo(p,s=[]){return{module:"dom",method:p,args:s}}var Ul=class{constructor(s,m){this.id=s,this.batched=!1,this.updates=[],Vn(m)?Object.defineProperty(this,"handler",{configurable:!0,enumerable:!0,writable:!0,value:m}):console.error("[JS Runtime] invalid parameter, handler must be a function")}createFinish(s){return this.handler([wo("createFinish")],s)}updateFinish(s){return this.handler([wo("updateFinish")],s)}refreshFinish(s){return this.handler([wo("refreshFinish")],s)}createBody(s){let m=s.toJSON(),A=m.children;delete m.children;let k=[wo("createBody",[m])];return A&&k.push.apply(k,A.map(y=>wo("addElement",[m.ref,y,-1]))),this.addActions(k)}addElement(s,m,A){return A>=0||(A=-1),this.addActions(wo("addElement",[m,s.toJSON(),A]))}removeElement(s){if(_i(s)){let m=s.map(A=>wo("removeElement",[A]));return this.addActions(m)}return this.addActions(wo("removeElement",[s]))}moveElement(s,m,A){return this.addActions(wo("moveElement",[s,m,A]))}setAttr(s,m,A){return this.addActions(wo("updateAttrs",[s,{[m]:A}]))}setStyle(s,m,A){return this.addActions(wo("updateStyle",[s,{[m]:A}]))}setStyles(s,m){return this.addActions(wo("updateStyle",[s,m]))}addEvent(s,m){return this.addActions(wo("addEvent",[s,m]))}removeEvent(s,m){return this.addActions(wo("removeEvent",[s,m]))}handler(s,m){return m&&m()}addActions(s){let m=this.updates,A=this.handler;if(_i(s)||(s=[s]),this.batched)m.push.apply(m,s);else return A(s)}};var _f={createBody:"callCreateBody",addElement:"callAddElement",removeElement:"callRemoveElement",moveElement:"callMoveElement",updateAttrs:"callUpdateAttrs",updateStyle:"callUpdateStyle",addEvent:"callAddEvent",removeEvent:"callRemoveEvent"};function Tp(p,s){let m=s||global.callNative;return Vn(m)||console.error("[JS Runtime] no default handler"),function(k){_i(k)||(k=[k]);for(let y=0;y<k.length;y++){let I=I1(p,k[y],m);if(I===-1)return I}}}function P1(p,s){return p==="dom"&&_f[s]&&Vn(global[_f[s]])}function I1(p,s,m){let{module:A,method:k,args:y}=s;return P1(A,k)?global[_f[k]](p,...y,"-1"):m(p,[s],"-1")}var au=class extends qi{constructor(s){super();this.value=s,this.nodeType=3,this.type="text",this.value=""}toString(){return""+this.value}};var Pp={slider:{change:function(p){return{index:p.index,source:p.source}},scroll:function(p){return{offsetXRatio:p.offsetXRatio,offsetYRatio:p.offsetYRatio,drag:p.drag}}},"scroll-view":{scrollend:function(p){return{contentOffset:p.contentOffset}}}};function Ip(p){let{attr:s,offsetLeft:m,offsetTop:A}=p,k={};return s&&Object.keys(s).forEach(y=>{y.indexOf("data-")===0&&(k[y.replace("data-","")]=s[y])}),{id:s&&s.id||"",dataset:k,offsetLeft:m||0,offsetTop:A||0}}var N1=["a","div","list","cell","loading","refresh","recycle-list","scroller","indicator","waterfall","web","richtext"],k1=["viewappear","viewdisappear"],R1={markertap:["markerId"],controltap:["controlId"],regionchange:["causedBy"],end:["causedBy"],appear:["direction"],disappear:["direction"]};function Np(p,s){let m=p.type;if(k1.indexOf(m)!==-1)return p;let A=p.currentTarget,k=A.type.replace("u-","");if(N1.indexOf(k)!==-1)return p;let{timestamp:y,target:I}=p;if(!s){let $e=Pp[k];$e?Vn($e[m])?s=$e[m](p):s=p.detail||{}:s=p.detail||{}}let f={type:m,timeStamp:y,target:Ip(I),currentTarget:Ip(A),detail:s,touches:m==="touchend"||m==="panend"?[]:p.changedTouches,changedTouches:p.changedTouches};p.componentId&&(f.componentId=p.componentId);let P=R1[m];return P&&P.forEach($e=>{js(p,$e)&&(f[$e]=p[$e])}),f}function x1(p,s){let m=s.attrs||{};for(let k in m)p.setAttr(k,m[k],!0);let A=s.style||{};for(let k in A)p.setStyle(k,A[k],!0)}var Fo=class{constructor(s,m="",A){s=s?s.toString():"",this.id=s,this.URL=m,sp(s,this),this.nodeMap={};let k=Fo.Listener||Ul;this.listener=new k(s,A||Tp(s,Fo.handler)),this.taskCenter=new $l(s,A?(y,I)=>A(I):Fo.handler),this.createDocumentElement()}getRef(s){return this.nodeMap[s]}open(){this.listener.batched=!1}close(){this.listener.batched=!0}createDocumentElement(){if(!this.documentElement){let s=new qi("document");s.docId=this.id,s.ownerDocument=this,s.role="documentElement",s.ref="_documentElement",this.nodeMap._documentElement=s,this.documentElement=s,Object.defineProperty(s,"appendChild",{configurable:!0,enumerable:!0,writable:!0,value:m=>{Zu(this,m)}}),Object.defineProperty(s,"insertBefore",{configurable:!0,enumerable:!0,writable:!0,value:(m,A)=>{Zu(this,m,A)}}),Gn("debug")&&Li(`Create document element (id: "${s.docId}", ref: "${s.ref}")`)}return this.documentElement}createBody(s,m){if(!this.body){let A=new qi(s,m);Xu(this,A),Gn("debug")&&Li(`[createBody](${this.id},${A.type},${A.ref}) (${JSON.stringify(A.toJSON(!0))}).`)}return this.body}createElement(s,m){let A=new qi(s,m);return Gn("debug")&&Li(`[createElement](${this.id},${A.type},${A.ref}) (${JSON.stringify(A.toJSON(!0))}).`),A}createComment(s){return new qs(s)}createText(s){return new au(s)}fireEvent(s,m,A,k,y){if(!s)return;A=A||{},A.type=A.type||m,A.target=s,A.currentTarget=s,A.timestamp=Date.now(),k&&x1(s,k);let I,f=this.getRef("_root");if(f&&f.attr){let P=f.attr.bubble;I=P==="true"||P===!0}return A=Np(A),s.fireEvent(m,A,I,y)}destroy(){Gn("debug")&&Li(`[destroy](${this.id},document) Destroy document (id: "${this.id}", URL: "${this.URL}")`),this.taskCenter.destroyCallback(),delete this.listener,delete this.nodeMap,delete this.taskCenter,lp(this.id)}};Fo.handler=null;var kp={InputElementDiv:"<WhiteSpace>|<LineTerminator>|<ReservedWord>|<Identifier>|<NumericLiteral>|<Punctuator>|<StringLiteral>",InputElementRegExp:"<WhiteSpace>|<LineTerminator>|<ReservedWord>|<Identifier>|<NumericLiteral>|<Punctuator>|<StringLiteral>",ReservedWord:"<Keyword>|<NullLiteral>|<BooleanLiteral>",WhiteSpace:/[\t\v\f\u0020\u00A0\u1680\u180E\u2000-\u200A\u202F\u205f\u3000\uFEFF]/,LineTerminator:/[\n\r\u2028\u2029]/,Keyword:/new(?![_$a-zA-Z0-9])|void(?![_$a-zA-Z0-9])|delete(?![_$a-zA-Z0-9])|in(?![_$a-zA-Z0-9])|instanceof(?![_$a-zA-Z0-9])|typeof(?![_$a-zA-Z0-9])/,NullLiteral:/null(?![_$a-zA-Z0-9])/,BooleanLiteral:/(?:true|false)(?![_$a-zA-Z0-9])/,Identifier:/[_$a-zA-Z][_$a-zA-Z0-9]*/,Punctuator:/\/|=>|\*\*|>>>=|>>=|<<=|===|!==|>>>|<<|%=|\*=|-=|\+=|<=|>=|==|!=|\^=|\|=|\|\||&&|&=|>>|\+\+|--|\:|}|\*|&|\||\^|!|~|-|\+|\?|%|=|>|<|,|;|\.(?![0-9])|\]|\[|\)|\(|{/,DivPunctuator:/\/=|\//,NumericLiteral:/(?:0[xX][0-9a-fA-F]*|\.[0-9]+|(?:[1-9]+[0-9]*|0)(?:\.[0-9]*|\.)?)(?:[eE][+-]{0,1}[0-9]+)?(?![_$a-zA-Z0-9])/,StringLiteral:/"(?:[^"\n\\\r\u2028\u2029]|\\(?:['"\\bfnrtv\n\r\u2028\u2029]|\r\n)|\\x[0-9a-fA-F]{2}|\\u[0-9a-fA-F]{4}|\\[^0-9ux'"\\bfnrtv\n\\\r\u2028\u2029])*"|'(?:[^'\n\\\r\u2028\u2029]|\\(?:['"\\bfnrtv\n\r\u2028\u2029]|\r\n)|\\x[0-9a-fA-F]{2}|\\u[0-9a-fA-F]{4}|\\[^0-9ux'"\\bfnrtv\n\\\r\u2028\u2029])*'/,RegularExpressionLiteral:/\/(?:\[(?:\\[\s\S]|[^\]])*\]|[^*\/\\\n\r\u2028\u2029]|\\[^\n\r\u2028\u2029])(?:\[(?:\\[\s\S]|[^\]])*\]|[^\/\\\n\r\u2028\u2029]|\\[^\n\r\u2028\u2029])*\/[0-9a-zA-Z]*/};function Rp(p,s,m){var A=[s];function k(I){var f=new RegExp;return f.compile(I.replace(/<([^>]+)>/g,function(P,$e){return p[$e]?(A.push($e),p[$e]instanceof RegExp?"("+p[$e].source+")":"("+k(p[$e]).source+")"):""}),m),f}var y=k(p[s]);this.exec=function(I){var f=y.exec(I);if(f==null)return null;for(var P=new String(f[0]),$e=0;$e<A.length;$e++)f[$e]&&(P[A[$e]]=f[$e]);return P},Object.defineProperty(this,"lastIndex",{get:function(){return y.lastIndex},set:function(I){y.lastIndex=I}})}function B1(){var p=new Rp(kp,"InputElementDiv","g"),s=new Rp(kp,"InputElementRegExp","g"),m;Object.defineProperty(this,"source",{get:function(){return m},set:function(A){m=A,p.lastIndex=0,s.lastIndex=0}}),this.reset=function(){p.lastIndex=0,s.lastIndex=0},this.getNextToken=function(A){var k=p.lastIndex,y;A?y=p:y=s;var I=y.exec(m);if(I&&y.lastIndex-k>I.length)throw new SyntaxError("Unexpected token ILLEGAL");return p.lastIndex=y.lastIndex,s.lastIndex=y.lastIndex,I}}var xp={IdentifierName:[["Identifier"]],Literal:[["NullLiteral"],["BooleanLiteral"],["NumericLiteral"],["StringLiteral"],["RegularExpressionLiteral"]],PrimaryExpression:[["Identifier"],["Literal"],["(","Expression",")"]],CallExpression:[["PrimaryExpression","Arguments"],["CallExpression","Arguments"]],Arguments:[["(",")"],["(","ArgumentList",")"]],ArgumentList:[["ConditionalExpression"],["ArgumentList",",","ConditionalExpression"]],LeftHandSideExpression:[["PrimaryExpression"],["CallExpression"]],UnaryExpression:[["LeftHandSideExpression"],["void","UnaryExpression"],["+","UnaryExpression"],["-","UnaryExpression"],["~","UnaryExpression"],["!","UnaryExpression"]],ExponentiationExpression:[["UnaryExpression"],["ExponentiationExpression","**","UnaryExpression"]],MultiplicativeExpression:[["MultiplicativeExpression","/","ExponentiationExpression"],["ExponentiationExpression"],["MultiplicativeExpression","*","ExponentiationExpression"],["MultiplicativeExpression","%","ExponentiationExpression"]],AdditiveExpression:[["MultiplicativeExpression"],["AdditiveExpression","+","MultiplicativeExpression"],["AdditiveExpression","-","MultiplicativeExpression"]],ShiftExpression:[["AdditiveExpression"],["ShiftExpression","<<","AdditiveExpression"],["ShiftExpression",">>","AdditiveExpression"],["ShiftExpression",">>>","AdditiveExpression"]],RelationalExpression:[["ShiftExpression"],["RelationalExpression","<","ShiftExpression"],["RelationalExpression",">","ShiftExpression"],["RelationalExpression","<=","ShiftExpression"],["RelationalExpression",">=","ShiftExpression"],["RelationalExpression","instanceof","ShiftExpression"],["RelationalExpression","in","ShiftExpression"]],EqualityExpression:[["RelationalExpression"],["EqualityExpression","==","RelationalExpression"],["EqualityExpression","!=","RelationalExpression"],["EqualityExpression","===","RelationalExpression"],["EqualityExpression","!==","RelationalExpression"]],BitwiseANDExpression:[["EqualityExpression"],["BitwiseANDExpression","&","EqualityExpression"]],BitwiseXORExpression:[["BitwiseANDExpression"],["BitwiseXORExpression","^","BitwiseANDExpression"]],BitwiseORExpression:[["BitwiseXORExpression"],["BitwiseORExpression","|","BitwiseXORExpression"]],LogicalANDExpression:[["BitwiseORExpression"],["LogicalANDExpression","&&","BitwiseORExpression"]],LogicalORExpression:[["LogicalANDExpression"],["LogicalORExpression","||","LogicalANDExpression"]],ConditionalExpression:[["LogicalORExpression"],["LogicalORExpression","?","LogicalORExpression",":","LogicalORExpression"]],Expression:[["ConditionalExpression"],["Expression",",","ConditionalExpression"]],Program:[["Expression"]]};function hc(p,s){this.name=p,this.token=s,this.childNodes=[],this.toString=function(m){if(m||(m=""),this.childNodes.length==1)return this.childNodes[0].toString(m);for(var A=m+this.name+(this.token!=null&&this.name!=this.token?":"+this.token:"")+`
`,k=0;k<this.childNodes.length;k++)A+=this.childNodes[k].toString(m+"    ");return A}}function M1(){var p,s={Program:"$"},m={};function A(f){m[JSON.stringify(f)]=f;for(var P=Object.getOwnPropertyNames(f);P.length;){var $e=P.shift();!xp[$e]||xp[$e].forEach(function(bn){f[bn[0]]||P.push(bn[0]);var x=f,Lt=null;bn.forEach(function(Hn){x[Hn]||(x[Hn]={}),Lt=x,x=x[Hn]}),f[$e].$div&&(x.$div=!0),x.$reduce=$e,x.$count=bn.length})}for(var Nt in f)typeof f[Nt]!="object"||Nt.charAt(0)=="$"||f[Nt].$closure||(m[JSON.stringify(f[Nt])]?f[Nt]=m[JSON.stringify(f[Nt])]:A(f[Nt]));f.$closure=!0}A(s);var k=[],y=[s],I=s;this.insertSymbol=function(P,$e){for(;!I[P.name]&&I.$reduce;){for(var Nt=I.$count,bn=new hc(I.$reduce);Nt--;)bn.childNodes.push(k.pop()),y.pop();I=y[y.length-1],this.insertSymbol(bn)}if(I=I[P.name],k.push(P),y.push(I),!I)throw new Error;return I.$div},this.reset=function(){I=s,k=[],y=[s]},Object.defineProperty(this,"grammarTree",{get:function(){try{for(;I.$reduce;){for(var f=I.$count,P=new hc(I.$reduce);f--;)P.childNodes.push(k.pop()),y.pop();I=y[y.length-1],this.insertSymbol(P)}if(k.length>0&&I[";"])return this.insertSymbol(new hc(";",";")),this.grammarTree;if(k.length!=1||k[0].name!="Program")throw new Error}catch($e){throw new SyntaxError("Unexpected end of input")}return k[0]}})}function L1(){this.lexicalParser=new B1,this.syntacticalParser=new M1;var p=["NullLiteral","BooleanLiteral","NumericLiteral","StringLiteral","RegularExpressionLiteral","Identifier","**","=>","{","}","(",")","[","]",".",";",",","<",">","<=",">=","==","!=","===","!==","+","-","*","%","++","--","<<",">>",">>>","&","|","^","!","~","&&","||","?",":","=","+=","-=","*=","%=","<<=",">>=",">>>=","&=","|=","^=","/","/=","instanceof","typeof","new","void","debugger","this","delete","in"],s={};p.forEach(function(m){Object.defineProperty(s,m,{})}),this.reset=function(){this.lexicalParser.reset(),this.syntacticalParser.reset()},this.parse=function(m,A){var k,y=!1;this.lexicalParser.source=m;for(var I=!1;k=this.lexicalParser.getNextToken(I);){A&&A(k);try{if(Object.getOwnPropertyNames(k).some(f=>s.hasOwnProperty(f)?(I=this.syntacticalParser.insertSymbol(new hc(f,k),y),y=!1,!0):!1))continue;(k.Keyword||k.Punctuator||k.DivPunctuator)&&s.hasOwnProperty(k.toString())&&(I=this.syntacticalParser.insertSymbol(new hc(k.toString(),k),y))}catch(f){throw new SyntaxError("Unexpected token "+k)}}return this.syntacticalParser.grammarTree}}var Bp=new L1;function D1(p){Bp.reset(),this.tree=Bp.parse(p),this.paths=[];var s=Object.create(null),m=this,A=Object.create(null);this.isSimple,this.isConst,y(this.tree),k(this.tree),this.paths.length===0&&(this.isConst=!0),this.setter=function(P){for(var $e=s,Nt=0;Nt<P.length-1;Nt++)$e[P[Nt]]||($e[P[Nt]]=Object.create(null)),$e=$e[P[Nt]];return{isCompleted:function(){for(var bn in A)if(!A[bn])return!1;return!0},set:function(bn){if(A[P.join(".")]||(A[P.join(".")]=!0),$e[P[Nt]]=bn,this.isCompleted())return m.exec()}}},this.valueOf=this.exec=function(){try{return function(){return(0,eval)(p)}.call(s)}catch(P){}};function k(P){for(var $e=P;$e.childNodes.length<=1&&$e.name!=="MemberExpression";)$e=$e.childNodes[0];$e.name==="MemberExpression"?m.isSimple=!0:m.isSimple=!1}function y(P){if(P.name==="CallExpression"&&P.childNodes[P.childNodes.length-1].name!=="CallExpression"){var $e=I(P.childNodes[1]);y(P.childNodes[0])}else if(P.name==="NewExpression"&&P.childNodes.length===1)var $e=I(P.childNodes[0]);else if(P.name==="MemberExpression"&&P.childNodes.length===1)var $e=I(P);else for(var Nt=0;Nt<P.childNodes.length;Nt++)y(P.childNodes[Nt])}function I(P){if(P.childNodes[0].name==="IdentifierName"){var $e=I(P.childNodes[2]);return $e&&($e=$e.concat(P.childNodes[0].childNodes[0].token.toString())),f($e),$e}else if(P.childNodes[0].name==="PrimaryExpression")if(P.childNodes[0].childNodes[0].name==="Identifier"){var $e=[P.childNodes[0].childNodes[0].token.toString()];return f($e),$e}else return null;else{if(P.childNodes[0].name==="]")return I(P.childNodes[3]),y(P.childNodes[1]),null;if(P.childNodes[0].name==="Arguments")return y(P.childNodes[0]),y(P.childNodes[1]),null;for(var Nt=0;Nt<P.childNodes.length;Nt++)y(P.childNodes[Nt])}}function f(P){for(var $e=s,Nt=0;Nt<P.length-1;Nt++)$e[P[Nt]]||($e[P[Nt]]=Object.create(null)),$e=$e[P[Nt]];m.paths.push(P),A[P.join(".")]=!1}}function Ks(p){var s=p.childNodes.slice().reverse(),m=s.filter(P=>!P.token||!P.token.Punctuator);if(p.name==="UnaryExpression"&&s.length===2&&s[0].name==="-"&&m.length===1){var A=Ks(m[0]);return A.value=-A.value,A}if(p.name==="Arguments"){for(var k=[],y=m[0];y;)y.childNodes.length===3&&(k.unshift(y.childNodes[0]),y=y.childNodes[2]),y.childNodes.length===1&&(k.unshift(y.childNodes[0]),y=null);return{type:"Arguments",children:k.map(P=>Ks(P))}}if(m&&m.length===1){var A=Ks(m[0]);return A}if(p.token&&["NullLiteral","BooleanLiteral","NumericLiteral","StringLiteral","Identifier"].some(P=>p.token[P])){var I=Object.keys(p.token).filter(P=>P.match(/Literal/)||P.match(/Identifier/))[0],f={NullLiteral:null,BooleanLiteral:Boolean(p.token),NumericLiteral:Number(p.token),StringLiteral:p.token,Identifier:p.token}[I];return{type:I,value:f}}return p.name==="CallExpression"?{type:"CallExpression",children:[Ks(s[0]),Ks(s[1])]}:{type:s.filter(P=>P.token&&P.token.Punctuator)[0].name,children:s.filter(P=>!P.token||!P.token.Punctuator).map(P=>Ks(P))}}function Mp(p){var s=new D1(p);return JSON.stringify(Ks(s.tree),null)}function F1(p,s){return s==="bind"&&(p==="bindingx"||p==="binding")}function Lp(p){if(!p)return;try{p=JSON.parse(p)}catch(m){}let s={};if(bi(p)?s.origin=p:p&&(s.origin=p.origin,s.transformed=p.transformed),!(!s.transformed&&!s.origin))return s.transformed=s.transformed||Mp(s.origin),s}function V1(p){return p&&(p.exitExpression=Lp(p.exitExpression),p.props&&p.props.forEach(s=>{s.expression=Lp(s.expression)}),p)}function $1(p){return function(s={}){if(Vn(p))return p({state:s.state==="end"?"exit":s.state,t:s.t!==void 0?s.t:s.deltaT})}}function Dp(p,s,m){return m&&(F1(p,s)?function(A,k=function(){}){if(!A)throw new Error("should pass options for binding");return V1(A),m(A,A&&A.eventType==="timing"?$1(k):k)}:m)}function U1(p,s){Object.defineProperty(p,"[[CurrentInstanceId]]",{value:s})}function Fp(p){return p["[[CurrentInstanceId]]"]}function H1(p,s,m){let A=xr(p);return!A||!Vn(A.send)?(console.error(`[JS Framework] Failed to find taskCenter (${p}).`),null):(...k)=>A.send("module",{module:s,method:m},k)}function j1(p,s,m,A){let k=xr(p);return!k||!Vn(k.send)?(console.error(`[JS Framework] Failed to find taskCenter (${p}).`),null):Vn(A)?y=>k.send("module",{module:s,method:m},[y]):(console.error(`[JS Framework] ${s}.${m} must be assigned as a function.`),null)}var su=class{constructor(s,m){U1(this,String(s)),this.config=m||{},this.document=new Fo(s,this.config.bundleUrl),this.requireModule=this.requireModule.bind(this),this.importScript=this.importScript.bind(this),this.isRegisteredModule=ru,this.isRegisteredComponent=uf}requireModule(s){let m=Fp(this);if(!(m&&this.document&&this.document.taskCenter)){console.error(`[JS Framework] Failed to requireModule("${s}"), instance (${m}) doesn't exist anymore.`);return}if(!ru(s)){console.warn(`[JS Framework] \u5F53\u524D\u8FD0\u884C\u7684\u57FA\u5EA7\u4E0D\u5305\u542B\u539F\u751F\u63D2\u4EF6[${s}]\uFF0C\u8BF7\u5728manifest\u4E2D\u914D\u7F6E\u8BE5\u63D2\u4EF6\uFF0C\u91CD\u65B0\u5236\u4F5C\u5305\u62EC\u8BE5\u539F\u751F\u63D2\u4EF6\u7684\u81EA\u5B9A\u4E49\u8FD0\u884C\u57FA\u5EA7`);return}let A={},k=Ep(s);for(let y in k)Object.defineProperty(A,y,{enumerable:!0,configurable:!0,get:()=>Dp(s,y,H1(m,s,y)),set:I=>j1(m,s,y,I)});return A}supports(s){if(!bi(s))return null;let m=s.match(/^@(\w+)\/([\w-]+)(\.(\w+))?$/i);if(m){let A=m[1],k=m[2],y=m[4];switch(A){case"module":return ru(k,y);case"component":return uf(k)}}return null}importScript(s,m={}){let A=Fp(this),k=xr(A);return new Promise(function(y,I){if(!k||!Vn(k.send))return I(new Error(`[JS Framework] Failed to import script "${s}", no taskCenter (${A}) matched.`));try{k.send("module",{module:"script",method:"importScript"},[s,m],{callback:[f=>y(f),f=>I(f)]})}catch(f){I(f)}})}};function z1(p,s){let m=Object.create(null);return m.service=Object.create(null),Es.forEach(({name:A,options:k})=>{let y=k.create;if(y)try{let I=y(p,s);Jr(m.service,I),Jr(m,I.instance)}catch(I){console.error(`[JS Runtime] Failed to create service ${A}.`)}}),delete m.service.instance,_a(m.service),m}var W1={uid:0},G1=rp(cc),Y1=np(cc);function Vp(p,s,m){let A=new su(p,s),k="Vue",y=z1(p,{weex:A,nvue:A,config:s,created:Date.now(),framework:k});_a(y);let I=Object.create(null);return Jr(I,eI(A)),Jr(I,y,{SharedObject:W1,weex:A,nvue:A,requireModule:f=>A.requireModule(f),__WEEX_CALL_JAVASCRIPT__:lf,services:y}),I.plus=new I.WeexPlus(A),I.VueShared=cc,I.UniShared=G1,I.VueReactivity=Y1,Op(p,I),_a(I),I}function q1(p,s,m={}){let A="Vue";m=Ku(m),m.env=Ku(global.WXEnvironment||{}),m.bundleType=A;let k=Vp(p,m);K1(s,k)}function K1(p,s){let m=[],A=[];for(let y in s)m.push(y),A.push(s[y]);let k="(function (global) { "+p+" })(Object.create(this))";return new Function(...m,k)(...A)}function J1(p){let s=ns(p);try{if(s&&s.body)return s.body.toJSON()}catch(m){console.error("[JS Framework] Failed to get the virtual dom tree.");return}}function Z1(p){Yg(p),Es.forEach(s=>{let m=s.options.destroy;m&&m(p)})}function X1(p){qg(p),Es.forEach(s=>{let m=s.options.refresh;m&&m(p)})}var Q1={createInstance:q1,createInstanceContext:Vp,getRoot:J1,getDocument:ns,registerService:iu,unregisterService:ou,callJS(p,s){return lf(p,s)},registerComponents:yp,registerModules:bp,destroyInstance:Z1,refreshInstance:X1};function bf(){return _p(),Q1}function eI(p){if(global.setTimeout&&global.setInterval)return{setTimeout:global.setTimeout,setInterval:global.setInterval,clearTimeout:global.clearTimeout,clearInterval:global.clearInterval};let s=p.requireModule("timer");return{setTimeout:(...A)=>{let k=function(){A[0](...A.slice(2))};return s.setTimeout(k,A[1]),p.document.taskCenter.callbackManager.lastCallbackId.toString()},setInterval:(...A)=>{let k=function(){A[0](...A.slice(2))};return s.setInterval(k,A[1]),p.document.taskCenter.callbackManager.lastCallbackId.toString()},clearTimeout:A=>{s.clearTimeout(A)},clearInterval:A=>{s.clearInterval(A)}}}var $p={Document:Fo,Element:qi,Comment:qs,Listener:Ul,TaskCenter:$l,sendTasks(...p){return Vn(callNative)?callNative(...p):(global.callNative||(()=>{}))(...p)}};Fo.handler=$p.sendTasks;var Js=$p;function tI(){_a(Js.Comment),_a(Js.Listener),_a(Js.Document.prototype),_a(Js.Comment.prototype),_a(Js.Listener.prototype)}var lu={service:{register:iu,unregister:ou,has:ff},freezePrototype:tI,init:bf,config:Js};var Ef=class{constructor(s,m={}){this.type=s||"message",this.data=m.data||null,this.origin=m.origin||"",this.source=m.source||null,this.ports=m.ports||[],this.target=null,this.timeStamp=Date.now()}};var ys={},gc={};function yf(){}yf.prototype.postMessage=function(p){if(this._closed)throw new Error(`BroadcastChannel "${this.name}" is closed.`);let s=ys[this.name];if(s&&s.length)for(let m=0;m<s.length;++m){let A=s[m];A._closed||A===this||Vn(A.onmessage)&&A.onmessage(new Ef("message",{data:p}))}};yf.prototype.close=function(){if(!this._closed&&(this._closed=!0,ys[this.name])){let p=ys[this.name].filter(s=>s!==this);p.length?ys[this.name]=p:delete ys[this.name]}};var Up={create:p=>{if(gc[p]=[],Vn(global.BroadcastChannel))return{};let s={BroadcastChannel:function(m){Object.defineProperty(this,"name",{configurable:!1,enumerable:!0,writable:!1,value:String(m)}),this._closed=!1,this.onmessage=null,ys[this.name]||(ys[this.name]=[]),ys[this.name].push(this),gc[p].push(this)}};return s.BroadcastChannel.prototype=yf.prototype,{instance:s}},destroy:p=>{gc[p]&&(gc[p].forEach(s=>s.close()),delete gc[p])}};function wf(){let{init:p}=lu;lu.service.register("BroadcastChannel",Up),lu.freezePrototype();let s=p();for(let m in s)global[m]=(...A)=>{let k=s[m](...A);return k instanceof Error&&console.error(k.toString()),k}}var Wk=global.console;function Hp(){if(op(),global.WXEnvironment&&global.WXEnvironment.platform!=="Web")global.console={debug:(...p)=>{Gn("debug")&&global.nativeLog(...pc(p),"__DEBUG")},log:(...p)=>{Gn("log")&&global.nativeLog(...pc(p),"__LOG")},info:(...p)=>{Gn("info")&&global.nativeLog(...pc(p),"__INFO")},warn:(...p)=>{Gn("warn")&&global.nativeLog(...pc(p),"__WARN")},error:(...p)=>{Gn("error")&&global.nativeLog(...pc(p),"__ERROR")}};else{let{debug:p,log:s,info:m,warn:A,error:k}=console;console.__ori__={debug:p,log:s,info:m,warn:A,error:k},console.debug=(...y)=>{Gn("debug")&&console.__ori__.debug.apply(console,y)},console.log=(...y)=>{Gn("log")&&console.__ori__.log.apply(console,y)},console.info=(...y)=>{Gn("info")&&console.__ori__.info.apply(console,y)},console.warn=(...y)=>{Gn("warn")&&console.__ori__.warn.apply(console,y)},console.error=(...y)=>{Gn("error")&&console.__ori__.error.apply(console,y)}}}function pc(p){return p.map(s=>{if(ts(s).toLowerCase()==="[object object]")try{s=JSON.stringify(s)}catch(A){s="[object object]"}else s=String(s);return s})}Hp();wf();})();
