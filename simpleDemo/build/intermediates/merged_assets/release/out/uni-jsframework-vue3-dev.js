//{"version":"3.4.7","encode":"base64"}
var __UniServiceStartTime__ = Date.now();var global=this; var process={env:{}}; var setTimeout=global.setTimeout;
(()=>{var jT=Object.defineProperty;var WT=(v,l)=>{for(var b in l)jT(v,b,{get:l[b],enumerable:!0})};var is=Object.freeze;function cu({getCurrentPages:v,uni:l,UniShared:b,Vue:O,VueShared:x}){var S=function(k,u,P,We){"use strict";function At(){let Re=v(),ct=Re.length;if(ct)return Re[ct-1]}function an(){let Re=At();if(Re)return Re.$vm}function A(Re,ct,St){if(u.isString(Re))St=ct,ct=Re,Re=an();else if(typeof Re=="number"){let mn=v().find(un=>un.$page.id===Re);mn?Re=mn.$vm:Re=an()}if(!Re)return;if(Re.__call_hook)return Re.__call_hook(ct,St);let Kt=Re.$[ct];return Kt&&P.invokeArrayFns(Kt,St)}function ce(Re,ct,St,Kt){u.isFunction(ct)&&We.injectHook(Re,ct.bind(St),Kt)}function Kn(Re,ct,St){let Kt=Re.mpType||St.$mpType;if(!!Kt&&(Object.keys(Re).forEach(mn=>{if(mn.indexOf("on")===0){let un=Re[mn];u.isArray(un)?un.forEach(Tr=>ce(mn,Tr,St,ct)):ce(mn,un,St,ct)}}),Kt==="page")){ct.__isVisible=!0;try{A(St,P.ON_LOAD,ct.attrs.__pageQuery),delete ct.attrs.__pageQuery,A(St,P.ON_SHOW)}catch(mn){console.error(mn.message+P.LINEFEED+mn.stack)}}}function Un(Re,ct){bt(ct,Re.$renderjs,Re["$"+P.RENDERJS_MODULES])}function bt(Re,ct,St={}){if(!u.isArray(ct))return;let Kt=Re.uid,mn=Re.$wxsModules||(Re.$wxsModules=[]),un=Re.ctx;ct.forEach(Tr=>{St[Tr]&&(un[Tr]=se(Kt,St[Tr],Tr),mn.push(Tr))})}function se(Re,ct,St){let Kt={};return new Proxy(Kt,{get(mn,un){return Kt[un]||(Kt[un]=re(Re,ct,St,un))}})}function re(Re,ct,St,Kt){let mn=()=>{},un=()=>P.WXS_PROTOCOL+JSON.stringify([Re,ct,St+"."+Kt]);return new Proxy(mn,{get(Tr,ri){return ri==="toJSON"?un:mn[ri]||(mn[ri]=re(Re,ct,St+"."+Kt,ri))},apply(Tr,ri,Jr){return P.WXS_PROTOCOL+JSON.stringify([Re,ct,St+"."+Kt,[...Jr]])}})}function Gt(Re,ct){bt(ct,Re.$wxs,Re["$"+P.WXS_MODULES])}function $t(Re,ct,St){Gt(Re,ct),Un(Re,ct),Kn(Re,ct,St)}function en(Re,ct,St){return Re[ct]=St}function Or(Re,ct,St){if(!ct)throw Re;let Kt=getApp();if(!Kt||!Kt.$vm)throw Re;A(Kt.$vm,P.ON_ERROR,Re)}function Vr(Re,ct){return Re?[...new Set([].concat(Re,ct))]:ct}function pr(Re){P.UniLifecycleHooks.forEach(ct=>{Re[ct]=Vr})}let Pn,qt="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",cn=/^(?:[A-Za-z\d+/]{4})*?(?:[A-Za-z\d+/]{2}(?:==)?|[A-Za-z\d+/]{3}=?)?$/;typeof atob!="function"?Pn=function(Re){if(Re=String(Re).replace(/[\t\n\f\r ]+/g,""),!cn.test(Re))throw new Error("Failed to execute 'atob' on 'Window': The string to be decoded is not correctly encoded.");Re+="==".slice(2-(Re.length&3));for(var ct,St="",Kt,mn,un=0;un<Re.length;)ct=qt.indexOf(Re.charAt(un++))<<18|qt.indexOf(Re.charAt(un++))<<12|(Kt=qt.indexOf(Re.charAt(un++)))<<6|(mn=qt.indexOf(Re.charAt(un++))),St+=Kt===64?String.fromCharCode(ct>>16&255):mn===64?String.fromCharCode(ct>>16&255,ct>>8&255):String.fromCharCode(ct>>16&255,ct>>8&255,ct&255);return St}:Pn=atob;function Jn(Re){return decodeURIComponent(Pn(Re).split("").map(function(ct){return"%"+("00"+ct.charCodeAt(0).toString(16)).slice(-2)}).join(""))}function Dn(){let Re=l.getStorageSync("uni_id_token")||"",ct=Re.split(".");if(!Re||ct.length!==3)return{uid:null,role:[],permission:[],tokenExpired:0};let St;try{St=JSON.parse(Jn(ct[1]))}catch(Kt){throw new Error("\u83B7\u53D6\u5F53\u524D\u7528\u6237\u4FE1\u606F\u51FA\u9519\uFF0C\u8BE6\u7EC6\u9519\u8BEF\u4FE1\u606F\u4E3A\uFF1A"+Kt.message)}return St.tokenExpired=St.exp*1e3,delete St.exp,delete St.iat,St}function rr(Re){Re.uniIDHasRole=function(ct){let{role:St}=Dn();return St.indexOf(ct)>-1},Re.uniIDHasPermission=function(ct){let{permission:St}=Dn();return this.uniIDHasRole("admin")||St.indexOf(ct)>-1},Re.uniIDTokenValid=function(){let{tokenExpired:ct}=Dn();return ct>Date.now()}}function Gn(Re){let ct=Re._context.config;u.isFunction(Re._component.onError)&&(ct.errorHandler=Or),pr(ct.optionMergeStrategies);let St=ct.globalProperties;rr(St),St.$set=en,St.$applyOptions=$t,P.invokeCreateVueAppHook(Re)}return k.initApp=Gn,Object.defineProperty(k,"__esModule",{value:!0}),k}({},x,b,O);return S}function zu(v,{nvue:l,UniShared:b,VueShared:O,VueReactivity:x}){let S={platform:l.config.env.platform,UniShared:b,VueShared:O,VueReactivity:x};return v(S,l.document)}function zT({setTimeout:v,clearTimeout:l,uni:b,getCurrentPages:O,Vue:x,weex:S,plus:k,BroadcastChannel:u,UniViewJSBridge:P,VueShared:We,UniShared:At}){var an=function(A,ce,Kn){"use strict";let Un=["navigate","redirect","switchTab","reLaunch","navigateBack"],bt={hoverClass:{type:String,default:"navigator-hover"},url:{type:String,default:""},openType:{type:String,default:"navigate",validator(_){return Boolean(~Un.indexOf(_))}},delta:{type:Number,default:1},hoverStartTime:{type:[Number,String],default:50},hoverStayTime:{type:[Number,String],default:600},exists:{type:String,default:""},hoverStopPropagation:{type:Boolean,default:!1}};function se(_){return()=>{if(_.openType!=="navigateBack"&&!_.url){console.error("<navigator/> should have url attribute when using navigateTo, redirectTo, reLaunch or switchTab");return}switch(_.openType){case"navigate":b.navigateTo({url:_.url});break;case"redirect":b.redirectTo({url:_.url,exists:_.exists});break;case"switchTab":b.switchTab({url:_.url});break;case"reLaunch":b.reLaunch({url:_.url});break;case"navigateBack":b.navigateBack({delta:_.delta});break}}}function re(_){if(_.hoverClass&&_.hoverClass!=="none"){let L={hoverClass:_.hoverClass};return ce.hasOwn(_,"hoverStartTime")&&(L.hoverStartTime=_.hoverStartTime),ce.hasOwn(_,"hoverStayTime")&&(L.hoverStayTime=_.hoverStayTime),ce.hasOwn(_,"hoverStopPropagation")&&(L.hoverStopPropagation=_.hoverStopPropagation),L}return{}}function Gt(_,L){return A.createElementVNode("u-text",ce.extend({appendAsTree:!0},L),_)}let $t=[{"navigator-hover":{"":{backgroundColor:"rgba(0,0,0,0.1)",opacity:.7}}}];var en=A.defineComponent({name:"Navigator",props:bt,styles:$t,setup(_,{slots:L}){let z=se(_);return()=>A.createVNode("view",A.mergeProps(re(_),{onClick:z}),[L.default&&L.default()])}});function Or(_){return Symbol(_)}function Vr(){return A.getCurrentInstance().root.proxy.$page.id}let pr,Pn,qt;function cn(){return typeof window=="object"&&typeof navigator=="object"&&typeof document=="object"?"webview":"v8"}function Jn(){return pr.webview.currentWebview().id}let Dn,rr,Gn={};function Re(_){let L=_.data&&_.data.__message;if(!L||!L.__page)return;let z=L.__page,j=Gn[z];j&&j(L),L.keep||delete Gn[z]}function ct(_,L){cn()==="v8"?qt?(Dn&&Dn.close(),Dn=new qt(Jn()),Dn.onmessage=Re):rr||(rr=Pn.requireModule("globalEvent"),rr.addEventListener("plusMessage",Re)):window.__plusMessage=Re,Gn[_]=L}class St{constructor(L){this.webview=L}sendMessage(L){let z=JSON.parse(JSON.stringify({__message:{data:L}})),j=this.webview.id;qt?new qt(j).postMessage(z):pr.webview.postMessageToUniNView&&pr.webview.postMessageToUniNView(z,j)}close(){this.webview.close()}}function Kt({context:_={},url:L,data:z={},style:j={},onMessage:X,onClose:ee}){pr=_.plus||k,Pn=_.weex||(typeof S=="object"?S:null),qt=_.BroadcastChannel||(typeof u=="object"?u:null);let ue={autoBackButton:!0,titleSize:"17px"},be=`page${Date.now()}`;j=ce.extend({},j),j.titleNView!==!1&&j.titleNView!=="none"&&(j.titleNView=ce.extend(ue,j.titleNView));let Me={top:0,bottom:0,usingComponents:{},popGesture:"close",scrollIndicator:"none",animationType:"pop-in",animationDuration:200,uniNView:{path:`/${L}.js`,defaultFontSize:16,viewport:pr.screen.resolutionWidth}};j=ce.extend(Me,j);let Ue=pr.webview.create("",be,j,{extras:{from:Jn(),runtime:cn(),data:z,useGlobalEvent:!qt}});return Ue.addEventListener("close",ee),ct(be,ye=>{typeof X=="function"&&X(ye.data),ye.keep||Ue.close("auto")}),Ue.show(j.animationType,j.animationDuration),new St(Ue)}let mn={for:{type:String,default:""}},un=Or("ul");function Tr(){let _=[];return A.provide(un,{addHandler(L){_.push(L)},removeHandler(L){_.splice(_.indexOf(L),1)}}),_}var ri=A.defineComponent({name:"Label",props:mn,styles:[],setup(_,{slots:L}){let z=Vr(),j=Tr(),X=ee=>{_.for?P.emit(`uni-label-click-${z}-${_.for}`,ee,!0):j.length&&j[0](ee,!0)};return()=>A.createVNode("view",{onClick:X},[L.default&&L.default()])}});function Jr(_,L){_i(_.id,L),A.watch(()=>_.id,(z,j)=>{gr(j,L,!0),_i(z,L,!0)}),A.onUnmounted(()=>{gr(_.id,L)})}function _i(_,L,z){let j=Vr();z&&!_||!ce.isPlainObject(L)||Object.keys(L).forEach(X=>{z?X.indexOf("@")!==0&&X.indexOf("uni-")!==0&&P.on(`uni-${X}-${j}-${_}`,L[X]):X.indexOf("uni-")===0?P.on(X,L[X]):_&&P.on(`uni-${X}-${j}-${_}`,L[X])})}function gr(_,L,z){let j=Vr();z&&!_||!ce.isPlainObject(L)||Object.keys(L).forEach(X=>{z?X.indexOf("@")!==0&&X.indexOf("uni-")!==0&&P.off(`uni-${X}-${j}-${_}`,L[X]):X.indexOf("uni-")===0?P.off(X,L[X]):_&&P.off(`uni-${X}-${j}-${_}`,L[X])})}function bo(_){return Object.keys(_).map(L=>[L,_[L]])}let oo=["class","style"],yo=/^on[A-Z]+/,ao=(_={})=>{let{excludeListeners:L=!1,excludeKeys:z=[]}=_,j=A.getCurrentInstance(),X=A.shallowRef({}),ee=A.shallowRef({}),ue=A.shallowRef({}),be=z.concat(oo);return j.attrs=A.reactive(j.attrs),A.watchEffect(()=>{let Me=bo(j.attrs).reduce((Ue,[ye,Ve])=>(be.includes(ye)?Ue.exclude[ye]=Ve:yo.test(ye)?(L||(Ue.attrs[ye]=Ve),Ue.listeners[ye]=Ve):Ue.attrs[ye]=Ve,Ue),{exclude:{},attrs:{},listeners:{}});X.value=Me.attrs,ee.value=Me.listeners,ue.value=Me.exclude}),{$attrs:X,$listeners:ee,$excludeAttrs:ue}},zi={id:{type:String,default:""},hoverClass:{type:String,default:"button-hover"},hoverStartTime:{type:[Number,String],default:20},hoverStayTime:{type:[Number,String],default:70},hoverStopPropagation:{type:Boolean,default:!1},disabled:{type:[Boolean,String],default:!1},formType:{type:String,default:""},openType:{type:String,default:""},loading:{type:[Boolean,String],default:!1},plain:{type:[Boolean,String],default:!1}},ur=Or("uf"),Yi=[{ub:{"":{flexDirection:"row",alignItems:"center",justifyContent:"center",position:"relative",paddingLeft:"5",paddingRight:"5",overflow:"hidden",color:"#000000",backgroundColor:"#f8f8f8",borderRadius:"5",borderStyle:"solid",borderWidth:"1",borderColor:"#dbdbdb"}},"ub-t":{"":{color:"#000000",fontSize:"18",textDecoration:"none",lineHeight:"46"}},"ub-d":{"":{backgroundColor:"#f8f8f8"}},"ub-p":{"":{backgroundColor:"#007aff",borderColor:"#0062cc"}},"ub-w":{"":{backgroundColor:"#e64340",borderColor:"#b83633"}},"ub-d-t":{"":{color:"#000000"}},"ub-p-t":{"":{color:"#ffffff"}},"ub-w-t":{"":{color:"#ffffff"}},"ub-d-d":{"":{backgroundColor:"#f7f7f7"}},"ub-p-d":{"":{backgroundColor:"#63acfc",borderColor:"#4f8aca"}},"ub-w-d":{"":{backgroundColor:"#ec8b89",borderColor:"#bd6f6e"}},"ub-d-t-d":{"":{color:"#cccccc"}},"ub-p-t-d":{"":{color:"rgba(255,255,255,0.6)"}},"ub-w-t-d":{"":{color:"rgba(255,255,255,0.6)"}},"ub-d-plain":{"":{borderColor:"#353535",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-plain":{"":{borderColor:"#007aff",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-plain":{"":{borderColor:"#e64340",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-t-plain":{"":{color:"#353535"}},"ub-p-t-plain":{"":{color:"#007aff"}},"ub-w-t-plain":{"":{color:"#e64340"}},"ub-d-d-plain":{"":{borderColor:"#c6c6c6",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-d-plain":{"":{borderColor:"#c6c6c6",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-d-plain":{"":{borderColor:"#c6c6c6",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-t-d-plain":{"":{color:"rgba(0,0,0,0.2)"}},"ub-p-t-d-plain":{"":{color:"rgba(0,0,0,0.2)"}},"ub-w-t-d-plain":{"":{color:"rgba(0,0,0,0.2)"}},"ub-mini":{"":{lineHeight:"30",fontSize:"13",paddingTop:0,paddingRight:"17.5",paddingBottom:0,paddingLeft:"17.5"}},"ub-loading":{"":{width:"18",height:"18",marginRight:"10"}},"ub-d-loading":{"":{color:"rgba(255,255,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-loading":{"":{color:"rgba(255,255,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-loading":{"":{color:"rgba(255,255,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-loading-plain":{"":{color:"#353535"}},"ub-p-loading-plain":{"":{color:"#007aff",backgroundColor:"#0062cc"}},"ub-w-loading-plain":{"":{color:"#e64340",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-hover":{"":{opacity:.8,backgroundColor:"#dedede"}},"ub-p-hover":{"":{opacity:.8,backgroundColor:"#0062cc"}},"ub-w-hover":{"":{opacity:.8,backgroundColor:"#ce3c39"}},"ub-d-t-hover":{"":{color:"rgba(0,0,0,0.6)"}},"ub-p-t-hover":{"":{color:"rgba(255,255,255,0.6)"}},"ub-w-t-hover":{"":{color:"rgba(255,255,255,0.6)"}},"ub-d-hover-plain":{"":{color:"rgba(53,53,53,0.6)",borderColor:"rgba(53,53,53,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-hover-plain":{"":{color:"rgba(26,173,25,0.6)",borderColor:"rgba(0,122,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-hover-plain":{"":{color:"rgba(230,67,64,0.6)",borderColor:"rgba(230,67,64,0.6)",backgroundColor:"rgba(0,0,0,0)"}}}],so={default:"d",primary:"p",warn:"w"};var Rr=A.defineComponent({inheritAttrs:!1,name:"Button",props:ce.extend(zi,{type:{type:String,default:"default"},size:{type:String,default:"default"}}),styles:Yi,setup(_,{slots:L,attrs:z}){let{$attrs:j,$excludeAttrs:X,$listeners:ee}=ao({excludeListeners:!0}),ue=_.type,be=A.ref(null),Me=A.inject(ur,!1),Ue=(mt,ht)=>{let Mt=ee.value.onClick||(()=>{});if(_.disabled)return;Mt(mt);let Cn=_.formType;if(Cn){if(!Me)return;Cn==="submit"?Me.submit(mt):Cn==="reset"&&Me.reset(mt)}},ye=mt=>{let ht="ub-"+so[ue]+mt;return _.disabled&&(ht+="-d"),_.plain&&(ht+="-plain"),_.size==="mini"&&mt==="-t"&&(ht+=" ub-mini"),ht},Ve=mt=>{if(_.disabled)return"";let ht="ub-"+so[ue]+mt+"-hover";return _.plain&&(ht+="-plain"),ht},lt=A.inject(un,!1);lt&&(lt.addHandler(Ue),A.onBeforeUnmount(()=>{lt.removeHandler(Ue)})),Jr(_,{"label-click":Ue});let Et=A.computed(()=>{let mt={};for(let ht in ee.value){let Mt=ee.value[ht];ht!=="onClick"&&(mt[ht]=Mt)}return mt}),Wt=()=>{if(!L.default)return[];let mt=L.default();return mt.length===1&&mt[0].type===A.Text?[Gt(mt[0].children,{class:"ub-t "+ye("-t")})]:mt};return()=>{let mt=ce.extend({},re(_),{hoverClass:Ve("")},j.value,X.value,Et.value);return A.createVNode("view",A.mergeProps({ref:be,class:["ub",ye("")],onClick:Ue},mt),[_.loading?A.createVNode("loading-indicator",A.mergeProps({class:["ub-loading",`ub-${so[ue]}-loading`]},{arrow:"false",animating:"true"}),null):null,...Wt()])}}});let Pr={scaleArea:{type:Boolean,default:!1}};function ir(_){let L=[];return Array.isArray(_)&&_.forEach(z=>{A.isVNode(z)?z.type===A.Fragment?L.push(...ir(z.children)):L.push(z):Array.isArray(z)&&L.push(...ir(z))}),L}function Gi(_){let L=Object.create(null);return function(j){return L[j]||(L[j]=_(j))}}let Vo=Gi(function(_){let L={},z=/;(?![^(]*\))/g,j=/:(.+)/;return _.split(z).forEach(function(X){if(X){let ee=X.split(j);ee.length>1&&(L[ee[0].trim()]=ee[1].trim())}}),L}),vr=_=>new Promise((L,z)=>{if(!_)return L({width:0,height:0,top:0,left:0});S.requireModule("dom").getComponentRect(_,({size:X})=>{L(X)})});var bi=A.defineComponent({name:"MovableArea",props:Pr,styles:[{"uni-movable-area":{"":{width:"10px",height:"10px"}}}],setup(_,{slots:L}){let z=A.ref(0),j=A.ref(0),X=A.ref(0),ee=A.ref(0),ue=A.ref(!1),be=A.ref(null),Me=[],Ue=null,ye=ht=>{Ue=ht},Ve=()=>vr(be.value).then(({width:ht,height:Mt,top:Cn,left:Ht})=>{z.value=ht,j.value=Mt,X.value=Cn,ee.value=Ht}),lt=()=>{Ve().then(()=>{Me.forEach(function(ht){ht.setParent()})})};A.onMounted(()=>{v(()=>{ue.value=!0,lt()},200)});let Et={onPanstart(ht){Ue&&Ue.touchstart(ht)},onPanmove(ht){ht.stopPropagation(),Ue&&Ue.touchmove(ht)},onPanend(ht){Ue&&Ue.touchend(ht)}},Wt=ht=>{Me.push(ht)},mt=ht=>{let Mt=Me.indexOf(ht);Mt>=0&&Me.splice(Mt,1)};return A.provide("_isMounted",ue),A.provide("parentSize",{width:z,height:j,top:X,left:ee}),A.provide("addMovableViewContext",Wt),A.provide("removeMovableViewContext",mt),A.provide("setTouchMovableViewContext",ye),()=>{let ht=L.default&&L.default(),Mt=ir(ht);return A.createVNode("div",A.mergeProps({ref:be,class:"uni-movable-area"},Et),[Mt])}}});function Ni(_){let L={};function z(ye,Ve){L[ye]&&L[ye](Ve)}function j(ye,Ve){L[ye]=function(lt){typeof Ve=="function"&&(lt.touches=lt.changedTouches,Ve(lt)===!1&&lt.stopPropagation())}}let X=0,ee=0,ue=0,be=0,Me=function(ye,Ve,lt,Et){if(_({target:ye.target,currentTarget:ye.currentTarget,stopPropagation:ye.stopPropagation.bind(ye),touches:ye.touches,changedTouches:ye.changedTouches,detail:{state:Ve,x:lt,y:Et,dx:lt-X,dy:Et-ee,ddx:lt-ue,ddy:Et-be,timeStamp:ye.timeStamp||Date.now()}})===!1)return!1},Ue=null;return j("touchstart",function(ye){if(!Ue)return Ue=ye,X=ue=ye.touches[0].pageX,ee=be=ye.touches[0].pageY,Me(ye,"start",X,ee)}),j("touchmove",function(ye){if(Ue){let Ve=Me(ye,"move",ye.touches[0].pageX,ye.touches[0].pageY);return ue=ye.touches[0].pageX,be=ye.touches[0].pageY,Ve}}),j("touchend",function(ye){if(Ue)return Ue=null,Me(ye,"end",ye.changedTouches[0].pageX,ye.changedTouches[0].pageY)}),{touchstart:function(ye){z("touchstart",ye)},touchmove:function(ye){z("touchmove",ye)},touchend:function(ye){z("touchend",ye)}}}function Hn(_,L){return(z,j)=>{_.value&&L(z,ki(z,_.value,j||{}))}}function ki(_,L,z={}){return L=yi(L),{type:_,timeStamp:Date.now(),target:L,currentTarget:L,detail:z}}let Eo=Kn.cacheStringFunction(_=>_.charAt(0).toLowerCase()+_.slice(1));function yi(_){let{offsetLeft:L,offsetTop:z}=_,j=_.attr,X={};return Object.keys(j||{}).forEach(ee=>{ee.indexOf("data")===0&&(X[Eo(ee.replace("data",""))]=j[ee])}),{id:j&&j.id||"",dataset:X,offsetLeft:L||0,offsetTop:z||0}}function $r(_,L,z){return _>L-z&&_<L+z}function Zn(_,L){return $r(_,0,L)}function Ur(){}Ur.prototype.x=function(_){return Math.sqrt(_)};function Ln(_,L){this._m=_,this._f=1e3*L,this._startTime=0,this._v=0}Ln.prototype.setV=function(_,L){let z=Math.pow(Math.pow(_,2)+Math.pow(L,2),.5);this._x_v=_,this._y_v=L,this._x_a=-this._f*this._x_v/z,this._y_a=-this._f*this._y_v/z,this._t=Math.abs(_/this._x_a)||Math.abs(L/this._y_a),this._lastDt=null,this._startTime=new Date().getTime()},Ln.prototype.setS=function(_,L){this._x_s=_,this._y_s=L},Ln.prototype.s=function(_){_===void 0&&(_=(new Date().getTime()-this._startTime)/1e3),_>this._t&&(_=this._t,this._lastDt=_);let L=this._x_v*_+.5*this._x_a*Math.pow(_,2)+this._x_s,z=this._y_v*_+.5*this._y_a*Math.pow(_,2)+this._y_s;return(this._x_a>0&&L<this._endPositionX||this._x_a<0&&L>this._endPositionX)&&(L=this._endPositionX),(this._y_a>0&&z<this._endPositionY||this._y_a<0&&z>this._endPositionY)&&(z=this._endPositionY),{x:L,y:z}},Ln.prototype.ds=function(_){return _===void 0&&(_=(new Date().getTime()-this._startTime)/1e3),_>this._t&&(_=this._t),{dx:this._x_v+this._x_a*_,dy:this._y_v+this._y_a*_}},Ln.prototype.delta=function(){return{x:-1.5*Math.pow(this._x_v,2)/this._x_a||0,y:-1.5*Math.pow(this._y_v,2)/this._y_a||0}},Ln.prototype.dt=function(){return-this._x_v/this._x_a},Ln.prototype.done=function(){let _=$r(this.s().x,this._endPositionX)||$r(this.s().y,this._endPositionY)||this._lastDt===this._t;return this._lastDt=null,_},Ln.prototype.setEnd=function(_,L){this._endPositionX=_,this._endPositionY=L},Ln.prototype.reconfigure=function(_,L){this._m=_,this._f=1e3*L};function xr(_,L,z){this._m=_,this._k=L,this._c=z,this._solution=null,this._endPosition=0,this._startTime=0}xr.prototype._solve=function(_,L){let z=this._c,j=this._m,X=this._k,ee=z*z-4*j*X;if(ee===0){let ye=-z/(2*j),Ve=_,lt=L/(ye*_);return{x:function(Et){return(Ve+lt*Et)*Math.pow(Math.E,ye*Et)},dx:function(Et){let Wt=Math.pow(Math.E,ye*Et);return ye*(Ve+lt*Et)*Wt+lt*Wt}}}if(ee>0){let ye=(-z-Math.sqrt(ee))/(2*j),Ve=(-z+Math.sqrt(ee))/(2*j),lt=(L-ye*_)/(Ve-ye),Et=_-lt;return{x:function(Wt){let mt,ht;return Wt===this._t&&(mt=this._powER1T,ht=this._powER2T),this._t=Wt,mt||(mt=this._powER1T=Math.pow(Math.E,ye*Wt)),ht||(ht=this._powER2T=Math.pow(Math.E,Ve*Wt)),Et*mt+lt*ht},dx:function(Wt){let mt,ht;return Wt===this._t&&(mt=this._powER1T,ht=this._powER2T),this._t=Wt,mt||(mt=this._powER1T=Math.pow(Math.E,ye*Wt)),ht||(ht=this._powER2T=Math.pow(Math.E,Ve*Wt)),Et*ye*mt+lt*Ve*ht}}}let ue=Math.sqrt(4*j*X-z*z)/(2*j),be=-z/2*j,Me=_,Ue=(L-be*_)/ue;return{x:function(ye){return Math.pow(Math.E,be*ye)*(Me*Math.cos(ue*ye)+Ue*Math.sin(ue*ye))},dx:function(ye){let Ve=Math.pow(Math.E,be*ye),lt=Math.cos(ue*ye),Et=Math.sin(ue*ye);return Ve*(Ue*ue*lt-Me*ue*Et)+be*Ve*(Ue*Et+Me*lt)}}},xr.prototype.x=function(_){return _===void 0&&(_=(new Date().getTime()-this._startTime)/1e3),this._solution?this._endPosition+this._solution.x(_):0},xr.prototype.dx=function(_){return _===void 0&&(_=(new Date().getTime()-this._startTime)/1e3),this._solution?this._solution.dx(_):0},xr.prototype.setEnd=function(_,L,z){if(z||(z=new Date().getTime()),_!==this._endPosition||!Zn(L,.1)){L=L||0;let j=this._endPosition;this._solution&&(Zn(L,.1)&&(L=this._solution.dx((z-this._startTime)/1e3)),j=this._solution.x((z-this._startTime)/1e3),Zn(L,.1)&&(L=0),Zn(j,.1)&&(j=0),j+=this._endPosition),this._solution&&Zn(j-_,.1)&&Zn(L,.1)||(this._endPosition=_,this._solution=this._solve(j-this._endPosition,L),this._startTime=z)}},xr.prototype.snap=function(_){this._startTime=new Date().getTime(),this._endPosition=_,this._solution={x:function(){return 0},dx:function(){return 0}}},xr.prototype.done=function(_){return _||(_=new Date().getTime()),$r(this.x(),this._endPosition,.1)&&Zn(this.dx(),.1)},xr.prototype.reconfigure=function(_,L,z){this._m=_,this._k=L,this._c=z,this.done()||(this._solution=this._solve(this.x()-this._endPosition,this.dx()),this._startTime=new Date().getTime())},xr.prototype.springConstant=function(){return this._k},xr.prototype.damping=function(){return this._c},xr.prototype.configuration=function(){function _(z,j){z.reconfigure(1,j,z.damping())}function L(z,j){z.reconfigure(1,z.springConstant(),j)}return[{label:"Spring Constant",read:this.springConstant.bind(this),write:_.bind(this,this),min:100,max:1e3},{label:"Damping",read:this.damping.bind(this),write:L.bind(this,this),min:1,max:500}]};function lo(_,L,z){this._springX=new xr(_,L,z),this._springY=new xr(_,L,z),this._springScale=new xr(_,L,z),this._startTime=0}lo.prototype.setEnd=function(_,L,z,j){let X=new Date().getTime();this._springX.setEnd(_,j,X),this._springY.setEnd(L,j,X),this._springScale.setEnd(z,j,X),this._startTime=X},lo.prototype.x=function(){let _=(new Date().getTime()-this._startTime)/1e3;return{x:this._springX.x(_),y:this._springY.x(_),scale:this._springScale.x(_)}},lo.prototype.done=function(){let _=new Date().getTime();return this._springX.done(_)&&this._springY.done(_)&&this._springScale.done(_)},lo.prototype.reconfigure=function(_,L,z){this._springX.reconfigure(_,L,z),this._springY.reconfigure(_,L,z),this._springScale.reconfigure(_,L,z)};let co={direction:{type:String,default:"none"},inertia:{type:[Boolean,String],default:!1},outOfBounds:{type:[Boolean,String],default:!1},x:{type:[Number,String],default:0},y:{type:[Number,String],default:0},damping:{type:[Number,String],default:20},friction:{type:[Number,String],default:2},disabled:{type:[Boolean,String],default:!1},scale:{type:[Boolean,String],default:!1},scaleMin:{type:[Number,String],default:.5},scaleMax:{type:[Number,String],default:10},scaleValue:{type:[Number,String],default:1},animation:{type:[Boolean,String],default:!0}};function qi(_,L){return+((1e3*_-1e3*L)/1e3).toFixed(1)}function wo(_,L,z){let j={id:0,cancelled:!1},X=function(ue){ue&&ue.id&&ga(ue.id),ue&&(ue.cancelled=!0)};function ee(ue,be,Me,Ue){if(!ue||!ue.cancelled){Me(be);let ye=be.done();ye||ue.cancelled||(ue.id=Co(ee.bind(null,ue,be,Me,Ue))),ye&&Ue&&Ue(be)}}return ee(j,_,L,z),{cancel:X.bind(null,j),model:_}}let ii=!1;function So(_){ii||(ii=!0,Co(function(){_(),ii=!1}))}function Co(_){return v(_,16)}function ga(_){l(_)}let ea=S.requireModule("animation");var ta=A.defineComponent({name:"MovableView",props:co,emits:["change","scale"],styles:[{"uni-movable-view":{"":{position:"absolute",top:"0px",left:"0px",width:"10px",height:"10px"}}}],setup(_,{emit:L,slots:z}){let j=A.ref(null),X=Hn(j,L),ee=A.inject("setTouchMovableViewContext",()=>{}),ue=Ki(_,X,j,ee);return()=>{let be={preventGesture:!0};return A.createVNode("view",A.mergeProps({ref:j,onTouchstart:ue,class:"uni-movable-view",style:"transform-origin: center;"},be),[z.default&&z.default()])}}});function Ki(_,L,z,j){let X=A.inject("_isMounted",A.ref(!1)),ee=A.inject("parentSize",{width:A.ref(0),height:A.ref(0),top:A.ref(0),left:A.ref(0)}),ue=A.inject("addMovableViewContext",()=>{}),be=A.inject("removeMovableViewContext",()=>{}),Me={touchstart:()=>{},touchmove:()=>{},touchend:()=>{}};function Ue(Fe){return Number(Fe)||0}function ye(Fe){return Fe=Number(Fe),isNaN(Fe)?1:Fe}let Ve=A.ref(Ue(_.x)),lt=A.ref(Ue(_.y)),Et=A.ref(ye(Number(_.scaleValue))),Wt=A.ref(0),mt=A.ref(0),ht=A.ref(0),Mt=A.ref(0),Cn=A.ref(0),Ht=A.ref(0),ut=null,jt=null,Vt={x:0,y:0},Fn={x:0,y:0},sn=1,rn=0,kn=0,Oa=!1,Ta,vn,zt=null,ar=null,Br={top:0,left:0,width:0,height:0},Pa=new Ur,yr=new Ur,fn={historyX:[0,0],historyY:[0,0],historyT:[0,0]},ui=A.computed(()=>{let Fe=Number(_.damping);return isNaN(Fe)?20:Fe}),Ps=A.computed(()=>{let Fe=Number(_.friction);return isNaN(Fe)||Fe<=0?2:Fe}),Ro=A.computed(()=>{let Fe=Number(_.scaleMin);return isNaN(Fe)?.5:Fe}),Ci=A.computed(()=>{let Fe=Number(_.scaleMax);return isNaN(Fe)?10:Fe}),xo=A.computed(()=>_.direction==="all"||_.direction==="horizontal"),$a=A.computed(()=>_.direction==="all"||_.direction==="vertical"),Wr=new lo(1,9*Math.pow(ui.value,2)/40,ui.value),fi=new Ln(1,Ps.value);A.watch(()=>_.x,Fe=>{Ve.value=Ue(Fe)}),A.watch(()=>_.y,Fe=>{lt.value=Ue(Fe)}),A.watch(()=>_.scaleValue,Fe=>{Et.value=ye(Number(Fe))}),A.watch(Ve,cs),A.watch(lt,us),A.watch(Et,wl),A.watch(Ro,qo),A.watch(Ci,qo);function ra(){jt&&jt.cancel(),ut&&ut.cancel()}function cs(Fe){if(xo.value){if(Fe+Fn.x===rn)return rn;ut&&ut.cancel(),Rn(Fe+Fn.x,lt.value+Fn.y,sn)}return Fe}function us(Fe){if($a.value){if(Fe+Fn.y===kn)return kn;ut&&ut.cancel(),Rn(Ve.value+Fn.x,Fe+Fn.y,sn)}return Fe}function qo(){if(!_.scale)return!1;Ia(sn,!0)}function wl(Fe){return _.scale?(Fe=sr(Fe),Ia(Fe,!0),Fe):!1}function Ua(){_.disabled||(ra(),fn.historyX=[0,0],fn.historyY=[0,0],fn.historyT=[0,0],xo.value&&(Ta=rn),$a.value&&(vn=kn),zt=null,ar=null,Oa=!0)}function di(Fe){if(!_.disabled&&Oa){let wt=rn,Ot=kn;if(ar===null&&(ar=Math.abs(Fe.detail.dx/Fe.detail.dy)>1?"htouchmove":"vtouchmove"),xo.value&&(wt=Fe.detail.dx+Ta,fn.historyX.shift(),fn.historyX.push(wt),!$a.value&&zt===null&&(zt=Math.abs(Fe.detail.dx/Fe.detail.dy)<1)),$a.value&&(Ot=Fe.detail.dy+vn,fn.historyY.shift(),fn.historyY.push(Ot),!xo.value&&zt===null&&(zt=Math.abs(Fe.detail.dy/Fe.detail.dx)<1)),fn.historyT.shift(),fn.historyT.push(Fe.detail.timeStamp),!zt){let dn="touch";wt<ht.value?_.outOfBounds?(dn="touch-out-of-bounds",wt=ht.value-Pa.x(ht.value-wt)):wt=ht.value:wt>Cn.value&&(_.outOfBounds?(dn="touch-out-of-bounds",wt=Cn.value+Pa.x(wt-Cn.value)):wt=Cn.value),Ot<Mt.value?_.outOfBounds?(dn="touch-out-of-bounds",Ot=Mt.value-yr.x(Mt.value-Ot)):Ot=Mt.value:Ot>Ht.value&&(_.outOfBounds?(dn="touch-out-of-bounds",Ot=Ht.value+yr.x(Ot-Ht.value)):Ot=Ht.value),So(function(){yn(wt,Ot,sn,dn)})}}}function tl(){if(!_.disabled&&Oa&&(Oa=!1,!zt&&!Nn("out-of-bounds")&&_.inertia)){let Fe=1e3*(fn.historyX[1]-fn.historyX[0])/(fn.historyT[1]-fn.historyT[0]),wt=1e3*(fn.historyY[1]-fn.historyY[0])/(fn.historyT[1]-fn.historyT[0]);fi.setV(Fe,wt),fi.setS(rn,kn);let Ot=fi.delta().x,dn=fi.delta().y,Er=Ot+rn,ti=dn+kn;Er<ht.value?(Er=ht.value,ti=kn+(ht.value-rn)*dn/Ot):Er>Cn.value&&(Er=Cn.value,ti=kn+(Cn.value-rn)*dn/Ot),ti<Mt.value?(ti=Mt.value,Er=rn+(Mt.value-kn)*Ot/dn):ti>Ht.value&&(ti=Ht.value,Er=rn+(Ht.value-kn)*Ot/dn),fi.setEnd(Er,ti),jt=wo(fi,function(){let zr=fi.s(),er=zr.x,hi=zr.y;yn(er,hi,sn,"friction")},function(){jt.cancel()})}}function Bo(Fe,wt){let Ot=!1;return Fe>Cn.value?(Fe=Cn.value,Ot=!0):Fe<ht.value&&(Fe=ht.value,Ot=!0),wt>Ht.value?(wt=Ht.value,Ot=!0):wt<Mt.value&&(wt=Mt.value,Ot=!0),{x:Fe,y:wt,outOfBounds:Ot}}function fs(){Vt.x=Br.left-ee.left.value,Vt.y=Br.top-ee.top.value}function Ha(Fe){Fe=Fe||sn,Fe=sr(Fe),mt.value=Br.height/sn,Wt.value=Br.width/sn;let wt=mt.value*Fe,Ot=Wt.value*Fe;Fn.x=(Ot-Wt.value)/2,Fn.y=(wt-mt.value)/2}function ds(){let Fe=0-Vt.x+Fn.x,wt=ee.width.value-Wt.value-Vt.x-Fn.x;ht.value=Math.min(Fe,wt),Cn.value=Math.max(Fe,wt);let Ot=0-Vt.y+Fn.y,dn=ee.height.value-mt.value-Vt.y-Fn.y;Mt.value=Math.min(Ot,dn),Ht.value=Math.max(Ot,dn)}function Ia(Fe,wt){if(_.scale){Fe=sr(Fe),Ha(Fe),ds();let Ot=Bo(rn,kn),dn=Ot.x,Er=Ot.y;wt?Rn(dn,Er,Fe,"",!0,!0):So(function(){yn(dn,Er,Fe,"",!0,!0)})}}function sr(Fe){return Fe=Math.max(.5,Ro.value,Fe),Fe=Math.min(10,Ci.value,Fe),Fe}function Rn(Fe,wt,Ot,dn,Er,ti){ra(),xo.value||(Fe=rn),$a.value||(wt=kn),_.scale||(Ot=sn);let zr=Bo(Fe,wt);if(Fe=zr.x,wt=zr.y,!_.animation){yn(Fe,wt,Ot,dn,Er,ti);return}Wr._springX._solution=null,Wr._springY._solution=null,Wr._springScale._solution=null,Wr._springX._endPosition=rn,Wr._springY._endPosition=kn,Wr._springScale._endPosition=sn,Wr.setEnd(Fe,wt,Ot,1),ut=wo(Wr,function(){let er=Wr.x(),hi=er.x,ja=er.y,Wa=er.scale;yn(hi,ja,Wa,dn,Er,ti)},function(){ut.cancel()})}function Nn(Fe){let wt=Bo(rn,kn),Ot=wt.x,dn=wt.y,Er=wt.outOfBounds;return Er&&Rn(Ot,dn,sn,Fe),Er}function yn(Fe,wt,Ot,dn="",Er,ti){Fe!==null&&Fe.toString()!=="NaN"&&typeof Fe=="number"||(Fe=rn||0),wt!==null&&wt.toString()!=="NaN"&&typeof wt=="number"||(wt=kn||0),Fe=Number(Fe.toFixed(1)),wt=Number(wt.toFixed(1)),Ot=Number(Ot.toFixed(1)),rn===Fe&&kn===wt||Er||L("change",{x:qi(Fe,Fn.x),y:qi(wt,Fn.y),source:dn}),_.scale||(Ot=sn),Ot=sr(Ot),Ot=+Ot.toFixed(3),ti&&Ot!==sn&&L("scale",{x:Fe,y:wt,scale:Ot});let zr=`translate(${Fe}px, ${wt}px) scale(${Ot})`;ea.transition(z.value,{styles:{transform:zr},duration:0,delay:0}),rn=Fe,kn=wt,sn=Ot}function Li(){return vr(z.value).then(Fe=>{Br=Fe})}function Ct(){if(!X.value)return;ra();let Fe=_.scale?Et.value:1;fs(),Ha(Fe),ds(),rn=Ve.value+Fn.x,kn=lt.value+Fn.y;let wt=Bo(rn,kn),Ot=wt.x,dn=wt.y;yn(Ot,dn,Fe,"",!0)}return A.onMounted(()=>{Me=Ni(wt=>{switch(wt.detail.state){case"start":Ua();break;case"move":di(wt);break;case"end":tl()}}),v(()=>{Li().then(()=>{Ct()})},100),fi.reconfigure(1,Ps.value),Wr.reconfigure(1,9*Math.pow(ui.value,2)/40,ui.value);let Fe={setParent:Ct};ue(Fe),A.onUnmounted(()=>{be(Fe)})}),A.onUnmounted(()=>{ra()}),()=>{j(Me)}}let In=16,gn={activeColor:Kn.PRIMARY_COLOR,backgroundColor:"#EBEBEB",activeMode:"backwards"},xn={percent:{type:[Number,String],default:0,validator(_){return!isNaN(parseFloat(_))}},fontSize:{type:[String,Number],default:In},showInfo:{type:[Boolean,String],default:!1},strokeWidth:{type:[Number,String],default:6,validator(_){return!isNaN(parseFloat(_))}},color:{type:String,default:gn.activeColor},activeColor:{type:String,default:gn.activeColor},backgroundColor:{type:String,default:gn.backgroundColor},active:{type:[Boolean,String],default:!1},activeMode:{type:String,default:gn.activeMode},duration:{type:[Number,String],default:30,validator(_){return!isNaN(parseFloat(_))}},borderRadius:{type:[Number,String],default:0}},oi=[{"uni-progress":{"":{flex:1,flexDirection:"row",alignItems:"center"}},"uni-progress-bar":{"":{flex:1}},"uni-progress-inner-bar":{"":{position:"absolute"}},"uni-progress-info":{"":{marginLeft:"15px"}}}];var $o=A.defineComponent({name:"Progress",props:xn,styles:oi,emits:["activeend"],setup(_,{emit:L}){let z=A.ref(null),j=A.ref(null),X=Hn(z,L),ee=Ut(_);return A.watch(()=>ee.realPercent,(ue,be)=>{ee.lastPercent=be||0,Ie(ee,_,X)}),A.onMounted(()=>{v(()=>{vr(j.value).then(({width:ue})=>{ee.progressWidth=ue||0,Ie(ee,_,X)})},50)}),()=>{let{showInfo:ue,fontSize:be}=_,{outerBarStyle:Me,innerBarStyle:Ue,currentPercent:ye}=ee;return A.createVNode("div",{ref:z,class:"uni-progress"},[A.createVNode("div",{ref:j,style:Me,class:"uni-progress-bar"},[A.createVNode("div",{style:Ue,class:"uni-progress-inner-bar"},null)]),ue?Gt(ye+"%",{class:"uni-progress-info",style:{fontSize:be}}):null])}}});function Ut(_){let L=A.ref(0),z=A.ref(0),j=A.computed(()=>({backgroundColor:_.backgroundColor,borderRadius:_.borderRadius,height:_.strokeWidth})),X=A.computed(()=>{let be=_.color!==gn.activeColor&&_.activeColor===gn.activeColor?_.color:_.activeColor;return{width:L.value*z.value/100,height:_.strokeWidth,backgroundColor:be,borderRadius:_.borderRadius}}),ee=A.computed(()=>{let be=parseFloat(_.percent);return be<0&&(be=0),be>100&&(be=100),be});return A.reactive({outerBarStyle:j,innerBarStyle:X,realPercent:ee,currentPercent:L,strokeTimer:0,lastPercent:0,progressWidth:z})}function Ie(_,L,z){_.strokeTimer&&clearInterval(_.strokeTimer),L.active?(_.currentPercent=L.activeMode===gn.activeMode?0:_.lastPercent,_.strokeTimer=setInterval(()=>{_.currentPercent+1>_.realPercent?(_.currentPercent=_.realPercent,_.strokeTimer&&clearInterval(_.strokeTimer),z("activeend",{})):_.currentPercent+=1},parseFloat(L.duration))):_.currentPercent=_.realPercent}let Ri={value:{type:Array,default(){return[]},validator:function(_){return Array.isArray(_)&&_.filter(L=>typeof L=="number").length===_.length}},indicatorStyle:{type:String,default:""},indicatorClass:{type:String,default:""},maskStyle:{type:String,default:""},maskClass:{type:String,default:""}},xi=ce.extend({},Ri,{height:{type:[Number,String],default:0}});var Ei=A.defineComponent({name:"PickerView",props:xi,emits:["change","update:value"],setup(_,{slots:L,emit:z}){let j=A.ref(null),X=Ji(_),ee=Hn(j,z),ue=[],be=Ue=>Array.prototype.indexOf.call(ue,Ue),Me=Ue=>A.computed({get(){let ye=be(Ue.vnode);return X.value[ye]||0},set(ye){if(!Ue.data._isMounted)return;let Ve=be(Ue.vnode);if(Ve<0)return;if(X.value[Ve]!==ye){X.value[Ve]=ye;let Et=X.value.map(Wt=>Wt);z("update:value",Et),ee("change",{value:Et})}}});return A.provide("getPickerViewColumn",Me),A.provide("pickerViewProps",_),()=>{let Ue=L.default&&L.default();ue=ir(Ue);let ye=_.height?{height:`${parseFloat(_.height)}px`}:{};return A.createVNode("view",A.mergeProps({ref:j,class:"uni-picker-view",style:ye},{preventGesture:!0}),[A.createVNode("view",{class:"uni-picker-view-wrapper"},[Ue])])}},styles:[{"uni-picker-view":{"":{position:"relative"}},"uni-picker-view-wrapper":{"":{display:"flex",flexDirection:"row",position:"absolute",top:0,left:0,right:0,bottom:0,overflow:"hidden"}}}]});function Ji(_){let L=A.reactive([..._.value]),z=A.reactive({value:L});return A.watch(()=>_.value,j=>{z.value.length=j.length,j.forEach((X,ee)=>{X!==z.value[ee]&&z.value.splice(ee,1,X)})}),z}let Zr=S.requireModule("dom"),Bi=S.config.env.platform.toLowerCase()==="android";function Uo(_){return ce.extend({},typeof _=="string"?Vo(_):_)}var nn=A.defineComponent({name:"PickerViewColumn",props:{length:{type:[Number,String],default:0}},data:()=>({_isMounted:!1}),setup(_,{slots:L}){let z=A.getCurrentInstance(),j=A.ref(null),X=A.ref(null),ee=A.ref(null),ue=A.ref(null),be=A.inject("pickerViewProps"),Ue=A.inject("getPickerViewColumn")(z),ye=A.computed(()=>Uo(be.indicatorStyle)),Ve=A.computed(()=>Uo(be.maskStyle)),lt=A.ref(0);lt.value=va(ye.value);let Et=A.ref(0);Et.value=parseFloat(be.height),A.watch(()=>_.length,()=>{v(()=>{mt(Ue.value,!0,!0)},150)});let Wt,mt=(Ht,ut=!0,jt)=>{Ue.value===Ht&&!jt||(Zr.scrollToElement(X.value,{offset:Ht*lt.value,animated:ut}),Ue.value=Ht,ut&&(Wt=Date.now()))},ht=Ht=>{if(Date.now()-Wt<340)return;let ut=Ht.detail.contentOffset.y,jt=Math.round(ut/lt.value);ut%lt.value?mt(jt,!0,!0):Ue.value=jt},Mt=()=>{let Ht,ut;v(()=>{Promise.all([vr(j.value).then(({height:jt})=>{Ht=Et.value=jt}),Bi&&_.length?vr(ee.value).then(({height:jt})=>{ut=lt.value=jt/parseFloat(_.length)}):vr(ue.value).then(({height:jt})=>{ut=lt.value=jt})]).then(()=>{Ht&&ut?v(()=>{z.data._isMounted=!0,mt(Ue.value,!1,!0)},50):Mt()})},50)};A.onMounted(Mt);let Cn=Ht=>Ht?Bi?A.createVNode("div",{ref:ee,style:"flex-direction:column;"},[Ht]):Ht:null;return()=>{let Ht=L.default&&L.default(),ut=(Et.value-lt.value)/2,jt=`${Et.value-ut}px`,Vt={showScrollbar:!1,scrollToBegin:!1,decelerationRate:.3,scrollY:!0};return Bi||(Vt.scrollTop=Ue.value*lt.value),A.createVNode("view",{ref:j,class:"uni-picker-view-column"},[A.createVNode("scroll-view",A.mergeProps({class:"uni-picker-view-group",style:"flex-direction:column;",onScrollend:ht},Vt),[A.createVNode("view",{ref:X,class:"uni-picker-view-content",style:{paddingTop:`${ut}px`,paddingBottom:`${ut}px`}},[Cn(Ht)])]),A.createVNode("u-scalable",{class:"uni-picker-view-mask",style:Ve.value},[A.createVNode("u-scalable",{class:"uni-picker-view-mask uni-picker-view-mask-top",style:{bottom:jt}},null),A.createVNode("u-scalable",{class:"uni-picker-view-mask uni-picker-view-mask-bottom",style:{top:jt}},null)]),A.createVNode("u-scalable",{ref:ue,class:"uni-picker-view-indicator",style:ce.extend({},ye.value,{top:`${ut}px`})},null)])}},styles:[{"uni-picker-view-column":{"":{flex:1,position:"relative",alignItems:"stretch",overflow:"hidden"}},"uni-picker-view-mask":{"":{position:"absolute",top:0,left:0,right:0,bottom:0,pointerEvents:"none"}},"uni-picker-view-mask-top":{"":{bottom:0,backgroundImage:"linear-gradient(to bottom,rgba(255, 255, 255, 0.95),rgba(255, 255, 255, 0.6))"}},"uni-picker-view-mask-bottom":{"":{top:0,backgroundImage:"linear-gradient(to top,rgba(255, 255, 255, 0.95),rgba(255, 255, 255, 0.6))"}},"uni-picker-view-group":{"":{position:"absolute",top:0,left:0,right:0,bottom:0}},"uni-picker-view-content":{"":{flexDirection:"column",paddingTop:0,paddingRight:0,paddingBottom:0,paddingLeft:0}},"uni-picker-view-indicator":{"":{position:"absolute",left:0,right:0,top:0,height:"34px",pointerEvents:"none",borderColor:"#e5e5e5",borderTopWidth:"1px",borderBottomWidth:"1px"}}}]});function va(_){let z=(_.height||_.lineHeight||"").match(/(-?[\d\.]+)px/),j=0;return z&&(j=parseFloat(z[1])),j}let _n={SELECTOR:"selector",MULTISELECTOR:"multiSelector",TIME:"time",DATE:"date"},Xr={YEAR:"year",MONTH:"month",DAY:"day"};function ai(_){return _>9?_:`0${_}`}function wi(_,L){_=String(_||"");let z=new Date;if(L===_n.TIME){let j=_.split(":");j.length===2&&z.setHours(parseInt(j[0]),parseInt(j[1]))}else{let j=_.split("-");j.length===3&&z.setFullYear(parseInt(j[0]),parseInt(String(parseFloat(j[1])-1)),parseInt(j[2]))}return z}function Qr(_){if(_.mode===_n.TIME)return"00:00";if(_.mode===_n.DATE){let L=new Date().getFullYear()-100;switch(_.fields){case Xr.YEAR:return L;case Xr.MONTH:return L+"-01";default:return L+"-01-01"}}return""}function Ao(_){if(_.mode===_n.TIME)return"23:59";if(_.mode===_n.DATE){let L=new Date().getFullYear()+100;switch(_.fields){case Xr.YEAR:return L;case Xr.MONTH:return L+"-12";default:return L+"-12-31"}}return""}let Oo={name:{type:String,default:""},range:{type:Array,default(){return[]}},rangeKey:{type:String,default:""},value:{type:[Number,String,Array],default:0},mode:{type:String,default:_n.SELECTOR,validator(_){return Object.values(_n).indexOf(_)>=0}},fields:{type:String,default:""},start:{type:String,default:Qr},end:{type:String,default:Ao},disabled:{type:[Boolean,String],default:!1}};var ma=A.defineComponent({name:"Picker",props:Oo,emits:["change","cancel","columnchange"],setup(_,{slots:L,emit:z}){let j=A.ref(null),X=Hn(j,z),ee=A.ref(null),ue=A.ref(null),be=()=>{let mt=_.value;switch(_.mode){case _n.MULTISELECTOR:{Array.isArray(mt)||(mt=[]),Array.isArray(ee.value)||(ee.value=[]);let ht=ee.value.length=Math.max(mt.length,_.range.length);for(let Mt=0;Mt<ht;Mt++){let Cn=Number(mt[Mt]),Ht=Number(ee.value[Mt]),ut=isNaN(Cn)?isNaN(Ht)?0:Ht:Cn;ee.value.splice(Mt,1,ut<0?0:ut)}}break;case _n.TIME:case _n.DATE:ee.value=String(mt);break;default:{let ht=Number(mt);ee.value=ht<0?0:ht;break}}},Me=mt=>{ue.value&&ue.value.sendMessage(mt)},Ue=mt=>{let ht={event:"cancel"};ue.value=Kt({url:"__uniapppicker",data:mt,style:{titleNView:!1,animationType:"none",animationDuration:0,background:"rgba(0,0,0,0)",popGesture:"none"},onMessage:Mt=>{let Cn=Mt.event;if(Cn==="created"){Me(mt);return}if(Cn==="columnchange"){delete Mt.event,X(Cn,Mt);return}ht=Mt},onClose:()=>{ue.value=null;let Mt=ht.event;delete ht.event,Mt&&X(Mt,ht)}})},ye=mt=>{k.nativeUI[_.mode===_n.TIME?"pickTime":"pickDate"](ht=>{let Mt=ht.date;X("change",{value:_.mode===_n.TIME?`${ai(Mt.getHours())}:${ai(Mt.getMinutes())}`:`${Mt.getFullYear()}-${ai(Mt.getMonth()+1)}-${ai(Mt.getDate())}`})},()=>{X("cancel",{})},_.mode===_n.TIME?{time:wi(_.value,_n.TIME)}:{date:wi(_.value,_n.DATE),minDate:wi(_.start,_n.DATE),maxDate:wi(_.end,_n.DATE)})},Ve=mt=>{(mt.mode===_n.TIME||mt.mode===_n.DATE)&&!mt.fields?ye():(mt.fields=Object.values(Xr).includes(mt.fields)?mt.fields:Xr.DAY,Ue(mt))},lt=mt=>{_.disabled||Ve(ce.extend({},_,{value:ee.value,locale:b.getLocale()}))},Et=A.inject(ur,!1),Wt={submit:()=>[_.name,ee.value],reset:()=>{switch(_.mode){case _n.SELECTOR:ee.value=0;break;case _n.MULTISELECTOR:Array.isArray(_.value)&&(ee.value=_.value.map(mt=>0));break;case _n.DATE:case _n.TIME:ee.value="";break}}};return Et&&(Et.addField(Wt),A.onBeforeUnmount(()=>Et.removeField(Wt))),Object.keys(_).forEach(mt=>{A.watch(()=>_[mt],ht=>{let Mt={};Mt[mt]=ht,Me(Mt)},{deep:!0})}),A.watch(()=>_.value,be,{deep:!0}),be(),()=>A.createVNode("view",{ref:j,onClick:lt},[L.default&&L.default()])}});let _a={name:{type:String,default:""},min:{type:[Number,String],default:0},max:{type:[Number,String],default:100},value:{type:[Number,String],default:0},step:{type:[Number,String],default:1},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#e9e9e9"},backgroundColor:{type:String,default:"#e9e9e9"},activeColor:{type:String,default:"#007aff"},selectedColor:{type:String,default:"#007aff"},blockColor:{type:String,default:"#ffffff"},blockSize:{type:[Number,String],default:28},showValue:{type:[Boolean,String],default:!1}},Ho=[{"uni-slider":{"":{flex:1,flexDirection:"column",marginTop:"12",marginRight:0,marginBottom:"12",marginLeft:0,paddingTop:0,paddingRight:0,paddingBottom:0,paddingLeft:0}},"uni-slider-wrapper":{"":{flexDirection:"row",alignItems:"center",minHeight:"30"}},"uni-slider-tap-area":{"":{position:"relative",flex:1,flexDirection:"column",paddingTop:"15",paddingRight:0,paddingBottom:"15",paddingLeft:0}},"uni-slider-handle-wrapper":{"":{position:"relative",marginTop:0,marginRight:"18",marginBottom:0,marginLeft:"18",height:"2",borderRadius:"5",backgroundColor:"#e9e9e9",transitionProperty:"backgroundColor",transitionDuration:300,transitionTimingFunction:"ease"}},"uni-slider-track":{"":{height:"2",borderRadius:"6",backgroundColor:"#007aff",transitionProperty:"backgroundColor",transitionDuration:300,transitionTimingFunction:"ease"}},"uni-slider-thumb":{"":{position:"absolute",width:"28",height:"28",borderRadius:50,boxShadow:"0 0 4px #ebebeb",transitionProperty:"borderColor",transitionDuration:300,transitionTimingFunction:"ease"}},"uni-slider-step":{"":{position:"absolute",width:100,height:"2",background:"transparent"}},"uni-slider-value":{"":{color:"#888888",fontSize:"14",marginLeft:"14"}}}];var jo=A.defineComponent({name:"USlider",props:_a,styles:Ho,setup(_,{emit:L}){let z=A.ref(null),j=A.ref(null),X=Hn(z,L),ee=Ma(_),ue=ba(_,ee,X);return Ir(_,ee),A.watch(()=>_.value,be=>{ee.sliderValue=Number(be)}),A.onMounted(()=>{v(()=>{vr(z.value).then(({width:be})=>{ee.sliderWidth=be||0,ee.sliderValue=Number(_.value)})},100)}),()=>{let{showValue:be}=_,{trackStyle:Me,trackActiveStyle:Ue,thumbStyle:ye,sliderValue:Ve}=ee;return A.createVNode("div",{class:"uni-slider",ref:z},[A.createVNode("div",{class:"uni-slider-wrapper"},[A.createVNode("div",A.mergeProps({class:"uni-slider-tap-area"},ue),[A.createVNode("div",{class:"uni-slider-handle-wrapper",ref:j,style:Me},[A.createVNode("div",{class:"uni-slider-track",style:Ue},null)]),A.createVNode("div",{class:"uni-slider-thumb",style:ye},null)]),be?Gt(Ve+"",{class:"uni-slider-value"}):null])])}}});function Ma(_){let L=A.ref(0),z=A.ref(0),j=()=>_.backgroundColor!=="#e9e9e9"?_.backgroundColor:_.color!=="#007aff"?_.color:"#007aff",X=()=>_.activeColor!=="#007aff"?_.activeColor:_.selectedColor!=="#e9e9e9"?_.selectedColor:"#e9e9e9",ee=()=>{let be=Number(_.max),Me=Number(_.min);return(z.value-Me)/(be-Me)*L.value};return A.reactive({sliderWidth:L,sliderValue:z,trackStyle:A.computed(()=>({backgroundColor:j()})),trackActiveStyle:A.computed(()=>({backgroundColor:X(),width:ee()})),thumbStyle:A.computed(()=>({width:_.blockSize,height:_.blockSize,marginTop:-_.blockSize/2,left:ee(),backgroundColor:_.blockColor}))})}function ba(_,L,z){let j=null;function X(be,Me){_.disabled||(be==="move"?(ee(Me),z("changing",{value:L.sliderValue})):be==="end"&&(ee(Me),z("change",{value:L.sliderValue})))}function ee(be){be<0&&(be=0),be>L.sliderWidth&&(be=L.sliderWidth);let Me=Number(_.max),Ue=Number(_.min),ye=Number(_.step),Ve=be/L.sliderWidth*Me-Ue;ye>0&&Ve>ye&&Ve%ye/ye!==0&&(Ve-=Ve%ye),L.sliderValue=Ve+Ue}return{onTouchstart(be){be.changedTouches.length===1&&!j&&(j=be,X("start",be.changedTouches[0].pageX))},onTouchmove(be){be.changedTouches.length===1&&j&&X("move",be.changedTouches[0].pageX)},onTouchend(be){be.changedTouches.length===1&&j&&(j=null,X("end",be.changedTouches[0].pageX))}}}function Ir(_,L){let z=A.inject(ur,!1),j={submit:()=>{let X=["",null];return _.name&&(X[0]=_.name,X[1]=L.sliderValue),X},reset:()=>{L.sliderValue=Number(_.value)}};z&&(z.addField(j),A.onUnmounted(()=>{z.removeField(j)}))}let or={name:{type:String,default:""},checked:{type:[Boolean,String],default:!1},type:{type:String,default:"switch"},id:{type:String,default:""},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#007aff"}},Bn={switch:"switch",checkbox:"checkbox"},mr={width:52,height:32};var fr=A.defineComponent({name:"Switch",props:or,emits:["change"],setup(_,{emit:L}){let z=A.ref(null),j=A.ref(_.checked),X=ya(_,j),ee=Hn(z,L);A.watch(()=>_.checked,Me=>{j.value=Me});let ue={onChange(Me){j.value=Me.detail.value,ee("change",{value:j.value})}},be=(Me,Ue)=>{_.disabled||(j.value=!j.value,ee("change",{value:j.value}))};return X&&(X.addHandler(be),A.onBeforeUnmount(()=>{X.removeHandler(be)})),Jr(_,{"label-click":be}),()=>{let{color:Me,type:Ue}=_;return A.createVNode("div",{ref:z},[Ue===Bn.switch?A.createVNode("dc-switch",A.mergeProps({dataUncType:"uni-switch"},ue,{checked:j.value},{style:mr}),null):null,Ue===Bn.checkbox?A.createVNode(A.resolveComponent("checkbox"),A.mergeProps({style:{color:Me}},{checked:j.value},ue),null):null])}}});function ya(_,L){let z=A.inject(ur,!1),j=A.inject(un,!1),X={submit:()=>{let ee=["",null];return _.name&&(ee[0]=_.name,ee[1]=L.value),ee},reset:()=>{L.value=!1}};return z&&(z.addField(X),A.onUnmounted(()=>{z.removeField(X)})),j}let Ea={checked:{type:[Boolean,String],default:!1},id:{type:String,default:""},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#007aff"},value:{type:String,default:""}},Wo=Or("ucg"),uo={name:{type:String,default:""}},Hr=[{"uni-checkbox":{"":{flexDirection:"row",alignItems:"center"}},"uni-checkbox-input":{"":{justifyContent:"center",alignItems:"center",position:"relative",borderWidth:"1",borderColor:"#d1d1d1",borderStyle:"solid",backgroundColor:"#ffffff",borderRadius:"3",width:"22",height:"22"}},"uni-icon":{"":{fontFamily:"unincomponents",fontSize:"16",marginLeft:"2",marginTop:"2",color:"#007aff"}},"uni-checkbox-input-disabled":{"":{backgroundColor:"#e1e1e1"}},"uni-checkbox-input-disabled-before":{"":{color:"#adadad"}},"uni-checkbox-slot":{"":{fontSize:"16",marginLeft:"5"}}}];var Mi=A.defineComponent({name:"Checkbox",props:Ea,styles:Hr,setup(_,{slots:L}){let z=A.ref(null),j=A.ref(_.checked),X=A.ref(_.value),ee=A.computed(()=>_.disabled?"#adadad":_.color),ue=()=>{j.value=!1},be=(Ve,lt)=>{_.disabled||(j.value=!j.value,Me&&Me.checkboxChange(Ve))},{uniCheckGroup:Me,uniLabel:Ue}=zo(j,X,ue);Ue&&(Ue.addHandler(be),A.onBeforeUnmount(()=>{Ue.removeHandler(be)})),Jr(_,{"label-click":be}),A.watch([()=>_.checked,()=>_.value],([Ve,lt])=>{j.value=Ve,X.value=lt});let ye=()=>{if(!L.default)return[];let Ve=L.default();return Ve.length===1&&Ve[0].type===Text?[Gt(Ve[0].children,{class:"uni-checkbox-slot"})]:Ve};return()=>A.createVNode("div",A.mergeProps({ref:z},{dataUncType:"uni-checkbox"},{onClick:be,class:"uni-checkbox"}),[A.createVNode("div",{class:["uni-checkbox-input",{"uni-checkbox-input-disabled":_.disabled}]},[j.value?Gt("\uEA08",{class:"uni-icon",style:{color:ee.value}}):null]),...ye()])}});function zo(_,L,z){let j=A.computed(()=>({checkboxChecked:Boolean(_.value),value:L.value})),X={reset:z},ee=A.inject(Wo,!1);ee&&ee.addField(j);let ue=A.inject(ur,!1);ue&&ue.addField(X);let be=A.inject(un,!1);return A.onBeforeUnmount(()=>{ee&&ee.removeField(j),ue&&ue.removeField(X)}),{uniCheckGroup:ee,uniForm:ue,uniLabel:be}}var Si=A.defineComponent({name:"CheckboxGroup",props:uo,emits:["change"],setup(_,{slots:L,emit:z}){let j=A.ref(null),X=Hn(j,z);return si(_,X),()=>A.createVNode("div",{ref:j,class:"uni-checkbox-group"},[L.default&&L.default()])}});function si(_,L){let z=[],j=()=>z.reduce((ee,ue)=>(ue.value.checkboxChecked&&ee.push(ue.value.value),ee),new Array);A.provide(Wo,{addField(ee){z.push(ee)},removeField(ee){z.splice(z.indexOf(ee),1)},checkboxChange(ee){L("change",{value:j()})}});let X=A.inject(ur,!1);return X&&X.addField({submit:()=>{let ee=["",null];return _.name!==""&&(ee[0]=_.name,ee[1]=j()),ee}}),j}let Nr={checked:{type:[Boolean,String],default:!1},id:{type:String,default:""},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#007aff"},value:{type:String,default:""}},M=Or("ucg"),ne={name:{type:String,default:""}},he=[{"uni-radio":{"":{alignItems:"center",flexDirection:"row"}},"uni-radio-input":{"":{position:"relative",alignItems:"center",justifyContent:"center",marginRight:"5",borderStyle:"solid",borderWidth:"1",borderColor:"#d1d1d1",borderRadius:50,width:"22",height:"22",outline:0}},"uni-radio-input-icon":{"":{fontFamily:"unincomponents",fontSize:"14",color:"#ffffff"}},"uni-radio-input-disabled":{"":{backgroundColor:"#e1e1e1",borderColor:"#d1d1d1",color:"#adadad"}},"uni-radio-slot":{"":{fontSize:"16",marginLeft:"5"}}}];var G=A.defineComponent({name:"Radio",props:Nr,styles:he,emits:["change"],setup(_,{slots:L}){let z=A.ref(null),j=A.ref(_.checked),X=A.ref(_.value),ee=A.computed(()=>{let lt=_.disabled?"#adadad":_.color;return j.value?{backgroundColor:lt,borderColor:lt}:{borderColor:"#d1d1d1"}}),ue=()=>{j.value=!1},{uniCheckGroup:be,uniLabel:Me,field:Ue}=F(j,X,ue),ye=(lt,Et)=>{_.disabled||(j.value=!j.value,be&&be.radioChange(lt,Ue))};Me&&(Me.addHandler(ye),A.onBeforeUnmount(()=>{Me.removeHandler(ye)})),Jr(_,{"label-click":ye}),A.watch([()=>_.checked,()=>_.value],([lt,Et])=>{j.value=lt,X.value=Et});let Ve=()=>{if(!L.default)return[];let lt=L.default();return lt.length===1&&lt[0].type===Text?[Gt(lt[0].children,{class:"uni-radio-slot"})]:lt};return()=>{let{disabled:lt}=_;return A.createVNode("div",A.mergeProps({ref:z},{dataUncType:"uni-radio"},{onClick:ye,class:"uni-radio"}),[A.createVNode("div",{style:ee.value,class:["uni-radio-input",{"uni-radio-input-disabled":lt}]},[j.value?Gt("\uEA08",{class:"uni-radio-input-icon"}):null]),...Ve()])}}});function F(_,L,z){let j=A.computed({get:()=>({radioChecked:Boolean(_.value),value:L.value}),set:({radioChecked:Me})=>{_.value=Me}}),X={reset:z},ee=A.inject(M,!1);ee&&ee.addField(j);let ue=A.inject(ur,!1);ue&&ue.addField(X);let be=A.inject(un,!1);return A.onBeforeUnmount(()=>{ee&&ee.removeField(j),ue&&ue.removeField(X)}),{uniCheckGroup:ee,uniForm:ue,uniLabel:be,field:j}}var J=A.defineComponent({name:"RadioGroup",props:ne,emits:["change"],setup(_,{slots:L,emit:z}){let j=A.ref(null),X=Hn(j,z);return de(_,X),()=>A.createVNode("div",{ref:j},[L.default&&L.default()])}});function de(_,L){let z=[];A.onMounted(()=>{be(z.length-1)});let j=()=>{var Me;return(Me=z.find(Ue=>Ue.value.radioChecked))==null?void 0:Me.value.value};A.provide(M,{addField(Me){z.push(Me)},removeField(Me){z.splice(z.indexOf(Me),1)},radioChange(Me,Ue){let ye=z.indexOf(Ue);be(ye,!0),L("change",{value:j()})}});let X=A.inject(ur,!1),ee={submit:()=>{let Me=["",null];return _.name!==""&&(Me[0]=_.name,Me[1]=j()),Me}};X&&(X.addField(ee),A.onBeforeUnmount(()=>{X.removeField(ee)}));function ue(Me,Ue){Me.value={radioChecked:Ue,value:Me.value.value}}function be(Me,Ue){z.forEach((ye,Ve)=>{Ve!==Me&&Ue&&ue(z[Ve],!1)})}return z}let $e=["u-input","u-textarea"];var Xe=A.defineComponent({name:"Form",emits:["submit","reset"],setup({},{slots:_,emit:L}){let z=A.ref(null),j=Hn(z,L),X=[],ee;return A.provide(ur,{addField(ue){X.push(ue)},removeField(ue){X.splice(X.indexOf(ue),1)},submit(ue){let be={};ee&&ee(be);let Me=X.reduce((Ue,ye)=>{if(ye.submit){let[Ve,lt]=ye.submit();Ve&&(Ue[Ve]=lt)}return Ue},Object.create(null));Object.assign(be,Me),j("submit",{value:be})},reset(ue){ee&&ee(),X.forEach(be=>be.reset&&be.reset()),j("reset",ue)}}),()=>{let ue=_.default&&_.default();return ee=gt(ue),A.createVNode("view",{ref:z},[ue])}}});function gt(_){let L=S.requireModule("plus"),z=(j,X)=>{(X||_||[]).forEach(function(ee){$e.indexOf(String(ee.type))>=0&&ee.el&&ee.el.attr&&ee.el.attr.name&&(j?j[ee.el.attr.name]=L.getValue(ee.el.nodeId):ee.el.setValue("")),Array.isArray(ee.children)&&ee.children&&ee.children.length&&z(j,ee.children)})};return z}let bn={type:{type:String,default:""},size:{type:[String,Number],default:23},color:{type:String,default:""}},li={success:"#09bb07",info:"#10aeff",warn:"#f76260",waiting:"#10aeff",safe_success:"#09bb07",safe_warn:"#ffbe00",success_circle:"#09bb07",success_no_circle:"#09bb07",waiting_circle:"#10aeff",circle:"#c9c9c9",download:"#09bb07",info_circle:"#09bb07",cancel:"#f43530",search:"#b2b2b2",clear:"#b2b2b2"},jn={success:"\uEA06",info:"\uEA03",warn:"\uEA0B",waiting:"\uEA09",safe_success:"\uEA04",safe_warn:"\uEA05",success_circle:"\uEA07",success_no_circle:"\uEA08",waiting_circle:"\uEA0A",circle:"\uEA01",download:"\uEA02",info_circle:"\uEA0C",cancel:"\uEA0D",search:"\uEA0E",clear:"\uEA0F"},fo=[{"uni-icon":{"":{fontFamily:"unincomponents"}}}];var Da=A.defineComponent({name:"Icon",props:bn,styles:fo,setup(_,{}){return()=>Gt(jn[_.type],{class:"uni-icon",style:{color:_.color||li[_.type],fontSize:_.size}})}});let Yo={indicatorDots:{type:[Boolean,String],default:!1},vertical:{type:[Boolean,String],default:!1},autoplay:{type:[Boolean,String],default:!1},circular:{type:[Boolean,String],default:!1},interval:{type:[Number,String],default:5e3},duration:{type:[Number,String],default:500},current:{type:[Number,String],default:0},indicatorColor:{type:String,default:"rgba(0,0,0,.3)"},indicatorActiveColor:{type:String,default:"#000000"},previousMargin:{type:String,default:""},nextMargin:{type:String,default:""},currentItemId:{type:String,default:""},skipHiddenItemLayout:{type:[Boolean,String],default:!1},displayMultipleItems:{type:[Number,String],default:1},disableTouch:{type:[Boolean,String],default:!1}},ho=[{"uni-swiper":{"":{position:"relative",height:"150px"}},"uni-swiper-slider":{"":{position:"absolute",left:0,top:0,right:0,bottom:0}},"uni-swiper-dots":{"":{position:"absolute",left:0,right:0,bottom:"10",height:"10"}}}];var La=A.defineComponent({name:"Swiper",props:Yo,styles:ho,emits:["change","transition","animationfinish"],setup(_,{slots:L,emit:z}){let j=A.ref(null),X=[],ee=Hn(j,z),ue=wa(_),be=Xs(ue,_,X,ee);return A.watch([()=>_.current,()=>_.currentItemId],([Me,Ue])=>{Es(ue,_,X)}),A.onMounted(()=>{v(()=>{vr(j.value).then(({width:Me,height:Ue})=>{ue.swiperWidth=Me,ue.swiperHeight=Ue})},50)}),()=>{let Me=L.default&&L.default(),{indicatorStyle:Ue,currentSync:ye}=ue;return X=ir(Me),A.createVNode("div",{ref:j,class:"uni-swiper"},[A.createVNode("slider",A.mergeProps({class:"uni-swiper-slider"},{autoPlay:_.autoplay,interval:_.interval,index:ye,keepIndex:!0,showIndicators:_.indicatorDots,infinite:_.circular,vertical:_.vertical,scrollable:!_.disableTouch},be),[X,A.createVNode("indicator",{class:"uni-swiper-dots",styles:Ue},null)])])}}});function wa(_){let L=A.ref(0),z=A.ref(0),j=A.ref(_.current),X=A.ref("autoplay"),ee=A.computed(()=>({itemColor:_.indicatorColor,itemSelectedColor:_.indicatorActiveColor,itemSize:8,opacity:_.indicatorDots?1:0}));return A.reactive({swiperWidth:L,swiperHeight:z,indicatorStyle:ee,currentSync:j,currentChangeSource:X})}function Xs(_,L,z,j){let X=0,ee=ye=>{let Ve=ye.detail,lt=L.vertical,Et=(lt?Ve.offsetYRatio:Ve.offsetXRatio)||0;if((ye.drag||ye.drag)&&(_.currentChangeSource="touch"),Et===0){let Wt=Math.abs(X);if(Wt===1)return;Wt>.5&&(Et=1)}X=Et,j("transition",{dx:lt?0:-_.swiperWidth*Et,dy:lt?-_.swiperHeight*Et:0})},ue=ye=>{let Ve=()=>{j("animationfinish",Me()),_.currentChangeSource="autoplay"};S.config.env.platform==="iOS"?v(Ve,50):Ve()},be=ye=>{typeof ye.detail.source=="string"&&(_.currentChangeSource=ye.detail.source),_.currentSync=ye.detail.index,X=0};function Me(){let ye=Number(_.currentSync),Ve=z[ye]||{},lt=Ve.componentInstance&&Ve.componentInstance.itemId||"";return{current:ye,currentItemId:lt,source:_.currentChangeSource}}return A.watch(()=>_.currentSync,ye=>{j("change",Me())}),{onScroll:ee,onScrollend:ue,onChange:be}}function Es(_,L,z){let j=-1;if(L.currentItemId)for(let X=0,ee=z;X<ee.length;X++){let ue=ee[X].componentInstance;if(ue&&ue.itemId===L.currentItemId){j=X;break}}j<0&&(j=Math.round(Number(L.current))||0),j=j<0?0:j,_.currentSync!==j&&(_.currentChangeSource="",_.currentSync=j)}let Fa={itemId:{type:String,default:""}};var To=A.defineComponent({name:"SwiperItem",props:Fa,setup(_,{slots:L}){return()=>A.createVNode("div",{class:"uni-swiper-item",style:{position:"absolute",left:0,top:0,right:0,bottom:0,overflow:"hidden"}},[L.default&&L.default()])}}),ei=/^<([-A-Za-z0-9_]+)((?:\s+[a-zA-Z_:][-a-zA-Z0-9_:.]*(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)>/,Di=/^<\/([-A-Za-z0-9_]+)[^>]*>/,Po=/([a-zA-Z_:][-a-zA-Z0-9_:.]*)(?:\s*=\s*(?:(?:"((?:\\.|[^"])*)")|(?:'((?:\\.|[^'])*)')|([^>\s]+)))?/g,Sa=Go("area,base,basefont,br,col,frame,hr,img,input,link,meta,param,embed,command,keygen,source,track,wbr"),_r=Go("a,address,article,applet,aside,audio,blockquote,button,canvas,center,dd,del,dir,div,dl,dt,fieldset,figcaption,figure,footer,form,frameset,h1,h2,h3,h4,h5,h6,header,hgroup,hr,iframe,isindex,li,map,menu,noframes,noscript,object,ol,output,p,pre,section,script,table,tbody,td,tfoot,th,thead,tr,ul,video"),br=Go("abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var"),na=Go("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr"),Va=Go("checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected"),jr=Go("script,style");function ws(_,L){var z,j,X,ee=[],ue=_;for(ee.last=function(){return this[this.length-1]};_;){if(j=!0,!ee.last()||!jr[ee.last()]){if(_.indexOf("<!--")==0?(z=_.indexOf("-->"),z>=0&&(L.comment&&L.comment(_.substring(4,z)),_=_.substring(z+3),j=!1)):_.indexOf("</")==0?(X=_.match(Di),X&&(_=_.substring(X[0].length),X[0].replace(Di,Ue),j=!1)):_.indexOf("<")==0&&(X=_.match(ei),X&&(_=_.substring(X[0].length),X[0].replace(ei,Me),j=!1)),j){z=_.indexOf("<");var be=z<0?_:_.substring(0,z);_=z<0?"":_.substring(z),L.chars&&L.chars(be)}}else _=_.replace(new RegExp("([\\s\\S]*?)</"+ee.last()+"[^>]*>"),function(ye,Ve){return Ve=Ve.replace(/<!--([\s\S]*?)-->|<!\[CDATA\[([\s\S]*?)]]>/g,"$1$2"),L.chars&&L.chars(Ve),""}),Ue("",ee.last());if(_==ue)throw"Parse Error: "+_;ue=_}Ue();function Me(ye,Ve,lt,Et){if(Ve=Ve.toLowerCase(),_r[Ve])for(;ee.last()&&br[ee.last()];)Ue("",ee.last());if(na[Ve]&&ee.last()==Ve&&Ue("",Ve),Et=Sa[Ve]||!!Et,Et||ee.push(Ve),L.start){var Wt=[];lt.replace(Po,function(mt,ht){var Mt=arguments[2]?arguments[2]:arguments[3]?arguments[3]:arguments[4]?arguments[4]:Va[ht]?ht:"";Wt.push({name:ht,value:Mt,escaped:Mt.replace(/(^|[^\\])"/g,'$1\\"')})}),L.start&&L.start(Ve,Wt,Et)}}function Ue(ye,Ve){if(Ve)for(var lt=ee.length-1;lt>=0&&ee[lt]!=Ve;lt--);else var lt=0;if(lt>=0){for(var Et=ee.length-1;Et>=lt;Et--)L.end&&L.end(ee[Et]);ee.length=lt}}}function Go(_){for(var L={},z=_.split(","),j=0;j<z.length;j++)L[z[j]]=!0;return L}function Qs(_){return _.replace(/<\?xml.*\?>\n/,"").replace(/<!doctype.*>\n/,"").replace(/<!DOCTYPE.*>\n/,"")}function Ss(_){return _.reduce(function(L,z){let j=z.value,X=z.name;return j.match(/ /)&&["style","src"].indexOf(X)===-1&&(j=j.split(" ")),L[X]?Array.isArray(L[X])?L[X].push(j):L[X]=[L[X],j]:L[X]=j,L},{})}function Cs(_){_=Qs(_);let L=[],z={node:"root",children:[]};return ws(_,{start:function(j,X,ee){let ue={name:j};if(X.length!==0&&(ue.attrs=Ss(X)),ee){let be=L[0]||z;be.children||(be.children=[]),be.children.push(ue)}else L.unshift(ue)},end:function(j){let X=L.shift();if(X.name!==j&&console.error("invalid state: mismatch end tag"),L.length===0)z.children.push(X);else{let ee=L[0];ee.children||(ee.children=[]),ee.children.push(X)}},chars:function(j){let X={type:"text",text:j};if(L.length===0)z.children.push(X);else{let ee=L[0];ee.children||(ee.children=[]),ee.children.push(X)}},comment:function(j){let X={node:"comment",text:j},ee=L[0];ee.children||(ee.children=[]),ee.children.push(X)}}),z.children}let El={nodes:{type:[Array,String],default:function(){return[]}}},el=16;var Xn=A.defineComponent({name:"RichText",props:El,setup(_){let L=A.getCurrentInstance();return()=>{let z=_.nodes;return typeof z=="string"&&(z=Cs(z)),A.createVNode(A.resolveComponent("u-rich-text"),{value:As(z||[],L.root,{defaultFontSize:el})},null)}}});function As(_,L,z){let j=["span","a","image","img"],X={blockquote:Ve,br:mt,div:Ve,dl:Ve,h1:Et(2),h2:Et(1.5),h3:Et(1.17),h4:Et(1),h5:Et(.83),h6:Et(.67),hr:Ve,ol:Ve,p:Ve,strong:Wt,table:Ve,tbody:Ve,tfoot:Ve,thead:Ve,ul:Ve},ee=/&(amp|gt|lt|nbsp|quot|apos);/g,ue={amp:"&",gt:">",lt:"<",nbsp:" ",quot:'"',apos:"'"},be={type:"span",__type:"break",attr:{value:`
`}},Me={__block:!0,__break:!0,children:[]},Ue=null;function ye(ut){let jt=Object.create(null);if(ut.attrs){let Vt=(ut.attrs.class||"").split(" ");Object.assign(jt,A.parseClassList(Vt,L),Vo(ut.attrs.style||""))}if(ut.name==="img"||ut.name==="image"){let Vt=ut.attrs;jt.width=jt.width||Vt.width,jt.height=jt.height||Vt.height}return jt}function Ve(ut){return ut.__block=!0,ut}function lt(ut,jt){return ut.style&&!ut.style.fontSize&&(ut.style.fontSize=z.defaultFontSize*jt),Ve(Wt(ut))}function Et(ut){return function(jt){return lt(jt,ut)}}function Wt(ut){return ut.style&&!ut.style.fontWeight&&(ut.style.fontWeight="bold"),ut}function mt(ut){return ut.__value=" ",Ve(ut)}function ht(ut){return ut.replace(ee,function(jt,Vt){return ue[Vt]})}function Mt(ut){let jt=(ut.name||"").toLowerCase(),Vt=jt,Fn=X[jt];j.indexOf(jt)===-1&&(jt="span"),jt==="img"&&(jt="image");let sn={type:jt,__type:Vt,attr:Object.create(null)};return(ut.type==="text"||ut.text)&&(sn.__value=sn.attr.value=ht((ut.text||"").trim())),ut.attrs&&Object.keys(ut.attrs).forEach(rn=>{rn!=="class"&&rn!=="style"&&(sn.attr[rn]=ut.attrs[rn])}),sn.style=ye(ut),Fn&&Fn(sn),(Me.__block||sn.__block)&&(Ue||(Me.children.push(be),Ue=[Me,be])),Me=sn,(Me.__value||Me.type==="image"&&Me.attr.src)&&(Ue=null),sn.children=Cn(ut.children),Me=sn,Me.__block&&Me.style.height&&!/^0(px)?$/.test(Me.style.height)&&(Ue=null),sn}function Cn(ut){return Array.isArray(ut)?ut.map(jt=>Mt(jt)):[]}let Ht=Cn(_);if(Ue){let[ut,jt]=Ue,Vt=ut.children,Fn=Vt.indexOf(jt);Vt.splice(Fn,1)}return Ht}let Io={};function po(_,L,z){let{adpid:j,width:X}=_,ee=j+"-"+X,ue=Io[ee];if(ue&&ue.length>0){L(ue.splice(0,1)[0]);return}k.ad.getAds(_,be=>{let Me=be.ads;L(Me.splice(0,1)[0]),Io[ee]=ue?ue.concat(Me):Me},be=>{z({errCode:be.code,errMsg:be.message})})}let Os={adpid:{type:[Number,String],default:""},data:{type:String,default:""},width:{type:String,default:""},channel:{type:String,default:""}},ci={load:"load",close:"close",error:"error",downloadchange:"downloadchange"};var os=A.defineComponent({name:"Ad",props:Os,emits:[ci.load,ci.close,ci.error,ci.downloadchange],setup(_,{emit:L}){let z=A.ref(null),j=Hn(z,L),X=Qn();A.watch(()=>_.adpid,ue=>{qn(X,_,j)}),A.watch(()=>_.data,ue=>{X.data=ue}),A.onMounted(()=>{v(()=>{vr(z.value).then(({width:ue})=>{X.width=ue===0?-1:ue,qn(X,_,j)})},50)});let ee={onDownloadchange(ue){j(ci.downloadchange,ue)},onDislike(ue){j(ci.close,ue)}};return()=>A.createVNode("u-ad",A.mergeProps({ref:z},{data:X.data,rendering:!0},ee),null)}});function Qn(_){let L=A.ref("");return A.reactive({width:0,data:L})}function qn(_,L,z){po({adpid:L.adpid,width:_.width},j=>{_.data=j,z(ci.load,{})},j=>{z(ci.error,j)})}let No={};function as(_,L,z,j,X){let ee=_+"-"+L,ue=No[ee];if(ue&&ue.length>0){j(ue.splice(0,1)[0]);return}k.ad.getDrawAds({adpid:String(_),count:3,width:L},be=>{let Me=be.ads;j(Me.splice(0,1)[0]),No[ee]=ue?ue.concat(Me):Me},be=>{X({errCode:be.code,errMsg:be.message})})}let Ts={adpid:{type:[Number,String],default:""},data:{type:String,default:""},width:{type:String,default:""}},ko={load:"load",close:"close",error:"error"};var Ca=A.defineComponent({name:"AdDraw",props:Ts,emits:[ko.load,ko.close,ko.error],setup(_,{emit:L}){let z=A.ref(null),j=Hn(z,L),X=ss();A.watch(()=>_.adpid,ue=>{ls(X,_,j)}),A.watch(()=>_.data,ue=>{X.data=ue});let ee={onDislike(ue){j(ko.close,ue)}};return A.onMounted(()=>{v(()=>{vr(z.value).then(({width:ue,height:be})=>{X.width=ue===0?-1:ue,X.height=be===0?-1:be,ls(X,_,j)})},50)}),()=>{let{data:ue}=X;return A.createVNode("u-ad-draw",A.mergeProps({ref:z},{data:ue,rendering:!0},ee),null)}}});function ss(_){let L=A.ref("");return A.reactive({width:0,height:0,data:L})}function ls(_,L,z){as(L.adpid,_.width,_.height,j=>{_.data=j,z(ko.load,{})},j=>{z(ko.error,j)})}var Aa={Navigator:en,Label:ri,Button:Rr,MovableArea:bi,MovableView:ta,Progress:$o,PickerView:Ei,PickerViewColumn:nn,Picker:ma,USlider:jo,Switch:fr,Checkbox:Mi,CheckboxGroup:Si,Radio:G,RadioGroup:J,Form:Xe,Icon:Da,Swiper:La,SwiperItem:To,RichText:Xn,Ad:os,AdDraw:Ca};return Aa}(x,We,At);return an}function YT(v,l){let{UniShared:b,Vue:O}=l;function x(k,u,P){let We=k.$[u];return We&&b.invokeArrayFns(We,P)}let S=v.setup;return v.inheritAttrs=!1,v.setup=(k,u)=>{let{attrs:{__pageId:P,__pagePath:We,__pageQuery:At}}=u,an=l.__uniRoutes.find(Kn=>Kn.meta.route===We),ce=O.getCurrentInstance().proxy;if(an&&(an.meta.isSubNVue||GT(ce,l,{__pageId:P,__pagePath:We})),O.onMounted(()=>{O.nextTick(()=>{x(ce,b.ON_READY)})}),O.onBeforeUnmount(()=>{x(ce,b.ON_UNLOAD)}),S)return S(At,u)},v}function GT(v,l,{__pageId:b,__pagePath:O}){let x=l.getCurrentPages(),S=x[x.length-1];if(S&&S.__setup)S.__setup(v,S);else{let k="/"+O;return l.__registerPage({url:k,path:k,query:{},openType:"launch",webview:{id:b+""},nvuePageVm:v})}}var Ic={},hg;function pg(v){hg=v}var Yu;function qT(v){if(Yu)return Yu;let l=new v.Emitter;return Yu={on(b,O){return l.on(b,O)},once(b,O){return l.once(b,O)},off(b,O){return l.off(b,O)},emit(b,...O){return l.emit(b,...O)}},Yu}function KT(v){return(l,b,O)=>{let{nvue:x}=b,S=zu(v,b);b.Vue=S,Ic[l]={instanceId:l,config:x.config,document:x.document,data:O};let{createApp:k}=S;S.createVueApp=S.createApp=(u,P)=>(b.__uniConfig.styles=u.styles||[],k(u,P).use(JT,l,b)),S.createPageApp=(u,P)=>{YT(u,b);let We=P.$store;delete P.$store;let At=k(u,P);return We&&At.use(We),At.use(XT,S,l,b)}}}var JT={install(v,l,b){cu(b).initApp(v),ZT(v,l,b)}};function ZT(v,l,b){let{mount:O}=v,x=Ic[l];return v.mount=S=>{let k=S==="#app",u=x.app=O(gg(x.document,{isRoot:k}));return k&&b.__registerApp(u),u},v}var XT={install(v,l,b,O){let{weex:x,plus:S,BroadcastChannel:k,VueShared:u,UniShared:P,getCurrentPages:We,setTimeout:At,clearTimeout:an}=O;v.config.globalProperties.$requireNativePlugin=x.requireModule;let A=zT({uni:hg,Vue:l,weex:x,plus:S,BroadcastChannel:k,UniViewJSBridge:qT(P),VueShared:u,UniShared:P,getCurrentPages:We,setTimeout:At,clearTimeout:an});Object.keys(A).forEach(ce=>{v.component(l.hyphenate(ce),A[ce])}),cu(O).initApp(v),QT(v,b,O)}};function QT(v,l,{nvue:b}){let{config:{compilerOptions:O},mount:x}=v;O.isCustomElement=k=>!!b.supports(`@component/${k}`);let S=Ic[l];return v.mount=k=>{let u=k==="#root",P=S.app=x(gg(S.document,{isRoot:u}));if(u)try{b.document.taskCenter.send("dom",{action:"createFinish"},[])}catch(We){}return P},v}function gg(v,{isRoot:l}){if(l)return v.documentElement;let b=v.createComment("root");return v.documentElement.appendChild(b),b}function vg(v){let l=Ic[v];if(l&&l.app&&l.document){try{l.app.$.appContext.app.unmount(),l.document.destroy()}catch(b){}delete l.document,delete l.app}delete Ic[v]}function mg(v){let l=Ic[v];if(!l||!l.app)return new Error(`refreshInstance: instance ${v} not found!`);l.document.taskCenter.send("dom",{action:"refreshFinish"},[])}function eP(v,l){let{UniShared:b,VueShared:O,VueReactivity:x}=v;var S=function(k,u,P,We){"use strict";var At=[];function an(o){At.push(o)}function A(){At.pop()}function ce(o){P.pauseTracking();for(var c=At.length?At[At.length-1].component:null,h=c&&c.appContext.config.warnHandler,m=Kn(),C=arguments.length,T=new Array(C>1?C-1:0),B=1;B<C;B++)T[B-1]=arguments[B];if(h)$t(h,c,11,[o+T.join(""),c&&c.proxy,m.map(U=>{var{vnode:Q}=U;return"at <".concat(Ra(c,Q.type),">")}).join(`
`),m]);else{var Y=["[Vue warn]: ".concat(o),...T];m.length&&Y.push(`
`,...Un(m)),console.warn(...Y)}P.resetTracking()}function Kn(){var o=At[At.length-1];if(!o)return[];for(var c=[];o;){var h=c[0];h&&h.vnode===o?h.recurseCount++:c.push({vnode:o,recurseCount:0});var m=o.component&&o.component.parent;o=m&&m.vnode}return c}function Un(o){var c=[];return o.forEach((h,m)=>{c.push(...m===0?[]:[`
`],...bt(h))}),c}function bt(o){var{vnode:c,recurseCount:h}=o,m=h>0?"... (".concat(h," recursive calls)"):"",C=c.component?c.component.parent==null:!1,T=" at <".concat(Ra(c.component,c.type,C)),B=">"+m;return c.props?[T,...se(c.props),B]:[T+B]}function se(o){var c=[],h=Object.keys(o);return h.slice(0,3).forEach(m=>{c.push(...re(m,o[m]))}),h.length>3&&c.push(" ..."),c}function re(o,c,h){return u.isString(c)?(c=JSON.stringify(c),h?c:["".concat(o,"=").concat(c)]):typeof c=="number"||typeof c=="boolean"||c==null?h?c:["".concat(o,"=").concat(c)]:P.isRef(c)?(c=re(o,P.toRaw(c.value),!0),h?c:["".concat(o,"=Ref<"),c,">"]):u.isFunction(c)?["".concat(o,"=fn").concat(c.name?"<".concat(c.name,">"):"")]:(c=P.toRaw(c),h?c:["".concat(o,"="),c])}var Gt={sp:"serverPrefetch hook",bc:"beforeCreate hook",c:"created hook",bm:"beforeMount hook",m:"mounted hook",bu:"beforeUpdate hook",u:"updated",bum:"beforeUnmount hook",um:"unmounted hook",a:"activated hook",da:"deactivated hook",ec:"errorCaptured hook",rtc:"renderTracked hook",rtg:"renderTriggered hook",[0]:"setup function",[1]:"render function",[2]:"watcher getter",[3]:"watcher callback",[4]:"watcher cleanup function",[5]:"native event handler",[6]:"component event handler",[7]:"vnode hook",[8]:"directive hook",[9]:"transition hook",[10]:"app errorHandler",[11]:"app warnHandler",[12]:"ref function",[13]:"async component loader",[14]:"scheduler flush. This is likely a Vue internals bug. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/core"};function $t(o,c,h,m){var C;try{C=m?o(...m):o()}catch(T){Or(T,c,h)}return C}function en(o,c,h,m){if(u.isFunction(o)){var C=$t(o,c,h,m);return C&&u.isPromise(C)&&C.catch(Y=>{Or(Y,c,h)}),C}for(var T=[],B=0;B<o.length;B++)T.push(en(o[B],c,h,m));return T}function Or(o,c,h){var m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0,C=c?c.vnode:null;if(c){for(var T=c.parent,B=c.proxy,Y=Gt[h]||h;T;){var U=T.ec;if(U){for(var Q=0;Q<U.length;Q++)if(U[Q](o,B,Y)===!1)return}T=T.parent}var Se=c.appContext.config.errorHandler;if(Se){$t(Se,null,10,[o,B,Y]);return}}Vr(o,h,C,m)}function Vr(o,c,h){var m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0;{var C=Gt[c]||c;if(h&&an(h),ce("Unhandled error".concat(C?" during execution of ".concat(C):"")),h&&A(),m)throw o;console.error(o)}}var pr=!1,Pn=!1,qt=[],cn=0,Jn=[],Dn=null,rr=0,Gn=[],Re=null,ct=0,St=Promise.resolve(),Kt=null,mn=null,un=100;function Tr(o){var c=Kt||St;return o?c.then(this?o.bind(this):o):c}function ri(o){for(var c=cn+1,h=qt.length;c<h;){var m=c+h>>>1,C=ur(qt[m]);C<o?c=m+1:h=m}return c}function Jr(o){(!qt.length||!qt.includes(o,pr&&o.allowRecurse?cn+1:cn))&&o!==mn&&(o.id==null?qt.push(o):qt.splice(ri(o.id),0,o),_i())}function _i(){!pr&&!Pn&&(Pn=!0,Kt=St.then(Yi))}function gr(o){var c=qt.indexOf(o);c>cn&&qt.splice(c,1)}function bo(o,c,h,m){u.isArray(o)?h.push(...o):(!c||!c.includes(o,o.allowRecurse?m+1:m))&&h.push(o),_i()}function oo(o){bo(o,Dn,Jn,rr)}function yo(o){bo(o,Re,Gn,ct)}function ao(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;if(Jn.length){for(mn=c,Dn=[...new Set(Jn)],Jn.length=0,o=o||new Map,rr=0;rr<Dn.length;rr++)so(o,Dn[rr])||Dn[rr]();Dn=null,rr=0,mn=null,ao(o,c)}}function zi(o){if(Gn.length){var c=[...new Set(Gn)];if(Gn.length=0,Re){Re.push(...c);return}for(Re=c,o=o||new Map,Re.sort((h,m)=>ur(h)-ur(m)),ct=0;ct<Re.length;ct++)so(o,Re[ct])||Re[ct]();Re=null,ct=0}}var ur=o=>o.id==null?1/0:o.id;function Yi(o){Pn=!1,pr=!0,o=o||new Map,ao(o),qt.sort((m,C)=>ur(m)-ur(C));var c=m=>so(o,m);try{for(cn=0;cn<qt.length;cn++){var h=qt[cn];if(h&&h.active!==!1){if(c(h))continue;$t(h,null,14)}}}finally{cn=0,qt.length=0,zi(o),pr=!1,Kt=null,(qt.length||Jn.length||Gn.length)&&Yi(o)}}function so(o,c){if(!o.has(c))o.set(c,1);else{var h=o.get(c);if(h>un){var m=c.ownerInstance,C=m&&Ls(m.type);return ce("Maximum recursive updates exceeded".concat(C?" in component <".concat(C,">"):"",". ")+"This means you have a reactive effect that is mutating its own dependencies and thus recursively triggering itself. Possible sources include component template, render function, updated hook or watcher source function."),!0}else o.set(c,h+1)}}var Rr=!1,Pr=new Set;u.getGlobalThis().__VUE_HMR_RUNTIME__={createRecord:Eo(vr),rerender:Eo(Ni),reload:Eo(Hn)};var ir=new Map;function Gi(o){var c=o.type.__hmrId,h=ir.get(c);h||(vr(c,o.type),h=ir.get(c)),h.instances.add(o)}function Vo(o){ir.get(o.type.__hmrId).instances.delete(o)}function vr(o,c){return ir.has(o)?!1:(ir.set(o,{initialDef:bi(c),instances:new Set}),!0)}function bi(o){return Fs(o)?o.__vccOpts:o}function Ni(o,c){var h=ir.get(o);!h||(h.initialDef.render=c,[...h.instances].forEach(m=>{c&&(m.render=c,bi(m.type).render=c),m.renderCache=[],Rr=!0,m.update(),Rr=!1}))}function Hn(o,c){var h=ir.get(o);if(!!h){c=bi(c),ki(h.initialDef,c);var m=[...h.instances];for(var C of m){var T=bi(C.type);Pr.has(T)||(T!==h.initialDef&&ki(T,c),Pr.add(T)),C.appContext.optionsCache.delete(C.type),C.ceReload?(Pr.add(T),C.ceReload(c.styles),Pr.delete(T)):C.parent?(Jr(C.parent.update),C.parent.type.__asyncLoader&&C.parent.ceReload&&C.parent.ceReload(c.styles)):C.appContext.reload?C.appContext.reload():typeof window!="undefined"?window.location.reload():console.warn("[HMR] Root or manually mounted instance modified. Full reload required.")}yo(()=>{for(var B of m)Pr.delete(bi(B.type))})}}function ki(o,c){u.extend(o,c);for(var h in o)h!=="__file"&&!(h in c)&&delete o[h]}function Eo(o){return(c,h)=>{try{return o(c,h)}catch(m){console.error(m),console.warn("[HMR] Something went wrong during Vue component hot-reload. Full reload required.")}}}k.devtools=void 0;var yi=[],$r=!1;function Zn(o){for(var c=arguments.length,h=new Array(c>1?c-1:0),m=1;m<c;m++)h[m-1]=arguments[m];k.devtools?k.devtools.emit(o,...h):$r||yi.push({event:o,args:h})}function Ur(o,c){var h,m;if(k.devtools=o,k.devtools)k.devtools.enabled=!0,yi.forEach(T=>{var{event:B,args:Y}=T;return k.devtools.emit(B,...Y)}),yi=[];else if(typeof window!="undefined"&&window.HTMLElement&&!((m=(h=window.navigator)===null||h===void 0?void 0:h.userAgent)===null||m===void 0?void 0:m.includes("jsdom"))){var C=c.__VUE_DEVTOOLS_HOOK_REPLAY__=c.__VUE_DEVTOOLS_HOOK_REPLAY__||[];C.push(T=>{Ur(T,c)}),setTimeout(()=>{k.devtools||(c.__VUE_DEVTOOLS_HOOK_REPLAY__=null,$r=!0,yi=[])},3e3)}else $r=!0,yi=[]}function Ln(o,c){Zn("app:init",o,c,{Fragment:sr,Text:Rn,Comment:Nn,Static:yn})}function xr(o){Zn("app:unmount",o)}var lo=wo("component:added"),co=wo("component:updated"),qi=wo("component:removed");function wo(o){return c=>{Zn(o,c.appContext.app,c.uid,c.parent?c.parent.uid:void 0,c)}}var ii=Co("perf:start"),So=Co("perf:end");function Co(o){return(c,h,m)=>{Zn(o,c.appContext.app,c.uid,c,h,m)}}function ga(o,c,h){Zn("component:emit",o.appContext.app,o,c,h)}function ea(o,c){if(!o.isUnmounted){for(var h=o.vnode.props||u.EMPTY_OBJ,m=arguments.length,C=new Array(m>2?m-2:0),T=2;T<m;T++)C[T-2]=arguments[T];{var{emitsOptions:B,propsOptions:[Y]}=o;if(B)if(!(c in B))(!Y||!(u.toHandlerKey(c)in Y))&&ce('Component emitted event "'.concat(c,'" but it is neither declared in ')+'the emits option nor as an "'.concat(u.toHandlerKey(c),'" prop.'));else{var U=B[c];if(u.isFunction(U)){var Q=U(...C);Q||ce('Invalid event arguments: event validation failed for event "'.concat(c,'".'))}}}var Se=C,fe=c.startsWith("update:"),oe=fe&&c.slice(7);if(oe&&oe in h){var Ye="".concat(oe==="modelValue"?"model":oe,"Modifiers"),{number:qe,trim:dt}=h[Ye]||u.EMPTY_OBJ;dt?Se=C.map(ot=>ot.trim()):qe&&(Se=C.map(u.toNumber))}ga(o,c,Se);{var Ee=c.toLowerCase();Ee!==c&&h[u.toHandlerKey(Ee)]&&ce('Event "'.concat(Ee,'" is emitted in component ')+"".concat(Ra(o,o.type),' but the handler is registered for "').concat(c,'". ')+"Note that HTML attributes are case-insensitive and you cannot use v-on to listen to camelCase events when using in-DOM templates. "+'You should probably use "'.concat(u.hyphenate(c),'" instead of "').concat(c,'".'))}var Pe,De=h[Pe=u.toHandlerKey(c)]||h[Pe=u.toHandlerKey(u.camelize(c))];!De&&fe&&(De=h[Pe=u.toHandlerKey(u.hyphenate(c))]),De&&en(De,o,6,Se);var Ne=h[Pe+"Once"];if(Ne){if(!o.emitted)o.emitted={};else if(o.emitted[Pe])return;o.emitted[Pe]=!0,en(Ne,o,6,Se)}}}function ta(o,c){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,m=c.emitsCache,C=m.get(o);if(C!==void 0)return C;var T=o.emits,B={},Y=!1;if(!u.isFunction(o)){var U=Q=>{var Se=ta(Q,c,!0);Se&&(Y=!0,u.extend(B,Se))};!h&&c.mixins.length&&c.mixins.forEach(U),o.extends&&U(o.extends),o.mixins&&o.mixins.forEach(U)}return!T&&!Y?(m.set(o,null),null):(u.isArray(T)?T.forEach(Q=>B[Q]=null):u.extend(B,T),m.set(o,B),B)}function Ki(o,c){return!o||!u.isOn(c)?!1:(c=c.slice(2).replace(/Once$/,""),u.hasOwn(o,c[0].toLowerCase()+c.slice(1))||u.hasOwn(o,u.hyphenate(c))||u.hasOwn(o,c))}var In=null,gn=null;function xn(o){var c=In;return In=o,gn=o&&o.type.__scopeId||null,c}function oi(o){gn=o}function $o(){gn=null}var Ut=o=>Ie;function Ie(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:In;if(!c||o._n)return o;var h=function(){h._d&&Ot(-1);var m=xn(c),C=o(...arguments);return xn(m),h._d&&Ot(1),co(c),C};return h._n=!0,h._c=!0,h._d=!0,h}var Ri=!1;function xi(){Ri=!0}function Ei(o){var{type:c,vnode:h,proxy:m,withProxy:C,props:T,propsOptions:[B],slots:Y,attrs:U,emit:Q,render:Se,renderCache:fe,data:oe,setupState:Ye,ctx:qe,inheritAttrs:dt}=o,Ee,Pe,De=xn(o);Ri=!1;try{if(h.shapeFlag&4){var Ne=C||m;Ee=pi(Se.call(Ne,Ne,fe,T,Ye,oe,qe)),Pe=U}else{var ot=c;U===T&&xi(),Ee=pi(ot.length>1?ot(T,{get attrs(){return xi(),U},slots:Y,emit:Q}):ot(T,null)),Pe=c.props?U:Bi(U)}}catch(K){Li.length=0,Or(K,o,1),Ee=An(Nn)}var Ze=Ee,i=void 0;if(Ee.patchFlag>0&&Ee.patchFlag&2048&&([Ze,i]=Ji(Ee)),Pe&&dt!==!1){var a=Object.keys(Pe),{shapeFlag:f}=Ze;if(a.length){if(f&(1|6))B&&a.some(u.isModelListener)&&(Pe=Uo(Pe,B)),Ze=Vi(Ze,Pe);else if(!Ri&&Ze.type!==Nn){for(var p=Object.keys(U),E=[],w=[],N=0,V=p.length;N<V;N++){var D=p[N];u.isOn(D)?u.isModelListener(D)||E.push(D[2].toLowerCase()+D.slice(3)):w.push(D)}w.length&&ce("Extraneous non-props attributes ("+"".concat(w.join(", "),") ")+"were passed to component but could not be automatically inherited because component renders fragment or text root nodes."),E.length&&ce("Extraneous non-emits event listeners ("+"".concat(E.join(", "),") ")+'were passed to component but could not be automatically inherited because component renders fragment or text root nodes. If the listener is intended to be a component custom event listener only, declare it using the "emits" option.')}}}return h.dirs&&(nn(Ze)||ce("Runtime directive used on component with non-element root node. The directives will not function as intended."),Ze.dirs=Ze.dirs?Ze.dirs.concat(h.dirs):h.dirs),h.transition&&(nn(Ze)||ce("Component inside <Transition> renders non-element root node that cannot be animated."),Ze.transition=h.transition),i?i(Ze):Ee=Ze,xn(De),Ee}var Ji=o=>{var c=o.children,h=o.dynamicChildren,m=Zr(c);if(!m)return[o,void 0];var C=c.indexOf(m),T=h?h.indexOf(m):-1,B=Y=>{c[C]=Y,h&&(T>-1?h[T]=Y:Y.patchFlag>0&&(o.dynamicChildren=[...h,Y]))};return[pi(m),B]};function Zr(o){for(var c,h=0;h<o.length;h++){var m=o[h];if(zr(m)){if(m.type!==Nn||m.children==="v-if"){if(c)return;c=m}}else return}return c}var Bi=o=>{var c;for(var h in o)(h==="class"||h==="style"||u.isOn(h))&&((c||(c={}))[h]=o[h]);return c},Uo=(o,c)=>{var h={};for(var m in o)(!u.isModelListener(m)||!(m.slice(9)in c))&&(h[m]=o[m]);return h},nn=o=>o.shapeFlag&(6|1)||o.type===Nn;function va(o,c,h){var{props:m,children:C,component:T}=o,{props:B,children:Y,patchFlag:U}=c,Q=T.emitsOptions;if((C||Y)&&Rr||c.dirs||c.transition)return!0;if(h&&U>=0){if(U&1024)return!0;if(U&16)return m?_n(m,B,Q):!!B;if(U&8)for(var Se=c.dynamicProps,fe=0;fe<Se.length;fe++){var oe=Se[fe];if(B[oe]!==m[oe]&&!Ki(Q,oe))return!0}}else return(C||Y)&&(!Y||!Y.$stable)?!0:m===B?!1:m?B?_n(m,B,Q):!0:!!B;return!1}function _n(o,c,h){var m=Object.keys(c);if(m.length!==Object.keys(o).length)return!0;for(var C=0;C<m.length;C++){var T=m[C];if(c[T]!==o[T]&&!Ki(h,T))return!0}return!1}function Xr(o,c){for(var{vnode:h,parent:m}=o;m&&m.subTree===h;)(h=m.vnode).el=c,m=m.parent}var ai=o=>o.__isSuspense,wi={name:"Suspense",__isSuspense:!0,process(o,c,h,m,C,T,B,Y,U,Q){o==null?Oo(c,h,m,C,T,B,Y,U,Q):ma(o,c,h,m,C,B,Y,U,Q)},hydrate:jo,create:Ho,normalize:Ma},Qr=wi;function Ao(o,c){var h=o.props&&o.props[c];u.isFunction(h)&&h()}function Oo(o,c,h,m,C,T,B,Y,U){var{p:Q,o:{createElement:Se}}=U,fe=Se("div"),oe=o.suspense=Ho(o,C,m,c,fe,h,T,B,Y,U);Q(null,oe.pendingBranch=o.ssContent,fe,null,m,oe,T,B),oe.deps>0?(Ao(o,"onPending"),Ao(o,"onFallback"),Q(null,o.ssFallback,c,h,m,null,T,B),or(oe,o.ssFallback)):oe.resolve()}function ma(o,c,h,m,C,T,B,Y,U){var{p:Q,um:Se,o:{createElement:fe}}=U,oe=c.suspense=o.suspense;oe.vnode=c,c.el=o.el;var Ye=c.ssContent,qe=c.ssFallback,{activeBranch:dt,pendingBranch:Ee,isInFallback:Pe,isHydrating:De}=oe;if(Ee)oe.pendingBranch=Ye,er(Ye,Ee)?(Q(Ee,Ye,oe.hiddenContainer,null,C,oe,T,B,Y),oe.deps<=0?oe.resolve():Pe&&(Q(dt,qe,h,m,C,null,T,B,Y),or(oe,qe))):(oe.pendingId++,De?(oe.isHydrating=!1,oe.activeBranch=Ee):Se(Ee,C,oe),oe.deps=0,oe.effects.length=0,oe.hiddenContainer=fe("div"),Pe?(Q(null,Ye,oe.hiddenContainer,null,C,oe,T,B,Y),oe.deps<=0?oe.resolve():(Q(dt,qe,h,m,C,null,T,B,Y),or(oe,qe))):dt&&er(Ye,dt)?(Q(dt,Ye,h,m,C,oe,T,B,Y),oe.resolve(!0)):(Q(null,Ye,oe.hiddenContainer,null,C,oe,T,B,Y),oe.deps<=0&&oe.resolve()));else if(dt&&er(Ye,dt))Q(dt,Ye,h,m,C,oe,T,B,Y),or(oe,Ye);else if(Ao(c,"onPending"),oe.pendingBranch=Ye,oe.pendingId++,Q(null,Ye,oe.hiddenContainer,null,C,oe,T,B,Y),oe.deps<=0)oe.resolve();else{var{timeout:Ne,pendingId:ot}=oe;Ne>0?setTimeout(()=>{oe.pendingId===ot&&oe.fallback(qe)},Ne):Ne===0&&oe.fallback(qe)}}var _a=!1;function Ho(o,c,h,m,C,T,B,Y,U,Q){var Se=arguments.length>10&&arguments[10]!==void 0?arguments[10]:!1;_a||(_a=!0,console[console.info?"info":"log"]("<Suspense> is an experimental feature and its API will likely change."));var{p:fe,m:oe,um:Ye,n:qe,o:{parentNode:dt,remove:Ee}}=Q,Pe=u.toNumber(o.props&&o.props.timeout),De={vnode:o,parent:c,parentComponent:h,isSVG:B,container:m,hiddenContainer:C,anchor:T,deps:0,pendingId:0,timeout:typeof Pe=="number"?Pe:-1,activeBranch:null,pendingBranch:null,isInFallback:!0,isHydrating:Se,isUnmounted:!1,effects:[],resolve(){var Ne=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1;{if(!Ne&&!De.pendingBranch)throw new Error("suspense.resolve() is called without a pending branch.");if(De.isUnmounted)throw new Error("suspense.resolve() is called on an already unmounted suspense boundary.")}var{vnode:ot,activeBranch:Ze,pendingBranch:i,pendingId:a,effects:f,parentComponent:p,container:E}=De;if(De.isHydrating)De.isHydrating=!1;else if(!Ne){var w=Ze&&i.transition&&i.transition.mode==="out-in";w&&(Ze.transition.afterLeave=()=>{a===De.pendingId&&oe(i,E,N,0)});var{anchor:N}=De;Ze&&(N=qe(Ze),Ye(Ze,p,De,!0)),w||oe(i,E,N,0)}or(De,i),De.pendingBranch=null,De.isInFallback=!1;for(var V=De.parent,D=!1;V;){if(V.pendingBranch){V.effects.push(...f),D=!0;break}V=V.parent}D||yo(f),De.effects=[],Ao(ot,"onResolve")},fallback(Ne){if(!!De.pendingBranch){var{vnode:ot,activeBranch:Ze,parentComponent:i,container:a,isSVG:f}=De;Ao(ot,"onFallback");var p=qe(Ze),E=()=>{!De.isInFallback||(fe(null,Ne,a,p,i,null,f,Y,U),or(De,Ne))},w=Ne.transition&&Ne.transition.mode==="out-in";w&&(Ze.transition.afterLeave=E),De.isInFallback=!0,Ye(Ze,i,null,!0),w||E()}},move(Ne,ot,Ze){De.activeBranch&&oe(De.activeBranch,Ne,ot,Ze),De.container=Ne},next(){return De.activeBranch&&qe(De.activeBranch)},registerDep(Ne,ot){var Ze=!!De.pendingBranch;Ze&&De.deps++;var i=Ne.vnode.el;Ne.asyncDep.catch(a=>{Or(a,Ne,0)}).then(a=>{if(!(Ne.isUnmounted||De.isUnmounted||De.pendingId!==Ne.suspenseId)){Ne.asyncResolved=!0;var{vnode:f}=Ne;an(f),ll(Ne,a,!1),i&&(f.el=i);var p=!i&&Ne.subTree.el;ot(Ne,f,dt(i||Ne.subTree.el),i?null:qe(Ne.subTree),De,B,U),p&&Ee(p),Xr(Ne,f.el),A(),Ze&&--De.deps===0&&De.resolve()}})},unmount(Ne,ot){De.isUnmounted=!0,De.activeBranch&&Ye(De.activeBranch,h,Ne,ot),De.pendingBranch&&Ye(De.pendingBranch,h,Ne,ot)}};return De}function jo(o,c,h,m,C,T,B,Y,U){var Q=c.suspense=Ho(c,m,h,o.parentNode,l.createElement("div"),null,C,T,B,Y,!0),Se=U(o,Q.pendingBranch=c.ssContent,h,Q,T,B);return Q.deps===0&&Q.resolve(),Se}function Ma(o){var{shapeFlag:c,children:h}=o,m=c&32;o.ssContent=ba(m?h.default:h),o.ssFallback=m?ba(h.fallback):An(Nn)}function ba(o){var c;if(u.isFunction(o)){var h=wt&&o._c;h&&(o._d=!1,Fi()),o=o(),h&&(o._d=!0,c=Ct,Fe())}if(u.isArray(o)){var m=Zr(o);m||ce("<Suspense> slots expect a single root node."),o=m}return o=pi(o),c&&!o.dynamicChildren&&(o.dynamicChildren=c.filter(C=>C!==o)),o}function Ir(o,c){c&&c.pendingBranch?u.isArray(o)?c.effects.push(...o):c.effects.push(o):yo(o)}function or(o,c){o.activeBranch=c;var{vnode:h,parentComponent:m}=o,C=h.el=c.el;m&&m.subTree===h&&(m.vnode.el=C,Xr(m,C))}function Bn(o,c){if(!cr)ce("provide() can only be used inside setup().");else{var h=cr.provides,m=cr.parent&&cr.parent.provides;m===h&&(h=cr.provides=Object.create(m)),h[o]=c,cr.type.mpType==="app"&&cr.appContext.app.provide(o,c)}}function mr(o,c){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,m=cr||In;if(m){var C=m.parent==null?m.vnode.appContext&&m.vnode.appContext.provides:m.parent.provides;if(C&&o in C)return C[o];if(arguments.length>1)return h&&u.isFunction(c)?c.call(m.proxy):c;ce('injection "'.concat(String(o),'" not found.'))}else ce("inject() can only be used inside setup() or functional components.")}function fr(o,c){return Hr(o,null,c)}function ya(o,c){return Hr(o,null,Object.assign(Object.assign({},c),{flush:"post"}))}function Ea(o,c){return Hr(o,null,Object.assign(Object.assign({},c),{flush:"sync"}))}var Wo={};function uo(o,c,h){return u.isFunction(c)||ce("`watch(fn, options?)` signature has been moved to a separate API. Use `watchEffect(fn, options?)` instead. `watch` now only supports `watch(source, cb, options?) signature."),Hr(o,c,h)}function Hr(o,c){var{immediate:h,deep:m,flush:C,onTrack:T,onTrigger:B}=arguments.length>2&&arguments[2]!==void 0?arguments[2]:u.EMPTY_OBJ;c||(h!==void 0&&ce('watch() "immediate" option is only respected when using the watch(source, callback, options?) signature.'),m!==void 0&&ce('watch() "deep" option is only respected when using the watch(source, callback, options?) signature.'));var Y=Ne=>{ce("Invalid watch source: ",Ne,"A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types.")},U=cr,Q,Se=!1,fe=!1;if(P.isRef(o)?(Q=()=>o.value,Se=P.isShallow(o)):P.isReactive(o)?(Q=()=>o,m=!0):u.isArray(o)?(fe=!0,Se=o.some(P.isReactive),Q=()=>o.map(Ne=>{if(P.isRef(Ne))return Ne.value;if(P.isReactive(Ne))return Si(Ne);if(u.isFunction(Ne))return $t(Ne,U,2);Y(Ne)})):u.isFunction(o)?c?Q=()=>$t(o,U,2):Q=()=>{if(!(U&&U.isUnmounted))return Ye&&Ye(),en(o,U,3,[qe])}:(Q=u.NOOP,Y(o)),c&&m){var oe=Q;Q=()=>Si(oe())}var Ye,qe=Ne=>{Ye=De.onStop=()=>{$t(Ne,U,4)}};if(k.isInSSRComponentSetup)return qe=u.NOOP,c?h&&en(c,U,3,[Q(),fe?[]:void 0,qe]):Q(),u.NOOP;var dt=fe?[]:Wo,Ee=()=>{if(!!De.active)if(c){var Ne=De.run();(m||Se||(fe?Ne.some((ot,Ze)=>u.hasChanged(ot,dt[Ze])):u.hasChanged(Ne,dt)))&&(Ye&&Ye(),en(c,U,3,[Ne,dt===Wo?void 0:dt,qe]),dt=Ne)}else De.run()};Ee.allowRecurse=!!c;var Pe;C==="sync"?Pe=Ee:C==="post"?Pe=()=>yr(Ee,U&&U.suspense):Pe=()=>{!U||U.isMounted?oo(Ee):Ee()};var De=new P.ReactiveEffect(Q,Pe);return De.onTrack=T,De.onTrigger=B,c?h?Ee():dt=De.run():C==="post"?yr(De.run.bind(De),U&&U.suspense):De.run(),()=>{De.stop(),U&&U.scope&&u.remove(U.scope.effects,De)}}function Mi(o,c,h){var m=this.proxy,C=u.isString(o)?o.includes(".")?zo(m,o):()=>m[o]:o.bind(m,m),T;u.isFunction(c)?T=c:(T=c.handler,h=c);var B=cr;gi(this);var Y=Hr(C,T.bind(m),h);return B?gi(B):Ai(),Y}function zo(o,c){var h=c.split(".");return()=>{for(var m=o,C=0;C<h.length&&m;C++)m=m[h[C]];return m}}function Si(o,c){if(!u.isObject(o)||o.__v_skip||(c=c||new Set,c.has(o)))return o;if(c.add(o),P.isRef(o))Si(o.value,c);else if(u.isArray(o))for(var h=0;h<o.length;h++)Si(o[h],c);else if(u.isSet(o)||u.isMap(o))o.forEach(C=>{Si(C,c)});else if(u.isPlainObject(o))for(var m in o)Si(o[m],c);return o}function si(){var o={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return Po(()=>{o.isMounted=!0}),br(()=>{o.isUnmounting=!0}),o}var Nr=[Function,Array],M={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:Nr,onEnter:Nr,onAfterEnter:Nr,onEnterCancelled:Nr,onBeforeLeave:Nr,onLeave:Nr,onAfterLeave:Nr,onLeaveCancelled:Nr,onBeforeAppear:Nr,onAppear:Nr,onAfterAppear:Nr,onAppearCancelled:Nr},setup(o,c){var{slots:h}=c,m=Mn(),C=si(),T;return()=>{var B=h.default&&$e(h.default(),!0);if(!(!B||!B.length)){var Y=B[0];if(B.length>1){var U=!1;for(var Q of B)if(Q.type!==Nn){if(U){ce("<transition> can only be used on a single element or component. Use <transition-group> for lists.");break}Y=Q,U=!0}}var Se=P.toRaw(o),{mode:fe}=Se;if(fe&&fe!=="in-out"&&fe!=="out-in"&&fe!=="default"&&ce("invalid <transition> mode: ".concat(fe)),C.isLeaving)return F(Y);var oe=J(Y);if(!oe)return F(Y);var Ye=G(oe,Se,C,m);de(oe,Ye);var qe=m.subTree,dt=qe&&J(qe),Ee=!1,{getTransitionKey:Pe}=oe.type;if(Pe){var De=Pe();T===void 0?T=De:De!==T&&(T=De,Ee=!0)}if(dt&&dt.type!==Nn&&(!er(oe,dt)||Ee)){var Ne=G(dt,Se,C,m);if(de(dt,Ne),fe==="out-in")return C.isLeaving=!0,Ne.afterLeave=()=>{C.isLeaving=!1,m.update()},F(Y);fe==="in-out"&&oe.type!==Nn&&(Ne.delayLeave=(ot,Ze,i)=>{var a=he(C,dt);a[String(dt.key)]=dt,ot._leaveCb=()=>{Ze(),ot._leaveCb=void 0,delete Ye.delayedLeave},Ye.delayedLeave=i})}return Y}}}},ne=M;function he(o,c){var{leavingVNodes:h}=o,m=h.get(c.type);return m||(m=Object.create(null),h.set(c.type,m)),m}function G(o,c,h,m){var{appear:C,mode:T,persisted:B=!1,onBeforeEnter:Y,onEnter:U,onAfterEnter:Q,onEnterCancelled:Se,onBeforeLeave:fe,onLeave:oe,onAfterLeave:Ye,onLeaveCancelled:qe,onBeforeAppear:dt,onAppear:Ee,onAfterAppear:Pe,onAppearCancelled:De}=c,Ne=String(o.key),ot=he(h,o),Ze=(a,f)=>{a&&en(a,m,9,f)},i={mode:T,persisted:B,beforeEnter(a){var f=Y;if(!h.isMounted)if(C)f=dt||Y;else return;a._leaveCb&&a._leaveCb(!0);var p=ot[Ne];p&&er(o,p)&&p.el._leaveCb&&p.el._leaveCb(),Ze(f,[a])},enter(a){var f=U,p=Q,E=Se;if(!h.isMounted)if(C)f=Ee||U,p=Pe||Q,E=De||Se;else return;var w=!1,N=a._enterCb=V=>{w||(w=!0,V?Ze(E,[a]):Ze(p,[a]),i.delayedLeave&&i.delayedLeave(),a._enterCb=void 0)};f?(f(a,N),f.length<=1&&N()):N()},leave(a,f){var p=String(o.key);if(a._enterCb&&a._enterCb(!0),h.isUnmounting)return f();Ze(fe,[a]);var E=!1,w=a._leaveCb=N=>{E||(E=!0,f(),N?Ze(qe,[a]):Ze(Ye,[a]),a._leaveCb=void 0,ot[p]===o&&delete ot[p])};ot[p]=o,oe?(oe(a,w),oe.length<=1&&w()):w()},clone(a){return G(a,c,h,m)}};return i}function F(o){if(jn(o))return o=Vi(o),o.children=null,o}function J(o){return jn(o)?o.children?o.children[0]:void 0:o}function de(o,c){o.shapeFlag&6&&o.component?de(o.component.subTree,c):o.shapeFlag&128?(o.ssContent.transition=c.clone(o.ssContent),o.ssFallback.transition=c.clone(o.ssFallback)):o.transition=c}function $e(o){for(var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1,h=arguments.length>2?arguments[2]:void 0,m=[],C=0,T=0;T<o.length;T++){var B=o[T],Y=h==null?B.key:String(h)+String(B.key!=null?B.key:T);B.type===sr?(B.patchFlag&128&&C++,m=m.concat($e(B.children,c,Y))):(c||B.type!==Nn)&&m.push(Y!=null?Vi(B,{key:Y}):B)}if(C>1)for(var U=0;U<m.length;U++)m[U].patchFlag=-2;return m}function Xe(o){return u.isFunction(o)?{setup:o,name:o.name}:o}var gt=o=>!!o.type.__asyncLoader;function bn(o){u.isFunction(o)&&(o={loader:o});var{loader:c,loadingComponent:h,errorComponent:m,delay:C=200,timeout:T,suspensible:B=!0,onError:Y}=o,U=null,Q,Se=0,fe=()=>(Se++,U=null,oe()),oe=()=>{var Ye;return U||(Ye=U=c().catch(qe=>{if(qe=qe instanceof Error?qe:new Error(String(qe)),Y)return new Promise((dt,Ee)=>{var Pe=()=>dt(fe()),De=()=>Ee(qe);Y(qe,Pe,De,Se+1)});throw qe}).then(qe=>{if(Ye!==U&&U)return U;if(qe||ce("Async component loader resolved to undefined. If you are using retry(), make sure to return its return value."),qe&&(qe.__esModule||qe[Symbol.toStringTag]==="Module")&&(qe=qe.default),qe&&!u.isObject(qe)&&!u.isFunction(qe))throw new Error("Invalid async component load result: ".concat(qe));return Q=qe,qe}))};return Xe({name:"AsyncComponentWrapper",__asyncLoader:oe,get __asyncResolved(){return Q},setup(){var Ye=cr;if(Q)return()=>li(Q,Ye);var qe=De=>{U=null,Or(De,Ye,13,!m)};if(B&&Ye.suspense||k.isInSSRComponentSetup)return oe().then(De=>()=>li(De,Ye)).catch(De=>(qe(De),()=>m?An(m,{error:De}):null));var dt=P.ref(!1),Ee=P.ref(),Pe=P.ref(!!C);return C&&setTimeout(()=>{Pe.value=!1},C),T!=null&&setTimeout(()=>{if(!dt.value&&!Ee.value){var De=new Error("Async component timed out after ".concat(T,"ms."));qe(De),Ee.value=De}},T),oe().then(()=>{dt.value=!0,Ye.parent&&jn(Ye.parent.vnode)&&Jr(Ye.parent.update)}).catch(De=>{qe(De),Ee.value=De}),()=>{if(dt.value&&Q)return li(Q,Ye);if(Ee.value&&m)return An(m,{error:Ee.value});if(h&&!Pe.value)return An(h)}}})}function li(o,c){var{vnode:{ref:h,props:m,children:C}}=c,T=An(o,m,C);return T.ref=h,T}var jn=o=>o.type.__isKeepAlive,fo={name:"KeepAlive",__isKeepAlive:!0,props:{include:[String,RegExp,Array],exclude:[String,RegExp,Array],max:[String,Number]},setup(o,c){var{slots:h}=c,m=Mn(),C=m.ctx;if(!C.renderer)return h.default;var T=new Map,B=new Set,Y=null;m.__v_cache=T;var U=m.suspense,{renderer:{p:Q,m:Se,um:fe,o:{createElement:oe}}}=C,Ye=oe("div");C.activate=(Ne,ot,Ze,i,a)=>{var f=Ne.component;Se(Ne,ot,Ze,0,U),Q(f.vnode,Ne,ot,Ze,f,U,i,Ne.slotScopeIds,a),yr(()=>{f.isDeactivated=!1,f.a&&u.invokeArrayFns(f.a);var p=Ne.props&&Ne.props.onVnodeMounted;p&&lr(p,f.parent,Ne)},U),lo(f)},C.deactivate=Ne=>{var ot=Ne.component;Se(Ne,Ye,null,1,U),yr(()=>{ot.da&&u.invokeArrayFns(ot.da);var Ze=Ne.props&&Ne.props.onVnodeUnmounted;Ze&&lr(Ze,ot.parent,Ne),ot.isDeactivated=!0},U),lo(ot)};function qe(Ne){Es(Ne),fe(Ne,m,U,!0)}function dt(Ne){T.forEach((ot,Ze)=>{var i=Ls(ot.type);i&&(!Ne||!Ne(i))&&Ee(Ze)})}function Ee(Ne){var ot=T.get(Ne);!Y||ot.type!==Y.type?qe(ot):Y&&Es(Y),T.delete(Ne),B.delete(Ne)}uo(()=>[o.include,o.exclude],Ne=>{var[ot,Ze]=Ne;ot&&dt(i=>Yo(ot,i)),Ze&&dt(i=>!Yo(Ze,i))},{flush:"post",deep:!0});var Pe=null,De=()=>{Pe!=null&&T.set(Pe,Fa(m.subTree))};return Po(De),_r(De),br(()=>{T.forEach(Ne=>{var{subTree:ot,suspense:Ze}=m,i=Fa(ot);if(Ne.type===i.type){Es(i);var a=i.component.da;a&&yr(a,Ze);return}qe(Ne)})}),()=>{if(Pe=null,!h.default)return null;var Ne=h.default(),ot=Ne[0];if(Ne.length>1)return ce("KeepAlive should contain exactly one component child."),Y=null,Ne;if(!zr(ot)||!(ot.shapeFlag&4)&&!(ot.shapeFlag&128))return Y=null,ot;var Ze=Fa(ot),i=Ze.type,a=Ls(gt(Ze)?Ze.type.__asyncResolved||{}:i),{include:f,exclude:p,max:E}=o;if(f&&(!a||!Yo(f,a))||p&&a&&Yo(p,a))return Y=Ze,ot;var w=Ze.key==null?i:Ze.key,N=T.get(w);return Ze.el&&(Ze=Vi(Ze),ot.shapeFlag&128&&(ot.ssContent=Ze)),Pe=w,N?(Ze.el=N.el,Ze.component=N.component,Ze.transition&&de(Ze,Ze.transition),Ze.shapeFlag|=512,B.delete(w),B.add(w)):(B.add(w),E&&B.size>parseInt(E,10)&&Ee(B.values().next().value)),Ze.shapeFlag|=256,Y=Ze,ot}}},Da=fo;function Yo(o,c){return u.isArray(o)?o.some(h=>Yo(h,c)):u.isString(o)?o.split(",").includes(c):o.test?o.test(c):!1}function ho(o,c){wa(o,"a",c)}function La(o,c){wa(o,"da",c)}function wa(o,c){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:cr,m=o.__wdc||(o.__wdc=()=>{for(var T=h;T;){if(T.isDeactivated)return;T=T.parent}return o()});if(To(c,m,h),h)for(var C=h.parent;C&&C.parent;)jn(C.parent.vnode)&&Xs(m,c,h,C),C=C.parent}function Xs(o,c,h,m){var C=To(c,o,m,!0);na(()=>{u.remove(m[c],C)},h)}function Es(o){var c=o.shapeFlag;c&256&&(c-=256),c&512&&(c-=512),o.shapeFlag=c}function Fa(o){return o.shapeFlag&128?o.ssContent:o}function To(o,c){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:cr,m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;if(h){if(We.isRootHook(o)&&h!==h.root&&(h=h.root,We.isRootImmediateHook(o))){var C=h.proxy;en(c.bind(C),h,o,We.ON_LOAD===o?[C.$page.options]:[])}var T=h[o]||(h[o]=[]),B=c.__weh||(c.__weh=function(){if(!h.isUnmounted){P.pauseTracking(),gi(h);for(var U=arguments.length,Q=new Array(U),Se=0;Se<U;Se++)Q[Se]=arguments[Se];var fe=en(c,h,o,Q);return Ai(),P.resetTracking(),fe}});return m?T.unshift(B):T.push(B),B}else{var Y=u.toHandlerKey((Gt[o]||o.replace(/^on/,"")).replace(/ hook$/,""));ce("".concat(Y," is called when there is no active component instance to be ")+"associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.")}}var ei=o=>function(c){var h=arguments.length>1&&arguments[1]!==void 0?arguments[1]:cr;return(!k.isInSSRComponentSetup||o==="sp")&&To(o,c,h)},Di=ei("bm"),Po=ei("m"),Sa=ei("bu"),_r=ei("u"),br=ei("bum"),na=ei("um"),Va=ei("sp"),jr=ei("rtg"),ws=ei("rtc");function Go(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:cr;To("ec",o,c)}function Qs(){var o=Object.create(null);return(c,h)=>{o[h]?ce("".concat(c,' property "').concat(h,'" is already defined in ').concat(o[h],".")):o[h]=c}}var Ss=!0;function Cs(o){var c=As(o),h=o.proxy,m=o.ctx;Ss=!1,c.beforeCreate&&el(c.beforeCreate,o,"bc");var{data:C,computed:T,methods:B,watch:Y,provide:U,inject:Q,created:Se,beforeMount:fe,mounted:oe,beforeUpdate:Ye,updated:qe,activated:dt,deactivated:Ee,beforeDestroy:Pe,beforeUnmount:De,destroyed:Ne,unmounted:ot,render:Ze,renderTracked:i,renderTriggered:a,errorCaptured:f,serverPrefetch:p,expose:E,inheritAttrs:w,components:N,directives:V,filters:D}=c,K=Qs();{var[ae]=o.propsOptions;if(ae)for(var ie in ae)K("Props",ie)}if(Q&&El(Q,m,K,o.appContext.config.unwrapInjectedRef),B)for(var te in B){var Oe=B[te];u.isFunction(Oe)?(Object.defineProperty(m,te,{value:Oe.bind(h),configurable:!0,enumerable:!0,writable:!0}),K("Methods",te)):ce('Method "'.concat(te,'" has type "').concat(typeof Oe,'" in the component definition. ')+"Did you reference the function correctly?")}if(C&&function(){u.isFunction(C)||ce("The data option must be a function. Plain object usage is no longer supported.");var Te=C.call(h,h);if(u.isPromise(Te)&&ce("data() returned a Promise - note data() cannot be async; If you intend to perform data fetching before component renders, use async setup() + <Suspense>."),!u.isObject(Te))ce("data() should return an object.");else{o.data=P.reactive(Te);{var it=function(pt){K("Data",pt),pt[0]!=="$"&&pt[0]!=="_"&&Object.defineProperty(m,pt,{configurable:!0,enumerable:!0,get:()=>Te[pt],set:u.NOOP})};for(var je in Te)it(je)}}}(),Ss=!0,T){var He=function(Te){var it=T[Te],je=u.isFunction(it)?it.bind(h,h):u.isFunction(it.get)?it.get.bind(h,h):u.NOOP;je===u.NOOP&&ce('Computed property "'.concat(Te,'" has no getter.'));var pt=!u.isFunction(it)&&u.isFunction(it.set)?it.set.bind(h):()=>{ce('Write operation failed: computed property "'.concat(Te,'" is readonly.'))},kt=Pl({get:je,set:pt});Object.defineProperty(m,Te,{enumerable:!0,configurable:!0,get:()=>kt.value,set:Rt=>kt.value=Rt}),K("Computed",Te)};for(var at in T)He(at)}if(Y)for(var me in Y)Xn(Y[me],m,h,me);if(U){var Ce=u.isFunction(U)?U.call(h):U;Reflect.ownKeys(Ce).forEach(Te=>{Bn(Te,Ce[Te])})}Se&&el(Se,o,"c");function _e(Te,it){u.isArray(it)?it.forEach(je=>Te(je.bind(h))):it&&Te(it.bind(h))}if(_e(Di,fe),_e(Po,oe),_e(Sa,Ye),_e(_r,qe),_e(ho,dt),_e(La,Ee),_e(Go,f),_e(ws,i),_e(jr,a),_e(br,De),_e(na,ot),_e(Va,p),u.isArray(E))if(E.length){var ve=o.exposed||(o.exposed={});E.forEach(Te=>{Object.defineProperty(ve,Te,{get:()=>h[Te],set:it=>h[Te]=it})})}else o.exposed||(o.exposed={});Ze&&o.render===u.NOOP&&(o.render=Ze),w!=null&&(o.inheritAttrs=w),N&&(o.components=N),V&&(o.directives=V);var Je=o.appContext.config.globalProperties.$applyOptions;Je&&Je(c,o,h)}function El(o,c){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:u.NOOP,m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;u.isArray(o)&&(o=os(o));var C=function(B){var Y=o[B],U=void 0;u.isObject(Y)?"default"in Y?U=mr(Y.from||B,Y.default,!0):U=mr(Y.from||B):U=mr(Y),P.isRef(U)?m?Object.defineProperty(c,B,{enumerable:!0,configurable:!0,get:()=>U.value,set:Q=>U.value=Q}):(ce('injected property "'.concat(B,'" is a ref and will be auto-unwrapped ')+"and no longer needs `.value` in the next minor release. To opt-in to the new behavior now, set `app.config.unwrapInjectedRef = true` (this config is temporary and will not be needed in the future.)"),c[B]=U):c[B]=U,h("Inject",B)};for(var T in o)C(T)}function el(o,c,h){en(u.isArray(o)?o.map(m=>m.bind(c.proxy)):o.bind(c.proxy),c,h)}function Xn(o,c,h,m){var C=m.includes(".")?zo(h,m):()=>h[m];if(u.isString(o)){var T=c[o];u.isFunction(T)?uo(C,T):ce('Invalid watch handler specified by key "'.concat(o,'"'),T)}else if(u.isFunction(o))uo(C,o.bind(h));else if(u.isObject(o))if(u.isArray(o))o.forEach(Y=>Xn(Y,c,h,m));else{var B=u.isFunction(o.handler)?o.handler.bind(h):c[o.handler];u.isFunction(B)?uo(C,B,o):ce('Invalid watch handler specified by key "'.concat(o.handler,'"'),B)}else ce('Invalid watch option: "'.concat(m,'"'),o)}function As(o){var c=o.type,{mixins:h,extends:m}=c,{mixins:C,optionsCache:T,config:{optionMergeStrategies:B}}=o.appContext,Y=T.get(c),U;return Y?U=Y:!C.length&&!h&&!m?U=c:(U={},C.length&&C.forEach(Q=>Io(U,Q,B,!0)),Io(U,c,B)),T.set(c,U),U}function Io(o,c,h){var m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,{mixins:C,extends:T}=c;T&&Io(o,T,h,!0),C&&C.forEach(U=>Io(o,U,h,!0));for(var B in c)if(m&&B==="expose")ce('"expose" option is ignored when declared in mixins or extends. It should only be declared in the base component itself.');else{var Y=po[B]||h&&h[B];o[B]=Y?Y(o[B],c[B]):c[B]}return o}var po={data:Os,props:qn,emits:qn,methods:qn,computed:qn,beforeCreate:Qn,created:Qn,beforeMount:Qn,mounted:Qn,beforeUpdate:Qn,updated:Qn,beforeDestroy:Qn,beforeUnmount:Qn,destroyed:Qn,unmounted:Qn,activated:Qn,deactivated:Qn,errorCaptured:Qn,serverPrefetch:Qn,components:qn,directives:qn,watch:No,provide:Os,inject:ci};function Os(o,c){return c?o?function(){return u.extend(u.isFunction(o)?o.call(this,this):o,u.isFunction(c)?c.call(this,this):c)}:c:o}function ci(o,c){return qn(os(o),os(c))}function os(o){if(u.isArray(o)){for(var c={},h=0;h<o.length;h++)c[o[h]]=o[h];return c}return o}function Qn(o,c){return o?[...new Set([].concat(o,c))]:c}function qn(o,c){return o?u.extend(u.extend(Object.create(null),o),c):c}function No(o,c){if(!o)return c;if(!c)return o;var h=u.extend(Object.create(null),o);for(var m in c)h[m]=Qn(o[m],c[m]);return h}function as(o,c,h){var m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,C={},T={};u.def(T,Na,1),o.propsDefaults=Object.create(null),ko(o,c,C,T);for(var B in o.propsOptions[0])B in C||(C[B]=void 0);z(c||{},C,o),h?o.props=m?C:P.shallowReactive(C):o.type.props?o.props=C:o.props=T,o.attrs=T}function Ts(o,c,h,m){var{props:C,attrs:T,vnode:{patchFlag:B}}=o,Y=P.toRaw(C),[U]=o.propsOptions,Q=!1;if(!(o.type.__hmrId||o.parent&&o.parent.type.__hmrId)&&(m||B>0)&&!(B&16)){if(B&8)for(var Se=o.vnode.dynamicProps,fe=0;fe<Se.length;fe++){var oe=Se[fe];if(!Ki(o.emitsOptions,oe)){var Ye=c[oe];if(U)if(u.hasOwn(T,oe))Ye!==T[oe]&&(T[oe]=Ye,Q=!0);else{var qe=u.camelize(oe);C[qe]=Ca(U,Y,qe,Ye,o,!1)}else Ye!==T[oe]&&(T[oe]=Ye,Q=!0)}}}else{ko(o,c,C,T)&&(Q=!0);var dt;for(var Ee in Y)(!c||!u.hasOwn(c,Ee)&&((dt=u.hyphenate(Ee))===Ee||!u.hasOwn(c,dt)))&&(U?h&&(h[Ee]!==void 0||h[dt]!==void 0)&&(C[Ee]=Ca(U,Y,Ee,void 0,o,!0)):delete C[Ee]);if(T!==Y)for(var Pe in T)(!c||!u.hasOwn(c,Pe)&&!0)&&(delete T[Pe],Q=!0)}Q&&P.trigger(o,"set","$attrs"),z(c||{},C,o)}function ko(o,c,h,m){var[C,T]=o.propsOptions,B=!1,Y;if(c){for(var U in c)if(!u.isReservedProp(U)){var Q=c[U],Se=void 0;C&&u.hasOwn(C,Se=u.camelize(U))?!T||!T.includes(Se)?h[Se]=Q:(Y||(Y={}))[Se]=Q:Ki(o.emitsOptions,U)||(!(U in m)||Q!==m[U])&&(m[U]=Q,B=!0)}}if(T)for(var fe=P.toRaw(h),oe=Y||u.EMPTY_OBJ,Ye=0;Ye<T.length;Ye++){var qe=T[Ye];h[qe]=Ca(C,fe,qe,oe[qe],o,!u.hasOwn(oe,qe))}return B}function Ca(o,c,h,m,C,T){var B=o[h];if(B!=null){var Y=u.hasOwn(B,"default");if(Y&&m===void 0){var U=B.default;if(B.type!==Function&&u.isFunction(U)){var{propsDefaults:Q}=C;h in Q?m=Q[h]:(gi(C),m=Q[h]=U.call(null,c),Ai())}else m=U}B[0]&&(T&&!Y?m=!1:B[1]&&(m===""||m===u.hyphenate(h))&&(m=!0))}return m}function ss(o,c){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,m=c.propsCache,C=m.get(o);if(C)return C;var T=o.props,B={},Y=[],U=!1;if(!u.isFunction(o)){var Q=Ne=>{U=!0;var[ot,Ze]=ss(Ne,c,!0);u.extend(B,ot),Ze&&Y.push(...Ze)};!h&&c.mixins.length&&c.mixins.forEach(Q),o.extends&&Q(o.extends),o.mixins&&o.mixins.forEach(Q)}if(!T&&!U)return m.set(o,u.EMPTY_ARR),u.EMPTY_ARR;if(u.isArray(T))for(var Se=0;Se<T.length;Se++){u.isString(T[Se])||ce("props must be strings when using array syntax.",T[Se]);var fe=u.camelize(T[Se]);ls(fe)&&(B[fe]=u.EMPTY_OBJ)}else if(T){u.isObject(T)||ce("invalid props options",T);for(var oe in T){var Ye=u.camelize(oe);if(ls(Ye)){var qe=T[oe],dt=B[Ye]=u.isArray(qe)||u.isFunction(qe)?{type:qe}:qe;if(dt){var Ee=L(Boolean,dt.type),Pe=L(String,dt.type);dt[0]=Ee>-1,dt[1]=Pe<0||Ee<Pe,(Ee>-1||u.hasOwn(dt,"default"))&&Y.push(Ye)}}}}var De=[B,Y];return m.set(o,De),De}function ls(o){return o[0]!=="$"?!0:(ce('Invalid prop name: "'.concat(o,'" is a reserved property.')),!1)}function Aa(o){var c=o&&o.toString().match(/^\s*function (\w+)/);return c?c[1]:o===null?"null":""}function _(o,c){return Aa(o)===Aa(c)}function L(o,c){return u.isArray(c)?c.findIndex(h=>_(h,o)):u.isFunction(c)&&_(c,o)?0:-1}function z(o,c,h){var m=P.toRaw(c),C=h.propsOptions[0];for(var T in C){var B=C[T];B!=null&&j(T,m[T],B,!u.hasOwn(o,T)&&!u.hasOwn(o,u.hyphenate(T)))}}function j(o,c,h,m){var{type:C,required:T,validator:B}=h;if(T&&m){ce('Missing required prop: "'+o+'"');return}if(!(c==null&&!h.required)){if(C!=null&&C!==!0){for(var Y=!1,U=u.isArray(C)?C:[C],Q=[],Se=0;Se<U.length&&!Y;Se++){var{valid:fe,expectedType:oe}=ee(c,U[Se]);Q.push(oe||""),Y=fe}if(!Y){ce(ue(o,c,Q));return}}B&&!B(c)&&ce('Invalid prop: custom validator check failed for prop "'+o+'".')}}var X=u.makeMap("String,Number,Boolean,Function,Symbol,BigInt");function ee(o,c){var h,m=Aa(c);if(X(m)){var C=typeof o;h=C===m.toLowerCase(),!h&&C==="object"&&(h=o instanceof c)}else m==="Object"?h=u.isObject(o):m==="Array"?h=u.isArray(o):m==="null"?h=o===null:h=o instanceof c;return{valid:h,expectedType:m}}function ue(o,c,h){var m='Invalid prop: type check failed for prop "'.concat(o,'".')+" Expected ".concat(h.map(u.capitalize).join(" | ")),C=h[0],T=u.toRawType(c),B=be(c,C),Y=be(c,T);return h.length===1&&Me(C)&&!Ue(C,T)&&(m+=" with value ".concat(B)),m+=", got ".concat(T," "),Me(T)&&(m+="with value ".concat(Y,".")),m}function be(o,c){return c==="String"?'"'.concat(o,'"'):c==="Number"?"".concat(Number(o)):"".concat(o)}function Me(o){var c=["string","number","boolean"];return c.some(h=>o.toLowerCase()===h)}function Ue(){for(var o=arguments.length,c=new Array(o),h=0;h<o;h++)c[h]=arguments[h];return c.some(m=>m.toLowerCase()==="boolean")}var ye=o=>o[0]==="_"||o==="$stable",Ve=o=>u.isArray(o)?o.map(pi):[pi(o)],lt=(o,c,h)=>{var m=Ie(function(){return cr&&ce('Slot "'.concat(o,'" invoked outside of the render function: ')+"this will not track dependencies used in the slot. Invoke the slot function inside the render function instead."),Ve(c(...arguments))},h);return m._c=!1,m},Et=(o,c,h)=>{var m=o._ctx;for(var C in o)if(!ye(C)){var T=o[C];u.isFunction(T)?c[C]=lt(C,T,m):T!=null&&function(){ce('Non-function value encountered for slot "'.concat(C,'". ')+"Prefer function slots for better performance.");var B=Ve(T);c[C]=()=>B}()}},Wt=(o,c)=>{jn(o.vnode)||ce("Non-function value encountered for default slot. Prefer function slots for better performance.");var h=Ve(c);o.slots.default=()=>h},mt=(o,c)=>{if(o.vnode.shapeFlag&32){var h=c._;h?(o.slots=P.toRaw(c),u.def(c,"_",h)):Et(c,o.slots={})}else o.slots={},c&&Wt(o,c);u.def(o.slots,Na,1)},ht=(o,c,h)=>{var{vnode:m,slots:C}=o,T=!0,B=u.EMPTY_OBJ;if(m.shapeFlag&32){var Y=c._;Y?Rr?u.extend(C,c):h&&Y===1?T=!1:(u.extend(C,c),!h&&Y===1&&delete C._):(T=!c.$stable,Et(c,C)),B=c}else c&&(Wt(o,c),B={default:1});if(T)for(var U in C)!ye(U)&&!(U in B)&&delete C[U]};function Mt(o){u.isBuiltInDirective(o)&&ce("Do not use built-in directive ids as custom directive id: "+o)}function Cn(o,c){var h=In;if(h===null)return ce("withDirectives can only be used inside render functions."),o;for(var m=Ms(h)||h.proxy,C=o.dirs||(o.dirs=[]),T=0;T<c.length;T++){var[B,Y,U,Q=u.EMPTY_OBJ]=c[T];u.isFunction(B)&&(B={mounted:B,updated:B}),B.deep&&Si(Y),C.push({dir:B,instance:m,value:Y,oldValue:void 0,arg:U,modifiers:Q})}return o}function Ht(o,c,h,m){for(var C=o.dirs,T=c&&c.dirs,B=0;B<C.length;B++){var Y=C[B];T&&(Y.oldValue=T[B].value);var U=Y.dir[m];U&&(P.pauseTracking(),en(U,h,8,[o.el,Y,o,c]),P.resetTracking())}}function ut(){return{app:null,config:{isNativeTag:u.NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}var jt=0;function Vt(o,c){return function(m){var C=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;u.isFunction(m)||(m=Object.assign({},m)),C!=null&&!u.isObject(C)&&(ce("root props passed to app.mount() must be an object."),C=null);var T=ut(),B=new Set,Y=!1,U=T.app={_uid:jt++,_component:m,_props:C,_container:null,_context:T,_instance:null,version:Lo,get config(){return T.config},set config(Q){ce("app.config cannot be replaced. Modify individual options instead.")},use(Q){for(var Se=arguments.length,fe=new Array(Se>1?Se-1:0),oe=1;oe<Se;oe++)fe[oe-1]=arguments[oe];return B.has(Q)?ce("Plugin has already been applied to target app."):Q&&u.isFunction(Q.install)?(B.add(Q),Q.install(U,...fe)):u.isFunction(Q)?(B.add(Q),Q(U,...fe)):ce('A plugin must either be a function or an object with an "install" function.'),U},mixin(Q){return T.mixins.includes(Q)?ce("Mixin has already been applied to target app"+(Q.name?": ".concat(Q.name):"")):T.mixins.push(Q),U},component(Q,Se){return ol(Q,T.config),Se?(T.components[Q]&&ce('Component "'.concat(Q,'" has already been registered in target app.')),T.components[Q]=Se,U):T.components[Q]},directive(Q,Se){return Mt(Q),Se?(T.directives[Q]&&ce('Directive "'.concat(Q,'" has already been registered in target app.')),T.directives[Q]=Se,U):T.directives[Q]},mount(Q,Se,fe){if(Y)ce("App has already been mounted.\nIf you want to remount the same app, move your app creation logic into a factory function and create fresh app instances for each mount - e.g. `const createMyApp = () => createApp(App)`");else{var oe=An(m,C);return oe.appContext=T,T.reload=()=>{o(Vi(oe),Q,fe)},Se&&c?c(oe,Q):o(oe,Q,fe),Y=!0,U._container=Q,Q.__vue_app__=U,U._instance=oe.component,Ln(U,Lo),Ms(oe.component)||oe.component.proxy}},unmount(){Y?(o(null,U._container),U._instance=null,xr(U),delete U._container.__vue_app__):ce("Cannot unmount an app that is not mounted.")},provide(Q,Se){return Q in T.provides&&ce('App already provides property with key "'.concat(String(Q),'". ')+"It will be overwritten with the new value."),T.provides[Q]=Se,U}};return U}}function Fn(o,c,h,m){var C=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1;if(u.isArray(o)){o.forEach((dt,Ee)=>Fn(dt,c&&(u.isArray(c)?c[Ee]:c),h,m,C));return}if(!(gt(m)&&!C)){var T=m.shapeFlag&4?Ms(m.component)||m.component.proxy:m.el,B=C?null:T,{i:Y,r:U}=o;if(!Y){ce("Missing ref owner context. ref cannot be used on hoisted vnodes. A vnode with ref must be created inside the render function.");return}var Q=c&&c.r,Se=Y.refs===u.EMPTY_OBJ?Y.refs={}:Y.refs,fe=Y.setupState;if(Q!=null&&Q!==U&&(u.isString(Q)?(Se[Q]=null,u.hasOwn(fe,Q)&&(fe[Q]=null)):P.isRef(Q)&&(Q.value=null)),u.isFunction(U))$t(U,Y,12,[B,Se]);else{var oe=u.isString(U),Ye=P.isRef(U);if(oe||Ye){var qe=()=>{if(o.f){var dt=oe?Se[U]:U.value;C?u.isArray(dt)&&u.remove(dt,T):u.isArray(dt)?dt.includes(T)||dt.push(T):oe?(Se[U]=[T],u.hasOwn(fe,U)&&(fe[U]=Se[U])):(U.value=[T],o.k&&(Se[o.k]=U.value))}else oe?(Se[U]=B,u.hasOwn(fe,U)&&(fe[U]=B)):P.isRef(U)?(U.value=B,o.k&&(Se[o.k]=B)):ce("Invalid template ref type:",U,"(".concat(typeof U,")"))};B?(qe.id=-1,yr(qe,h)):qe()}else ce("Invalid template ref type:",U,"(".concat(typeof U,")"))}}}var sn=!1,rn=o=>/svg/.test(o.namespaceURI)&&o.tagName!=="foreignObject",kn=o=>o.nodeType===8;function Oa(o){var{mt:c,p:h,o:{patchProp:m,nextSibling:C,parentNode:T,remove:B,insert:Y,createComment:U}}=o,Q=(Ee,Pe)=>{if(!Pe.hasChildNodes()){ce("Attempting to hydrate existing markup but container is empty. Performing full mount instead."),h(null,Ee,Pe),zi();return}sn=!1,Se(Pe.firstChild,Ee,null,null,null),zi(),sn&&console.error("Hydration completed but contains mismatches.")},Se=function(Ee,Pe,De,Ne,ot){var Ze=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1,i=kn(Ee)&&Ee.data==="[",a=()=>qe(Ee,Pe,De,Ne,ot,i),{type:f,ref:p,shapeFlag:E}=Pe,w=Ee.nodeType;Pe.el=Ee;var N=null;switch(f){case Rn:w!==3?N=a():(Ee.data!==Pe.children&&(sn=!0,ce("Hydration text mismatch:"+`
- Client: `.concat(JSON.stringify(Ee.data))+`
- Server: `.concat(JSON.stringify(Pe.children))),Ee.data=Pe.children),N=C(Ee));break;case Nn:w!==8||i?N=a():N=C(Ee);break;case yn:if(w!==1)N=a();else{N=Ee;for(var V=!Pe.children.length,D=0;D<Pe.staticCount;D++)V&&(Pe.children+=N.outerHTML),D===Pe.staticCount-1&&(Pe.anchor=N),N=C(N);return N}break;case sr:i?N=Ye(Ee,Pe,De,Ne,ot,Ze):N=a();break;default:if(E&1)w!==1||Pe.type.toLowerCase()!==Ee.tagName.toLowerCase()?N=a():N=fe(Ee,Pe,De,Ne,ot,Ze);else if(E&6){Pe.slotScopeIds=ot;var K=T(Ee);if(c(Pe,K,null,De,Ne,rn(K),Ze),N=i?dt(Ee):C(Ee),gt(Pe)){var ae;i?(ae=An(sr),ae.anchor=N?N.previousSibling:K.lastChild):ae=Ee.nodeType===3?Is(""):An("div"),ae.el=Ee,Pe.component.subTree=ae}}else E&64?w!==8?N=a():N=Pe.type.hydrate(Ee,Pe,De,Ne,ot,Ze,o,oe):E&128?N=Pe.type.hydrate(Ee,Pe,De,Ne,rn(T(Ee)),ot,Ze,o,Se):ce("Invalid HostVNode type:",f,"(".concat(typeof f,")"))}return p!=null&&Fn(p,null,Ne,Pe),N},fe=(Ee,Pe,De,Ne,ot,Ze)=>{Ze=Ze||!!Pe.dynamicChildren;var{type:i,props:a,patchFlag:f,shapeFlag:p,dirs:E}=Pe,w=i==="input"&&E||i==="option";{if(E&&Ht(Pe,null,De,"created"),a)if(w||!Ze||f&(16|32))for(var N in a)(w&&N.endsWith("value")||u.isOn(N)&&!u.isReservedProp(N))&&m(Ee,N,null,a[N],!1,void 0,De);else a.onClick&&m(Ee,"onClick",null,a.onClick,!1,void 0,De);var V;if((V=a&&a.onVnodeBeforeMount)&&lr(V,De,Pe),E&&Ht(Pe,null,De,"beforeMount"),((V=a&&a.onVnodeMounted)||E)&&Ir(()=>{V&&lr(V,De,Pe),E&&Ht(Pe,null,De,"mounted")},Ne),p&16&&!(a&&(a.innerHTML||a.textContent)))for(var D=oe(Ee.firstChild,Pe,Ee,De,Ne,ot,Ze),K=!1;D;){sn=!0,K||(ce("Hydration children mismatch in <".concat(Pe.type,">: ")+"server rendered element contains more child nodes than client vdom."),K=!0);var ae=D;D=D.nextSibling,B(ae)}else p&8&&Ee.textContent!==Pe.children&&(sn=!0,ce("Hydration text content mismatch in <".concat(Pe.type,`>:
`)+"- Client: ".concat(Ee.textContent,`
`)+"- Server: ".concat(Pe.children)),Ee.textContent=Pe.children)}return Ee.nextSibling},oe=(Ee,Pe,De,Ne,ot,Ze,i)=>{i=i||!!Pe.dynamicChildren;for(var a=Pe.children,f=a.length,p=!1,E=0;E<f;E++){var w=i?a[E]:a[E]=pi(a[E]);if(Ee)Ee=Se(Ee,w,Ne,ot,Ze,i);else{if(w.type===Rn&&!w.children)continue;sn=!0,p||(ce("Hydration children mismatch in <".concat(De.tagName.toLowerCase(),">: ")+"server rendered element contains fewer child nodes than client vdom."),p=!0),h(null,w,De,null,Ne,ot,rn(De),Ze)}}return Ee},Ye=(Ee,Pe,De,Ne,ot,Ze)=>{var{slotScopeIds:i}=Pe;i&&(ot=ot?ot.concat(i):i);var a=T(Ee),f=oe(C(Ee),Pe,a,De,Ne,ot,Ze);return f&&kn(f)&&f.data==="]"?C(Pe.anchor=f):(sn=!0,Y(Pe.anchor=U("]"),a,f),f)},qe=(Ee,Pe,De,Ne,ot,Ze)=>{if(sn=!0,ce(`Hydration node mismatch:
- Client vnode:`,Pe.type,`
- Server rendered DOM:`,Ee,Ee.nodeType===3?"(text)":kn(Ee)&&Ee.data==="["?"(start of fragment)":""),Pe.el=null,Ze)for(var i=dt(Ee);;){var a=C(Ee);if(a&&a!==i)B(a);else break}var f=C(Ee),p=T(Ee);return B(Ee),h(null,Pe,p,f,De,Ne,rn(p),ot),f},dt=Ee=>{for(var Pe=0;Ee;)if(Ee=C(Ee),Ee&&kn(Ee)&&(Ee.data==="["&&Pe++,Ee.data==="]")){if(Pe===0)return C(Ee);Pe--}return Ee};return[Q,Se]}var Ta,vn;function zt(o,c){o.appContext.config.performance&&Br()&&vn.mark("vue-".concat(c,"-").concat(o.uid)),ii(o,c,Br()?vn.now():Date.now())}function ar(o,c){if(o.appContext.config.performance&&Br()){var h="vue-".concat(c,"-").concat(o.uid),m=h+":end";vn.mark(m),vn.measure("<".concat(Ra(o,o.type),"> ").concat(c),h,m),vn.clearMarks(h),vn.clearMarks(m)}So(o,c,Br()?vn.now():Date.now())}function Br(){return Ta!==void 0||(typeof window!="undefined"&&window.performance?(Ta=!0,vn=window.performance):Ta=!1),Ta}function Pa(){var o=[];if(o.length){var c=o.length>1;console.warn("Feature flag".concat(c?"s":""," ").concat(o.join(", ")," ").concat(c?"are":"is"," not explicitly defined. You are running the esm-bundler build of Vue, ")+`which expects these compile-time feature flags to be globally injected via the bundler config in order to get better tree-shaking in the production bundle.

For more details, see https://link.vuejs.org/feature-flags.`)}}var yr=Ir;function fn(o){return Ps(o)}function ui(o){return Ps(o,Oa)}function Ps(o,c){Pa();var h=u.getGlobalThis();h.__VUE__=!0,Ur(h.__VUE_DEVTOOLS_GLOBAL_HOOK__,h);var{insert:m,remove:C,patchProp:T,forcePatchProp:B,createElement:Y,createText:U,createComment:Q,setText:Se,setElementText:fe,parentNode:oe,nextSibling:Ye,setScopeId:qe=u.NOOP,cloneNode:dt,insertStaticContent:Ee}=o,Pe=function(R,q,le){var we=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null,xe=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,tt=arguments.length>5&&arguments[5]!==void 0?arguments[5]:null,ft=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,Qe=arguments.length>7&&arguments[7]!==void 0?arguments[7]:null,nt=arguments.length>8&&arguments[8]!==void 0?arguments[8]:Rr?!1:!!q.dynamicChildren;if(R!==q){R&&!er(R,q)&&(we=pt(R),ve(R,xe,tt,!0),R=null),q.patchFlag===-2&&(nt=!1,q.dynamicChildren=null);var{type:Ge,ref:Bt,shapeFlag:vt}=q;switch(Ge){case Rn:De(R,q,le,we);break;case Nn:Ne(R,q,le,we);break;case yn:R==null?ot(q,le,we,ft):Ze(R,q,le,ft);break;case sr:K(R,q,le,we,xe,tt,ft,Qe,nt);break;default:vt&1?f(R,q,le,we,xe,tt,ft,Qe,nt):vt&6?ae(R,q,le,we,xe,tt,ft,Qe,nt):vt&64||vt&128?Ge.process(R,q,le,we,xe,tt,ft,Qe,nt,Rt):ce("Invalid VNode type:",Ge,"(".concat(typeof Ge,")"))}Bt!=null&&xe&&Fn(Bt,R&&R.ref,tt,q||R,!q)}},De=(R,q,le,we)=>{if(R==null)m(q.el=U(q.children),le,we);else{var xe=q.el=R.el;q.children!==R.children&&Se(xe,q.children)}},Ne=(R,q,le,we)=>{R==null?m(q.el=Q(q.children||""),le,we):q.el=R.el},ot=(R,q,le,we)=>{[R.el,R.anchor]=Ee(R.children,q,le,we,R.el,R.anchor)},Ze=(R,q,le,we)=>{if(q.children!==R.children){var xe=Ye(R.anchor);a(R),[q.el,q.anchor]=Ee(q.children,le,xe,we)}else q.el=R.el,q.anchor=R.anchor},i=(R,q,le)=>{for(var{el:we,anchor:xe}=R,tt;we&&we!==xe;)tt=Ye(we),m(we,q,le),we=tt;m(xe,q,le)},a=R=>{for(var{el:q,anchor:le}=R,we;q&&q!==le;)we=Ye(q),C(q),q=we;C(le)},f=(R,q,le,we,xe,tt,ft,Qe,nt)=>{ft=ft||q.type==="svg",R==null?p(q,le,we,xe,tt,ft,Qe,nt):N(R,q,xe,tt,ft,Qe,nt)},p=(R,q,le,we,xe,tt,ft,Qe)=>{var nt,Ge,{type:Bt,props:vt,shapeFlag:It,transition:on,patchFlag:Yt,dirs:Xt}=R;{if(nt=R.el=Y(R.type,tt,vt&&vt.is,vt),It&8?fe(nt,R.children):It&16&&w(R.children,nt,null,we,xe,tt&&Bt!=="foreignObject",ft,Qe),Xt&&Ht(R,null,we,"created"),vt){for(var wn in vt)wn!=="value"&&!u.isReservedProp(wn)&&T(nt,wn,null,vt[wn],tt,R.children,we,xe,je);"value"in vt&&T(nt,"value",null,vt.value,!1,[],we),(Ge=vt.onVnodeBeforeMount)&&lr(Ge,we,R)}E(nt,R,R.scopeId,ft,we)}Object.defineProperty(nt,"__vnode",{value:R,enumerable:!1}),Object.defineProperty(nt,"__vueParentComponent",{value:we,enumerable:!1}),Xt&&Ht(R,null,we,"beforeMount");var Vn=(!xe||xe&&!xe.pendingBranch)&&on&&!on.persisted;Vn&&on.beforeEnter(nt),m(nt,q,le),((Ge=vt&&vt.onVnodeMounted)||Vn||Xt)&&yr(()=>{Ge&&lr(Ge,we,R),Vn&&on.enter(nt),Xt&&Ht(R,null,we,"mounted")},xe)},E=(R,q,le,we,xe)=>{if(le&&qe(R,le),we)for(var tt=0;tt<we.length;tt++)qe(R,we[tt]);if(xe){var ft=xe.subTree;if(ft.patchFlag>0&&ft.patchFlag&2048&&(ft=Zr(ft.children)||ft),q===ft){var Qe=xe.vnode;E(R,Qe,Qe.scopeId,Qe.slotScopeIds,xe.parent)}}},w=function(R,q,le,we,xe,tt,ft,Qe){for(var nt=arguments.length>8&&arguments[8]!==void 0?arguments[8]:0,Ge=nt;Ge<R.length;Ge++){var Bt=R[Ge]=Qe?wr(R[Ge]):pi(R[Ge]);Pe(null,Bt,q,le,we,xe,tt,ft,Qe)}},N=(R,q,le,we,xe,tt,ft)=>{var Qe=q.el=R.el,{patchFlag:nt,dynamicChildren:Ge,dirs:Bt}=q;nt|=R.patchFlag&16;var vt=R.props||u.EMPTY_OBJ,It=q.props||u.EMPTY_OBJ,on;le&&Ro(le,!1),(on=It.onVnodeBeforeUpdate)&&lr(on,le,q,R),Bt&&Ht(q,R,le,"beforeUpdate"),le&&Ro(le,!0),Rr&&(nt=0,ft=!1,Ge=null);var Yt=xe&&q.type!=="foreignObject";if(Ge?(V(R.dynamicChildren,Ge,Qe,le,we,Yt,tt),le&&le.type.__hmrId&&Ci(R,q)):ft||at(R,q,Qe,null,le,we,Yt,tt,!1),nt>0){if(nt&16)D(Qe,q,vt,It,le,we,xe);else if(nt&2&&vt.class!==It.class&&T(Qe,"class",null,It.class,xe,[],le),nt&4&&T(Qe,"style",vt.style,It.style,xe,[],le),nt&8)for(var Xt=q.dynamicProps,wn=0;wn<Xt.length;wn++){var Vn=Xt[wn],eo=vt[Vn],Ui=It[Vn];(Ui!==eo||Vn==="value"||B&&B(Qe,Vn))&&T(Qe,Vn,eo,Ui,xe,R.children,le,we,je)}nt&1&&R.children!==q.children&&fe(Qe,q.children)}else!ft&&Ge==null&&D(Qe,q,vt,It,le,we,xe);((on=It.onVnodeUpdated)||Bt)&&yr(()=>{on&&lr(on,le,q,R),Bt&&Ht(q,R,le,"updated")},we)},V=(R,q,le,we,xe,tt,ft)=>{for(var Qe=0;Qe<q.length;Qe++){var nt=R[Qe],Ge=q[Qe],Bt=nt.el&&(nt.type===sr||!er(nt,Ge)||nt.shapeFlag&(6|64))?oe(nt.el):le;Pe(nt,Ge,Bt,null,we,xe,tt,ft,!0)}},D=(R,q,le,we,xe,tt,ft)=>{if(le!==we){for(var Qe in we)if(!u.isReservedProp(Qe)){var nt=we[Qe],Ge=le[Qe];(nt!==Ge&&Qe!=="value"||B&&B(R,Qe))&&T(R,Qe,Ge,nt,ft,q.children,xe,tt,je)}if(le!==u.EMPTY_OBJ)for(var Bt in le)!u.isReservedProp(Bt)&&!(Bt in we)&&T(R,Bt,le[Bt],null,ft,q.children,xe,tt,je);"value"in we&&T(R,"value",le.value,we.value,!1,[],xe)}},K=(R,q,le,we,xe,tt,ft,Qe,nt)=>{var Ge=q.el=R?R.el:U(""),Bt=q.anchor=R?R.anchor:U(""),{patchFlag:vt,dynamicChildren:It,slotScopeIds:on}=q;Rr&&(vt=0,nt=!1,It=null),on&&(Qe=Qe?Qe.concat(on):on),R==null?(m(Ge,le,we),m(Bt,le,we),w(q.children,le,Bt,xe,tt,ft,Qe,nt)):vt>0&&vt&64&&It&&R.dynamicChildren?(V(R.dynamicChildren,It,le,xe,tt,ft,Qe),xe&&xe.type.__hmrId?Ci(R,q):(q.key!=null||xe&&q===xe.subTree)&&Ci(R,q,!0)):at(R,q,le,Bt,xe,tt,ft,Qe,nt)},ae=(R,q,le,we,xe,tt,ft,Qe,nt)=>{q.slotScopeIds=Qe,R==null?q.shapeFlag&512?xe.ctx.activate(q,le,we,ft,nt):ie(q,le,we,xe,tt,ft,nt):te(R,q,nt)},ie=(R,q,le,we,xe,tt,ft)=>{var Qe=R.component=Ql(R,we,xe);if(Qe.type.__hmrId&&Gi(Qe),an(R),zt(Qe,"mount"),jn(R)&&(Qe.ctx.renderer=Rt),zt(Qe,"init"),Al(Qe),ar(Qe,"init"),Qe.asyncDep){if(xe&&xe.registerDep(Qe,Oe),!R.el){var nt=Qe.subTree=An(Nn);Ne(null,nt,q,le)}return}Oe(Qe,R,q,le,xe,tt,ft),A(),ar(Qe,"mount")},te=(R,q,le)=>{var we=q.component=R.component;if(va(R,q,le))if(we.asyncDep&&!we.asyncResolved){an(q),He(we,q,le),A();return}else we.next=q,gr(we.update),we.update();else q.component=R.component,q.el=R.el,we.vnode=q},Oe=(R,q,le,we,xe,tt,ft)=>{var Qe=()=>{if(R.isMounted){var{next:dr,bu:xa,u:W,parent:Z,vnode:ge}=R,Le=dr,ke;an(dr||R.vnode),Ro(R,!1),dr?(dr.el=ge.el,He(R,dr,ft)):dr=ge,xa&&u.invokeArrayFns(xa),(ke=dr.props&&dr.props.onVnodeBeforeUpdate)&&lr(ke,Z,dr,ge),Ro(R,!0),zt(R,"render");var rt=Ei(R);ar(R,"render");var st=R.subTree;R.subTree=rt,zt(R,"patch"),Pe(st,rt,oe(st.el),pt(st),R,xe,tt),ar(R,"patch"),dr.el=rt.el,Le===null&&Xr(R,rt.el),W&&yr(W,xe),(ke=dr.props&&dr.props.onVnodeUpdated)&&yr(()=>lr(ke,Z,dr,ge),xe),co(R),A()}else{var Bt,{el:vt,props:It}=q,{bm:on,m:Yt,parent:Xt}=R,wn=gt(q);if(Ro(R,!1),on&&u.invokeArrayFns(on),!wn&&(Bt=It&&It.onVnodeBeforeMount)&&lr(Bt,Xt,q),Ro(R,!0),vt&&Pt){var Vn=()=>{zt(R,"render"),R.subTree=Ei(R),ar(R,"render"),zt(R,"hydrate"),Pt(vt,R.subTree,R,xe,null),ar(R,"hydrate")};wn?q.type.__asyncLoader().then(()=>!R.isUnmounted&&Vn()):Vn()}else{zt(R,"render");var eo=R.subTree=Ei(R);ar(R,"render"),zt(R,"patch"),Pe(null,eo,le,we,R,xe,tt),ar(R,"patch"),q.el=eo.el}if(Yt&&yr(Yt,xe),!wn&&(Bt=It&&It.onVnodeMounted)){var Ui=q;yr(()=>lr(Bt,Xt,Ui),xe)}q.shapeFlag&256&&R.a&&yr(R.a,xe),R.isMounted=!0,lo(R),q=le=we=null}},nt=R.effect=new P.ReactiveEffect(Qe,()=>Jr(R.update),R.scope),Ge=R.update=nt.run.bind(nt);Ge.id=R.uid,Ro(R,!0),nt.onTrack=R.rtc?Bt=>u.invokeArrayFns(R.rtc,Bt):void 0,nt.onTrigger=R.rtg?Bt=>u.invokeArrayFns(R.rtg,Bt):void 0,Ge.ownerInstance=R,Ge()},He=(R,q,le)=>{q.component=R;var we=R.vnode.props;R.vnode=q,R.next=null,Ts(R,q.props,we,le),ht(R,q.children,le),P.pauseTracking(),ao(void 0,R.update),P.resetTracking()},at=function(R,q,le,we,xe,tt,ft,Qe){var nt=arguments.length>8&&arguments[8]!==void 0?arguments[8]:!1,Ge=R&&R.children,Bt=R?R.shapeFlag:0,vt=q.children,{patchFlag:It,shapeFlag:on}=q;if(It>0){if(It&128){Ce(Ge,vt,le,we,xe,tt,ft,Qe,nt);return}else if(It&256){me(Ge,vt,le,we,xe,tt,ft,Qe,nt);return}}on&8?(Bt&16&&je(Ge,xe,tt),vt!==Ge&&fe(le,vt)):Bt&16?on&16?Ce(Ge,vt,le,we,xe,tt,ft,Qe,nt):je(Ge,xe,tt,!0):(Bt&8&&fe(le,""),on&16&&w(vt,le,we,xe,tt,ft,Qe,nt))},me=(R,q,le,we,xe,tt,ft,Qe,nt)=>{R=R||u.EMPTY_ARR,q=q||u.EMPTY_ARR;var Ge=R.length,Bt=q.length,vt=Math.min(Ge,Bt),It;for(It=0;It<vt;It++){var on=q[It]=nt?wr(q[It]):pi(q[It]);Pe(R[It],on,le,null,xe,tt,ft,Qe,nt)}Ge>Bt?je(R,xe,tt,!0,!1,vt):w(q,le,we,xe,tt,ft,Qe,nt,vt)},Ce=(R,q,le,we,xe,tt,ft,Qe,nt)=>{for(var Ge=0,Bt=q.length,vt=R.length-1,It=Bt-1;Ge<=vt&&Ge<=It;){var on=R[Ge],Yt=q[Ge]=nt?wr(q[Ge]):pi(q[Ge]);if(er(on,Yt))Pe(on,Yt,le,null,xe,tt,ft,Qe,nt);else break;Ge++}for(;Ge<=vt&&Ge<=It;){var Xt=R[vt],wn=q[It]=nt?wr(q[It]):pi(q[It]);if(er(Xt,wn))Pe(Xt,wn,le,null,xe,tt,ft,Qe,nt);else break;vt--,It--}if(Ge>vt){if(Ge<=It)for(var Vn=It+1,eo=Vn<Bt?q[Vn].el:we;Ge<=It;)Pe(null,q[Ge]=nt?wr(q[Ge]):pi(q[Ge]),le,eo,xe,tt,ft,Qe,nt),Ge++}else if(Ge>It)for(;Ge<=vt;)ve(R[Ge],xe,tt,!0),Ge++;else{var Ui=Ge,dr=Ge,xa=new Map;for(Ge=dr;Ge<=It;Ge++){var W=q[Ge]=nt?wr(q[Ge]):pi(q[Ge]);W.key!=null&&(xa.has(W.key)&&ce("Duplicate keys found during update:",JSON.stringify(W.key),"Make sure keys are unique."),xa.set(W.key,Ge))}var Z,ge=0,Le=It-dr+1,ke=!1,rt=0,st=new Array(Le);for(Ge=0;Ge<Le;Ge++)st[Ge]=0;for(Ge=Ui;Ge<=vt;Ge++){var Ke=R[Ge];if(ge>=Le){ve(Ke,xe,tt,!0);continue}var et=void 0;if(Ke.key!=null)et=xa.get(Ke.key);else for(Z=dr;Z<=It;Z++)if(st[Z-dr]===0&&er(Ke,q[Z])){et=Z;break}et===void 0?ve(Ke,xe,tt,!0):(st[et-dr]=Ge+1,et>=rt?rt=et:ke=!0,Pe(Ke,q[et],le,null,xe,tt,ft,Qe,nt),ge++)}var ze=ke?xo(st):u.EMPTY_ARR;for(Z=ze.length-1,Ge=Le-1;Ge>=0;Ge--){var Tt=dr+Ge,Nt=q[Tt],Ft=Tt+1<Bt?q[Tt+1].el:we;st[Ge]===0?Pe(null,Nt,le,Ft,xe,tt,ft,Qe,nt):ke&&(Z<0||Ge!==ze[Z]?_e(Nt,le,Ft,2):Z--)}}},_e=function(R,q,le,we){var xe=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,{el:tt,type:ft,transition:Qe,children:nt,shapeFlag:Ge}=R;if(Ge&6){_e(R.component.subTree,q,le,we);return}if(Ge&128){R.suspense.move(q,le,we);return}if(Ge&64){ft.move(R,q,le,Rt);return}if(ft===sr){m(tt,q,le);for(var Bt=0;Bt<nt.length;Bt++)_e(nt[Bt],q,le,we);m(R.anchor,q,le);return}if(ft===yn){i(R,q,le);return}var vt=we!==2&&Ge&1&&Qe;if(vt)if(we===0)Qe.beforeEnter(tt),m(tt,q,le),yr(()=>Qe.enter(tt),xe);else{var{leave:It,delayLeave:on,afterLeave:Yt}=Qe,Xt=()=>m(tt,q,le),wn=()=>{It(tt,()=>{Xt(),Yt&&Yt()})};on?on(tt,Xt,wn):wn()}else m(tt,q,le)},ve=function(R,q,le){var we=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,xe=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,{type:tt,props:ft,ref:Qe,children:nt,dynamicChildren:Ge,shapeFlag:Bt,patchFlag:vt,dirs:It}=R;if(Qe!=null&&Fn(Qe,null,le,R,!0),Bt&256){q.ctx.deactivate(R);return}var on=Bt&1&&It,Yt=!gt(R),Xt;if(Yt&&(Xt=ft&&ft.onVnodeBeforeUnmount)&&lr(Xt,q,R),Bt&6)it(R.component,le,we);else{if(Bt&128){R.suspense.unmount(le,we);return}on&&Ht(R,null,q,"beforeUnmount"),Bt&64?R.type.remove(R,q,le,xe,Rt,we):Ge&&(tt!==sr||vt>0&&vt&64)?je(Ge,q,le,!1,!0):(tt===sr&&vt&(128|256)||!xe&&Bt&16)&&je(nt,q,le),we&&Je(R)}(Yt&&(Xt=ft&&ft.onVnodeUnmounted)||on)&&yr(()=>{Xt&&lr(Xt,q,R),on&&Ht(R,null,q,"unmounted")},le)},Je=R=>{var{type:q,el:le,anchor:we,transition:xe}=R;if(q===sr){R.patchFlag>0&&R.patchFlag&2048&&xe&&!xe.persisted?R.children.forEach(Ge=>{Ge.type===Nn?C(Ge.el):Je(Ge)}):Te(le,we);return}if(q===yn){a(R);return}var tt=()=>{C(le),xe&&!xe.persisted&&xe.afterLeave&&xe.afterLeave()};if(R.shapeFlag&1&&xe&&!xe.persisted){var{leave:ft,delayLeave:Qe}=xe,nt=()=>ft(le,tt);Qe?Qe(R.el,tt,nt):nt()}else tt()},Te=(R,q)=>{for(var le;R!==q;)le=Ye(R),C(R),R=le;C(q)},it=(R,q,le)=>{R.type.__hmrId&&Vo(R);var{bum:we,scope:xe,update:tt,subTree:ft,um:Qe}=R;we&&u.invokeArrayFns(we),xe.stop(),tt&&(tt.active=!1,ve(ft,R,q,le)),Qe&&yr(Qe,q),yr(()=>{R.isUnmounted=!0},q),q&&q.pendingBranch&&!q.isUnmounted&&R.asyncDep&&!R.asyncResolved&&R.suspenseId===q.pendingId&&(q.deps--,q.deps===0&&q.resolve()),qi(R)},je=function(R,q,le){for(var we=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,xe=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,tt=arguments.length>5&&arguments[5]!==void 0?arguments[5]:0,ft=tt;ft<R.length;ft++)ve(R[ft],q,le,we,xe)},pt=R=>R.shapeFlag&6?pt(R.component.subTree):R.shapeFlag&128?R.suspense.next():Ye(R.anchor||R.el),kt=(R,q,le)=>{R==null?q._vnode&&ve(q._vnode,null,null,!0):Pe(q._vnode||null,R,q,null,null,null,le),zi(),q._vnode=R},Rt={p:Pe,um:ve,m:_e,r:Je,mt:ie,mc:w,pc:at,pbc:V,n:pt,o},xt,Pt;return c&&([xt,Pt]=c(Rt)),{render:kt,hydrate:xt,createApp:Vt(kt,xt)}}function Ro(o,c){var{effect:h,update:m}=o;h.allowRecurse=m.allowRecurse=c}function Ci(o,c){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,m=o.children,C=c.children;if(u.isArray(m)&&u.isArray(C))for(var T=0;T<m.length;T++){var B=m[T],Y=C[T];Y.shapeFlag&1&&!Y.dynamicChildren&&((Y.patchFlag<=0||Y.patchFlag===32)&&(Y=C[T]=wr(C[T]),Y.el=B.el),h||Ci(B,Y)),Y.type===Nn&&!Y.el&&(Y.el=B.el)}}function xo(o){var c=o.slice(),h=[0],m,C,T,B,Y,U=o.length;for(m=0;m<U;m++){var Q=o[m];if(Q!==0){if(C=h[h.length-1],o[C]<Q){c[m]=C,h.push(m);continue}for(T=0,B=h.length-1;T<B;)Y=T+B>>1,o[h[Y]]<Q?T=Y+1:B=Y;Q<o[h[T]]&&(T>0&&(c[m]=h[T-1]),h[T]=m)}}for(T=h.length,B=h[T-1];T-- >0;)h[T]=B,B=c[B];return h}var $a=o=>o.__isTeleport,Wr=o=>o&&(o.disabled||o.disabled===""),fi=o=>typeof SVGElement!="undefined"&&o instanceof SVGElement,ra=(o,c)=>{var h=o&&o.to;if(u.isString(h))if(c){var m=c(h);return m||ce('Failed to locate Teleport target with selector "'.concat(h,'". ')+"Note the target element must exist before the component is mounted - i.e. the target cannot be rendered by the component itself, and ideally should be outside of the entire Vue component tree."),m}else return ce("Current renderer does not support string target for Teleports. (missing querySelector renderer option)"),null;else return!h&&!Wr(o)&&ce("Invalid Teleport target: ".concat(h)),h},cs={__isTeleport:!0,process(o,c,h,m,C,T,B,Y,U,Q){var{mc:Se,pc:fe,pbc:oe,o:{insert:Ye,querySelector:qe,createText:dt,createComment:Ee}}=Q,Pe=Wr(c.props),{shapeFlag:De,children:Ne,dynamicChildren:ot}=c;if(Rr&&(U=!1,ot=null),o==null){var Ze=c.el=Ee("teleport start"),i=c.anchor=Ee("teleport end");Ye(Ze,h,m),Ye(i,h,m);var a=c.target=ra(c.props,qe),f=c.targetAnchor=dt("");a?(Ye(f,a),B=B||fi(a)):Pe||ce("Invalid Teleport target on mount:",a,"(".concat(typeof a,")"));var p=(ie,te)=>{De&16&&Se(Ne,ie,te,C,T,B,Y,U)};Pe?p(h,i):a&&p(a,f)}else{c.el=o.el;var E=c.anchor=o.anchor,w=c.target=o.target,N=c.targetAnchor=o.targetAnchor,V=Wr(o.props),D=V?h:w,K=V?E:N;if(B=B||fi(w),ot?(oe(o.dynamicChildren,ot,D,C,T,B,Y),Ci(o,c,!0)):U||fe(o,c,D,K,C,T,B,Y,!1),Pe)V||us(c,h,E,Q,1);else if((c.props&&c.props.to)!==(o.props&&o.props.to)){var ae=c.target=ra(c.props,qe);ae?us(c,ae,null,Q,0):ce("Invalid Teleport target on update:",w,"(".concat(typeof w,")"))}else V&&us(c,w,N,Q,1)}},remove(o,c,h,m,C,T){var{um:B,o:{remove:Y}}=C,{shapeFlag:U,children:Q,anchor:Se,targetAnchor:fe,target:oe,props:Ye}=o;if(oe&&Y(fe),(T||!Wr(Ye))&&(Y(Se),U&16))for(var qe=0;qe<Q.length;qe++){var dt=Q[qe];B(dt,c,h,!0,!!dt.dynamicChildren)}},move:us,hydrate:qo};function us(o,c,h,m){var{o:{insert:C},m:T}=m,B=arguments.length>4&&arguments[4]!==void 0?arguments[4]:2;B===0&&C(o.targetAnchor,c,h);var{el:Y,anchor:U,shapeFlag:Q,children:Se,props:fe}=o,oe=B===2;if(oe&&C(Y,c,h),(!oe||Wr(fe))&&Q&16)for(var Ye=0;Ye<Se.length;Ye++)T(Se[Ye],c,h,2);oe&&C(U,c,h)}function qo(o,c,h,m,C,T,B,Y){var{o:{nextSibling:U,parentNode:Q,querySelector:Se}}=B,fe=c.target=ra(c.props,Se);if(fe){var oe=fe._lpa||fe.firstChild;c.shapeFlag&16&&(Wr(c.props)?(c.anchor=Y(U(o),c,Q(o),h,m,C,T),c.targetAnchor=oe):(c.anchor=U(o),c.targetAnchor=Y(oe,c,fe,h,m,C,T)),fe._lpa=c.targetAnchor&&U(c.targetAnchor))}return c.anchor&&U(c.anchor)}var wl=cs,Ua="components",di="directives";function tl(o,c){return ds(Ua,o,!0,c)||o}var Bo=Symbol();function fs(o){return u.isString(o)?ds(Ua,o,!1)||o:o||Bo}function Ha(o){return ds(di,o)}function ds(o,c){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0,m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,C=In||cr;if(C){var T=C.type;if(o===Ua){var B=Ls(T);if(B&&(B===c||B===u.camelize(c)||B===u.capitalize(u.camelize(c))))return T}var Y=Ia(C[o]||T[o],c)||Ia(C.appContext[o],c);if(!Y&&m)return T;if(h&&!Y){var U=o===Ua?`
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement.`:"";ce("Failed to resolve ".concat(o.slice(0,-1),": ").concat(c).concat(U))}return Y}else ce("resolve".concat(u.capitalize(o.slice(0,-1))," ")+"can only be used in render() or setup().")}function Ia(o,c){return o&&(o[c]||o[u.camelize(c)]||o[u.capitalize(u.camelize(c))])}var sr=Symbol("Fragment"),Rn=Symbol("Text"),Nn=Symbol("Comment"),yn=Symbol("Static"),Li=[],Ct=null;function Fi(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1;Li.push(Ct=o?null:[])}function Fe(){Li.pop(),Ct=Li[Li.length-1]||null}var wt=1;function Ot(o){wt+=o}function dn(o){return o.dynamicChildren=wt>0?Ct||u.EMPTY_ARR:null,Fe(),wt>0&&Ct&&Ct.push(o),o}function Er(o,c,h,m,C,T){return dn(Ya(o,c,h,m,C,T,!0))}function ti(o,c,h,m,C){return dn(An(o,c,h,m,C,!0))}function zr(o){return o?o.__v_isVNode===!0:!1}function er(o,c){return c.shapeFlag&6&&Pr.has(c.type)?!1:o.type===c.type&&o.key===c.key}var hi;function ja(o){hi=o}var Wa=function(){for(var o=arguments.length,c=new Array(o),h=0;h<o;h++)c[h]=arguments[h];return Wn(...hi?hi(c,In):c)},Na="__vInternal",Ko=o=>{var{key:c}=o;return c!=null?c:null},za=o=>{var{ref:c,ref_key:h,ref_for:m}=o;return c!=null?u.isString(c)||P.isRef(c)||u.isFunction(c)?{i:In,r:c,k:h,f:!!m}:c:null};function Ya(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,C=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,T=arguments.length>5&&arguments[5]!==void 0?arguments[5]:o===sr?0:1,B=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,Y=arguments.length>7&&arguments[7]!==void 0?arguments[7]:!1,U={__v_isVNode:!0,__v_skip:!0,type:o,props:c,key:c&&Ko(c),ref:c&&za(c),scopeId:gn,slotScopeIds:null,children:h,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:T,patchFlag:m,dynamicProps:C,dynamicChildren:null,appContext:null};return Y?(Mo(U,h),T&128&&o.normalize(U)):h&&(U.shapeFlag|=u.isString(h)?8:16),U.key!==U.key&&ce("VNode created with invalid key (NaN). VNode type:",U.type),wt>0&&!B&&Ct&&(U.patchFlag>0||T&6)&&U.patchFlag!==32&&Ct.push(U),U}var An=Wa;function Wn(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,C=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,T=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1;if((!o||o===Bo)&&(o||ce("Invalid vnode type when creating vnode: ".concat(o,".")),o=Nn),zr(o)){var B=Vi(o,c,!0);return h&&Mo(B,h),B}if(Fs(o)&&(o=o.__vccOpts),c){c=Zl(c);var{class:Y,style:U}=c;Y&&!u.isString(Y)&&(c.class=u.normalizeClass(Y)),u.isObject(U)&&(P.isProxy(U)&&!u.isArray(U)&&(U=u.extend({},U)),c.style=u.normalizeStyle(U))}var Q=u.isString(o)?1:ai(o)?128:$a(o)?64:u.isObject(o)?4:u.isFunction(o)?2:0;return Q&4&&P.isProxy(o)&&(o=P.toRaw(o),ce("Vue received a Component which was made a reactive object. This can lead to unnecessary performance overhead, and should be avoided by marking the component with `markRaw` or using `shallowRef` instead of `ref`.",`
Component that was made reactive: `,o)),Ya(o,c,h,m,C,Q,T,!0)}function Zl(o){return o?P.isProxy(o)||Na in o?u.extend({},o):o:null}function Vi(o,c){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,{props:m,ref:C,patchFlag:T,children:B}=o,Y=c?rl(m||{},c):m,U={__v_isVNode:!0,__v_skip:!0,type:o.type,props:Y,key:Y&&Ko(Y),ref:c&&c.ref?h&&C?u.isArray(C)?C.concat(za(c)):[C,za(c)]:za(c):C,scopeId:o.scopeId,slotScopeIds:o.slotScopeIds,children:T===-1&&u.isArray(B)?B.map(Zi):B,target:o.target,targetAnchor:o.targetAnchor,staticCount:o.staticCount,shapeFlag:o.shapeFlag,patchFlag:c&&o.type!==sr?T===-1?16:T|16:T,dynamicProps:o.dynamicProps,dynamicChildren:o.dynamicChildren,appContext:o.appContext,dirs:o.dirs,transition:o.transition,component:o.component,suspense:o.suspense,ssContent:o.ssContent&&Vi(o.ssContent),ssFallback:o.ssFallback&&Vi(o.ssFallback),el:o.el,anchor:o.anchor};return U}function Zi(o){var c=Vi(o);return u.isArray(o.children)&&(c.children=o.children.map(Zi)),c}function Is(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:" ",c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;return An(Rn,null,o,c)}function nl(o,c){var h=An(yn,null,o);return h.staticCount=c,h}function Sl(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"",c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;return c?(Fi(),ti(Nn,null,o)):An(Nn,null,o)}function pi(o){return o==null||typeof o=="boolean"?An(Nn):u.isArray(o)?An(sr,null,o.slice()):typeof o=="object"?wr(o):An(Rn,null,String(o))}function wr(o){return o.el===null||o.memo?o:Vi(o)}function Mo(o,c){var h=0,{shapeFlag:m}=o;if(c==null)c=null;else if(u.isArray(c))h=16;else if(typeof c=="object")if(m&(1|64)){var C=c.default;C&&(C._c&&(C._d=!1),Mo(o,C()),C._c&&(C._d=!0));return}else{h=32;var T=c._;!T&&!(Na in c)?c._ctx=In:T===3&&In&&(In.slots._===1?c._=1:(c._=2,o.patchFlag|=1024))}else u.isFunction(c)?(c={default:c,_ctx:In},h=32):(c=String(c),m&64?(h=16,c=[Is(c)]):h=8);o.children=c,o.shapeFlag|=h}function rl(){for(var o={},c=0;c<arguments.length;c++){var h=c<0||arguments.length<=c?void 0:arguments[c];for(var m in h)if(m==="class")o.class!==h.class&&(o.class=u.normalizeClass([o.class,h.class]));else if(m==="style")o.style=u.normalizeStyle([o.style,h.style]);else if(u.isOn(m)){var C=o[m],T=h[m];T&&C!==T&&!(u.isArray(C)&&C.includes(T))&&(o[m]=C?[].concat(C,T):T)}else m!==""&&(o[m]=h[m])}return o}function lr(o,c,h){var m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;en(o,c,7,[h,m])}function Yr(o,c,h,m){var C,T=h&&h[m];if(u.isArray(o)||u.isString(o)){C=new Array(o.length);for(var B=0,Y=o.length;B<Y;B++)C[B]=c(o[B],B,void 0,T&&T[B])}else if(typeof o=="number"){if(!Number.isInteger(o))return ce("The v-for range expect an integer value but got ".concat(o,".")),[];C=new Array(o);for(var U=0;U<o;U++)C[U]=c(U+1,U,void 0,T&&T[U])}else if(u.isObject(o))if(o[Symbol.iterator])C=Array.from(o,(Ye,qe)=>c(Ye,qe,void 0,T&&T[qe]));else{var Q=Object.keys(o);C=new Array(Q.length);for(var Se=0,fe=Q.length;Se<fe;Se++){var oe=Q[Se];C[Se]=c(o[oe],oe,Se,T&&T[Se])}}else C=[];return h&&(h[m]=C),C}function Ns(o,c){for(var h=0;h<c.length;h++){var m=c[h];if(u.isArray(m))for(var C=0;C<m.length;C++)o[m[C].name]=m[C].fn;else m&&(o[m.name]=m.fn)}return o}function ks(o,c){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},m=arguments.length>3?arguments[3]:void 0,C=arguments.length>4?arguments[4]:void 0;if(In.isCE||In.parent&&gt(In.parent)&&In.parent.isCE)return An("slot",c==="default"?null:{name:c},m&&m());var T=o[c];T&&T.length>1&&(ce("SSR-optimized slot function detected in a non-SSR-optimized render function. You need to mark this component with $dynamic-slots in the parent template."),T=()=>[]),T&&T._c&&(T._d=!1),Fi();var B=T&&il(T(h)),Y=ti(sr,{key:h.key||"_".concat(c)},B||(m?m():[]),B&&o._===1?64:-2);return!C&&Y.scopeId&&(Y.slotScopeIds=[Y.scopeId+"-s"]),T&&T._c&&(T._d=!0),Y}function il(o){return o.some(c=>zr(c)?!(c.type===Nn||c.type===sr&&!il(c.children)):!0)?o:null}function Rs(o){var c={};if(!u.isObject(o))return ce("v-on with no argument expects an object value."),c;for(var h in o)c[u.toHandlerKey(h)]=o[h];return c}var xs=o=>o?al(o)?Ms(o)||o.proxy:xs(o.parent):null,ia=u.extend(Object.create(null),{$:o=>o,$el:o=>o.vnode.el,$data:o=>o.data,$props:o=>P.shallowReadonly(o.props),$attrs:o=>P.shallowReadonly(o.attrs),$slots:o=>P.shallowReadonly(o.slots),$refs:o=>P.shallowReadonly(o.refs),$parent:o=>xs(o.parent),$root:o=>xs(o.root),$emit:o=>o.emit,$options:o=>As(o),$forceUpdate:o=>()=>Jr(o.update),$nextTick:o=>Tr.bind(o.proxy),$watch:o=>Mi.bind(o)}),Do={get(o,c){var{_:h}=o,{ctx:m,setupState:C,data:T,props:B,accessCache:Y,type:U,appContext:Q}=h;if(c==="__isVue")return!0;if(C!==u.EMPTY_OBJ&&C.__isScriptSetup&&u.hasOwn(C,c))return C[c];var Se;if(c[0]!=="$"){var fe=Y[c];if(fe!==void 0)switch(fe){case 1:return C[c];case 2:return T[c];case 4:return m[c];case 3:return B[c]}else{if(C!==u.EMPTY_OBJ&&u.hasOwn(C,c))return Y[c]=1,C[c];if(T!==u.EMPTY_OBJ&&u.hasOwn(T,c))return Y[c]=2,T[c];if((Se=h.propsOptions[0])&&u.hasOwn(Se,c))return Y[c]=3,B[c];if(m!==u.EMPTY_OBJ&&u.hasOwn(m,c))return Y[c]=4,m[c];Ss&&(Y[c]=0)}}var oe=ia[c],Ye,qe;if(oe)return c==="$attrs"&&(P.track(h,"get",c),xi()),oe(h);if((Ye=U.__cssModules)&&(Ye=Ye[c]))return Ye;if(m!==u.EMPTY_OBJ&&u.hasOwn(m,c))return Y[c]=4,m[c];if(qe=Q.config.globalProperties,u.hasOwn(qe,c))return qe[c];In&&(!u.isString(c)||c.indexOf("__v")!==0)&&(T!==u.EMPTY_OBJ&&(c[0]==="$"||c[0]==="_")&&u.hasOwn(T,c)?ce("Property ".concat(JSON.stringify(c)," must be accessed via $data because it starts with a reserved ")+'character ("$" or "_") and is not proxied on the render context.'):h===In&&ce("Property ".concat(JSON.stringify(c)," was accessed during render ")+"but is not defined on instance."))},set(o,c,h){var{_:m}=o,{data:C,setupState:T,ctx:B}=m;return T!==u.EMPTY_OBJ&&u.hasOwn(T,c)?(T[c]=h,!0):C!==u.EMPTY_OBJ&&u.hasOwn(C,c)?(C[c]=h,!0):u.hasOwn(m.props,c)?(ce('Attempting to mutate prop "'.concat(c,'". Props are readonly.'),m),!1):c[0]==="$"&&c.slice(1)in m?(ce('Attempting to mutate public property "'.concat(c,'". ')+"Properties starting with $ are reserved and readonly.",m),!1):(c in m.appContext.config.globalProperties?Object.defineProperty(B,c,{enumerable:!0,configurable:!0,value:h}):B[c]=h,!0)},has(o,c){var{_:{data:h,setupState:m,accessCache:C,ctx:T,appContext:B,propsOptions:Y}}=o,U;return!!C[c]||h!==u.EMPTY_OBJ&&u.hasOwn(h,c)||m!==u.EMPTY_OBJ&&u.hasOwn(m,c)||(U=Y[0])&&u.hasOwn(U,c)||u.hasOwn(T,c)||u.hasOwn(ia,c)||u.hasOwn(B.config.globalProperties,c)},defineProperty(o,c,h){return h.get!=null?o._.accessCache[c]=0:u.hasOwn(h,"value")&&this.set(o,c,h.value,null),Reflect.defineProperty(o,c,h)}};Do.ownKeys=o=>(ce("Avoid app logic that relies on enumerating keys on a component instance. The keys will be empty in production mode to avoid performance overhead."),Reflect.ownKeys(o));var hs=u.extend({},Do,{get(o,c){if(c!==Symbol.unscopables)return Do.get(o,c,o)},has(o,c){var h=c[0]!=="_"&&!u.isGloballyWhitelisted(c);return!h&&Do.has(o,c)&&ce("Property ".concat(JSON.stringify(c)," should not start with _ which is a reserved prefix for Vue internals.")),h}});function Cl(o){var c={};return Object.defineProperty(c,"_",{configurable:!0,enumerable:!1,get:()=>o}),Object.keys(ia).forEach(h=>{Object.defineProperty(c,h,{configurable:!0,enumerable:!1,get:()=>ia[h](o),set:u.NOOP})}),c}function Xl(o){var{ctx:c,propsOptions:[h]}=o;h&&Object.keys(h).forEach(m=>{Object.defineProperty(c,m,{enumerable:!0,configurable:!0,get:()=>o.props[m],set:u.NOOP})})}function Bs(o){var{ctx:c,setupState:h}=o;Object.keys(P.toRaw(h)).forEach(m=>{if(!h.__isScriptSetup){if(m[0]==="$"||m[0]==="_"){ce("setup() return property ".concat(JSON.stringify(m),' should not start with "$" or "_" ')+"which are reserved prefixes for Vue internals.");return}Object.defineProperty(c,m,{enumerable:!0,configurable:!0,get:()=>h[m],set:u.NOOP})}})}var $i=ut(),Jo=0;function Ql(o,c,h){var m=o.type,C=(c?c.appContext:o.appContext)||$i,T={uid:Jo++,vnode:o,type:m,parent:c,appContext:C,root:null,next:null,subTree:null,effect:null,update:null,scope:new P.EffectScope(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:c?c.provides:Object.create(C.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:ss(m,C),emitsOptions:ta(m,C),emit:null,emitted:null,propsDefaults:u.EMPTY_OBJ,inheritAttrs:m.inheritAttrs,ctx:u.EMPTY_OBJ,data:u.EMPTY_OBJ,props:u.EMPTY_OBJ,attrs:u.EMPTY_OBJ,slots:u.EMPTY_OBJ,refs:u.EMPTY_OBJ,setupState:u.EMPTY_OBJ,setupContext:null,suspense:h,suspenseId:h?h.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return T.ctx=Cl(T),T.root=c?c.root:T,T.emit=ea.bind(null,T),o.ce&&o.ce(T),T}var cr=null,Mn=()=>cr||In,gi=o=>{cr=o,o.scope.on()},Ai=()=>{cr&&cr.scope.off(),cr=null},oa=u.makeMap("slot,component");function ol(o,c){var h=c.isNativeTag||u.NO;(oa(o)||h(o))&&ce("Do not use built-in or reserved HTML elements as component id: "+o)}function al(o){return o.vnode.shapeFlag&4}k.isInSSRComponentSetup=!1;function Al(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;k.isInSSRComponentSetup=c;var{props:h,children:m}=o.vnode,C=al(o);as(o,h,C,c),mt(o,m);var T=C?sl(o,c):void 0;return k.isInSSRComponentSetup=!1,T}function sl(o,c){var h,m=o.type;{if(m.name&&ol(m.name,o.appContext.config),m.components)for(var C=Object.keys(m.components),T=0;T<C.length;T++)ol(C[T],o.appContext.config);if(m.directives)for(var B=Object.keys(m.directives),Y=0;Y<B.length;Y++)Mt(B[Y]);m.compilerOptions&&ec()&&ce('"compilerOptions" is only supported when using a build of Vue that includes the runtime compiler. Since you are using a runtime-only build, the options should be passed via your build tool config instead.')}o.accessCache=Object.create(null),o.proxy=P.markRaw(new Proxy(o.ctx,Do)),Xl(o);var{setup:U}=m;if(U){var Q=o.setupContext=U.length>1?Tl(o):null;gi(o),P.pauseTracking();var Se=$t(U,o,0,[P.shallowReadonly(o.props),Q]);if(P.resetTracking(),Ai(),u.isPromise(Se)){if(Se.then(Ai,Ai),c)return Se.then(oe=>{ll(o,oe,c)}).catch(oe=>{Or(oe,o,0)});if(o.asyncDep=Se,!o.suspense){var fe=(h=m.name)!==null&&h!==void 0?h:"Anonymous";ce("Component <".concat(fe,">: setup function returned a promise, but no ")+"<Suspense> boundary was found in the parent component tree. A component with async setup() must be nested in a <Suspense> in order to be rendered.")}}else ll(o,Se,c)}else Ol(o,c)}function ll(o,c,h){u.isFunction(c)?o.type.__ssrInlineRender?o.ssrRender=c:o.render=c:u.isObject(c)?(zr(c)&&ce("setup() should not return VNodes directly - return a render function instead."),o.devtoolsRawSetupState=c,o.setupState=P.proxyRefs(c),Bs(o)):c!==void 0&&ce("setup() should return an object. Received: ".concat(c===null?"null":typeof c)),Ol(o,h)}var aa,ka;function cl(o){aa=o,ka=c=>{c.render._rc&&(c.withProxy=new Proxy(c.ctx,hs))}}var ec=()=>!aa;function Ol(o,c,h){var m=o.type;if(!o.render){if(!c&&aa&&!m.render){var C=m.template;if(C){zt(o,"compile");var{isCustomElement:T,compilerOptions:B}=o.appContext.config,{delimiters:Y,compilerOptions:U}=m,Q=u.extend(u.extend({isCustomElement:T,delimiters:Y},B),U);m.render=aa(C,Q),ar(o,"compile")}}o.render=m.render||u.NOOP,ka&&ka(o)}gi(o),P.pauseTracking(),Cs(o),P.resetTracking(),Ai(),!m.render&&o.render===u.NOOP&&!c&&(!aa&&m.template?ce('Component provided template option but runtime compilation is not supported in this build of Vue. Configure your bundler to alias "vue" to "vue/dist/vue.esm-bundler.js".'):ce("Component is missing template or render function."))}function tc(o){return new Proxy(o.attrs,{get(c,h){return xi(),P.track(o,"get","$attrs"),c[h]},set(){return ce("setupContext.attrs is readonly."),!1},deleteProperty(){return ce("setupContext.attrs is readonly."),!1}})}function Tl(o){var c=m=>{o.exposed&&ce("expose() should be called only once per setup()."),o.exposed=m||{}},h;return Object.freeze({get attrs(){return h||(h=tc(o))},get slots(){return P.shallowReadonly(o.slots)},get emit(){return function(m){for(var C=arguments.length,T=new Array(C>1?C-1:0),B=1;B<C;B++)T[B-1]=arguments[B];return o.emit(m,...T)}},expose:c})}function Ms(o){if(o.exposed)return o.exposeProxy||(o.exposeProxy=new Proxy(P.proxyRefs(P.markRaw(o.exposed)),{get(c,h){if(h in c)return c[h];if(h in ia)return ia[h](o)}}))}var Ds=/(?:^|[-_])(\w)/g,Mc=o=>o.replace(Ds,c=>c.toUpperCase()).replace(/[-_]/g,"");function Ls(o){return u.isFunction(o)&&o.displayName||o.name}function Ra(o,c){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,m=Ls(c);if(!m&&c.__file){var C=c.__file.match(/([^/\\]+)\.\w+$/);C&&(m=C[1])}if(!m&&o&&o.parent){var T=B=>{for(var Y in B)if(B[Y]===c)return Y};m=T(o.components||o.parent.type.components)||T(o.appContext.components)}return m?Mc(m):h?"App":"Anonymous"}function Fs(o){return u.isFunction(o)&&"__vccOpts"in o}var Pl=(o,c)=>P.computed(o,c,k.isInSSRComponentSetup),Vs=o=>ce("".concat(o,"() is a compiler-hint helper that is only usable inside ")+"<script setup> of a single file component. Its arguments should be compiled away and passing it at runtime has no effect.");function ul(){return Vs("defineProps"),null}function Dc(){return Vs("defineEmits"),null}function Lc(o){Vs("defineExpose")}function Fc(o,c){return Vs("withDefaults"),null}function Vc(){return nc().slots}function $c(){return nc().attrs}function nc(){var o=Mn();return o||ce("useContext() called without active instance."),o.setupContext||(o.setupContext=Tl(o))}function rc(o,c){var h=u.isArray(o)?o.reduce((T,B)=>(T[B]={},T),{}):o;for(var m in c){var C=h[m];C?u.isArray(C)||u.isFunction(C)?h[m]={type:C,default:c[m]}:C.default=c[m]:C===null?h[m]={default:c[m]}:ce('props default key "'.concat(m,'" has no corresponding declaration.'))}return h}function Uc(o,c){var h={},m=function(T){c.includes(T)||Object.defineProperty(h,T,{enumerable:!0,get:()=>o[T]})};for(var C in o)m(C);return h}function Hc(o){var c=Mn();c||ce("withAsyncContext called without active current instance. This is likely a bug.");var h=o();return Ai(),u.isPromise(h)&&(h=h.catch(m=>{throw gi(c),m})),[h,()=>gi(c)]}function go(o,c,h){var m=arguments.length;return m===2?u.isObject(c)&&!u.isArray(c)?zr(c)?An(o,null,[c]):An(o,c):An(o,null,c):(m>3?h=Array.prototype.slice.call(arguments,2):m===3&&zr(h)&&(h=[h]),An(o,c,h))}var Ga=Symbol("ssrContext"),Mr=()=>{{var o=mr(Ga);return o||ce("Server rendering context not provided. Make sure to only call useSSRContext() conditionally in the server build."),o}};function sa(o){return!!(o&&o.__v_isShallow)}function la(){if(typeof window=="undefined")return;var o={style:"color:#3ba776"},c={style:"color:#0b1bc9"},h={style:"color:#b62e24"},m={style:"color:#9d288c"},C={header(fe){return u.isObject(fe)?fe.__isVue?["div",o,"VueInstance"]:P.isRef(fe)?["div",{},["span",o,Se(fe)],"<",Y(fe.value),">"]:P.isReactive(fe)?["div",{},["span",o,sa(fe)?"ShallowReactive":"Reactive"],"<",Y(fe),">".concat(P.isReadonly(fe)?" (readonly)":"")]:P.isReadonly(fe)?["div",{},["span",o,sa(fe)?"ShallowReadonly":"Readonly"],"<",Y(fe),">"]:null:null},hasBody(fe){return fe&&fe.__isVue},body(fe){if(fe&&fe.__isVue)return["div",{},...T(fe.$)]}};function T(fe){var oe=[];fe.type.props&&fe.props&&oe.push(B("props",P.toRaw(fe.props))),fe.setupState!==u.EMPTY_OBJ&&oe.push(B("setup",fe.setupState)),fe.data!==u.EMPTY_OBJ&&oe.push(B("data",P.toRaw(fe.data)));var Ye=U(fe,"computed");Ye&&oe.push(B("computed",Ye));var qe=U(fe,"inject");return qe&&oe.push(B("injected",qe)),oe.push(["div",{},["span",{style:m.style+";opacity:0.66"},"$ (internal): "],["object",{object:fe}]]),oe}function B(fe,oe){return oe=u.extend({},oe),Object.keys(oe).length?["div",{style:"line-height:1.25em;margin-bottom:0.6em"},["div",{style:"color:#476582"},fe],["div",{style:"padding-left:1.25em"},...Object.keys(oe).map(Ye=>["div",{},["span",m,Ye+": "],Y(oe[Ye],!1)])]]:["span",{}]}function Y(fe){var oe=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return typeof fe=="number"?["span",c,fe]:typeof fe=="string"?["span",h,JSON.stringify(fe)]:typeof fe=="boolean"?["span",m,fe]:u.isObject(fe)?["object",{object:oe?P.toRaw(fe):fe}]:["span",h,String(fe)]}function U(fe,oe){var Ye=fe.type;if(!u.isFunction(Ye)){var qe={};for(var dt in fe.ctx)Q(Ye,dt,oe)&&(qe[dt]=fe.ctx[dt]);return qe}}function Q(fe,oe,Ye){var qe=fe[Ye];if(u.isArray(qe)&&qe.includes(oe)||u.isObject(qe)&&oe in qe||fe.extends&&Q(fe.extends,oe,Ye)||fe.mixins&&fe.mixins.some(dt=>Q(dt,oe,Ye)))return!0}function Se(fe){return sa(fe)?"ShallowRef":fe.effect?"ComputedRef":"Ref"}window.devtoolsFormatters?window.devtoolsFormatters.push(C):window.devtoolsFormatters=[C]}function jc(o,c,h,m){var C=h[m];if(C&&ic(C,o))return C;var T=c();return T.memo=o.slice(),h[m]=T}function ic(o,c){var h=o.memo;if(h.length!=c.length)return!1;for(var m=0;m<h.length;m++)if(h[m]!==c[m])return!1;return wt>0&&Ct&&Ct.push(o),!0}var Lo="3.2.33",fl=null,Zo=null,oc={insert:(o,c,h)=>h?c.insertBefore(o,h):c.appendChild(o),remove:o=>{var c=o.parentNode;c&&c.removeChild(o)},createElement:o=>l.createElement(o),createText:o=>l.createText(o),createComment:o=>l.createComment(o),setText:(o,c)=>{o.setAttr("value",c)},setElementText:(o,c)=>{o.setAttr("value",c)},parentNode:o=>o.parentNode,nextSibling:o=>o.nextSibling};function vi(o){return Object.keys(o)}function Il(o){var c={};return u.isArray(o)&&o.forEach(h=>{vi(h).forEach(m=>{var C=h[m],T=c[m]||(c[m]={});vi(C).forEach(B=>{var Y=C[B],U=T[B]||(T[B]={});vi(Y).forEach(Q=>{Q[0]==="!"?(U[Q]=Y[Q],delete U[Q.slice(1)]):u.hasOwn(U,"!"+Q)||(U[Q]=Y[Q])})})})}),c}function ps(o,c){var h=c&&c.classList;return h&&h.includes(o)}var ac=/[+~> ]$/,dl="parentNode",gs="previousSibling";function sc(o,c){for(var h=o.split("."),m=h.length-1;m>0;m--){var C=h[m],T=C[C.length-1],B=C.replace(ac,"");if(T==="~"||T===" "){for(var Y=T==="~"?gs:dl;c&&(c=c[Y],!ps(B,c)););if(!c)return!1}else if(T===">"?c=c&&c[dl]:T==="+"&&(c=c&&c[gs]),!ps(B,c))return!1}return!0}var Wc=1e3;function zc(o,c,h){var{styles:m,weights:C}=o;vi(c).forEach(T=>{if(!(T&&h&&!sc(T,h))){var B=T.split(".").length,Y=c[T];vi(Y).forEach(U=>{var Q=Y[U],Se=U[0]==="!";Se&&(U=U.slice(1));var fe=C[U]||0,oe=B+(Se?Wc:0);oe>=fe&&(C[U]=oe,m[U]=Q)})}})}function lc(o,c){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,m={styles:{},weights:{}};return o.forEach(C=>{var T=c[C];T&&zc(m,T,h)}),m.styles}function $s(o){return lc(o.classList,o.styleSheet,o)}function cc(o,c){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null;return lc(o,uc(c),h)}function uc(o){var{type:c,appContext:h}=o,m=c;if(!m.__styles)if(h&&u.isArray(h.provides.__globalStyles)&&(h.provides.__globalStyles=Il(h.provides.__globalStyles)),m.mpType==="page"&&h)m.__styles=h.provides.__globalStyles;else{var C=[];h&&C.push(h.provides.__globalStyles),u.isArray(m.styles)&&m.styles.forEach(T=>C.push(T)),m.__styles=Il(C)}return m.__styles}function fc(o,c,h){var m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;m&&([c,h]=Oi(o,c,h,m)),o.setAttr(c,h)}var Nl="hoverClass",dc="placeholderClass",hl="placeholderStyle",Yc="indicatorClass",Gc="indicatorStyle",qc="maskClass",kl="maskStyle",hn={view:{class:[Nl],style:[]},button:{class:[Nl],style:[]},navigator:{class:[Nl],style:[]},"u-input":{class:[dc],style:[hl]},"u-textarea":{class:[dc],style:[hl]},"picker-view":{class:[Yc,qc],style:[Gc,kl]}};function Oi(o,c,h,m){if(!h)return[c,h];var C=hn[o.type];if(C){var T=u.camelize(c);if(C.class.indexOf(T)>-1)return[T,cc([h],m,o)];if(C.style.indexOf(c)>-1)return u.isString(h)?[T,u.parseStringStyle(h)]:[T,u.normalizeStyle(h)]}return[c,h]}function Ti(o,c,h){var m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;if(!!m){var C=h?h.split(" "):[];o.setClassList(C),o.setStyleSheet(uc(m))}}function Rl(o,c,h,m){o.addEvent(c,h)}function Us(o,c){o.removeEvent(c)}function xl(o,c,h,m){var C=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,T=o._vei||(o._vei={}),B=T[c];if(m&&B)B.value=m;else{var[Y,U]=Hs(c);if(m){var Q=T[c]=js(m,C);Rl(o,Y,Q)}else B&&(Us(o,Y),T[c]=void 0)}}var Fo=/(?:Once|Passive|Capture)$/;function Hs(o){var c;if(Fo.test(o)){c={};for(var h;h=o.match(Fo);)o=o.slice(0,o.length-h[0].length),c[h[0].toLowerCase()]=!0}return[u.hyphenate(o.slice(2)),c]}function js(o,c){var h=C=>{en(h.value,c,5,[C])};h.value=o;var m=new Set;return u.isArray(h.value)?h.value.forEach(C=>{C.modifiers&&C.modifiers.forEach(T=>{m.add(T)})}):(h.value.modifiers&&h.value.modifiers.forEach(C=>{m.add(C)}),qa(h,c)),h.modifiers=[...m],h}function qa(o,c){if(!!c){var{$wxsModules:h}=c;if(!!h){var m=o.value.toString();!h.find(C=>m.indexOf("."+C+".")>-1)||(o.wxsEvent=o.value())}}}function Ka(o,c,h){if(!!h){u.isString(h)&&(h=u.parseStringStyle(h));var m={},C=c&&!u.isString(c);if(C){for(var T in c)h[T]==null&&(m[u.camelize(T)]="");for(var B in h){var Y=h[B];Y!==c[B]&&(m[u.camelize(B)]=Y)}}else for(var U in h)m[u.camelize(U)]=h[U];o.setStyles(m)}}var Dr=["u-input","u-textarea"],Xi=function(o,c,h,m){var C=arguments.length>6?arguments[6]:void 0;c==="class"?Ti(o,h,m,C):c==="style"?Ka(o,h,m):u.isOn(c)?u.isModelListener(c)||xl(o,c,h,m,C):c==="modelValue"&&Dr.includes(o.type)?o.setAttrs({modelValue:m,value:m}):fc(o,c,m,C)};function Qi(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"$style";{var c=Mn();if(!c)return ce("useCssModule must be called inside setup()"),u.EMPTY_OBJ;var h=c.type.__cssModules;if(!h)return ce("Current instance does not have CSS modules injected."),u.EMPTY_OBJ;var m=h[o];return m||(ce('Current instance does not have CSS module named "'.concat(o,'".')),u.EMPTY_OBJ)}}function Ja(o){var c=Mn();if(!c){ce("useCssVars is called without current active component instance.");return}var h=()=>Bl(c.subTree,o(c.proxy));Po(()=>fr(h,{flush:"post"})),_r(h)}function Bl(o,c){if(o.shapeFlag&128){var h=o.suspense;o=h.activeBranch,h.pendingBranch&&!h.isHydrating&&h.effects.push(()=>{Bl(h.activeBranch,c)})}for(;o.component;)o=o.component.subTree;if(o.shapeFlag&1&&o.el){var m=o.el.style;for(var C in c)m.setProperty("--".concat(C),c[C])}else o.type===sr&&o.children.forEach(T=>Bl(T,c))}var ca=["ctrl","shift","alt","meta"],Ml={stop:o=>o.stopPropagation(),prevent:o=>o.preventDefault(),self:o=>o.target!==o.currentTarget,ctrl:o=>!o.ctrlKey,shift:o=>!o.shiftKey,alt:o=>!o.altKey,meta:o=>!o.metaKey,left:o=>"button"in o&&o.button!==0,middle:o=>"button"in o&&o.button!==1,right:o=>"button"in o&&o.button!==2,exact:(o,c)=>ca.some(h=>o["".concat(h,"Key")]&&!c.includes(h))},ua=(o,c)=>function(h){for(var m=0;m<c.length;m++){var C=Ml[c[m]];if(C&&C(h,c))return}for(var T=arguments.length,B=new Array(T>1?T-1:0),Y=1;Y<T;Y++)B[Y-1]=arguments[Y];return o(h,...B)},fa=(o,c)=>h=>{if("key"in h){var m=u.hyphenate(h.key);if(c.some(C=>C===m))return o(h)}},Gr=u.extend({patchProp:Xi},oc),En;function Za(){return En||(En=fn(Gr))}var Kc=function(){Za().render(...arguments)},hc=function(){var o=Za().createApp(...arguments),{mount:c}=o;return o.mount=h=>c(h),o};return Object.defineProperty(k,"camelize",{enumerable:!0,get:function(){return u.camelize}}),Object.defineProperty(k,"capitalize",{enumerable:!0,get:function(){return u.capitalize}}),Object.defineProperty(k,"hyphenate",{enumerable:!0,get:function(){return u.hyphenate}}),Object.defineProperty(k,"normalizeClass",{enumerable:!0,get:function(){return u.normalizeClass}}),Object.defineProperty(k,"normalizeProps",{enumerable:!0,get:function(){return u.normalizeProps}}),Object.defineProperty(k,"normalizeStyle",{enumerable:!0,get:function(){return u.normalizeStyle}}),Object.defineProperty(k,"toDisplayString",{enumerable:!0,get:function(){return u.toDisplayString}}),Object.defineProperty(k,"toHandlerKey",{enumerable:!0,get:function(){return u.toHandlerKey}}),Object.defineProperty(k,"EffectScope",{enumerable:!0,get:function(){return P.EffectScope}}),Object.defineProperty(k,"ReactiveEffect",{enumerable:!0,get:function(){return P.ReactiveEffect}}),Object.defineProperty(k,"customRef",{enumerable:!0,get:function(){return P.customRef}}),Object.defineProperty(k,"effect",{enumerable:!0,get:function(){return P.effect}}),Object.defineProperty(k,"effectScope",{enumerable:!0,get:function(){return P.effectScope}}),Object.defineProperty(k,"getCurrentScope",{enumerable:!0,get:function(){return P.getCurrentScope}}),Object.defineProperty(k,"isProxy",{enumerable:!0,get:function(){return P.isProxy}}),Object.defineProperty(k,"isReactive",{enumerable:!0,get:function(){return P.isReactive}}),Object.defineProperty(k,"isReadonly",{enumerable:!0,get:function(){return P.isReadonly}}),Object.defineProperty(k,"isRef",{enumerable:!0,get:function(){return P.isRef}}),Object.defineProperty(k,"isShallow",{enumerable:!0,get:function(){return P.isShallow}}),Object.defineProperty(k,"markRaw",{enumerable:!0,get:function(){return P.markRaw}}),Object.defineProperty(k,"onScopeDispose",{enumerable:!0,get:function(){return P.onScopeDispose}}),Object.defineProperty(k,"proxyRefs",{enumerable:!0,get:function(){return P.proxyRefs}}),Object.defineProperty(k,"reactive",{enumerable:!0,get:function(){return P.reactive}}),Object.defineProperty(k,"readonly",{enumerable:!0,get:function(){return P.readonly}}),Object.defineProperty(k,"ref",{enumerable:!0,get:function(){return P.ref}}),Object.defineProperty(k,"shallowReactive",{enumerable:!0,get:function(){return P.shallowReactive}}),Object.defineProperty(k,"shallowReadonly",{enumerable:!0,get:function(){return P.shallowReadonly}}),Object.defineProperty(k,"shallowRef",{enumerable:!0,get:function(){return P.shallowRef}}),Object.defineProperty(k,"stop",{enumerable:!0,get:function(){return P.stop}}),Object.defineProperty(k,"toRaw",{enumerable:!0,get:function(){return P.toRaw}}),Object.defineProperty(k,"toRef",{enumerable:!0,get:function(){return P.toRef}}),Object.defineProperty(k,"toRefs",{enumerable:!0,get:function(){return P.toRefs}}),Object.defineProperty(k,"triggerRef",{enumerable:!0,get:function(){return P.triggerRef}}),Object.defineProperty(k,"unref",{enumerable:!0,get:function(){return P.unref}}),k.BaseTransition=ne,k.Comment=Nn,k.Fragment=sr,k.KeepAlive=Da,k.Static=yn,k.Suspense=Qr,k.Teleport=wl,k.Text=Rn,k.callWithAsyncErrorHandling=en,k.callWithErrorHandling=$t,k.cloneVNode=Vi,k.compatUtils=Zo,k.computed=Pl,k.createApp=hc,k.createBlock=ti,k.createCommentVNode=Sl,k.createElementBlock=Er,k.createElementVNode=Ya,k.createHydrationRenderer=ui,k.createPropsRestProxy=Uc,k.createRenderer=fn,k.createSlots=Ns,k.createStaticVNode=nl,k.createTextVNode=Is,k.createVNode=An,k.defineAsyncComponent=bn,k.defineComponent=Xe,k.defineEmits=Dc,k.defineExpose=Lc,k.defineProps=ul,k.getCurrentInstance=Mn,k.getTransitionRawChildren=$e,k.guardReactiveProps=Zl,k.h=go,k.handleError=Or,k.initCustomFormatter=la,k.inject=mr,k.injectHook=To,k.isMemoSame=ic,k.isRuntimeOnly=ec,k.isVNode=zr,k.mergeDefaults=rc,k.mergeProps=rl,k.nextTick=Tr,k.onActivated=ho,k.onBeforeMount=Di,k.onBeforeUnmount=br,k.onBeforeUpdate=Sa,k.onDeactivated=La,k.onErrorCaptured=Go,k.onMounted=Po,k.onRenderTracked=ws,k.onRenderTriggered=jr,k.onServerPrefetch=Va,k.onUnmounted=na,k.onUpdated=_r,k.openBlock=Fi,k.parseClassList=cc,k.parseClassStyles=$s,k.popScopeId=$o,k.provide=Bn,k.pushScopeId=oi,k.queuePostFlushCb=yo,k.registerRuntimeCompiler=cl,k.render=Kc,k.renderList=Yr,k.renderSlot=ks,k.resolveComponent=tl,k.resolveDirective=Ha,k.resolveDynamicComponent=fs,k.resolveFilter=fl,k.resolveTransitionHooks=G,k.setBlockTracking=Ot,k.setDevtoolsHook=Ur,k.setTransitionHooks=de,k.ssrContextKey=Ga,k.toHandlers=Rs,k.transformVNodeArgs=ja,k.useAttrs=$c,k.useCssModule=Qi,k.useCssStyles=Il,k.useCssVars=Ja,k.useSSRContext=Mr,k.useSlots=Vc,k.useTransitionState=si,k.version=Lo,k.warn=ce,k.watch=uo,k.watchEffect=fr,k.watchPostEffect=ya,k.watchSyncEffect=Ea,k.withAsyncContext=Hc,k.withCtx=Ie,k.withDefaults=Fc,k.withDirectives=Cn,k.withKeys=fa,k.withMemo=jc,k.withModifiers=ua,k.withScopeId=Ut,Object.defineProperty(k,"__esModule",{value:!0}),k}({},O,x,b);return S.__TYPE__="nvue",S}var _g=KT(eP);var uu={};WT(uu,{EMPTY_ARR:()=>hP,EMPTY_OBJ:()=>dP,NO:()=>gP,NOOP:()=>pP,camelize:()=>PP,capitalize:()=>qu,def:()=>xP,extend:()=>mi,getGlobalThis:()=>MP,hasChanged:()=>kP,hasOwn:()=>jl,hyphenate:()=>Hf,invokeArrayFns:()=>RP,isArray:()=>ji,isBuiltInDirective:()=>OP,isFunction:()=>Yn,isGloballyWhitelisted:()=>rP,isHTMLTag:()=>cP,isIntegerKey:()=>CP,isMap:()=>Eg,isModelListener:()=>_P,isObject:()=>kc,isOn:()=>mP,isPlainObject:()=>Rc,isPromise:()=>wP,isReservedProp:()=>AP,isSVGTag:()=>uP,isSet:()=>wg,isString:()=>Wi,isSymbol:()=>EP,makeMap:()=>Nc,normalizeClass:()=>Uf,normalizeProps:()=>aP,normalizeStyle:()=>$f,parseStringStyle:()=>bg,remove:()=>bP,toDisplayString:()=>fP,toHandlerKey:()=>NP,toNumber:()=>BP,toRawType:()=>SP,toTypeString:()=>Ks});function Nc(v,l){let b=Object.create(null),O=v.split(",");for(let x=0;x<O.length;x++)b[O[x]]=!0;return l?x=>!!b[x.toLowerCase()]:x=>!!b[x]}var nP="Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt",rP=Nc(nP);function $f(v){if(ji(v)){let l={};for(let b=0;b<v.length;b++){let O=v[b],x=Wi(O)?bg(O):$f(O);if(x)for(let S in x)l[S]=x[S]}return l}else{if(Wi(v))return v;if(kc(v))return v}}var iP=/;(?![^(]*\))/g,oP=/:(.+)/;function bg(v){let l={};return v.split(iP).forEach(b=>{if(b){let O=b.split(oP);O.length>1&&(l[O[0].trim()]=O[1].trim())}}),l}function Uf(v){let l="";if(Wi(v))l=v;else if(ji(v))for(let b=0;b<v.length;b++){let O=Uf(v[b]);O&&(l+=O+" ")}else if(kc(v))for(let b in v)v[b]&&(l+=b+" ");return l.trim()}function aP(v){if(!v)return null;let{class:l,style:b}=v;return l&&!Wi(l)&&(v.class=Uf(l)),b&&(v.style=$f(b)),v}var sP="html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot",lP="svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view",cP=Nc(sP),uP=Nc(lP),fP=v=>Wi(v)?v:v==null?"":ji(v)||kc(v)&&(v.toString===Sg||!Yn(v.toString))?JSON.stringify(v,yg,2):String(v),yg=(v,l)=>l&&l.__v_isRef?yg(v,l.value):Eg(l)?{[`Map(${l.size})`]:[...l.entries()].reduce((b,[O,x])=>(b[`${O} =>`]=x,b),{})}:wg(l)?{[`Set(${l.size})`]:[...l.values()]}:kc(l)&&!ji(l)&&!Rc(l)?String(l):l,dP={},hP=[],pP=()=>{},gP=()=>!1,vP=/^on[^a-z]/,mP=v=>vP.test(v),_P=v=>v.startsWith("onUpdate:"),mi=Object.assign,bP=(v,l)=>{let b=v.indexOf(l);b>-1&&v.splice(b,1)},yP=Object.prototype.hasOwnProperty,jl=(v,l)=>yP.call(v,l),ji=Array.isArray,Eg=v=>Ks(v)==="[object Map]",wg=v=>Ks(v)==="[object Set]",Yn=v=>typeof v=="function",Wi=v=>typeof v=="string",EP=v=>typeof v=="symbol",kc=v=>v!==null&&typeof v=="object",wP=v=>kc(v)&&Yn(v.then)&&Yn(v.catch),Sg=Object.prototype.toString,Ks=v=>Sg.call(v),SP=v=>Ks(v).slice(8,-1),Rc=v=>Ks(v)==="[object Object]",CP=v=>Wi(v)&&v!=="NaN"&&v[0]!=="-"&&""+parseInt(v,10)===v,AP=Nc(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),OP=Nc("bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo"),Gu=v=>{let l=Object.create(null);return b=>l[b]||(l[b]=v(b))},TP=/-(\w)/g,PP=Gu(v=>v.replace(TP,(l,b)=>b?b.toUpperCase():"")),IP=/\B([A-Z])/g,Hf=Gu(v=>v.replace(IP,"-$1").toLowerCase()),qu=Gu(v=>v.charAt(0).toUpperCase()+v.slice(1)),NP=Gu(v=>v?`on${qu(v)}`:""),kP=(v,l)=>!Object.is(v,l),RP=(v,l)=>{for(let b=0;b<v.length;b++)v[b](l)},xP=(v,l,b)=>{Object.defineProperty(v,l,{configurable:!0,enumerable:!1,value:b})},BP=v=>{let l=parseFloat(v);return isNaN(l)?v:l},Cg,MP=()=>Cg||(Cg=typeof globalThis!="undefined"?globalThis:typeof self!="undefined"?self:typeof window!="undefined"?window:typeof global!="undefined"?global:{});function Ag(v){var l=function(b,O){"use strict";function x(M,...ne){console.warn(`[Vue warn] ${M}`,...ne)}let S;class k{constructor(ne=!1){this.active=!0,this.effects=[],this.cleanups=[],!ne&&S&&(this.parent=S,this.index=(S.scopes||(S.scopes=[])).push(this)-1)}run(ne){if(this.active){let he=S;try{return S=this,ne()}finally{S=he}}}on(){S=this}off(){S=this.parent}stop(ne){if(this.active){let he,G;for(he=0,G=this.effects.length;he<G;he++)this.effects[he].stop();for(he=0,G=this.cleanups.length;he<G;he++)this.cleanups[he]();if(this.scopes)for(he=0,G=this.scopes.length;he<G;he++)this.scopes[he].stop(!0);if(this.parent&&!ne){let F=this.parent.scopes.pop();F&&F!==this&&(this.parent.scopes[this.index]=F,F.index=this.index)}this.active=!1}}}function u(M){return new k(M)}function P(M,ne=S){ne&&ne.active&&ne.effects.push(M)}function We(){return S}function At(M){S&&S.cleanups.push(M)}let an=M=>{let ne=new Set(M);return ne.w=0,ne.n=0,ne},A=M=>(M.w&re)>0,ce=M=>(M.n&re)>0,Kn=({deps:M})=>{if(M.length)for(let ne=0;ne<M.length;ne++)M[ne].w|=re},Un=M=>{let{deps:ne}=M;if(ne.length){let he=0;for(let G=0;G<ne.length;G++){let F=ne[G];A(F)&&!ce(F)?F.delete(M):ne[he++]=F,F.w&=~re,F.n&=~re}ne.length=he}},bt=new WeakMap,se=0,re=1,Gt=30,$t,en=Symbol(""),Or=Symbol("");class Vr{constructor(ne,he=null,G){this.fn=ne,this.scheduler=he,this.active=!0,this.deps=[],this.parent=void 0,P(this,G)}run(){if(!this.active)return this.fn();let ne=$t,he=cn;for(;ne;){if(ne===this)return;ne=ne.parent}try{return this.parent=$t,$t=this,cn=!0,re=1<<++se,se<=Gt?Kn(this):pr(this),this.fn()}finally{se<=Gt&&Un(this),re=1<<--se,$t=this.parent,cn=he,this.parent=void 0,this.deferStop&&this.stop()}}stop(){$t===this?this.deferStop=!0:this.active&&(pr(this),this.onStop&&this.onStop(),this.active=!1)}}function pr(M){let{deps:ne}=M;if(ne.length){for(let he=0;he<ne.length;he++)ne[he].delete(M);ne.length=0}}function Pn(M,ne){M.effect&&(M=M.effect.fn);let he=new Vr(M);ne&&(O.extend(he,ne),ne.scope&&P(he,ne.scope)),(!ne||!ne.lazy)&&he.run();let G=he.run.bind(he);return G.effect=he,G}function qt(M){M.effect.stop()}let cn=!0,Jn=[];function Dn(){Jn.push(cn),cn=!1}function rr(){Jn.push(cn),cn=!0}function Gn(){let M=Jn.pop();cn=M===void 0?!0:M}function Re(M,ne,he){if(cn&&$t){let G=bt.get(M);G||bt.set(M,G=new Map);let F=G.get(he);F||G.set(he,F=an()),ct(F,void 0)}}function ct(M,ne){let he=!1;se<=Gt?ce(M)||(M.n|=re,he=!A(M)):he=!M.has($t),he&&(M.add($t),$t.deps.push(M))}function St(M,ne,he,G,F,J){let de=bt.get(M);if(!de)return;let $e=[];if(ne==="clear")$e=[...de.values()];else if(he==="length"&&O.isArray(M))de.forEach((gt,bn)=>{(bn==="length"||bn>=G)&&$e.push(gt)});else switch(he!==void 0&&$e.push(de.get(he)),ne){case"add":O.isArray(M)?O.isIntegerKey(he)&&$e.push(de.get("length")):($e.push(de.get(en)),O.isMap(M)&&$e.push(de.get(Or)));break;case"delete":O.isArray(M)||($e.push(de.get(en)),O.isMap(M)&&$e.push(de.get(Or)));break;case"set":O.isMap(M)&&$e.push(de.get(en));break}let Xe=void 0;if($e.length===1)$e[0]&&Kt($e[0]);else{let gt=[];for(let bn of $e)bn&&gt.push(...bn);Kt(an(gt))}}function Kt(M,ne){for(let he of O.isArray(M)?M:[...M])(he!==$t||he.allowRecurse)&&(he.scheduler?he.scheduler():he.run())}let mn=O.makeMap("__proto__,__v_isRef,__isVue"),un=new Set(Object.getOwnPropertyNames(Symbol).map(M=>Symbol[M]).filter(O.isSymbol)),Tr=oo(),ri=oo(!1,!0),Jr=oo(!0),_i=oo(!0,!0),gr=bo();function bo(){let M={};return["includes","indexOf","lastIndexOf"].forEach(ne=>{M[ne]=function(...he){let G=nn(this);for(let J=0,de=this.length;J<de;J++)Re(G,"get",J+"");let F=G[ne](...he);return F===-1||F===!1?G[ne](...he.map(nn)):F}}),["push","pop","shift","unshift","splice"].forEach(ne=>{M[ne]=function(...he){Dn();let G=nn(this)[ne].apply(this,he);return Gn(),G}}),M}function oo(M=!1,ne=!1){return function(G,F,J){if(F==="__v_isReactive")return!M;if(F==="__v_isReadonly")return M;if(F==="__v_isShallow")return ne;if(F==="__v_raw"&&J===(M?ne?xn:gn:ne?In:Ki).get(G))return G;let de=O.isArray(G);if(!M&&de&&O.hasOwn(gr,F))return Reflect.get(gr,F,J);let $e=Reflect.get(G,F,J);return(O.isSymbol(F)?un.has(F):mn(F))||(M||Re(G,"get",F),ne)?$e:Qr($e)?!de||!O.isIntegerKey(F)?$e.value:$e:O.isObject($e)?M?Ri($e):Ut($e):$e}}let yo=zi(),ao=zi(!0);function zi(M=!1){return function(he,G,F,J){let de=he[G];if(Zr(de)&&Qr(de)&&!Qr(F))return!1;if(!M&&!Zr(F)&&(Bi(F)||(F=nn(F),de=nn(de)),!O.isArray(he)&&Qr(de)&&!Qr(F)))return de.value=F,!0;let $e=O.isArray(he)&&O.isIntegerKey(G)?Number(G)<he.length:O.hasOwn(he,G),Xe=Reflect.set(he,G,F,J);return he===nn(J)&&($e?O.hasChanged(F,de)&&St(he,"set",G,F,de):St(he,"add",G,F)),Xe}}function ur(M,ne){let he=O.hasOwn(M,ne),G=M[ne],F=Reflect.deleteProperty(M,ne);return F&&he&&St(M,"delete",ne,void 0,G),F}function Yi(M,ne){let he=Reflect.has(M,ne);return(!O.isSymbol(ne)||!un.has(ne))&&Re(M,"has",ne),he}function so(M){return Re(M,"iterate",O.isArray(M)?"length":en),Reflect.ownKeys(M)}let Rr={get:Tr,set:yo,deleteProperty:ur,has:Yi,ownKeys:so},Pr={get:Jr,set(M,ne){return!0},deleteProperty(M,ne){return!0}},ir=O.extend({},Rr,{get:ri,set:ao}),Gi=O.extend({},Pr,{get:_i}),Vo=M=>M,vr=M=>Reflect.getPrototypeOf(M);function bi(M,ne,he=!1,G=!1){M=M.__v_raw;let F=nn(M),J=nn(ne);ne!==J&&!he&&Re(F,"get",ne),!he&&Re(F,"get",J);let{has:de}=vr(F),$e=G?Vo:he?Xr:_n;if(de.call(F,ne))return $e(M.get(ne));if(de.call(F,J))return $e(M.get(J));M!==F&&M.get(ne)}function Ni(M,ne=!1){let he=this.__v_raw,G=nn(he),F=nn(M);return M!==F&&!ne&&Re(G,"has",M),!ne&&Re(G,"has",F),M===F?he.has(M):he.has(M)||he.has(F)}function Hn(M,ne=!1){return M=M.__v_raw,!ne&&Re(nn(M),"iterate",en),Reflect.get(M,"size",M)}function ki(M){M=nn(M);let ne=nn(this);return vr(ne).has.call(ne,M)||(ne.add(M),St(ne,"add",M,M)),this}function Eo(M,ne){ne=nn(ne);let he=nn(this),{has:G,get:F}=vr(he),J=G.call(he,M);J||(M=nn(M),J=G.call(he,M));let de=F.call(he,M);return he.set(M,ne),J?O.hasChanged(ne,de)&&St(he,"set",M,ne,de):St(he,"add",M,ne),this}function yi(M){let ne=nn(this),{has:he,get:G}=vr(ne),F=he.call(ne,M);F||(M=nn(M),F=he.call(ne,M));let J=G?G.call(ne,M):void 0,de=ne.delete(M);return F&&St(ne,"delete",M,void 0,J),de}function $r(){let M=nn(this),ne=M.size!==0,he=void 0,G=M.clear();return ne&&St(M,"clear",void 0,void 0,he),G}function Zn(M,ne){return function(G,F){let J=this,de=J.__v_raw,$e=nn(de),Xe=ne?Vo:M?Xr:_n;return!M&&Re($e,"iterate",en),de.forEach((gt,bn)=>G.call(F,Xe(gt),Xe(bn),J))}}function Ur(M,ne,he){return function(...G){let F=this.__v_raw,J=nn(F),de=O.isMap(J),$e=M==="entries"||M===Symbol.iterator&&de,Xe=M==="keys"&&de,gt=F[M](...G),bn=he?Vo:ne?Xr:_n;return!ne&&Re(J,"iterate",Xe?Or:en),{next(){let{value:li,done:jn}=gt.next();return jn?{value:li,done:jn}:{value:$e?[bn(li[0]),bn(li[1])]:bn(li),done:jn}},[Symbol.iterator](){return this}}}}function Ln(M){return function(...ne){return M==="delete"?!1:this}}function xr(){let M={get(J){return bi(this,J)},get size(){return Hn(this)},has:Ni,add:ki,set:Eo,delete:yi,clear:$r,forEach:Zn(!1,!1)},ne={get(J){return bi(this,J,!1,!0)},get size(){return Hn(this)},has:Ni,add:ki,set:Eo,delete:yi,clear:$r,forEach:Zn(!1,!0)},he={get(J){return bi(this,J,!0)},get size(){return Hn(this,!0)},has(J){return Ni.call(this,J,!0)},add:Ln("add"),set:Ln("set"),delete:Ln("delete"),clear:Ln("clear"),forEach:Zn(!0,!1)},G={get(J){return bi(this,J,!0,!0)},get size(){return Hn(this,!0)},has(J){return Ni.call(this,J,!0)},add:Ln("add"),set:Ln("set"),delete:Ln("delete"),clear:Ln("clear"),forEach:Zn(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(J=>{M[J]=Ur(J,!1,!1),he[J]=Ur(J,!0,!1),ne[J]=Ur(J,!1,!0),G[J]=Ur(J,!0,!0)}),[M,he,ne,G]}let[lo,co,qi,wo]=xr();function ii(M,ne){let he=ne?M?wo:qi:M?co:lo;return(G,F,J)=>F==="__v_isReactive"?!M:F==="__v_isReadonly"?M:F==="__v_raw"?G:Reflect.get(O.hasOwn(he,F)&&F in G?he:G,F,J)}let So={get:ii(!1,!1)},Co={get:ii(!1,!0)},ga={get:ii(!0,!1)},ea={get:ii(!0,!0)};function ta(M,ne,he){let G=nn(he);if(G!==he&&ne.call(M,G)){let F=O.toRawType(M);console.warn(`Reactive ${F} contains both the raw and reactive versions of the same object${F==="Map"?" as keys":""}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`)}}let Ki=new WeakMap,In=new WeakMap,gn=new WeakMap,xn=new WeakMap;function oi(M){switch(M){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function $o(M){return M.__v_skip||!Object.isExtensible(M)?0:oi(O.toRawType(M))}function Ut(M){return Zr(M)?M:Ei(M,!1,Rr,So,Ki)}function Ie(M){return Ei(M,!1,ir,Co,In)}function Ri(M){return Ei(M,!0,Pr,ga,gn)}function xi(M){return Ei(M,!0,Gi,ea,xn)}function Ei(M,ne,he,G,F){if(!O.isObject(M)||M.__v_raw&&!(ne&&M.__v_isReactive))return M;let J=F.get(M);if(J)return J;let de=$o(M);if(de===0)return M;let $e=new Proxy(M,de===2?G:he);return F.set(M,$e),$e}function Ji(M){return Zr(M)?Ji(M.__v_raw):!!(M&&M.__v_isReactive)}function Zr(M){return!!(M&&M.__v_isReadonly)}function Bi(M){return!!(M&&M.__v_isShallow)}function Uo(M){return Ji(M)||Zr(M)}function nn(M){let ne=M&&M.__v_raw;return ne?nn(ne):M}function va(M){return O.def(M,"__v_skip",!0),M}let _n=M=>O.isObject(M)?Ut(M):M,Xr=M=>O.isObject(M)?Ri(M):M;function ai(M){cn&&$t&&(M=nn(M),ct(M.dep||(M.dep=an())))}function wi(M,ne){M=nn(M),M.dep&&Kt(M.dep)}function Qr(M){return!!(M&&M.__v_isRef===!0)}function Ao(M){return ma(M,!1)}function Oo(M){return ma(M,!0)}function ma(M,ne){return Qr(M)?M:new _a(M,ne)}class _a{constructor(ne,he){this.__v_isShallow=he,this.dep=void 0,this.__v_isRef=!0,this._rawValue=he?ne:nn(ne),this._value=he?ne:_n(ne)}get value(){return ai(this),this._value}set value(ne){ne=this.__v_isShallow?ne:nn(ne),O.hasChanged(ne,this._rawValue)&&(this._rawValue=ne,this._value=this.__v_isShallow?ne:_n(ne),wi(this,ne))}}function Ho(M){wi(M,void 0)}function jo(M){return Qr(M)?M.value:M}let Ma={get:(M,ne,he)=>jo(Reflect.get(M,ne,he)),set:(M,ne,he,G)=>{let F=M[ne];return Qr(F)&&!Qr(he)?(F.value=he,!0):Reflect.set(M,ne,he,G)}};function ba(M){return Ji(M)?M:new Proxy(M,Ma)}class Ir{constructor(ne){this.dep=void 0,this.__v_isRef=!0;let{get:he,set:G}=ne(()=>ai(this),()=>wi(this));this._get=he,this._set=G}get value(){return this._get()}set value(ne){this._set(ne)}}function or(M){return new Ir(M)}function Bn(M){let ne=O.isArray(M)?new Array(M.length):{};for(let he in M)ne[he]=fr(M,he);return ne}class mr{constructor(ne,he,G){this._object=ne,this._key=he,this._defaultValue=G,this.__v_isRef=!0}get value(){let ne=this._object[this._key];return ne===void 0?this._defaultValue:ne}set value(ne){this._object[this._key]=ne}}function fr(M,ne,he){let G=M[ne];return Qr(G)?G:new mr(M,ne,he)}class ya{constructor(ne,he,G,F){this._setter=he,this.dep=void 0,this.__v_isRef=!0,this._dirty=!0,this.effect=new Vr(ne,()=>{this._dirty||(this._dirty=!0,wi(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!F,this.__v_isReadonly=G}get value(){let ne=nn(this);return ai(ne),(ne._dirty||!ne._cacheable)&&(ne._dirty=!1,ne._value=ne.effect.run()),ne._value}set value(ne){this._setter(ne)}}function Ea(M,ne,he=!1){let G,F,J=O.isFunction(M);return J?(G=M,F=O.NOOP):(G=M.get,F=M.set),new ya(G,F,J||!F,he)}var Wo;let uo=Promise.resolve(),Hr=[],Mi=!1,zo=M=>{Hr.push(M),Mi||(Mi=!0,uo.then(Si))},Si=()=>{for(let M=0;M<Hr.length;M++)Hr[M]();Hr.length=0,Mi=!1};class si{constructor(ne){this.dep=void 0,this._dirty=!0,this.__v_isRef=!0,this[Wo]=!0;let he,G=!1,F=!1;this.effect=new Vr(ne,J=>{if(this.dep){if(J)he=this._value,G=!0;else if(!F){let de=G?he:this._value;F=!0,G=!1,zo(()=>{this.effect.active&&this._get()!==de&&wi(this),F=!1})}for(let de of this.dep)de.computed instanceof si&&de.scheduler(!0)}this._dirty=!0}),this.effect.computed=this}_get(){return this._dirty?(this._dirty=!1,this._value=this.effect.run()):this._value}get value(){return ai(this),nn(this)._get()}}Wo="__v_isReadonly";function Nr(M){return new si(M)}return b.EffectScope=k,b.ITERATE_KEY=en,b.ReactiveEffect=Vr,b.computed=Ea,b.customRef=or,b.deferredComputed=Nr,b.effect=Pn,b.effectScope=u,b.enableTracking=rr,b.getCurrentScope=We,b.isProxy=Uo,b.isReactive=Ji,b.isReadonly=Zr,b.isRef=Qr,b.isShallow=Bi,b.markRaw=va,b.onScopeDispose=At,b.pauseTracking=Dn,b.proxyRefs=ba,b.reactive=Ut,b.readonly=Ri,b.ref=Ao,b.resetTracking=Gn,b.shallowReactive=Ie,b.shallowReadonly=xi,b.shallowRef=Oo,b.stop=qt,b.toRaw=nn,b.toRef=fr,b.toRefs=Bn,b.track=Re,b.trigger=St,b.triggerRef=Ho,b.unref=jo,Object.defineProperty(b,"__esModule",{value:!0}),b}({},v);return l}function Og(v){var l=function(b){"use strict";let O=`
`,x=44,S=50,k=50,u=["%","%"],P="#007aff",We="#f7f7f7",At=/^([a-z-]+:)?\/\//i,an=/^data:.*,.*/,A="WEB_INVOKE_APPSERVICE",ce="wxs://",Kn="json://",Un="wxsModules",bt="renderjsModules",se="onShow",re="onHide",Gt="onLaunch",$t="onError",en="onThemeChange",Or="onKeyboardHeightChange",Vr="onPageNotFound",pr="onUnhandledRejection",Pn="onLoad",qt="onReady",cn="onUnload",Jn="onInit",Dn="onSaveExitState",rr="onResize",Gn="onBackPress",Re="onPageScroll",ct="onTabItemTap",St="onReachBottom",Kt="onPullDownRefresh",mn="onShareTimeline",un="onAddToFavorites",Tr="onShareAppMessage",ri="onNavigationBarButtonTap",Jr="onNavigationBarSearchInputClicked",_i="onNavigationBarSearchInputChanged",gr="onNavigationBarSearchInputConfirmed",bo="onNavigationBarSearchInputFocusChanged",oo="onAppEnterForeground",yo="onAppEnterBackground",ao="onWxsInvokeCallMethod";function zi(G){return!!G.appContext}function ur(G){return G&&(zi(G)?G.proxy:G)}function Yi(G){return G.nodeType===1}function so(G){let{vnode:F}=G;if(Yi(F.el))return F.el;let{subTree:J}=G;if(J.shapeFlag&16){let de=J.children.find($e=>$e.el&&Yi($e.el));if(de)return de.el}return F.el}let Rr=0;function Pr(G,...F){let J=Date.now(),de=Rr?J-Rr:0;return Rr=J,`[${J}][${de}ms][${G}]\uFF1A${F.map($e=>JSON.stringify($e)).join(" ")}`}function ir(G){let F=Object.create(null);return J=>F[J]||(F[J]=G(J))}function Gi(G){return ir(G)}function Vo(G=""){return(""+G).replace(/[^\x00-\xff]/g,"**").length}function vr(G){return G.indexOf("/")===0}function bi(G){return vr(G)?G:"/"+G}function Ni(G){return vr(G)?G.slice(1):G}let Hn=(G,F)=>{let J;for(let de=0;de<G.length;de++)J=G[de](F);return J};function ki(G,F=null){let J;return(...de)=>(G&&(J=G.apply(F,de),G=null),J)}function Eo(G,F){G=G||{},typeof F=="string"&&(F={errMsg:F}),/:ok$/.test(F.errMsg)?typeof G.success=="function"&&G.success(F):typeof G.fail=="function"&&G.fail(F),typeof G.complete=="function"&&G.complete(F)}let yi=encodeURIComponent;function $r(G,F=yi){let J=G?Object.keys(G).map(de=>{let $e=G[de];return typeof $e===void 0||$e===null?$e="":b.isPlainObject($e)&&($e=JSON.stringify($e)),F(de)+"="+F($e)}).filter(de=>de.length>0).join("&"):null;return J?`?${J}`:""}function Zn(G){try{return decodeURIComponent(""+G)}catch(F){}return""+G}let Ur=/\+/g;function Ln(G){let F={};if(G===""||G==="?")return F;let de=(G[0]==="?"?G.slice(1):G).split("&");for(let $e=0;$e<de.length;++$e){let Xe=de[$e].replace(Ur," "),gt=Xe.indexOf("="),bn=Zn(gt<0?Xe:Xe.slice(0,gt)),li=gt<0?null:Zn(Xe.slice(gt+1));if(bn in F){let jn=F[bn];b.isArray(jn)||(jn=F[bn]=[jn]),jn.push(li)}else F[bn]=li}return F}function xr(G){let[F,J]=G.split("?",2);return{path:F,query:Ln(J||"")}}function lo(G){let F={};return G&&Object.keys(G).forEach(J=>{J.indexOf("data-")===0&&(F[J.replace("data-","")]=G[J])}),F}class co extends Error{constructor(F){super(F);this.name="DOMException"}}function qi(G,F){return F&&(F.capture&&(G+="Capture"),F.once&&(G+="Once"),F.passive&&(G+="Passive")),`on${b.capitalize(b.camelize(G))}`}class wo{constructor(F,J){this.defaultPrevented=!1,this.timeStamp=Date.now(),this._stop=!1,this._end=!1,this.type=F,this.bubbles=!!J.bubbles,this.cancelable=!!J.cancelable}preventDefault(){this.defaultPrevented=!0}stopImmediatePropagation(){this._end=this._stop=!0}stopPropagation(){this._stop=!0}}function ii(G){if(G instanceof wo)return G;let[F]=ga(G.type),J=new wo(F,{bubbles:!1,cancelable:!1});return b.extend(J,G),J}class So{constructor(){this.listeners=Object.create(null)}dispatchEvent(F){let J=this.listeners[F.type];if(!J)return!1;let de=ii(F),$e=J.length;for(let Xe=0;Xe<$e&&(J[Xe].call(this,de),!de._end);Xe++);return de.cancelable&&de.defaultPrevented}addEventListener(F,J,de){F=qi(F,de),(this.listeners[F]||(this.listeners[F]=[])).push(J)}removeEventListener(F,J,de){F=qi(F,de);let $e=this.listeners[F];if(!$e)return;let Xe=$e.indexOf(J);Xe>-1&&$e.splice(Xe,1)}}let Co=/(?:Once|Passive|Capture)$/;function ga(G){let F;if(Co.test(G)){F={};let J;for(;J=G.match(Co);)G=G.slice(0,G.length-J[0].length),F[J[0].toLowerCase()]=!0}return[b.hyphenate(G.slice(2)),F]}let ea=(()=>({stop:1,prevent:1<<1,self:1<<2}))();function ta(G){let F=0;return G.includes("stop")&&(F|=ea.stop),G.includes("prevent")&&(F|=ea.prevent),G.includes("self")&&(F|=ea.self),F}let Ki=0,In=1,gn=3,xn=8;function oi(G,F){let{parentNode:J}=G;if(!J)return null;let{childNodes:de}=J;return de[de.indexOf(G)+(F==="n"?1:-1)]||null}function $o(G){let{parentNode:F}=G;F&&F.removeChild(G)}function Ut(G){!G.nodeId&&G.pageNode&&(G.nodeId=G.pageNode.genId())}class Ie extends So{constructor(F,J,de){super();if(this.pageNode=null,this.parentNode=null,this._text=null,de){let{pageNode:$e}=de;$e&&(this.pageNode=$e,this.nodeId=$e.genId(),!$e.isUnmounted&&$e.onCreate(this,J))}this.nodeType=F,this.nodeName=J,this.childNodes=[]}get firstChild(){return this.childNodes[0]||null}get lastChild(){let{childNodes:F}=this,J=F.length;return J?F[J-1]:null}get nextSibling(){return oi(this,"n")}get nodeValue(){return null}set nodeValue(F){}get textContent(){return this._text||""}set textContent(F){this._text=F,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onTextContent(this,F)}get parentElement(){let{parentNode:F}=this;return F&&F.nodeType===In?F:null}get previousSibling(){return oi(this,"p")}appendChild(F){return this.insertBefore(F,null)}cloneNode(F){let J=b.extend(Object.create(Object.getPrototypeOf(this)),this),{attributes:de}=J;return de&&(J.attributes=b.extend({},de)),F&&(J.childNodes=J.childNodes.map($e=>$e.cloneNode(!0))),J}insertBefore(F,J){$o(F),F.pageNode=this.pageNode,F.parentNode=this,Ut(F);let{childNodes:de}=this;if(J){let $e=de.indexOf(J);if($e===-1)throw new co("Failed to execute 'insertBefore' on 'Node': The node before which the new node is to be inserted is not a child of this node.");de.splice($e,0,F)}else de.push(F);return this.pageNode&&!this.pageNode.isUnmounted?this.pageNode.onInsertBefore(this,F,J):F}removeChild(F){let{childNodes:J}=this,de=J.indexOf(F);if(de===-1)throw new co("Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node.");return F.parentNode=null,J.splice(de,1),this.pageNode&&!this.pageNode.isUnmounted?this.pageNode.onRemoveChild(F):F}}let Ri="class",xi="style",Ei=".vOwnerId",Ji=".vRenderjs";class Zr extends Ie{constructor(F,J,de){super(F,J,de);this.attributes=Object.create(null),this.style=null,this.vShow=null,this._html=null}get className(){return this.attributes[Ri]||""}set className(F){this.setAttribute(Ri,F)}get innerHTML(){return""}set innerHTML(F){this._html=F}addEventListener(F,J,de){super.addEventListener(F,J,de),this.pageNode&&!this.pageNode.isUnmounted&&(J.wxsEvent?this.pageNode.onAddWxsEvent(this,qi(F,de),J.wxsEvent,ta(J.modifiers||[])):this.pageNode.onAddEvent(this,qi(F,de),ta(J.modifiers||[])))}removeEventListener(F,J,de){super.removeEventListener(F,J,de),this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onRemoveEvent(this,qi(F,de))}getAttribute(F){return F===xi?this.style:this.attributes[F]}removeAttribute(F){F==xi?this.style=null:delete this.attributes[F],this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onRemoveAttribute(this,F)}setAttribute(F,J){F===xi?this.style=J:this.attributes[F]=J,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onSetAttribute(this,F,J)}toJSON({attr:F,normalize:J}={}){let{attributes:de,style:$e,listeners:Xe,_text:gt}=this,bn={};Object.keys(de).length&&(bn.a=J?J(de):de);let li=Object.keys(Xe);if(li.length){let jn,fo={};li.forEach(Da=>{let Yo=Xe[Da];if(Yo.length){let{wxsEvent:ho,modifiers:La}=Yo[0],wa=ta(La||[]);ho?(jn||(jn={}),jn[Da]=[J?J(ho):ho,wa]):fo[Da]=wa}}),bn.e=J?J(fo,!1):fo,jn&&(bn.w=J?J(jn,!1):jn)}return $e!==null&&(bn.s=J?J($e):$e),F||(bn.i=this.nodeId,bn.n=this.nodeName),gt!==null&&(bn.t=J?J(gt):gt),bn}}class Bi extends Ie{constructor(F,J){super(xn,"#comment",J);this._text=""}toJSON(F={}){return F.attr?{}:{i:this.nodeId}}}class Uo extends Zr{constructor(F,J){super(In,F.toUpperCase(),J);this.tagName=this.nodeName}}class nn extends Uo{get value(){return this.getAttribute("value")}set value(F){this.setAttribute("value",F)}}class va extends nn{}class _n extends Zr{constructor(F,J){super(gn,"#text",J);this._text=F}get nodeValue(){return this._text||""}set nodeValue(F){this._text=F,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onNodeValue(this,F)}}let Xr={AD:["data"],"AD-DRAW":["data"],"LIVE-PLAYER":["picture-in-picture-mode"],MAP:["markers","polyline","circles","controls","include-points","polygons"],PICKER:["range","value"],"PICKER-VIEW":["value"],"RICH-TEXT":["nodes"],VIDEO:["danmu-list","header"],"WEB-VIEW":["webview-styles"]},ai=["animation"],wi=(G,F)=>{if(ai.indexOf(F)>-1)return!0;let J=Xr[G.nodeName];return!!(J&&J.indexOf(F)>-1)},Qr=1,Ao=2,Oo=3,ma=4,_a=5,Ho=6,jo=7,Ma=8,ba=9,Ir=10,or=12,Bn=15,mr=20;function fr(G,F,{clearTimeout:J,setTimeout:de}){let $e,Xe=function(){J($e),$e=de(()=>G.apply(this,arguments),F)};return Xe.cancel=function(){J($e)},Xe}class ya{constructor(F,J){this.id=F,this.listener={},this.emitCache={},J&&Object.keys(J).forEach(de=>{this.on(de,J[de])})}emit(F,...J){let de=this.listener[F];if(!de)return(this.emitCache[F]||(this.emitCache[F]=[])).push(J);de.forEach($e=>{$e.fn.apply($e.fn,J)}),this.listener[F]=de.filter($e=>$e.type!=="once")}on(F,J){this._addListener(F,"on",J),this._clearCache(F)}once(F,J){this._addListener(F,"once",J),this._clearCache(F)}off(F,J){let de=this.listener[F];if(!!de)if(J)for(let $e=0;$e<de.length;)de[$e].fn===J&&(de.splice($e,1),$e--),$e++;else delete this.listener[F]}_clearCache(F){let J=this.emitCache[F];if(J)for(;J.length>0;)this.emit.apply(this,[F,...J.shift()])}_addListener(F,J,de){(this.listener[F]||(this.listener[F]=[])).push({fn:de,type:J})}}let Ea=[Jn,Pn,se,re,cn,Gn,Re,ct,St,Kt,mn,Tr,un,Dn,ri,Jr,_i,gr,bo],Wo=[Pn,se];function uo(G){return Wo.indexOf(G)>-1}function Hr(G){return Ea.indexOf(G)>-1}let Mi=[se,re,Gt,$t,en,Vr,pr,Jn,Pn,qt,cn,rr,Gn,Re,ct,St,Kt,mn,un,Tr,Dn,ri,Jr,_i,gr,bo],zo,Si=[];function si(G){if(zo)return G(zo);Si.push(G)}function Nr(G){zo=G,Si.forEach(F=>F(G))}let M=function(){};M.prototype={on:function(G,F,J){var de=this.e||(this.e={});return(de[G]||(de[G]=[])).push({fn:F,ctx:J}),this},once:function(G,F,J){var de=this;function $e(){de.off(G,$e),F.apply(J,arguments)}return $e._=F,this.on(G,$e,J)},emit:function(G){var F=[].slice.call(arguments,1),J=((this.e||(this.e={}))[G]||[]).slice(),de=0,$e=J.length;for(de;de<$e;de++)J[de].fn.apply(J[de].ctx,F);return this},off:function(G,F){var J=this.e||(this.e={}),de=J[G],$e=[];if(de&&F)for(var Xe=0,gt=de.length;Xe<gt;Xe++)de[Xe].fn!==F&&de[Xe].fn._!==F&&$e.push(de[Xe]);return $e.length?J[G]=$e:delete J[G],this}};var ne=M,he={invokeArrayFns:Hn,ON_LOAD:Pn,ON_SHOW:se,LINEFEED:O,RENDERJS_MODULES:bt,WXS_PROTOCOL:ce,formatLog:Pr,WXS_MODULES:Un,UniLifecycleHooks:Mi,ON_ERROR:$t,invokeCreateVueAppHook:Nr,parseNVueDataset:lo,once:ki,I18N_JSON_DELIMITERS:u,Emitter:ne,addLeadingSlash:bi,resolveComponentInstance:ur,ON_RESIZE:rr,ON_APP_ENTER_FOREGROUND:oo,ON_APP_ENTER_BACKGROUND:yo,ON_HIDE:re,ON_PAGE_SCROLL:Re,ON_REACH_BOTTOM:St,SCHEME_RE:At,DATA_RE:an,cacheStringFunction:Gi,parseQuery:Ln,callOptions:Eo,ON_UNHANDLE_REJECTION:pr,ON_PAGE_NOT_FOUND:Vr,PRIMARY_COLOR:P,removeLeadingSlash:Ni,getLen:Vo,TABBAR_HEIGHT:S,NAVBAR_HEIGHT:x,ON_THEME_CHANGE:en,ON_KEYBOARD_HEIGHT_CHANGE:Or,BACKGROUND_COLOR:We,ON_NAVIGATION_BAR_BUTTON_TAP:ri,stringifyQuery:$r,debounce:fr,ON_PULL_DOWN_REFRESH:Kt,ON_NAVIGATION_BAR_SEARCH_INPUT_CHANGED:_i,ON_NAVIGATION_BAR_SEARCH_INPUT_CONFIRMED:gr,ON_NAVIGATION_BAR_SEARCH_INPUT_CLICKED:Jr,ON_NAVIGATION_BAR_SEARCH_INPUT_FOCUS_CHANGED:bo,ON_BACK_PRESS:Gn,UniNode:Ie,NODE_TYPE_PAGE:Ki,ACTION_TYPE_PAGE_CREATE:Qr,ACTION_TYPE_PAGE_CREATED:Ao,ACTION_TYPE_PAGE_SCROLL:Bn,ACTION_TYPE_INSERT:ma,ACTION_TYPE_CREATE:Oo,ACTION_TYPE_REMOVE:_a,ACTION_TYPE_ADD_EVENT:Ma,ACTION_TYPE_ADD_WXS_EVENT:or,ACTION_TYPE_REMOVE_EVENT:ba,ACTION_TYPE_SET_ATTRIBUTE:Ho,ACTION_TYPE_REMOVE_ATTRIBUTE:jo,ACTION_TYPE_SET_TEXT:Ir,ON_READY:qt,ON_UNLOAD:cn,EventChannel:ya,ON_REACH_BOTTOM_DISTANCE:k,parseUrl:xr,onCreateVueApp:si,ON_TAB_ITEM_TAP:ct,ON_LAUNCH:Gt,ACTION_TYPE_EVENT:mr,createUniEvent:ii,ON_WXS_INVOKE_CALL_METHOD:ao,WEB_INVOKE_APPSERVICE:A,isRootHook:Hr,isRootImmediateHook:uo,UniInputElement:nn,UniTextAreaElement:va,UniElement:Uo,UniTextNode:_n,UniCommentNode:Bi,forcePatchProp:wi,resolveOwnerEl:so,ATTR_V_OWNER_ID:Ei,ATTR_V_RENDERJS:Ji,JSON_PROTOCOL:Kn};return he}(v);return l}var DP=1;function Tg(){return(DP++).toString()}var jf=v=>v&&JSON.parse(JSON.stringify(v))||v;function fu(v){let l=Ks(v);return l.substring(8,l.length-1)}function Wf(v){if(!Yn(btoa))return"";let l=Array.prototype.map.call(new Uint8Array(v),b=>String.fromCharCode(b)).join("");return btoa(l)}function du(v){if(!v||typeof v!="object")return!0;for(let l in v)if(jl(v,l))return!1;return!0}var Ku=["off","error","warn","info","log","debug"],Ju={};function Pg(){Ku.forEach(v=>{let l=Ku.indexOf(v);Ju[v]={},Ku.forEach(b=>{Ku.indexOf(b)<=l&&(Ju[v][b]=!0)})})}function nr(v){let l=global.WXEnvironment&&global.WXEnvironment.logLevel||"log";return Ju[l]&&Ju[l][v]}function io(v){global.nativeLog("wxInteractionAnalyzer: [jsfm]"+v,"__DEBUG")}function Ig(v,l,b){return`${l}@${b}#${v}`}var Zu=class{constructor(l){this.instanceId=String(l),this.lastCallbackId=0,this.callbacks={},this.hooks={}}add(l){return this.lastCallbackId++,this.callbacks[this.lastCallbackId]=l,this.lastCallbackId}remove(l){let b=this.callbacks[l];return delete this.callbacks[l],b}registerHook(l,b,O,x){let S=Ig(l,b,O);this.hooks[S]&&console.warn(`[JS Framework] Override an existing component hook "${S}".`),this.hooks[S]=x}triggerHook(l,b,O,x){let S=Ig(l,b,O),k=this.hooks[S];if(!Yn(k))return console.error(`[JS Framework] Invalid hook function type (${typeof k}) on "${S}".`),null;let u=null;try{u=k.apply(null,x||[])}catch(P){throw console.error(`[JS Framework] Failed to execute the hook function on "${S}".`),P}return u}consume(l,b,O){let x=this.callbacks[l];if((typeof O=="undefined"||O===!1)&&delete this.callbacks[l],Yn(x))try{return x.call(null,b,O)}catch(S){throw console.error(`[JS Framework] Failed to execute the callback function:
 ${S.toString()}`),S}return new Error(`invalid callback id "${l}"`)}close(){this.callbacks={},this.hooks={}}};var Xu={};function Ng(v,l){v&&(Xu[v]=l)}function Js(v){return Xu[v]}function kg(v){delete Xu[v]}function Kr(v){if(v){let l=Xu[v];if(l&&l.taskCenter)return l.taskCenter}return null}function LP(v){v.calcClassList&&v.calcClassList()}function zf(v,l,b){let{documentElement:O}=v;if(O.pureChildren.length>0||l.parentNode)return;let x=O.children,S=b?x.indexOf(b):-1;S<0?x.push(l):x.splice(S,0,l),l.nodeType===1?(l.role==="body"?(l.docId=v.id,l.ownerDocument=v,l.parentNode=O,Wl(l,O)):(l.children.forEach(k=>{k.parentNode=l}),Yf(v,l),Wl(l,O),delete v.nodeMap[l.nodeId]),O.pureChildren.push(l),FP(v,l)):(l.parentNode=O,v.nodeMap[l.ref]=l)}function FP(v,l){let b=l.toJSON();v&&v.taskCenter&&Yn(v.taskCenter.send)&&v.taskCenter.send("dom",{action:"createBody"},[b])}function Yf(v,l){l.role="body",l.depth=1,delete v.nodeMap[l.nodeId],l.ref="_root",v.nodeMap._root=l,v.body=l}function Wl(v,l){v.parentNode=l,LP(v),l.docId&&(v.docId=l.docId,v.ownerDocument=l.ownerDocument,v.ownerDocument.nodeMap[v.nodeId]=v,v.depth=l.depth+1),v.children.forEach(b=>{Wl(b,v)})}function Gf(v){for(;v;){if(v.nodeType===1)return v;v=v.nextSibling}}function qf(v){for(;v;){if(v.nodeType===1)return v;v=v.previousSibling}}function zl(v,l,b,O=!1){b<0&&(b=0);let x=l[b-1],S=l[b];return l.splice(b,0,v),O&&(x&&(x.nextSibling=v),v.previousSibling=x,v.nextSibling=S,S&&(S.previousSibling=v)),b}function Yl(v,l,b,O=!1){let x=l.indexOf(v);if(x<0)return-1;if(O){let P=l[x-1],We=l[x+1];P&&(P.nextSibling=We),We&&(We.previousSibling=P)}l.splice(x,1);let S=b;x<=b&&(S=b-1);let k=l[S-1],u=l[S];return l.splice(S,0,v),O&&(k&&(k.nextSibling=v),v.previousSibling=k,v.nextSibling=u,u&&(u.previousSibling=v)),x===S?-1:b}function Kf(v,l,b=!1){let O=l.indexOf(v);if(!(O<0)){if(b){let x=l[O-1],S=l[O+1];x&&(x.nextSibling=S),S&&(S.previousSibling=x)}l.splice(O,1)}}var Gl=class{constructor(){this.depth=0;this.nodeId=Tg(),this.ref=this.nodeId,this.children=[],this.pureChildren=[],this.parentNode=null,this.nextSibling=null,this.previousSibling=null}destroy(){let l=Js(this.docId);l&&(delete this.docId,delete l.nodeMap[this.nodeId]),this.children.forEach(b=>{b.destroy()})}};var Rg={};function Jf(v,l){if(!ji(l)||!l.length)return;class b extends _o{}l.forEach(O=>{b.prototype[O]=function(...x){let S=Kr(this.docId);if(S)return S.send("component",{ref:this.ref,component:v,method:O},x)}}),Rg[v]=b}function xg(v){return Rg[v]}function Fr(v,l,b,O,x){return{type:"decl",prop:v,value:l+(b?" !important":""),raws:O,source:x}}var VP="backgroundColor",$P="backgroundImage",UP=v=>{let{value:l,important:b,raws:O,source:x}=v;return/^#?\S+$/.test(l)||/^rgba?(.+)$/.test(l)?[Fr(VP,l,b,O,x)]:/^linear-gradient(.+)$/.test(l)?[Fr($P,l,b,O,x)]:[v]},HP="Width",jP="Style",WP="Color",hu=v=>{let{prop:l,value:b,important:O,raws:x,source:S}=v,k=b.replace(/\s*,\s*/g,",").split(/\s+/),u=[/^[\d\.]+\S*$/,/^(solid|dashed|dotted)$/,/\S+/].map(P=>{let We=k.findIndex(At=>P.test(At));return We<0?null:k.splice(We,1)[0]});return k.length?[v]:[Fr(l+HP,(u[0]||"0").trim(),O,x,S),Fr(l+jP,(u[1]||"solid").trim(),O,x,S),Fr(l+WP,(u[2]||"#000000").trim(),O,x,S)]},zP="borderTop",YP="borderRight",GP="borderBottom",qP="borderLeft",Zf=v=>{let{prop:l,value:b,important:O,raws:x,source:S}=v,k=Hf(l).split("-")[1];k=qu(k);let u=b.replace(/\s*,\s*/g,",").split(/\s+/);switch(u.length){case 1:return[v];case 2:u.push(u[0],u[1]);break;case 3:u.push(u[1]);break}return[Fr(zP+k,u[0],O,x,S),Fr(YP+k,u[1],O,x,S),Fr(GP+k,u[2],O,x,S),Fr(qP+k,u[3],O,x,S)]},KP="borderTopLeftRadius",JP="borderTopRightRadius",ZP="borderBottomRightRadius",XP="borderBottomLeftRadius",QP=v=>{let{value:l,important:b,raws:O,source:x}=v,S=l.split(/\s+/);if(l.includes("/"))return[v];switch(S.length){case 1:return[v];case 2:S.push(S[0],S[1]);break;case 3:S.push(S[1]);break}return[Fr(KP,S[0],b,O,x),Fr(JP,S[1],b,O,x),Fr(ZP,S[2],b,O,x),Fr(XP,S[3],b,O,x)]},eI=Zf,tI=Zf,nI="flexDirection",rI="flexWrap",iI=v=>{let{value:l,important:b,raws:O,source:x}=v,S=l.split(/\s+/),k=[/^(column|column-reverse|row|row-reverse)$/,/^(nowrap|wrap|wrap-reverse)$/].map(u=>{let P=S.findIndex(We=>u.test(We));return P<0?null:S.splice(P,1)[0]});return S.length?[v]:[Fr(nI,k[0]||"column",b,O,x),Fr(rI,k[1]||"nowrap",b,O,x)]},oI="Top",aI="Right",sI="Bottom",lI="Left",Bg=v=>l=>{let{value:b,important:O,raws:x,source:S}=l,k=b.split(/\s+/);switch(k.length){case 1:k.push(k[0],k[0],k[0]);break;case 2:k.push(k[0],k[1]);break;case 3:k.push(k[1]);break}return[Fr(v+oI,k[0],O,x,S),Fr(v+aI,k[1],O,x,S),Fr(v+sI,k[2],O,x,S),Fr(v+lI,k[3],O,x,S)]},cI=Bg("margin"),uI=Bg("padding"),fI="transitionProperty",dI="transitionDuration",hI="transitionTimingFunction",pI="transitionDelay",gI=v=>{let l=/^(\S*)?\s*(\d*\.?\d+(?:ms|s)?)?\s*(\S*)?\s*(\d*\.?\d+(?:ms|s)?)?$/,{value:b,important:O,raws:x,source:S}=v,k=[],u=b.match(l);return u&&(u[1]&&k.push(Fr(fI,u[1],O,x,S)),u[2]&&k.push(Fr(dI,u[2],O,x,S)),u[3]&&k.push(Fr(hI,u[3],O,x,S)),u[4]&&k.push(Fr(pI,u[4],O,x,S))),k},Mg={transition:gI,margin:cI,padding:uI,border:hu,background:UP};mi(Mg,{borderTop:hu,borderRight:hu,borderBottom:hu,borderLeft:hu,borderStyle:eI,borderWidth:tI,borderColor:Zf,borderRadius:QP,flexFlow:iI});var Dg=Symbol("expanded"),Lg={postcssPlugin:"nvue:expand",Declaration(v){if(v[Dg])return;let l=Mg[v.prop];if(l){let b=l(v);b.length===1&&b[0]===v||v.replaceWith(b)}v[Dg]=!0}};var vI=Lg.Declaration;function Xf(v,l){let b=mi({replaceWith(x){O=x}},mI(v,l)),O=[b];return vI(b),O}function mI(v,l){let b=l+"";return b.includes("!important")?{prop:v,value:b.replace(/\s*!important/,""),important:!0}:{prop:v,value:b,important:!1}}var _I="view",bI=["click","longpress","touchstart","touchmove","touchend","panstart","panmove","panend","horizontalpan","verticalpan","swipe"];function Qf(v,l){let b=Js(v);b.nodeMap[l.nodeId]=l}var ed;function Fg(v){ed||(ed=v)}var _o=class extends Gl{constructor(l=_I,b={},O){super();let x=xg(l);if(x&&!O)return new x(l,b,!0);this.nodeType=1,this.type=l,this.attr=b.attr||{},this.style=b.style||{},this.classStyle=b.classStyle||{},this.classList=b.classList||[],this.styleSheet=b.styleSheet||{},this.event={}}appendChild(l){if(!(l.parentNode&&l.parentNode!==this)){if(l.parentNode){if(nr("debug")&&io(`[appendChild](${this.docId},${l.type},${l.ref}) Move <${l.type}> to ${this.children.length} of <${this.type}> (${this.ref}).`),Yl(l,this.children,this.children.length,!0),l.nodeType===1){let b=Yl(l,this.pureChildren,this.pureChildren.length),O=Kr(this.docId);if(O&&b>=0)return O.send("dom",{action:"moveElement"},[l.ref,this.ref,b])}}else if(nr("debug")&&io(`[appendChild](${this.docId},${l.type},${l.ref}) Append <${l.type}> to <${this.type}> (${this.ref}).`),Wl(l,this),zl(l,this.children,this.children.length,!0),this.docId&&Qf(this.docId,l),l.nodeType===1){zl(l,this.pureChildren,this.pureChildren.length);let b=Kr(this.docId);if(b)return b.send("dom",{action:"addElement"},[this.ref,l.toJSON(),-1])}}}insertBefore(l,b){if(!(l.parentNode&&l.parentNode!==this)&&!(l===b||l.nextSibling&&l.nextSibling===b)){if(l.parentNode){if(Yl(l,this.children,this.children.indexOf(b),!0),l.nodeType===1){let O=Gf(b),x=Yl(l,this.pureChildren,O?this.pureChildren.indexOf(O):this.pureChildren.length),S=Kr(this.docId);if(S&&x>=0)return S.send("dom",{action:"moveElement"},[l.ref,this.ref,x])}}else if(nr("debug")&&io(`[insertBefore](${this.docId},${l.type},${l.ref}) Insert <${l.type}> to <${this.type}> (${this.ref}), before (${b.ref}).`),Wl(l,this),zl(l,this.children,this.children.indexOf(b),!0),this.docId&&Qf(this.docId,l),l.nodeType===1){let O=Gf(b),x=zl(l,this.pureChildren,O?this.pureChildren.indexOf(O):this.pureChildren.length),S=Kr(this.docId);if(S)return S.send("dom",{action:"addElement"},[this.ref,l.toJSON(),x])}}}insertAfter(l,b){if(!(l.parentNode&&l.parentNode!==this)&&!(l===b||l.previousSibling&&l.previousSibling===b)){if(l.parentNode){if(Yl(l,this.children,this.children.indexOf(b)+1,!0),l.nodeType===1){let O=Yl(l,this.pureChildren,this.pureChildren.indexOf(qf(b))+1),x=Kr(this.docId);if(x&&O>=0)return x.send("dom",{action:"moveElement"},[l.ref,this.ref,O])}}else if(nr("debug")&&io(`[insertAfter](${this.docId},${l.type},${l.ref}) Insert <${l.type}> to <${this.type}> (${this.ref}), after (${b.ref}).`),Wl(l,this),zl(l,this.children,this.children.indexOf(b)+1,!0),this.docId&&Qf(this.docId,l),l.nodeType===1){let O=zl(l,this.pureChildren,this.pureChildren.indexOf(qf(b))+1),x=Kr(this.docId);if(x)return x.send("dom",{action:"addElement"},[this.ref,l.toJSON(),O])}}}removeChild(l,b){if(l.parentNode&&(Kf(l,this.children,!0),l.nodeType===1)){nr("debug")&&io(`[removeChild](${this.docId},${l.type},${l.ref}) Remove <${l.type}> from <${this.type}> (${this.ref}).`),Kf(l,this.pureChildren);let O=Kr(this.docId);O&&O.send("dom",{action:"removeElement"},[l.ref])}b||l.destroy()}clear(){let l=Kr(this.docId);l&&this.pureChildren.forEach(b=>{l.send("dom",{action:"removeElement"},[b.ref])}),this.children.forEach(b=>{b.destroy()}),this.children.length=0,this.pureChildren.length=0}setAttr(l,b,O){if(this.attr[l]===b&&O!==!1)return;this.attr[l]=b;let x=Kr(this.docId);!O&&x&&x.send("dom",{action:"updateAttrs"},[this.ref,{[l]:b}])}setAttrs(l,b){if(du(l))return;let O={};for(let x in l)this.attr[x]!==l[x]&&(this.attr[x]=l[x],O[x]=l[x]);if(!du(O)){let x=Kr(this.docId);!b&&x&&x.send("dom",{action:"updateAttrs"},[this.ref,O])}}setStyle(l,b,O){Xf(l,b).forEach(({prop:x,value:S})=>{if(this.style[x]===S&&O!==!1)return;this.style[x]=S;let k=Kr(this.docId);!O&&k&&k.send("dom",{action:"updateStyle"},[this.ref,{[x]:S}])})}setStyles(l,b){if(du(l))return;let O={};for(let x in l)Xf(x,l[x]).forEach(({prop:S,value:k})=>{this.style[S]!==k&&(this.style[S]=k,O[S]=k)});if(!du(O)){let x=Kr(this.docId);!b&&x&&x.send("dom",{action:"updateStyle"},[this.ref,O])}}setClassStyle(l){for(let O in this.classStyle)this.classStyle[O]="";mi(this.classStyle,l);let b=Kr(this.docId);b&&b.send("dom",{action:"updateStyle"},[this.ref,this.toStyle()])}setClassList(l){l.length===this.classList.length&&l.filter(b=>!this.classList.includes(b)).length===0||(this.classList=l,this.parentNode&&this.calcClassList())}calcClassList(){this.setClassStyle(ed(this))}setStyleSheet(l){this.styleSheet=l}addEvent(l,b,O){if(this.event||(this.event={}),!this.event[l]){nr("debug")&&io(`[addEvent](${this.docId},${this.type},${this.ref}) Add "${l}" event on <${this.type}> (${this.ref}).`),this.event[l]={handler:b,params:O};let x=Kr(this.docId);x&&x.send("dom",{action:"addEvent"},[this.ref,l])}}removeEvent(l){if(this.event&&this.event[l]){nr("debug")&&io(`[removeEvent](${this.docId},${this.type},${this.ref}) Remove "${l}" event on <${this.type}> (${this.ref}).`),delete this.event[l];let b=Kr(this.docId);b&&b.send("dom",{action:"removeEvent"},[this.ref,l])}}fireEvent(l,b,O,x){let S=null,k=!1,u=this.event[l];if(u&&b){nr("debug")&&io(`[fireEvent](${this.docId},${this.type},${this.ref}) Fire "${l}" event on <${this.type}> (${this.ref}).`);let P=u.handler;b.stopPropagation=()=>{k=!0},b.preventDefault=()=>{};try{x&&x.params?S=P.call(this,...x.params,b):S=P.call(this,b)}catch(We){throw console.error(`[JS Framework] Failed to invoke the event handler of "${l}" on ${this.type} (${this.ref}):
 ${We.toString()}`),We}}return!k&&O&&bI.indexOf(l)!==-1&&this.parentNode&&this.parentNode.fireEvent&&(b.currentTarget=this.parentNode,this.parentNode.fireEvent(l,b,O)),S}toStyle(){return mi({},this.classStyle,this.style)}toJSON(l=!1){let b={ref:this.ref.toString(),type:this.type,attr:this.attr,style:this.toStyle()},O=[];for(let x in this.event){let{params:S}=this.event[x];S?O.push({type:x,params:S}):O.push(x)}return O.length&&(b.event=O),!l&&this.pureChildren.length&&(b.children=this.pureChildren.map(x=>x.toJSON())),b}toString(){return"<"+this.type+" attr="+JSON.stringify(this.attr)+" style="+JSON.stringify(this.toStyle())+">"+this.pureChildren.map(l=>l.toString()).join("")+"</"+this.type+">"}};function Vg(v){let l=v&&v.__v_raw;return l?Vg(l):v}function $g(v){let l=fu(v);switch(l){case"Undefined":case"Null":return"";case"RegExp":return v.toString();case"Date":return v.toISOString();case"Number":case"String":case"Boolean":case"Array":case"Object":return Vg(v);case"ArrayBuffer":return{"@type":"binary",dataType:l,base64:Wf(v)};case"Int8Array":case"Uint8Array":case"Uint8ClampedArray":case"Int16Array":case"Uint16Array":case"Int32Array":case"Uint32Array":case"Float32Array":case"Float64Array":return{"@type":"binary",dataType:l,base64:Wf(v.buffer)};default:return JSON.stringify(v)}}var Qu=function(){},xc=class{constructor(l,b){Object.defineProperty(this,"instanceId",{enumerable:!0,value:String(l)}),Object.defineProperty(this,"callbackManager",{enumerable:!0,value:new Zu(l)}),Qu=b||function(){}}callback(l,b,O){return this.callbackManager.consume(l,b,O)}registerHook(l,b,O,x){return this.callbackManager.registerHook(l,b,O,x)}triggerHook(l,b,O,x){return this.callbackManager.triggerHook(l,b,O,x)}updateData(l,b,O){this.send("module",{module:"dom",method:"updateComponentData"},[l,b,O])}destroyCallback(){return this.callbackManager.close()}normalize(l,b=!1){let O=fu(l);if(l&&l instanceof _o)return l.ref;if(l&&l.$el instanceof _o)return l.$el.ref;if(O==="Function")return this.callbackManager.add(l).toString();if(b){if(O==="Object"){let x={};for(let S in l)x[S]=this.normalize(l[S],!0);return x}if(O==="Array")return l.map(x=>this.normalize(x,!0))}return l&&l.ref&&l["[[VirtualElement]]"]?l.ref:$g(l)}send(l,b,O,x){let{action:S,component:k,ref:u,module:P,method:We}=b;switch(O=O.map(At=>this.normalize(At,l!=="module")),fu(x)==="Object"&&(x=this.normalize(x,!0)),l){case"dom":return nr("debug")&&io(`[task](${this.instanceId},${l},${S}) ${JSON.stringify(O)}`),this[S](this.instanceId,O);case"component":return this.componentHandler(this.instanceId,u,We,O,mi({component:k},x));default:return nr("debug")&&io(`[task](${this.instanceId},${P},${We}) ${JSON.stringify(O)}`),this.moduleHandler(this.instanceId,P,We,O,x)}}callDOM(l,b){return this[l](this.instanceId,b)}callComponent(l,b,O,x){return this.componentHandler(this.instanceId,l,b,O,x)}callModule(l,b,O,x){return this.moduleHandler(this.instanceId,l,b,O,x)}};function Ug(){let v={createFinish:global.callCreateFinish,updateFinish:global.callUpdateFinish,refreshFinish:global.callRefreshFinish,createBody:global.callCreateBody,addElement:global.callAddElement,removeElement:global.callRemoveElement,moveElement:global.callMoveElement,updateAttrs:global.callUpdateAttrs,updateStyle:global.callUpdateStyle,addEvent:global.callAddEvent,removeEvent:global.callRemoveEvent,__updateComponentData:global.__updateComponentData},l=xc.prototype;for(let b in v){let O=v[b];l[b]=O?(x,S)=>O(x,...S):(x,S)=>Qu(x,[{module:"dom",method:b,args:S}],"-1")}l.componentHandler=global.callNativeComponent||((b,O,x,S,k)=>Qu(b,[{component:k.component,ref:O,method:x,args:S}])),l.moduleHandler=global.callNativeModule||((b,O,x,S)=>Qu(b,[{module:O,method:x,args:S}]))}function yI(v,l,b,O,x,S){let k=v.getRef(l);if(k)return v.fireEvent(k,b,O,x,S);if(O)return O._nodeId=l,v.fireEvent(v.getRef("_documentElement"),b,O,x,S)}function EI(v,l,b,O){return v.taskCenter.callback(l,b,O)}function wI(v,l,b,O,x){if(!v||!v.taskCenter)return console.error(`[JS Framework] Can't find "document" or "taskCenter".`),null;let S=null;try{S=v.taskCenter.triggerHook(l,b,O,x)}catch(k){throw console.error(`[JS Framework] Failed to trigger the "${b}@${O}" hook on ${l}.`),k}return S}function td(v,l){let b=Js(v);if(!b)return new Error(`[JS Framework] Failed to receiveTasks, instance (${v}) is not available.`);if(ji(l))return l.map(O=>{switch(O.method){case"callback":return EI(b,...O.args);case"fireEventSync":case"fireEvent":return yI(b,...O.args);case"componentHook":return wI(b,...O.args)}})}var _l={};function Hg(v={}){for(let l in v)jl(_l,l)||(_l[l]={}),!!ji(v[l])&&v[l].forEach(b=>{Wi(b)?_l[l][b]=!0:Rc(b)&&Wi(b.name)&&(_l[l][b.name]=b.args||[])})}function ef(v,l){return Wi(l)?!!(_l[v]&&_l[v][l]):!!_l[v]}function jg(v){return _l[v]}var nd={};function Wg(v){!ji(v)||v.forEach(l=>{!l||(Wi(l)?nd[l]=!0:Rc(l)&&Wi(l.type)&&(nd[l.type]=l,Jf(l.type,l.methods)))})}function rd(v){return!!nd[v]}var bl=[];function tf(v,l){id(v)?console.warn(`Service "${v}" has been registered already!`):(l=mi({},l),bl.push({name:v,options:l}))}function nf(v){bl.some((l,b)=>{if(l.name===v)return bl.splice(b,1),!0})}function id(v){return SI(v)>=0}function SI(v){return bl.map(l=>l.name).indexOf(v)}function CI(v){return l=>{let b=zu(v,l),{createApp:O}=b;b.createVueApp=b.createApp=(x,S)=>O(x,S).use(AI,l),l.Vue=b}}var AI={install(v,l){OI(v,l),cu(l).initApp(v)}};function OI(v,l){let{mount:b}=v;v.mount=O=>{let x=b(O);return O==="#app"&&l.__registerApp(x),x}}function TI(v){let{UniShared:l,VueShared:b,VueReactivity:O}=v;var x=function(S,k,u,P){"use strict";var We=[];function At(i){We.push(i)}function an(){We.pop()}function A(i){P.pauseTracking();for(var a=We.length?We[We.length-1].component:null,f=a&&a.appContext.config.warnHandler,p=ce(),E=arguments.length,w=new Array(E>1?E-1:0),N=1;N<E;N++)w[N-1]=arguments[N];if(f)Gt(f,a,11,[i+w.join(""),a&&a.proxy,p.map(D=>{var{vnode:K}=D;return"at <".concat(Fs(a,K.type),">")}).join(`
`),p]);else{var V=["[Vue warn]: ".concat(i),...w];p.length&&V.push(`
`,...Kn(p)),console.warn(...V)}P.resetTracking()}function ce(){var i=We[We.length-1];if(!i)return[];for(var a=[];i;){var f=a[0];f&&f.vnode===i?f.recurseCount++:a.push({vnode:i,recurseCount:0});var p=i.component&&i.component.parent;i=p&&p.vnode}return a}function Kn(i){var a=[];return i.forEach((f,p)=>{a.push(...p===0?[]:[`
`],...Un(f))}),a}function Un(i){var{vnode:a,recurseCount:f}=i,p=f>0?"... (".concat(f," recursive calls)"):"",E=a.component?a.component.parent==null:!1,w=" at <".concat(Fs(a.component,a.type,E)),N=">"+p;return a.props?[w,...bt(a.props),N]:[w+N]}function bt(i){var a=[],f=Object.keys(i);return f.slice(0,3).forEach(p=>{a.push(...se(p,i[p]))}),f.length>3&&a.push(" ..."),a}function se(i,a,f){return u.isString(a)?(a=JSON.stringify(a),f?a:["".concat(i,"=").concat(a)]):typeof a=="number"||typeof a=="boolean"||a==null?f?a:["".concat(i,"=").concat(a)]:P.isRef(a)?(a=se(i,P.toRaw(a.value),!0),f?a:["".concat(i,"=Ref<"),a,">"]):u.isFunction(a)?["".concat(i,"=fn").concat(a.name?"<".concat(a.name,">"):"")]:(a=P.toRaw(a),f?a:["".concat(i,"="),a])}var re={sp:"serverPrefetch hook",bc:"beforeCreate hook",c:"created hook",bm:"beforeMount hook",m:"mounted hook",bu:"beforeUpdate hook",u:"updated",bum:"beforeUnmount hook",um:"unmounted hook",a:"activated hook",da:"deactivated hook",ec:"errorCaptured hook",rtc:"renderTracked hook",rtg:"renderTriggered hook",[0]:"setup function",[1]:"render function",[2]:"watcher getter",[3]:"watcher callback",[4]:"watcher cleanup function",[5]:"native event handler",[6]:"component event handler",[7]:"vnode hook",[8]:"directive hook",[9]:"transition hook",[10]:"app errorHandler",[11]:"app warnHandler",[12]:"ref function",[13]:"async component loader",[14]:"scheduler flush. This is likely a Vue internals bug. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/core"};function Gt(i,a,f,p){var E;try{E=p?i(...p):i()}catch(w){en(w,a,f)}return E}function $t(i,a,f,p){if(u.isFunction(i)){var E=Gt(i,a,f,p);return E&&u.isPromise(E)&&E.catch(V=>{en(V,a,f)}),E}for(var w=[],N=0;N<i.length;N++)w.push($t(i[N],a,f,p));return w}function en(i,a,f){var p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0,E=a?a.vnode:null;if(a){for(var w=a.parent,N=a.proxy,V=re[f]||f;w;){var D=w.ec;if(D){for(var K=0;K<D.length;K++)if(D[K](i,N,V)===!1)return}w=w.parent}var ae=a.appContext.config.errorHandler;if(ae){Gt(ae,null,10,[i,N,V]);return}}Or(i,f,E,p)}function Or(i,a,f){var p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0;{var E=re[a]||a;f&&At(f),A("Unhandled error".concat(E?" during execution of ".concat(E):"")),f&&an(),console.error(i)}}var Vr=!1,pr=!1,Pn=[],qt=0,cn=[],Jn=null,Dn=0,rr=[],Gn=null,Re=0,ct={then(i){setTimeout(()=>i(),0)}},St=S.platform==="iOS",Kt=St?ct:Promise.resolve(),mn=null,un=null,Tr=100;function ri(i){var a=mn||Kt;return i?a.then(this?i.bind(this):i):a}function Jr(i){for(var a=qt+1,f=Pn.length;a<f;){var p=a+f>>>1,E=Yi(Pn[p]);E<i?a=p+1:f=p}return a}function _i(i){(!Pn.length||!Pn.includes(i,Vr&&i.allowRecurse?qt+1:qt))&&i!==un&&(i.id==null?Pn.push(i):Pn.splice(Jr(i.id),0,i),gr())}function gr(){!Vr&&!pr&&(pr=!0,mn=Kt.then(so))}function bo(i){var a=Pn.indexOf(i);a>qt&&Pn.splice(a,1)}function oo(i,a,f,p){u.isArray(i)?f.push(...i):(!a||!a.includes(i,i.allowRecurse?p+1:p))&&f.push(i),gr()}function yo(i){oo(i,Jn,cn,Dn)}function ao(i){oo(i,Gn,rr,Re)}function zi(i){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;if(cn.length){for(un=a,Jn=[...new Set(cn)],cn.length=0,i=i||new Map,Dn=0;Dn<Jn.length;Dn++)Rr(i,Jn[Dn])||Jn[Dn]();Jn=null,Dn=0,un=null,zi(i,a)}}function ur(i){if(rr.length){var a=[...new Set(rr)];if(rr.length=0,Gn){Gn.push(...a);return}for(Gn=a,i=i||new Map,Gn.sort((f,p)=>Yi(f)-Yi(p)),Re=0;Re<Gn.length;Re++)Rr(i,Gn[Re])||Gn[Re]();Gn=null,Re=0}}var Yi=i=>i.id==null?1/0:i.id;function so(i){pr=!1,Vr=!0,i=i||new Map,zi(i),Pn.sort((p,E)=>Yi(p)-Yi(E));var a=p=>Rr(i,p);try{for(qt=0;qt<Pn.length;qt++){var f=Pn[qt];if(f&&f.active!==!1){if(a(f))continue;Gt(f,null,14)}}}finally{qt=0,Pn.length=0,ur(i),Vr=!1,mn=null,(Pn.length||cn.length||rr.length)&&so(i)}}function Rr(i,a){if(!i.has(a))i.set(a,1);else{var f=i.get(a);if(f>Tr){var p=a.ownerInstance,E=p&&Ra(p.type);return A("Maximum recursive updates exceeded".concat(E?" in component <".concat(E,">"):"",". ")+"This means you have a reactive effect that is mutating its own dependencies and thus recursively triggering itself. Possible sources include component template, render function, updated hook or watcher source function."),!0}else i.set(a,f+1)}}var Pr=!1,ir=new Set;u.getGlobalThis().__VUE_HMR_RUNTIME__={createRecord:yi(bi),rerender:yi(Hn),reload:yi(ki)};var Gi=new Map;function Vo(i){var a=i.type.__hmrId,f=Gi.get(a);f||(bi(a,i.type),f=Gi.get(a)),f.instances.add(i)}function vr(i){Gi.get(i.type.__hmrId).instances.delete(i)}function bi(i,a){return Gi.has(i)?!1:(Gi.set(i,{initialDef:Ni(a),instances:new Set}),!0)}function Ni(i){return Pl(i)?i.__vccOpts:i}function Hn(i,a){var f=Gi.get(i);!f||(f.initialDef.render=a,[...f.instances].forEach(p=>{a&&(p.render=a,Ni(p.type).render=a),p.renderCache=[],Pr=!0,p.update(),Pr=!1}))}function ki(i,a){var f=Gi.get(i);if(!!f){a=Ni(a),Eo(f.initialDef,a);var p=[...f.instances];for(var E of p){var w=Ni(E.type);ir.has(w)||(w!==f.initialDef&&Eo(w,a),ir.add(w)),E.appContext.optionsCache.delete(E.type),E.ceReload?(ir.add(w),E.ceReload(a.styles),ir.delete(w)):E.parent?(_i(E.parent.update),E.parent.type.__asyncLoader&&E.parent.ceReload&&E.parent.ceReload(a.styles)):E.appContext.reload?E.appContext.reload():typeof window!="undefined"?window.location.reload():console.warn("[HMR] Root or manually mounted instance modified. Full reload required.")}ao(()=>{for(var N of p)ir.delete(Ni(N.type))})}}function Eo(i,a){u.extend(i,a);for(var f in i)f!=="__file"&&!(f in a)&&delete i[f]}function yi(i){return(a,f)=>{try{return i(a,f)}catch(p){console.error(p),console.warn("[HMR] Something went wrong during Vue component hot-reload. Full reload required.")}}}S.devtools=void 0;var $r=[],Zn=!1;function Ur(i){for(var a=arguments.length,f=new Array(a>1?a-1:0),p=1;p<a;p++)f[p-1]=arguments[p];S.devtools?S.devtools.emit(i,...f):Zn||$r.push({event:i,args:f})}function Ln(i,a){var f,p;if(S.devtools=i,S.devtools)S.devtools.enabled=!0,$r.forEach(w=>{var{event:N,args:V}=w;return S.devtools.emit(N,...V)}),$r=[];else if(typeof window!="undefined"&&window.HTMLElement&&!((p=(f=window.navigator)===null||f===void 0?void 0:f.userAgent)===null||p===void 0?void 0:p.includes("jsdom"))){var E=a.__VUE_DEVTOOLS_HOOK_REPLAY__=a.__VUE_DEVTOOLS_HOOK_REPLAY__||[];E.push(w=>{Ln(w,a)}),setTimeout(()=>{S.devtools||(a.__VUE_DEVTOOLS_HOOK_REPLAY__=null,Zn=!0,$r=[])},3e3)}else Zn=!0,$r=[]}function xr(i,a){Ur("app:init",i,a,{Fragment:Rn,Text:Nn,Comment:yn,Static:Li})}function lo(i){Ur("app:unmount",i)}var co=ii("component:added"),qi=ii("component:updated"),wo=ii("component:removed");function ii(i){return a=>{Ur(i,a.appContext.app,a.uid,a.parent?a.parent.uid:void 0,a)}}var So=ga("perf:start"),Co=ga("perf:end");function ga(i){return(a,f,p)=>{Ur(i,a.appContext.app,a.uid,a,f,p)}}function ea(i,a,f){Ur("component:emit",i.appContext.app,i,a,f)}function ta(i,a){if(!i.isUnmounted){for(var f=i.vnode.props||u.EMPTY_OBJ,p=arguments.length,E=new Array(p>2?p-2:0),w=2;w<p;w++)E[w-2]=arguments[w];{var{emitsOptions:N,propsOptions:[V]}=i;if(N)if(!(a in N))(!V||!(u.toHandlerKey(a)in V))&&A('Component emitted event "'.concat(a,'" but it is neither declared in ')+'the emits option nor as an "'.concat(u.toHandlerKey(a),'" prop.'));else{var D=N[a];if(u.isFunction(D)){var K=D(...E);K||A('Invalid event arguments: event validation failed for event "'.concat(a,'".'))}}}var ae=E,ie=a.startsWith("update:"),te=ie&&a.slice(7);if(te&&te in f){var Oe="".concat(te==="modelValue"?"model":te,"Modifiers"),{number:He,trim:at}=f[Oe]||u.EMPTY_OBJ;at?ae=E.map(Je=>Je.trim()):He&&(ae=E.map(u.toNumber))}ea(i,a,ae);{var me=a.toLowerCase();me!==a&&f[u.toHandlerKey(me)]&&A('Event "'.concat(me,'" is emitted in component ')+"".concat(Fs(i,i.type),' but the handler is registered for "').concat(a,'". ')+"Note that HTML attributes are case-insensitive and you cannot use v-on to listen to camelCase events when using in-DOM templates. "+'You should probably use "'.concat(u.hyphenate(a),'" instead of "').concat(a,'".'))}var Ce,_e=f[Ce=u.toHandlerKey(a)]||f[Ce=u.toHandlerKey(u.camelize(a))];!_e&&ie&&(_e=f[Ce=u.toHandlerKey(u.hyphenate(a))]),_e&&$t(_e,i,6,ae);var ve=f[Ce+"Once"];if(ve){if(!i.emitted)i.emitted={};else if(i.emitted[Ce])return;i.emitted[Ce]=!0,$t(ve,i,6,ae)}}}function Ki(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,p=a.emitsCache,E=p.get(i);if(E!==void 0)return E;var w=i.emits,N={},V=!1;if(!u.isFunction(i)){var D=K=>{var ae=Ki(K,a,!0);ae&&(V=!0,u.extend(N,ae))};!f&&a.mixins.length&&a.mixins.forEach(D),i.extends&&D(i.extends),i.mixins&&i.mixins.forEach(D)}return!w&&!V?(p.set(i,null),null):(u.isArray(w)?w.forEach(K=>N[K]=null):u.extend(N,w),p.set(i,N),N)}function In(i,a){return!i||!u.isOn(a)?!1:(a=a.slice(2).replace(/Once$/,""),u.hasOwn(i,a[0].toLowerCase()+a.slice(1))||u.hasOwn(i,u.hyphenate(a))||u.hasOwn(i,a))}var gn=null,xn=null;function oi(i){var a=gn;return gn=i,xn=i&&i.type.__scopeId||null,a}function $o(i){xn=i}function Ut(){xn=null}var Ie=i=>Ri;function Ri(i){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:gn;if(!a||i._n)return i;var f=function(){f._d&&dn(-1);var p=oi(a),E=i(...arguments);return oi(p),f._d&&dn(1),qi(a),E};return f._n=!0,f._c=!0,f._d=!0,f}var xi=!1;function Ei(){xi=!0}function Ji(i){var{type:a,vnode:f,proxy:p,withProxy:E,props:w,propsOptions:[N],slots:V,attrs:D,emit:K,render:ae,renderCache:ie,data:te,setupState:Oe,ctx:He,inheritAttrs:at}=i,me,Ce,_e=oi(i);xi=!1;try{if(f.shapeFlag&4){var ve=E||p;me=wr(ae.call(ve,ve,ie,w,Oe,te,He)),Ce=D}else{var Je=a;D===w&&Ei(),me=wr(Je.length>1?Je(w,{get attrs(){return Ei(),D},slots:V,emit:K}):Je(w,null)),Ce=a.props?D:Uo(D)}}catch(le){Ct.length=0,en(le,i,1),me=Wn(yn)}var Te=me,it=void 0;if(me.patchFlag>0&&me.patchFlag&2048&&([Te,it]=Zr(me)),Ce&&at!==!1){var je=Object.keys(Ce),{shapeFlag:pt}=Te;if(je.length){if(pt&(1|6))N&&je.some(u.isModelListener)&&(Ce=nn(Ce,N)),Te=Zi(Te,Ce);else if(!xi&&Te.type!==yn){for(var kt=Object.keys(D),Rt=[],xt=[],Pt=0,R=kt.length;Pt<R;Pt++){var q=kt[Pt];u.isOn(q)?u.isModelListener(q)||Rt.push(q[2].toLowerCase()+q.slice(3)):xt.push(q)}xt.length&&A("Extraneous non-props attributes ("+"".concat(xt.join(", "),") ")+"were passed to component but could not be automatically inherited because component renders fragment or text root nodes."),Rt.length&&A("Extraneous non-emits event listeners ("+"".concat(Rt.join(", "),") ")+'were passed to component but could not be automatically inherited because component renders fragment or text root nodes. If the listener is intended to be a component custom event listener only, declare it using the "emits" option.')}}}return f.dirs&&(va(Te)||A("Runtime directive used on component with non-element root node. The directives will not function as intended."),Te.dirs=Te.dirs?Te.dirs.concat(f.dirs):f.dirs),f.transition&&(va(Te)||A("Component inside <Transition> renders non-element root node that cannot be animated."),Te.transition=f.transition),it?it(Te):me=Te,oi(_e),me}var Zr=i=>{var a=i.children,f=i.dynamicChildren,p=Bi(a);if(!p)return[i,void 0];var E=a.indexOf(p),w=f?f.indexOf(p):-1,N=V=>{a[E]=V,f&&(w>-1?f[w]=V:V.patchFlag>0&&(i.dynamicChildren=[...f,V]))};return[wr(p),N]};function Bi(i){for(var a,f=0;f<i.length;f++){var p=i[f];if(er(p)){if(p.type!==yn||p.children==="v-if"){if(a)return;a=p}}else return}return a}var Uo=i=>{var a;for(var f in i)(f==="class"||f==="style"||u.isOn(f))&&((a||(a={}))[f]=i[f]);return a},nn=(i,a)=>{var f={};for(var p in i)(!u.isModelListener(p)||!(p.slice(9)in a))&&(f[p]=i[p]);return f},va=i=>i.shapeFlag&(6|1)||i.type===yn;function _n(i,a,f){var{props:p,children:E,component:w}=i,{props:N,children:V,patchFlag:D}=a,K=w.emitsOptions;if((E||V)&&Pr||a.dirs||a.transition)return!0;if(f&&D>=0){if(D&1024)return!0;if(D&16)return p?Xr(p,N,K):!!N;if(D&8)for(var ae=a.dynamicProps,ie=0;ie<ae.length;ie++){var te=ae[ie];if(N[te]!==p[te]&&!In(K,te))return!0}}else return(E||V)&&(!V||!V.$stable)?!0:p===N?!1:p?N?Xr(p,N,K):!0:!!N;return!1}function Xr(i,a,f){var p=Object.keys(a);if(p.length!==Object.keys(i).length)return!0;for(var E=0;E<p.length;E++){var w=p[E];if(a[w]!==i[w]&&!In(f,w))return!0}return!1}function ai(i,a){for(var{vnode:f,parent:p}=i;p&&p.subTree===f;)(f=p.vnode).el=a,p=p.parent}var wi=i=>i.__isSuspense,Qr={name:"Suspense",__isSuspense:!0,process(i,a,f,p,E,w,N,V,D,K){i==null?ma(a,f,p,E,w,N,V,D,K):_a(i,a,f,p,E,N,V,D,K)},hydrate:Ma,create:jo,normalize:ba},Ao=Qr;function Oo(i,a){var f=i.props&&i.props[a];u.isFunction(f)&&f()}function ma(i,a,f,p,E,w,N,V,D){var{p:K,o:{createElement:ae}}=D,ie=ae("div",a),te=i.suspense=jo(i,E,p,a,ie,f,w,N,V,D);K(null,te.pendingBranch=i.ssContent,ie,null,p,te,w,N),te.deps>0?(Oo(i,"onPending"),Oo(i,"onFallback"),K(null,i.ssFallback,a,f,p,null,w,N),Bn(te,i.ssFallback)):te.resolve()}function _a(i,a,f,p,E,w,N,V,D){var{p:K,um:ae,o:{createElement:ie}}=D,te=a.suspense=i.suspense;te.vnode=a,a.el=i.el;var Oe=a.ssContent,He=a.ssFallback,{activeBranch:at,pendingBranch:me,isInFallback:Ce,isHydrating:_e}=te;if(me)te.pendingBranch=Oe,hi(Oe,me)?(K(me,Oe,te.hiddenContainer,null,E,te,w,N,V),te.deps<=0?te.resolve():Ce&&(K(at,He,f,p,E,null,w,N,V),Bn(te,He))):(te.pendingId++,_e?(te.isHydrating=!1,te.activeBranch=me):ae(me,E,te),te.deps=0,te.effects.length=0,te.hiddenContainer=ie("div",f),Ce?(K(null,Oe,te.hiddenContainer,null,E,te,w,N,V),te.deps<=0?te.resolve():(K(at,He,f,p,E,null,w,N,V),Bn(te,He))):at&&hi(Oe,at)?(K(at,Oe,f,p,E,te,w,N,V),te.resolve(!0)):(K(null,Oe,te.hiddenContainer,null,E,te,w,N,V),te.deps<=0&&te.resolve()));else if(at&&hi(Oe,at))K(at,Oe,f,p,E,te,w,N,V),Bn(te,Oe);else if(Oo(a,"onPending"),te.pendingBranch=Oe,te.pendingId++,K(null,Oe,te.hiddenContainer,null,E,te,w,N,V),te.deps<=0)te.resolve();else{var{timeout:ve,pendingId:Je}=te;ve>0?setTimeout(()=>{te.pendingId===Je&&te.fallback(He)},ve):ve===0&&te.fallback(He)}}var Ho=!1;function jo(i,a,f,p,E,w,N,V,D,K){var ae=arguments.length>10&&arguments[10]!==void 0?arguments[10]:!1;Ho||(Ho=!0,console[console.info?"info":"log"]("<Suspense> is an experimental feature and its API will likely change."));var{p:ie,m:te,um:Oe,n:He,o:{parentNode:at,remove:me}}=K,Ce=u.toNumber(i.props&&i.props.timeout),_e={vnode:i,parent:a,parentComponent:f,isSVG:N,container:p,hiddenContainer:E,anchor:w,deps:0,pendingId:0,timeout:typeof Ce=="number"?Ce:-1,activeBranch:null,pendingBranch:null,isInFallback:!0,isHydrating:ae,isUnmounted:!1,effects:[],resolve(){var ve=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1;{if(!ve&&!_e.pendingBranch)throw new Error("suspense.resolve() is called without a pending branch.");if(_e.isUnmounted)throw new Error("suspense.resolve() is called on an already unmounted suspense boundary.")}var{vnode:Je,activeBranch:Te,pendingBranch:it,pendingId:je,effects:pt,parentComponent:kt,container:Rt}=_e;if(_e.isHydrating)_e.isHydrating=!1;else if(!ve){var xt=Te&&it.transition&&it.transition.mode==="out-in";xt&&(Te.transition.afterLeave=()=>{je===_e.pendingId&&te(it,Rt,Pt,0)});var{anchor:Pt}=_e;Te&&(Pt=He(Te),Oe(Te,kt,_e,!0)),xt||te(it,Rt,Pt,0)}Bn(_e,it),_e.pendingBranch=null,_e.isInFallback=!1;for(var R=_e.parent,q=!1;R;){if(R.pendingBranch){R.effects.push(...pt),q=!0;break}R=R.parent}q||ao(pt),_e.effects=[],Oo(Je,"onResolve")},fallback(ve){if(!!_e.pendingBranch){var{vnode:Je,activeBranch:Te,parentComponent:it,container:je,isSVG:pt}=_e;Oo(Je,"onFallback");var kt=He(Te),Rt=()=>{!_e.isInFallback||(ie(null,ve,je,kt,it,null,pt,V,D),Bn(_e,ve))},xt=ve.transition&&ve.transition.mode==="out-in";xt&&(Te.transition.afterLeave=Rt),_e.isInFallback=!0,Oe(Te,it,null,!0),xt||Rt()}},move(ve,Je,Te){_e.activeBranch&&te(_e.activeBranch,ve,Je,Te),_e.container=ve},next(){return _e.activeBranch&&He(_e.activeBranch)},registerDep(ve,Je){var Te=!!_e.pendingBranch;Te&&_e.deps++;var it=ve.vnode.el;ve.asyncDep.catch(je=>{en(je,ve,0)}).then(je=>{if(!(ve.isUnmounted||_e.isUnmounted||_e.pendingId!==ve.suspenseId)){ve.asyncResolved=!0;var{vnode:pt}=ve;At(pt),aa(ve,je,!1),it&&(pt.el=it);var kt=!it&&ve.subTree.el;Je(ve,pt,at(it||ve.subTree.el),it?null:He(ve.subTree),_e,N,D),kt&&me(kt),ai(ve,pt.el),an(),Te&&--_e.deps===0&&_e.resolve()}})},unmount(ve,Je){_e.isUnmounted=!0,_e.activeBranch&&Oe(_e.activeBranch,f,ve,Je),_e.pendingBranch&&Oe(_e.pendingBranch,f,ve,Je)}};return _e}function Ma(i,a,f,p,E,w,N,V,D){var K=a.suspense=jo(a,p,f,i.parentNode,document.createElement("div"),null,E,w,N,V,!0),ae=D(i,K.pendingBranch=a.ssContent,f,K,w,N);return K.deps===0&&K.resolve(),ae}function ba(i){var{shapeFlag:a,children:f}=i,p=a&32;i.ssContent=Ir(p?f.default:f),i.ssFallback=p?Ir(f.fallback):Wn(yn)}function Ir(i){var a;if(u.isFunction(i)){var f=Ot&&i._c;f&&(i._d=!1,Fe()),i=i(),f&&(i._d=!0,a=Fi,wt())}if(u.isArray(i)){var p=Bi(i);p||A("<Suspense> slots expect a single root node."),i=p}return i=wr(i),a&&!i.dynamicChildren&&(i.dynamicChildren=a.filter(E=>E!==i)),i}function or(i,a){a&&a.pendingBranch?u.isArray(i)?a.effects.push(...i):a.effects.push(i):ao(i)}function Bn(i,a){i.activeBranch=a;var{vnode:f,parentComponent:p}=i,E=f.el=a.el;p&&p.subTree===f&&(p.vnode.el=E,ai(p,E))}function mr(i,a){if(!Mn)A("provide() can only be used inside setup().");else{var f=Mn.provides,p=Mn.parent&&Mn.parent.provides;p===f&&(f=Mn.provides=Object.create(p)),f[i]=a,Mn.type.mpType==="app"&&Mn.appContext.app.provide(i,a)}}function fr(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,p=Mn||gn;if(p){var E=p.parent==null?p.vnode.appContext&&p.vnode.appContext.provides:p.parent.provides;if(E&&i in E)return E[i];if(arguments.length>1)return f&&u.isFunction(a)?a.call(p.proxy):a;A('injection "'.concat(String(i),'" not found.'))}else A("inject() can only be used inside setup() or functional components.")}function ya(i,a){return Mi(i,null,a)}function Ea(i,a){return Mi(i,null,Object.assign(Object.assign({},a),{flush:"post"}))}function Wo(i,a){return Mi(i,null,Object.assign(Object.assign({},a),{flush:"sync"}))}var uo={};function Hr(i,a,f){return u.isFunction(a)||A("`watch(fn, options?)` signature has been moved to a separate API. Use `watchEffect(fn, options?)` instead. `watch` now only supports `watch(source, cb, options?) signature."),Mi(i,a,f)}function Mi(i,a){var{immediate:f,deep:p,flush:E,onTrack:w,onTrigger:N}=arguments.length>2&&arguments[2]!==void 0?arguments[2]:u.EMPTY_OBJ;a||(f!==void 0&&A('watch() "immediate" option is only respected when using the watch(source, callback, options?) signature.'),p!==void 0&&A('watch() "deep" option is only respected when using the watch(source, callback, options?) signature.'));var V=ve=>{A("Invalid watch source: ",ve,"A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types.")},D=Mn,K,ae=!1,ie=!1;if(P.isRef(i)?(K=()=>i.value,ae=P.isShallow(i)):P.isReactive(i)?(K=()=>i,p=!0):u.isArray(i)?(ie=!0,ae=i.some(P.isReactive),K=()=>i.map(ve=>{if(P.isRef(ve))return ve.value;if(P.isReactive(ve))return si(ve);if(u.isFunction(ve))return Gt(ve,D,2);V(ve)})):u.isFunction(i)?a?K=()=>Gt(i,D,2):K=()=>{if(!(D&&D.isUnmounted))return Oe&&Oe(),$t(i,D,3,[He])}:(K=u.NOOP,V(i)),a&&p){var te=K;K=()=>si(te())}var Oe,He=ve=>{Oe=_e.onStop=()=>{Gt(ve,D,4)}};if(S.isInSSRComponentSetup)return He=u.NOOP,a?f&&$t(a,D,3,[K(),ie?[]:void 0,He]):K(),u.NOOP;var at=ie?[]:uo,me=()=>{if(!!_e.active)if(a){var ve=_e.run();(p||ae||(ie?ve.some((Je,Te)=>u.hasChanged(Je,at[Te])):u.hasChanged(ve,at)))&&(Oe&&Oe(),$t(a,D,3,[ve,at===uo?void 0:at,He]),at=ve)}else _e.run()};me.allowRecurse=!!a;var Ce;E==="sync"?Ce=me:E==="post"?Ce=()=>fn(me,D&&D.suspense):Ce=()=>{!D||D.isMounted?yo(me):me()};var _e=new P.ReactiveEffect(K,Ce);return _e.onTrack=w,_e.onTrigger=N,a?f?me():at=_e.run():E==="post"?fn(_e.run.bind(_e),D&&D.suspense):_e.run(),()=>{_e.stop(),D&&D.scope&&u.remove(D.scope.effects,_e)}}function zo(i,a,f){var p=this.proxy,E=u.isString(i)?i.includes(".")?Si(p,i):()=>p[i]:i.bind(p,p),w;u.isFunction(a)?w=a:(w=a.handler,f=a);var N=Mn;Ai(this);var V=Mi(E,w.bind(p),f);return N?Ai(N):oa(),V}function Si(i,a){var f=a.split(".");return()=>{for(var p=i,E=0;E<f.length&&p;E++)p=p[f[E]];return p}}function si(i,a){if(!u.isObject(i)||i.__v_skip||(a=a||new Set,a.has(i)))return i;if(a.add(i),P.isRef(i))si(i.value,a);else if(u.isArray(i))for(var f=0;f<i.length;f++)si(i[f],a);else if(u.isSet(i)||u.isMap(i))i.forEach(E=>{si(E,a)});else if(u.isPlainObject(i))for(var p in i)si(i[p],a);return i}function Nr(){var i={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return Sa(()=>{i.isMounted=!0}),na(()=>{i.isUnmounting=!0}),i}var M=[Function,Array],ne={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:M,onEnter:M,onAfterEnter:M,onEnterCancelled:M,onBeforeLeave:M,onLeave:M,onAfterLeave:M,onLeaveCancelled:M,onBeforeAppear:M,onAppear:M,onAfterAppear:M,onAppearCancelled:M},setup(i,a){var{slots:f}=a,p=gi(),E=Nr(),w;return()=>{var N=f.default&&Xe(f.default(),!0);if(!(!N||!N.length)){var V=N[0];if(N.length>1){var D=!1;for(var K of N)if(K.type!==yn){if(D){A("<transition> can only be used on a single element or component. Use <transition-group> for lists.");break}V=K,D=!0}}var ae=P.toRaw(i),{mode:ie}=ae;if(ie&&ie!=="in-out"&&ie!=="out-in"&&ie!=="default"&&A("invalid <transition> mode: ".concat(ie)),E.isLeaving)return J(V);var te=de(V);if(!te)return J(V);var Oe=F(te,ae,E,p);$e(te,Oe);var He=p.subTree,at=He&&de(He),me=!1,{getTransitionKey:Ce}=te.type;if(Ce){var _e=Ce();w===void 0?w=_e:_e!==w&&(w=_e,me=!0)}if(at&&at.type!==yn&&(!hi(te,at)||me)){var ve=F(at,ae,E,p);if($e(at,ve),ie==="out-in")return E.isLeaving=!0,ve.afterLeave=()=>{E.isLeaving=!1,p.update()},J(V);ie==="in-out"&&te.type!==yn&&(ve.delayLeave=(Je,Te,it)=>{var je=G(E,at);je[String(at.key)]=at,Je._leaveCb=()=>{Te(),Je._leaveCb=void 0,delete Oe.delayedLeave},Oe.delayedLeave=it})}return V}}}},he=ne;function G(i,a){var{leavingVNodes:f}=i,p=f.get(a.type);return p||(p=Object.create(null),f.set(a.type,p)),p}function F(i,a,f,p){var{appear:E,mode:w,persisted:N=!1,onBeforeEnter:V,onEnter:D,onAfterEnter:K,onEnterCancelled:ae,onBeforeLeave:ie,onLeave:te,onAfterLeave:Oe,onLeaveCancelled:He,onBeforeAppear:at,onAppear:me,onAfterAppear:Ce,onAppearCancelled:_e}=a,ve=String(i.key),Je=G(f,i),Te=(je,pt)=>{je&&$t(je,p,9,pt)},it={mode:w,persisted:N,beforeEnter(je){var pt=V;if(!f.isMounted)if(E)pt=at||V;else return;je._leaveCb&&je._leaveCb(!0);var kt=Je[ve];kt&&hi(i,kt)&&kt.el._leaveCb&&kt.el._leaveCb(),Te(pt,[je])},enter(je){var pt=D,kt=K,Rt=ae;if(!f.isMounted)if(E)pt=me||D,kt=Ce||K,Rt=_e||ae;else return;var xt=!1,Pt=je._enterCb=R=>{xt||(xt=!0,R?Te(Rt,[je]):Te(kt,[je]),it.delayedLeave&&it.delayedLeave(),je._enterCb=void 0)};pt?(pt(je,Pt),pt.length<=1&&Pt()):Pt()},leave(je,pt){var kt=String(i.key);if(je._enterCb&&je._enterCb(!0),f.isUnmounting)return pt();Te(ie,[je]);var Rt=!1,xt=je._leaveCb=Pt=>{Rt||(Rt=!0,pt(),Pt?Te(He,[je]):Te(Oe,[je]),je._leaveCb=void 0,Je[kt]===i&&delete Je[kt])};Je[kt]=i,te?(te(je,xt),te.length<=1&&xt()):xt()},clone(je){return F(je,a,f,p)}};return it}function J(i){if(fo(i))return i=Zi(i),i.children=null,i}function de(i){return fo(i)?i.children?i.children[0]:void 0:i}function $e(i,a){i.shapeFlag&6&&i.component?$e(i.component.subTree,a):i.shapeFlag&128?(i.ssContent.transition=a.clone(i.ssContent),i.ssFallback.transition=a.clone(i.ssFallback)):i.transition=a}function Xe(i){for(var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1,f=arguments.length>2?arguments[2]:void 0,p=[],E=0,w=0;w<i.length;w++){var N=i[w],V=f==null?N.key:String(f)+String(N.key!=null?N.key:w);N.type===Rn?(N.patchFlag&128&&E++,p=p.concat(Xe(N.children,a,V))):(a||N.type!==yn)&&p.push(V!=null?Zi(N,{key:V}):N)}if(E>1)for(var D=0;D<p.length;D++)p[D].patchFlag=-2;return p}function gt(i){return u.isFunction(i)?{setup:i,name:i.name}:i}var bn=i=>!!i.type.__asyncLoader;function li(i){u.isFunction(i)&&(i={loader:i});var{loader:a,loadingComponent:f,errorComponent:p,delay:E=200,timeout:w,suspensible:N=!0,onError:V}=i,D=null,K,ae=0,ie=()=>(ae++,D=null,te()),te=()=>{var Oe;return D||(Oe=D=a().catch(He=>{if(He=He instanceof Error?He:new Error(String(He)),V)return new Promise((at,me)=>{var Ce=()=>at(ie()),_e=()=>me(He);V(He,Ce,_e,ae+1)});throw He}).then(He=>{if(Oe!==D&&D)return D;if(He||A("Async component loader resolved to undefined. If you are using retry(), make sure to return its return value."),He&&(He.__esModule||He[Symbol.toStringTag]==="Module")&&(He=He.default),He&&!u.isObject(He)&&!u.isFunction(He))throw new Error("Invalid async component load result: ".concat(He));return K=He,He}))};return gt({name:"AsyncComponentWrapper",__asyncLoader:te,get __asyncResolved(){return K},setup(){var Oe=Mn;if(K)return()=>jn(K,Oe);var He=_e=>{D=null,en(_e,Oe,13,!p)};if(N&&Oe.suspense||S.isInSSRComponentSetup)return te().then(_e=>()=>jn(_e,Oe)).catch(_e=>(He(_e),()=>p?Wn(p,{error:_e}):null));var at=P.ref(!1),me=P.ref(),Ce=P.ref(!!E);return E&&setTimeout(()=>{Ce.value=!1},E),w!=null&&setTimeout(()=>{if(!at.value&&!me.value){var _e=new Error("Async component timed out after ".concat(w,"ms."));He(_e),me.value=_e}},w),te().then(()=>{at.value=!0,Oe.parent&&fo(Oe.parent.vnode)&&_i(Oe.parent.update)}).catch(_e=>{He(_e),me.value=_e}),()=>{if(at.value&&K)return jn(K,Oe);if(me.value&&p)return Wn(p,{error:me.value});if(f&&!Ce.value)return Wn(f)}}})}function jn(i,a){var{vnode:{ref:f,props:p,children:E}}=a,w=Wn(i,p,E);return w.ref=f,w}var fo=i=>i.type.__isKeepAlive,Da={name:"KeepAlive",__isKeepAlive:!0,props:{include:[String,RegExp,Array],exclude:[String,RegExp,Array],max:[String,Number]},setup(i,a){var{slots:f}=a,p=gi(),E=p.ctx;if(!E.renderer)return f.default;var w=new Map,N=new Set,V=null;p.__v_cache=w;var D=p.suspense,{renderer:{p:K,m:ae,um:ie,o:{createElement:te}}}=E,Oe=te("div",null);E.activate=(ve,Je,Te,it,je)=>{var pt=ve.component;ae(ve,Je,Te,0,D),K(pt.vnode,ve,Je,Te,pt,D,it,ve.slotScopeIds,je),fn(()=>{pt.isDeactivated=!1,pt.a&&u.invokeArrayFns(pt.a);var kt=ve.props&&ve.props.onVnodeMounted;kt&&Yr(kt,pt.parent,ve)},D),co(pt)},E.deactivate=ve=>{var Je=ve.component;ae(ve,Oe,null,1,D),fn(()=>{Je.da&&u.invokeArrayFns(Je.da);var Te=ve.props&&ve.props.onVnodeUnmounted;Te&&Yr(Te,Je.parent,ve),Je.isDeactivated=!0},D),co(Je)};function He(ve){Fa(ve),ie(ve,p,D,!0)}function at(ve){w.forEach((Je,Te)=>{var it=Ra(Je.type);it&&(!ve||!ve(it))&&me(Te)})}function me(ve){var Je=w.get(ve);!V||Je.type!==V.type?He(Je):V&&Fa(V),w.delete(ve),N.delete(ve)}Hr(()=>[i.include,i.exclude],ve=>{var[Je,Te]=ve;Je&&at(it=>ho(Je,it)),Te&&at(it=>!ho(Te,it))},{flush:"post",deep:!0});var Ce=null,_e=()=>{Ce!=null&&w.set(Ce,To(p.subTree))};return Sa(_e),br(_e),na(()=>{w.forEach(ve=>{var{subTree:Je,suspense:Te}=p,it=To(Je);if(ve.type===it.type){Fa(it);var je=it.component.da;je&&fn(je,Te);return}He(ve)})}),()=>{if(Ce=null,!f.default)return null;var ve=f.default(),Je=ve[0];if(ve.length>1)return A("KeepAlive should contain exactly one component child."),V=null,ve;if(!er(Je)||!(Je.shapeFlag&4)&&!(Je.shapeFlag&128))return V=null,Je;var Te=To(Je),it=Te.type,je=Ra(bn(Te)?Te.type.__asyncResolved||{}:it),{include:pt,exclude:kt,max:Rt}=i;if(pt&&(!je||!ho(pt,je))||kt&&je&&ho(kt,je))return V=Te,Je;var xt=Te.key==null?it:Te.key,Pt=w.get(xt);return Te.el&&(Te=Zi(Te),Je.shapeFlag&128&&(Je.ssContent=Te)),Ce=xt,Pt?(Te.el=Pt.el,Te.component=Pt.component,Te.transition&&$e(Te,Te.transition),Te.shapeFlag|=512,N.delete(xt),N.add(xt)):(N.add(xt),Rt&&N.size>parseInt(Rt,10)&&me(N.values().next().value)),Te.shapeFlag|=256,V=Te,Je}}},Yo=Da;function ho(i,a){return u.isArray(i)?i.some(f=>ho(f,a)):u.isString(i)?i.split(",").includes(a):i.test?i.test(a):!1}function La(i,a){Xs(i,"a",a)}function wa(i,a){Xs(i,"da",a)}function Xs(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:Mn,p=i.__wdc||(i.__wdc=()=>{for(var w=f;w;){if(w.isDeactivated)return;w=w.parent}return i()});if(ei(a,p,f),f)for(var E=f.parent;E&&E.parent;)fo(E.parent.vnode)&&Es(p,a,f,E),E=E.parent}function Es(i,a,f,p){var E=ei(a,i,p,!0);Va(()=>{u.remove(p[a],E)},f)}function Fa(i){var a=i.shapeFlag;a&256&&(a-=256),a&512&&(a-=512),i.shapeFlag=a}function To(i){return i.shapeFlag&128?i.ssContent:i}function ei(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:Mn,p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;if(f){if(k.isRootHook(i)&&f!==f.root&&(f=f.root,k.isRootImmediateHook(i))){var E=f.proxy;$t(a.bind(E),f,i,k.ON_LOAD===i?[E.$page.options]:[])}var{__page_container__:w}=f.root.vnode;w&&w.onInjectHook(i);var N=f[i]||(f[i]=[]),V=a.__weh||(a.__weh=function(){if(!f.isUnmounted){P.pauseTracking(),Ai(f);for(var K=arguments.length,ae=new Array(K),ie=0;ie<K;ie++)ae[ie]=arguments[ie];var te=$t(a,f,i,ae);return oa(),P.resetTracking(),te}});return p?N.unshift(V):N.push(V),V}else{var D=u.toHandlerKey((re[i]||i.replace(/^on/,"")).replace(/ hook$/,""));A("".concat(D," is called when there is no active component instance to be ")+"associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.")}}var Di=i=>function(a){var f=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Mn;return(!S.isInSSRComponentSetup||i==="sp")&&ei(i,a,f)},Po=Di("bm"),Sa=Di("m"),_r=Di("bu"),br=Di("u"),na=Di("bum"),Va=Di("um"),jr=Di("sp"),ws=Di("rtg"),Go=Di("rtc");function Qs(i){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Mn;ei("ec",i,a)}function Ss(){var i=Object.create(null);return(a,f)=>{i[f]?A("".concat(a,' property "').concat(f,'" is already defined in ').concat(i[f],".")):i[f]=a}}var Cs=!0;function El(i){var a=Io(i),f=i.proxy,p=i.ctx;Cs=!1,a.beforeCreate&&Xn(a.beforeCreate,i,"bc");var{data:E,computed:w,methods:N,watch:V,provide:D,inject:K,created:ae,beforeMount:ie,mounted:te,beforeUpdate:Oe,updated:He,activated:at,deactivated:me,beforeDestroy:Ce,beforeUnmount:_e,destroyed:ve,unmounted:Je,render:Te,renderTracked:it,renderTriggered:je,errorCaptured:pt,serverPrefetch:kt,expose:Rt,inheritAttrs:xt,components:Pt,directives:R,filters:q}=a,le=Ss();{var[we]=i.propsOptions;if(we)for(var xe in we)le("Props",xe)}if(K&&el(K,p,le,i.appContext.config.unwrapInjectedRef),N)for(var tt in N){var ft=N[tt];u.isFunction(ft)?(Object.defineProperty(p,tt,{value:ft.bind(f),configurable:!0,enumerable:!0,writable:!0}),le("Methods",tt)):A('Method "'.concat(tt,'" has type "').concat(typeof ft,'" in the component definition. ')+"Did you reference the function correctly?")}if(E&&function(){u.isFunction(E)||A("The data option must be a function. Plain object usage is no longer supported.");var Yt=E.call(f,f);if(u.isPromise(Yt)&&A("data() returned a Promise - note data() cannot be async; If you intend to perform data fetching before component renders, use async setup() + <Suspense>."),!u.isObject(Yt))A("data() should return an object.");else{i.data=P.reactive(Yt);{var Xt=function(Vn){le("Data",Vn),Vn[0]!=="$"&&Vn[0]!=="_"&&Object.defineProperty(p,Vn,{configurable:!0,enumerable:!0,get:()=>Yt[Vn],set:u.NOOP})};for(var wn in Yt)Xt(wn)}}}(),Cs=!0,w){var Qe=function(Yt){var Xt=w[Yt],wn=u.isFunction(Xt)?Xt.bind(f,f):u.isFunction(Xt.get)?Xt.get.bind(f,f):u.NOOP;wn===u.NOOP&&A('Computed property "'.concat(Yt,'" has no getter.'));var Vn=!u.isFunction(Xt)&&u.isFunction(Xt.set)?Xt.set.bind(f):()=>{A('Write operation failed: computed property "'.concat(Yt,'" is readonly.'))},eo=Vs({get:wn,set:Vn});Object.defineProperty(p,Yt,{enumerable:!0,configurable:!0,get:()=>eo.value,set:Ui=>eo.value=Ui}),le("Computed",Yt)};for(var nt in w)Qe(nt)}if(V)for(var Ge in V)As(V[Ge],p,f,Ge);if(D){var Bt=u.isFunction(D)?D.call(f):D;Reflect.ownKeys(Bt).forEach(Yt=>{mr(Yt,Bt[Yt])})}ae&&Xn(ae,i,"c");function vt(Yt,Xt){u.isArray(Xt)?Xt.forEach(wn=>Yt(wn.bind(f))):Xt&&Yt(Xt.bind(f))}if(vt(Po,ie),vt(Sa,te),vt(_r,Oe),vt(br,He),vt(La,at),vt(wa,me),vt(Qs,pt),vt(Go,it),vt(ws,je),vt(na,_e),vt(Va,Je),vt(jr,kt),u.isArray(Rt))if(Rt.length){var It=i.exposed||(i.exposed={});Rt.forEach(Yt=>{Object.defineProperty(It,Yt,{get:()=>f[Yt],set:Xt=>f[Yt]=Xt})})}else i.exposed||(i.exposed={});Te&&i.render===u.NOOP&&(i.render=Te),xt!=null&&(i.inheritAttrs=xt),Pt&&(i.components=Pt),R&&(i.directives=R);var on=i.appContext.config.globalProperties.$applyOptions;on&&on(a,i,f)}function el(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:u.NOOP,p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;u.isArray(i)&&(i=Qn(i));var E=function(N){var V=i[N],D=void 0;u.isObject(V)?"default"in V?D=fr(V.from||N,V.default,!0):D=fr(V.from||N):D=fr(V),P.isRef(D)?p?Object.defineProperty(a,N,{enumerable:!0,configurable:!0,get:()=>D.value,set:K=>D.value=K}):(A('injected property "'.concat(N,'" is a ref and will be auto-unwrapped ')+"and no longer needs `.value` in the next minor release. To opt-in to the new behavior now, set `app.config.unwrapInjectedRef = true` (this config is temporary and will not be needed in the future.)"),a[N]=D):a[N]=D,f("Inject",N)};for(var w in i)E(w)}function Xn(i,a,f){$t(u.isArray(i)?i.map(p=>p.bind(a.proxy)):i.bind(a.proxy),a,f)}function As(i,a,f,p){var E=p.includes(".")?Si(f,p):()=>f[p];if(u.isString(i)){var w=a[i];u.isFunction(w)?Hr(E,w):A('Invalid watch handler specified by key "'.concat(i,'"'),w)}else if(u.isFunction(i))Hr(E,i.bind(f));else if(u.isObject(i))if(u.isArray(i))i.forEach(V=>As(V,a,f,p));else{var N=u.isFunction(i.handler)?i.handler.bind(f):a[i.handler];u.isFunction(N)?Hr(E,N,i):A('Invalid watch handler specified by key "'.concat(i.handler,'"'),N)}else A('Invalid watch option: "'.concat(p,'"'),i)}function Io(i){var a=i.type,{mixins:f,extends:p}=a,{mixins:E,optionsCache:w,config:{optionMergeStrategies:N}}=i.appContext,V=w.get(a),D;return V?D=V:!E.length&&!f&&!p?D=a:(D={},E.length&&E.forEach(K=>po(D,K,N,!0)),po(D,a,N)),w.set(a,D),D}function po(i,a,f){var p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,{mixins:E,extends:w}=a;w&&po(i,w,f,!0),E&&E.forEach(D=>po(i,D,f,!0));for(var N in a)if(p&&N==="expose")A('"expose" option is ignored when declared in mixins or extends. It should only be declared in the base component itself.');else{var V=Os[N]||f&&f[N];i[N]=V?V(i[N],a[N]):a[N]}return i}var Os={data:ci,props:No,emits:No,methods:No,computed:No,beforeCreate:qn,created:qn,beforeMount:qn,mounted:qn,beforeUpdate:qn,updated:qn,beforeDestroy:qn,beforeUnmount:qn,destroyed:qn,unmounted:qn,activated:qn,deactivated:qn,errorCaptured:qn,serverPrefetch:qn,components:No,directives:No,watch:as,provide:ci,inject:os};function ci(i,a){return a?i?function(){return u.extend(u.isFunction(i)?i.call(this,this):i,u.isFunction(a)?a.call(this,this):a)}:a:i}function os(i,a){return No(Qn(i),Qn(a))}function Qn(i){if(u.isArray(i)){for(var a={},f=0;f<i.length;f++)a[i[f]]=i[f];return a}return i}function qn(i,a){return i?[...new Set([].concat(i,a))]:a}function No(i,a){return i?u.extend(u.extend(Object.create(null),i),a):a}function as(i,a){if(!i)return a;if(!a)return i;var f=u.extend(Object.create(null),i);for(var p in a)f[p]=qn(i[p],a[p]);return f}function Ts(i,a,f){var p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,E={},w={};u.def(w,Ko,1),i.propsDefaults=Object.create(null),Ca(i,a,E,w);for(var N in i.propsOptions[0])N in E||(E[N]=void 0);j(a||{},E,i),f?i.props=p?E:P.shallowReactive(E):i.type.props?i.props=E:i.props=w,i.attrs=w}function ko(i,a,f,p){var{props:E,attrs:w,vnode:{patchFlag:N}}=i,V=P.toRaw(E),[D]=i.propsOptions,K=!1;if(!(i.type.__hmrId||i.parent&&i.parent.type.__hmrId)&&(p||N>0)&&!(N&16)){if(N&8)for(var ae=i.vnode.dynamicProps,ie=0;ie<ae.length;ie++){var te=ae[ie];if(!In(i.emitsOptions,te)){var Oe=a[te];if(D)if(u.hasOwn(w,te))Oe!==w[te]&&(w[te]=Oe,K=!0);else{var He=u.camelize(te);E[He]=ss(D,V,He,Oe,i,!1)}else Oe!==w[te]&&(w[te]=Oe,K=!0)}}}else{Ca(i,a,E,w)&&(K=!0);var at;for(var me in V)(!a||!u.hasOwn(a,me)&&((at=u.hyphenate(me))===me||!u.hasOwn(a,at)))&&(D?f&&(f[me]!==void 0||f[at]!==void 0)&&(E[me]=ss(D,V,me,void 0,i,!0)):delete E[me]);if(w!==V)for(var Ce in w)(!a||!u.hasOwn(a,Ce)&&!0)&&(delete w[Ce],K=!0)}K&&P.trigger(i,"set","$attrs"),j(a||{},E,i)}function Ca(i,a,f,p){var[E,w]=i.propsOptions,N=!1,V;if(a){for(var D in a)if(!u.isReservedProp(D)){var K=a[D],ae=void 0;E&&u.hasOwn(E,ae=u.camelize(D))?!w||!w.includes(ae)?f[ae]=K:(V||(V={}))[ae]=K:In(i.emitsOptions,D)||(!(D in p)||K!==p[D])&&(p[D]=K,N=!0)}}if(w)for(var ie=P.toRaw(f),te=V||u.EMPTY_OBJ,Oe=0;Oe<w.length;Oe++){var He=w[Oe];f[He]=ss(E,ie,He,te[He],i,!u.hasOwn(te,He))}return N}function ss(i,a,f,p,E,w){var N=i[f];if(N!=null){var V=u.hasOwn(N,"default");if(V&&p===void 0){var D=N.default;if(N.type!==Function&&u.isFunction(D)){var{propsDefaults:K}=E;f in K?p=K[f]:(Ai(E),p=K[f]=D.call(null,a),oa())}else p=D}N[0]&&(w&&!V?p=!1:N[1]&&(p===""||p===u.hyphenate(f))&&(p=!0))}return p}function ls(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,p=a.propsCache,E=p.get(i);if(E)return E;var w=i.props,N={},V=[],D=!1;if(!u.isFunction(i)){var K=ve=>{D=!0;var[Je,Te]=ls(ve,a,!0);u.extend(N,Je),Te&&V.push(...Te)};!f&&a.mixins.length&&a.mixins.forEach(K),i.extends&&K(i.extends),i.mixins&&i.mixins.forEach(K)}if(!w&&!D)return p.set(i,u.EMPTY_ARR),u.EMPTY_ARR;if(u.isArray(w))for(var ae=0;ae<w.length;ae++){u.isString(w[ae])||A("props must be strings when using array syntax.",w[ae]);var ie=u.camelize(w[ae]);Aa(ie)&&(N[ie]=u.EMPTY_OBJ)}else if(w){u.isObject(w)||A("invalid props options",w);for(var te in w){var Oe=u.camelize(te);if(Aa(Oe)){var He=w[te],at=N[Oe]=u.isArray(He)||u.isFunction(He)?{type:He}:He;if(at){var me=z(Boolean,at.type),Ce=z(String,at.type);at[0]=me>-1,at[1]=Ce<0||me<Ce,(me>-1||u.hasOwn(at,"default"))&&V.push(Oe)}}}}var _e=[N,V];return p.set(i,_e),_e}function Aa(i){return i[0]!=="$"?!0:(A('Invalid prop name: "'.concat(i,'" is a reserved property.')),!1)}function _(i){var a=i&&i.toString().match(/^\s*function (\w+)/);return a?a[1]:i===null?"null":""}function L(i,a){return _(i)===_(a)}function z(i,a){return u.isArray(a)?a.findIndex(f=>L(f,i)):u.isFunction(a)&&L(a,i)?0:-1}function j(i,a,f){var p=P.toRaw(a),E=f.propsOptions[0];for(var w in E){var N=E[w];N!=null&&X(w,p[w],N,!u.hasOwn(i,w)&&!u.hasOwn(i,u.hyphenate(w)))}}function X(i,a,f,p){var{type:E,required:w,validator:N}=f;if(w&&p){A('Missing required prop: "'+i+'"');return}if(!(a==null&&!f.required)){if(E!=null&&E!==!0){for(var V=!1,D=u.isArray(E)?E:[E],K=[],ae=0;ae<D.length&&!V;ae++){var{valid:ie,expectedType:te}=ue(a,D[ae]);K.push(te||""),V=ie}if(!V){A(be(i,a,K));return}}N&&!N(a)&&A('Invalid prop: custom validator check failed for prop "'+i+'".')}}var ee=u.makeMap("String,Number,Boolean,Function,Symbol,BigInt");function ue(i,a){var f,p=_(a);if(ee(p)){var E=typeof i;f=E===p.toLowerCase(),!f&&E==="object"&&(f=i instanceof a)}else p==="Object"?f=u.isObject(i):p==="Array"?f=u.isArray(i):p==="null"?f=i===null:f=i instanceof a;return{valid:f,expectedType:p}}function be(i,a,f){var p='Invalid prop: type check failed for prop "'.concat(i,'".')+" Expected ".concat(f.map(u.capitalize).join(" | ")),E=f[0],w=u.toRawType(a),N=Me(a,E),V=Me(a,w);return f.length===1&&Ue(E)&&!ye(E,w)&&(p+=" with value ".concat(N)),p+=", got ".concat(w," "),Ue(w)&&(p+="with value ".concat(V,".")),p}function Me(i,a){return a==="String"?'"'.concat(i,'"'):a==="Number"?"".concat(Number(i)):"".concat(i)}function Ue(i){var a=["string","number","boolean"];return a.some(f=>i.toLowerCase()===f)}function ye(){for(var i=arguments.length,a=new Array(i),f=0;f<i;f++)a[f]=arguments[f];return a.some(p=>p.toLowerCase()==="boolean")}var Ve=i=>i[0]==="_"||i==="$stable",lt=i=>u.isArray(i)?i.map(wr):[wr(i)],Et=(i,a,f)=>{var p=Ri(function(){return Mn&&A('Slot "'.concat(i,'" invoked outside of the render function: ')+"this will not track dependencies used in the slot. Invoke the slot function inside the render function instead."),lt(a(...arguments))},f);return p._c=!1,p},Wt=(i,a,f)=>{var p=i._ctx;for(var E in i)if(!Ve(E)){var w=i[E];u.isFunction(w)?a[E]=Et(E,w,p):w!=null&&function(){A('Non-function value encountered for slot "'.concat(E,'". ')+"Prefer function slots for better performance.");var N=lt(w);a[E]=()=>N}()}},mt=(i,a)=>{fo(i.vnode)||A("Non-function value encountered for default slot. Prefer function slots for better performance.");var f=lt(a);i.slots.default=()=>f},ht=(i,a)=>{if(i.vnode.shapeFlag&32){var f=a._;f?(i.slots=P.toRaw(a),u.def(a,"_",f)):Wt(a,i.slots={})}else i.slots={},a&&mt(i,a);u.def(i.slots,Ko,1)},Mt=(i,a,f)=>{var{vnode:p,slots:E}=i,w=!0,N=u.EMPTY_OBJ;if(p.shapeFlag&32){var V=a._;V?Pr?u.extend(E,a):f&&V===1?w=!1:(u.extend(E,a),!f&&V===1&&delete E._):(w=!a.$stable,Wt(a,E)),N=a}else a&&(mt(i,a),N={default:1});if(w)for(var D in E)!Ve(D)&&!(D in N)&&delete E[D]};function Cn(i){u.isBuiltInDirective(i)&&A("Do not use built-in directive ids as custom directive id: "+i)}function Ht(i,a){var f=gn;if(f===null)return A("withDirectives can only be used inside render functions."),i;for(var p=Ds(f)||f.proxy,E=i.dirs||(i.dirs=[]),w=0;w<a.length;w++){var[N,V,D,K=u.EMPTY_OBJ]=a[w];u.isFunction(N)&&(N={mounted:N,updated:N}),N.deep&&si(V),E.push({dir:N,instance:p,value:V,oldValue:void 0,arg:D,modifiers:K})}return i}function ut(i,a,f,p){for(var E=i.dirs,w=a&&a.dirs,N=0;N<E.length;N++){var V=E[N];w&&(V.oldValue=w[N].value);var D=V.dir[p];D&&(P.pauseTracking(),$t(D,f,8,[i.el,V,i,a]),P.resetTracking())}}function jt(){return{app:null,config:{isNativeTag:u.NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}var Vt=0;function Fn(i,a){return function(p){var E=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;u.isFunction(p)||(p=Object.assign({},p)),E!=null&&!u.isObject(E)&&(A("root props passed to app.mount() must be an object."),E=null);var w=jt(),N=new Set,V=!1,D=w.app={_uid:Vt++,_component:p,_props:E,_container:null,_context:w,_instance:null,version:fl,get config(){return w.config},set config(K){A("app.config cannot be replaced. Modify individual options instead.")},use(K){for(var ae=arguments.length,ie=new Array(ae>1?ae-1:0),te=1;te<ae;te++)ie[te-1]=arguments[te];return N.has(K)?A("Plugin has already been applied to target app."):K&&u.isFunction(K.install)?(N.add(K),K.install(D,...ie)):u.isFunction(K)?(N.add(K),K(D,...ie)):A('A plugin must either be a function or an object with an "install" function.'),D},mixin(K){return w.mixins.includes(K)?A("Mixin has already been applied to target app"+(K.name?": ".concat(K.name):"")):w.mixins.push(K),D},component(K,ae){return al(K,w.config),ae?(w.components[K]&&A('Component "'.concat(K,'" has already been registered in target app.')),w.components[K]=ae,D):w.components[K]},directive(K,ae){return Cn(K),ae?(w.directives[K]&&A('Directive "'.concat(K,'" has already been registered in target app.')),w.directives[K]=ae,D):w.directives[K]},mount(K,ae,ie){if(V)A("App has already been mounted.\nIf you want to remount the same app, move your app creation logic into a factory function and create fresh app instances for each mount - e.g. `const createMyApp = () => createApp(App)`");else{var te=Wn(p,E);return te.appContext=w,w.reload=()=>{i(Zi(te),K,ie)},ae&&a?a(te,K):i(te,K,ie),V=!0,D._container=K,K.__vue_app__=D,D._instance=te.component,xr(D,fl),Ds(te.component)||te.component.proxy}},unmount(){V?(i(null,D._container),D._instance=null,lo(D),delete D._container.__vue_app__):A("Cannot unmount an app that is not mounted.")},provide(K,ae){return K in w.provides&&A('App already provides property with key "'.concat(String(K),'". ')+"It will be overwritten with the new value."),w.provides[K]=ae,D}};return D}}function sn(i,a,f,p){var E=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1;if(u.isArray(i)){i.forEach((at,me)=>sn(at,a&&(u.isArray(a)?a[me]:a),f,p,E));return}if(!(bn(p)&&!E)){var w=p.shapeFlag&4?Ds(p.component)||p.component.proxy:p.el,N=E?null:w,{i:V,r:D}=i;if(!V){A("Missing ref owner context. ref cannot be used on hoisted vnodes. A vnode with ref must be created inside the render function.");return}var K=a&&a.r,ae=V.refs===u.EMPTY_OBJ?V.refs={}:V.refs,ie=V.setupState;if(K!=null&&K!==D&&(u.isString(K)?(ae[K]=null,u.hasOwn(ie,K)&&(ie[K]=null)):P.isRef(K)&&(K.value=null)),u.isFunction(D))Gt(D,V,12,[N,ae]);else{var te=u.isString(D),Oe=P.isRef(D);if(te||Oe){var He=()=>{if(i.f){var at=te?ae[D]:D.value;E?u.isArray(at)&&u.remove(at,w):u.isArray(at)?at.includes(w)||at.push(w):te?(ae[D]=[w],u.hasOwn(ie,D)&&(ie[D]=ae[D])):(D.value=[w],i.k&&(ae[i.k]=D.value))}else te?(ae[D]=N,u.hasOwn(ie,D)&&(ie[D]=N)):P.isRef(D)?(D.value=N,i.k&&(ae[i.k]=N)):A("Invalid template ref type:",D,"(".concat(typeof D,")"))};N?(He.id=-1,fn(He,f)):He()}else A("Invalid template ref type:",D,"(".concat(typeof D,")"))}}}var rn=!1,kn=i=>/svg/.test(i.namespaceURI)&&i.tagName!=="foreignObject",Oa=i=>i.nodeType===8;function Ta(i){var{mt:a,p:f,o:{patchProp:p,nextSibling:E,parentNode:w,remove:N,insert:V,createComment:D}}=i,K=(me,Ce)=>{if(!Ce.hasChildNodes()){A("Attempting to hydrate existing markup but container is empty. Performing full mount instead."),f(null,me,Ce),ur();return}rn=!1,ae(Ce.firstChild,me,null,null,null),ur(),rn&&console.error("Hydration completed but contains mismatches.")},ae=function(me,Ce,_e,ve,Je){var Te=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1,it=Oa(me)&&me.data==="[",je=()=>He(me,Ce,_e,ve,Je,it),{type:pt,ref:kt,shapeFlag:Rt}=Ce,xt=me.nodeType;Ce.el=me;var Pt=null;switch(pt){case Nn:xt!==3?Pt=je():(me.data!==Ce.children&&(rn=!0,A("Hydration text mismatch:"+`
- Client: `.concat(JSON.stringify(me.data))+`
- Server: `.concat(JSON.stringify(Ce.children))),me.data=Ce.children),Pt=E(me));break;case yn:xt!==8||it?Pt=je():Pt=E(me);break;case Li:if(xt!==1)Pt=je();else{Pt=me;for(var R=!Ce.children.length,q=0;q<Ce.staticCount;q++)R&&(Ce.children+=Pt.outerHTML),q===Ce.staticCount-1&&(Ce.anchor=Pt),Pt=E(Pt);return Pt}break;case Rn:it?Pt=Oe(me,Ce,_e,ve,Je,Te):Pt=je();break;default:if(Rt&1)xt!==1||Ce.type.toLowerCase()!==me.tagName.toLowerCase()?Pt=je():Pt=ie(me,Ce,_e,ve,Je,Te);else if(Rt&6){Ce.slotScopeIds=Je;var le=w(me);if(a(Ce,le,null,_e,ve,kn(le),Te),Pt=it?at(me):E(me),bn(Ce)){var we;it?(we=Wn(Rn),we.anchor=Pt?Pt.previousSibling:le.lastChild):we=me.nodeType===3?nl(""):Wn("div"),we.el=me,Ce.component.subTree=we}}else Rt&64?xt!==8?Pt=je():Pt=Ce.type.hydrate(me,Ce,_e,ve,Je,Te,i,te):Rt&128?Pt=Ce.type.hydrate(me,Ce,_e,ve,kn(w(me)),Je,Te,i,ae):A("Invalid HostVNode type:",pt,"(".concat(typeof pt,")"))}return kt!=null&&sn(kt,null,ve,Ce),Pt},ie=(me,Ce,_e,ve,Je,Te)=>{Te=Te||!!Ce.dynamicChildren;var{type:it,props:je,patchFlag:pt,shapeFlag:kt,dirs:Rt}=Ce,xt=it==="input"&&Rt||it==="option";{if(Rt&&ut(Ce,null,_e,"created"),je)if(xt||!Te||pt&(16|32))for(var Pt in je)(xt&&Pt.endsWith("value")||u.isOn(Pt)&&!u.isReservedProp(Pt))&&p(me,Pt,null,je[Pt],!1,void 0,_e);else je.onClick&&p(me,"onClick",null,je.onClick,!1,void 0,_e);var R;if((R=je&&je.onVnodeBeforeMount)&&Yr(R,_e,Ce),Rt&&ut(Ce,null,_e,"beforeMount"),((R=je&&je.onVnodeMounted)||Rt)&&or(()=>{R&&Yr(R,_e,Ce),Rt&&ut(Ce,null,_e,"mounted")},ve),kt&16&&!(je&&(je.innerHTML||je.textContent)))for(var q=te(me.firstChild,Ce,me,_e,ve,Je,Te),le=!1;q;){rn=!0,le||(A("Hydration children mismatch in <".concat(Ce.type,">: ")+"server rendered element contains more child nodes than client vdom."),le=!0);var we=q;q=q.nextSibling,N(we)}else kt&8&&me.textContent!==Ce.children&&(rn=!0,A("Hydration text content mismatch in <".concat(Ce.type,`>:
`)+"- Client: ".concat(me.textContent,`
`)+"- Server: ".concat(Ce.children)),me.textContent=Ce.children)}return me.nextSibling},te=(me,Ce,_e,ve,Je,Te,it)=>{it=it||!!Ce.dynamicChildren;for(var je=Ce.children,pt=je.length,kt=!1,Rt=0;Rt<pt;Rt++){var xt=it?je[Rt]:je[Rt]=wr(je[Rt]);if(me)me=ae(me,xt,ve,Je,Te,it);else{if(xt.type===Nn&&!xt.children)continue;rn=!0,kt||(A("Hydration children mismatch in <".concat(_e.tagName.toLowerCase(),">: ")+"server rendered element contains fewer child nodes than client vdom."),kt=!0),f(null,xt,_e,null,ve,Je,kn(_e),Te)}}return me},Oe=(me,Ce,_e,ve,Je,Te)=>{var{slotScopeIds:it}=Ce;it&&(Je=Je?Je.concat(it):it);var je=w(me),pt=te(E(me),Ce,je,_e,ve,Je,Te);return pt&&Oa(pt)&&pt.data==="]"?E(Ce.anchor=pt):(rn=!0,V(Ce.anchor=D("]",je),je,pt),pt)},He=(me,Ce,_e,ve,Je,Te)=>{if(rn=!0,A(`Hydration node mismatch:
- Client vnode:`,Ce.type,`
- Server rendered DOM:`,me,me.nodeType===3?"(text)":Oa(me)&&me.data==="["?"(start of fragment)":""),Ce.el=null,Te)for(var it=at(me);;){var je=E(me);if(je&&je!==it)N(je);else break}var pt=E(me),kt=w(me);return N(me),f(null,Ce,kt,pt,_e,ve,kn(kt),Je),pt},at=me=>{for(var Ce=0;me;)if(me=E(me),me&&Oa(me)&&(me.data==="["&&Ce++,me.data==="]")){if(Ce===0)return E(me);Ce--}return me};return[K,ae]}var vn,zt;function ar(i,a){i.appContext.config.performance&&Pa()&&zt.mark("vue-".concat(a,"-").concat(i.uid)),So(i,a,Pa()?zt.now():Date.now())}function Br(i,a){if(i.appContext.config.performance&&Pa()){var f="vue-".concat(a,"-").concat(i.uid),p=f+":end";zt.mark(p),zt.measure("<".concat(Fs(i,i.type),"> ").concat(a),f,p),zt.clearMarks(f),zt.clearMarks(p)}Co(i,a,Pa()?zt.now():Date.now())}function Pa(){return vn!==void 0||(typeof window!="undefined"&&window.performance?(vn=!0,zt=window.performance):vn=!1),vn}function yr(){var i=[];if(i.length){var a=i.length>1;console.warn("Feature flag".concat(a?"s":""," ").concat(i.join(", ")," ").concat(a?"are":"is"," not explicitly defined. You are running the esm-bundler build of Vue, ")+`which expects these compile-time feature flags to be globally injected via the bundler config in order to get better tree-shaking in the production bundle.

For more details, see https://link.vuejs.org/feature-flags.`)}}var fn=or;function ui(i){return Ro(i)}function Ps(i){return Ro(i,Ta)}function Ro(i,a){yr();var f=u.getGlobalThis();f.__VUE__=!0,Ln(f.__VUE_DEVTOOLS_GLOBAL_HOOK__,f);var{insert:p,remove:E,patchProp:w,forcePatchProp:N,createElement:V,createText:D,createComment:K,setText:ae,setElementText:ie,parentNode:te,nextSibling:Oe,setScopeId:He=u.NOOP,cloneNode:at,insertStaticContent:me}=i,Ce=function(W,Z,ge){var Le=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null,ke=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,rt=arguments.length>5&&arguments[5]!==void 0?arguments[5]:null,st=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,Ke=arguments.length>7&&arguments[7]!==void 0?arguments[7]:null,et=arguments.length>8&&arguments[8]!==void 0?arguments[8]:Pr?!1:!!Z.dynamicChildren;if(W!==Z){W&&!hi(W,Z)&&(Le=Vn(W),It(W,ke,rt,!0),W=null),Z.patchFlag===-2&&(et=!1,Z.dynamicChildren=null);var{type:ze,ref:Tt,shapeFlag:Nt}=Z;switch(ze){case Nn:_e(W,Z,ge,Le);break;case yn:ve(W,Z,ge,Le);break;case Li:W==null?Je(Z,ge,Le,st):Te(W,Z,ge,st);break;case Rn:le(W,Z,ge,Le,ke,rt,st,Ke,et);break;default:Nt&1?pt(W,Z,ge,Le,ke,rt,st,Ke,et):Nt&6?we(W,Z,ge,Le,ke,rt,st,Ke,et):Nt&64||Nt&128?ze.process(W,Z,ge,Le,ke,rt,st,Ke,et,Ui):A("Invalid VNode type:",ze,"(".concat(typeof ze,")"))}Tt!=null&&ke&&sn(Tt,W&&W.ref,rt,Z||W,!Z)}},_e=(W,Z,ge,Le)=>{if(W==null)p(Z.el=D(Z.children,ge),ge,Le);else{var ke=Z.el=W.el;Z.children!==W.children&&ae(ke,Z.children)}},ve=(W,Z,ge,Le)=>{W==null?p(Z.el=K(Z.children||"",ge),ge,Le):Z.el=W.el},Je=(W,Z,ge,Le)=>{[W.el,W.anchor]=me(W.children,Z,ge,Le,W.el,W.anchor)},Te=(W,Z,ge,Le)=>{if(Z.children!==W.children){var ke=Oe(W.anchor);je(W),[Z.el,Z.anchor]=me(Z.children,ge,ke,Le)}else Z.el=W.el,Z.anchor=W.anchor},it=(W,Z,ge)=>{for(var{el:Le,anchor:ke}=W,rt;Le&&Le!==ke;)rt=Oe(Le),p(Le,Z,ge),Le=rt;p(ke,Z,ge)},je=W=>{for(var{el:Z,anchor:ge}=W,Le;Z&&Z!==ge;)Le=Oe(Z),E(Z),Z=Le;E(ge)},pt=(W,Z,ge,Le,ke,rt,st,Ke,et)=>{st=st||Z.type==="svg",W==null?kt(Z,ge,Le,ke,rt,st,Ke,et):Pt(W,Z,ke,rt,st,Ke,et)},kt=(W,Z,ge,Le,ke,rt,st,Ke)=>{var et,ze,{type:Tt,props:Nt,shapeFlag:Ft,transition:On,patchFlag:tr,dirs:Sr}=W;{if(et=W.el=V(W.type,Z),Ft&8?ie(et,W.children):Ft&16&&xt(W.children,et,null,Le,ke,rt&&Tt!=="foreignObject",st,Ke),Sr&&ut(W,null,Le,"created"),Nt){for(var ni in Nt)ni!=="value"&&!u.isReservedProp(ni)&&w(et,ni,null,Nt[ni],rt,W.children,Le,ke,wn);"value"in Nt&&w(et,"value",null,Nt.value),(ze=Nt.onVnodeBeforeMount)&&Yr(ze,Le,W)}Rt(et,W,W.scopeId,st,Le)}Object.defineProperty(et,"__vnode",{value:W,enumerable:!1}),Object.defineProperty(et,"__vueParentComponent",{value:Le,enumerable:!1}),Sr&&ut(W,null,Le,"beforeMount");var to=(!ke||ke&&!ke.pendingBranch)&&On&&!On.persisted;to&&On.beforeEnter(et),p(et,Z,ge),((ze=Nt&&Nt.onVnodeMounted)||to||Sr)&&fn(()=>{ze&&Yr(ze,Le,W),to&&On.enter(et),Sr&&ut(W,null,Le,"mounted")},ke)},Rt=(W,Z,ge,Le,ke)=>{if(ge&&He(W,ge),Le)for(var rt=0;rt<Le.length;rt++)He(W,Le[rt]);if(ke){var st=ke.subTree;if(st.patchFlag>0&&st.patchFlag&2048&&(st=Bi(st.children)||st),Z===st){var Ke=ke.vnode;Rt(W,Ke,Ke.scopeId,Ke.slotScopeIds,ke.parent)}}},xt=function(W,Z,ge,Le,ke,rt,st,Ke){for(var et=arguments.length>8&&arguments[8]!==void 0?arguments[8]:0,ze=et;ze<W.length;ze++){var Tt=W[ze]=Ke?Mo(W[ze]):wr(W[ze]);Ce(null,Tt,Z,ge,Le,ke,rt,st,Ke)}},Pt=(W,Z,ge,Le,ke,rt,st)=>{var Ke=Z.el=W.el,{patchFlag:et,dynamicChildren:ze,dirs:Tt}=Z;et|=W.patchFlag&16;var Nt=W.props||u.EMPTY_OBJ,Ft=Z.props||u.EMPTY_OBJ,On;ge&&Ci(ge,!1),(On=Ft.onVnodeBeforeUpdate)&&Yr(On,ge,Z,W),Tt&&ut(Z,W,ge,"beforeUpdate"),ge&&Ci(ge,!0),Pr&&(et=0,st=!1,ze=null);var tr=ke&&Z.type!=="foreignObject";if(ze?(R(W.dynamicChildren,ze,Ke,ge,Le,tr,rt),ge&&ge.type.__hmrId&&xo(W,Z)):st||nt(W,Z,Ke,null,ge,Le,tr,rt,!1),et>0){if(et&16)q(Ke,Z,Nt,Ft,ge,Le,ke);else if(et&2&&Nt.class!==Ft.class&&w(Ke,"class",null,Ft.class,ke),et&4&&w(Ke,"style",Nt.style,Ft.style,ke),et&8)for(var Sr=Z.dynamicProps,ni=0;ni<Sr.length;ni++){var to=Sr[ni],vs=Nt[to],Ws=Ft[to];(Ws!==vs||to==="value"||N&&N(Ke,to))&&w(Ke,to,vs,Ws,ke,W.children,ge,Le,wn)}et&1&&W.children!==Z.children&&ie(Ke,Z.children)}else!st&&ze==null&&q(Ke,Z,Nt,Ft,ge,Le,ke);((On=Ft.onVnodeUpdated)||Tt)&&fn(()=>{On&&Yr(On,ge,Z,W),Tt&&ut(Z,W,ge,"updated")},Le)},R=(W,Z,ge,Le,ke,rt,st)=>{for(var Ke=0;Ke<Z.length;Ke++){var et=W[Ke],ze=Z[Ke],Tt=et.el&&(et.type===Rn||!hi(et,ze)||et.shapeFlag&(6|64))?te(et.el):ge;Ce(et,ze,Tt,null,Le,ke,rt,st,!0)}},q=(W,Z,ge,Le,ke,rt,st)=>{if(ge!==Le){for(var Ke in Le)if(!u.isReservedProp(Ke)){var et=Le[Ke],ze=ge[Ke];(et!==ze&&Ke!=="value"||N&&N(W,Ke))&&w(W,Ke,ze,et,st,Z.children,ke,rt,wn)}if(ge!==u.EMPTY_OBJ)for(var Tt in ge)!u.isReservedProp(Tt)&&!(Tt in Le)&&w(W,Tt,ge[Tt],null,st,Z.children,ke,rt,wn);"value"in Le&&w(W,"value",ge.value,Le.value)}},le=(W,Z,ge,Le,ke,rt,st,Ke,et)=>{var ze=Z.el=W?W.el:D("",ge),Tt=Z.anchor=W?W.anchor:D("",ge),{patchFlag:Nt,dynamicChildren:Ft,slotScopeIds:On}=Z;Pr&&(Nt=0,et=!1,Ft=null),On&&(Ke=Ke?Ke.concat(On):On),W==null?(p(ze,ge,Le),p(Tt,ge,Le),xt(Z.children,ge,Tt,ke,rt,st,Ke,et)):Nt>0&&Nt&64&&Ft&&W.dynamicChildren?(R(W.dynamicChildren,Ft,ge,ke,rt,st,Ke),ke&&ke.type.__hmrId?xo(W,Z):(Z.key!=null||ke&&Z===ke.subTree)&&xo(W,Z,!0)):nt(W,Z,ge,Tt,ke,rt,st,Ke,et)},we=(W,Z,ge,Le,ke,rt,st,Ke,et)=>{Z.slotScopeIds=Ke,W==null?Z.shapeFlag&512?ke.ctx.activate(Z,ge,Le,st,et):xe(Z,ge,Le,ke,rt,st,et):tt(W,Z,et)},xe=(W,Z,ge,Le,ke,rt,st)=>{var Ke=W.component=cr(W,Le,ke);if(Ke.type.__hmrId&&Vo(Ke),At(W),ar(Ke,"mount"),fo(W)&&(Ke.ctx.renderer=Ui),ar(Ke,"init"),sl(Ke),Br(Ke,"init"),Ke.asyncDep){if(ke&&ke.registerDep(Ke,ft),!W.el){var et=Ke.subTree=Wn(yn);ve(null,et,Z,ge)}return}if(ft(Ke,W,Z,ge,ke,rt,st),Ke.$wxsModules){var ze=k.resolveOwnerEl(Ke);if(ze){ze.setAttribute(k.ATTR_V_OWNER_ID,Ke.uid);var{$renderjsModules:Tt}=Ke.type;Tt&&ze.setAttribute(k.ATTR_V_RENDERJS,Tt)}}an(),Br(Ke,"mount")},tt=(W,Z,ge)=>{var Le=Z.component=W.component;if(_n(W,Z,ge))if(Le.asyncDep&&!Le.asyncResolved){At(Z),Qe(Le,Z,ge),an();return}else Le.next=Z,bo(Le.update),Le.update();else Z.component=W.component,Z.el=W.el,Le.vnode=Z},ft=(W,Z,ge,Le,ke,rt,st)=>{var Ke=()=>{if(W.isMounted){var{next:Lr,bu:zs,u:ms,parent:vo,vnode:_s}=W,Ys=Lr,Xa;At(Lr||W.vnode),Ci(W,!1),Lr?(Lr.el=_s.el,Qe(W,Lr,st)):Lr=_s,zs&&u.invokeArrayFns(zs),(Xa=Lr.props&&Lr.props.onVnodeBeforeUpdate)&&Yr(Xa,vo,Lr,_s),Ci(W,!0),ar(W,"render");var bs=Ji(W);Br(W,"render");var Ba=W.subTree;W.subTree=bs,ar(W,"patch"),Ce(Ba,bs,te(Ba.el),Vn(Ba),W,ke,rt),Br(W,"patch"),Lr.el=bs.el,Ys===null&&ai(W,bs.el),ms&&fn(ms,ke),(Xa=Lr.props&&Lr.props.onVnodeUpdated)&&fn(()=>Yr(Xa,vo,Lr,_s),ke),qi(W),an()}else{var Tt,{el:Nt,props:Ft}=Z,{bm:On,m:tr,parent:Sr}=W,ni=bn(Z);if(Ci(W,!1),On&&u.invokeArrayFns(On),!ni&&(Tt=Ft&&Ft.onVnodeBeforeMount)&&Yr(Tt,Sr,Z),Ci(W,!0),Nt&&xa){var to=()=>{ar(W,"render"),W.subTree=Ji(W),Br(W,"render"),ar(W,"hydrate"),xa(Nt,W.subTree,W,ke,null),Br(W,"hydrate")};ni?Z.type.__asyncLoader().then(()=>!W.isUnmounted&&to()):to()}else{ar(W,"render");var vs=W.subTree=Ji(W);Br(W,"render"),ar(W,"patch"),Ce(null,vs,ge,Le,W,ke,rt),Br(W,"patch"),Z.el=vs.el}if(tr&&fn(tr,ke),!ni&&(Tt=Ft&&Ft.onVnodeMounted)){var Ws=Z;fn(()=>Yr(Tt,Sr,Ws),ke)}Z.shapeFlag&256&&W.a&&fn(W.a,ke),W.isMounted=!0,co(W),Z=ge=Le=null}},et=W.effect=new P.ReactiveEffect(Ke,()=>_i(W.update),W.scope),ze=W.update=et.run.bind(et);ze.id=W.uid,Ci(W,!0),et.onTrack=W.rtc?Tt=>u.invokeArrayFns(W.rtc,Tt):void 0,et.onTrigger=W.rtg?Tt=>u.invokeArrayFns(W.rtg,Tt):void 0,ze.ownerInstance=W,ze()},Qe=(W,Z,ge)=>{Z.component=W;var Le=W.vnode.props;W.vnode=Z,W.next=null,ko(W,Z.props,Le,ge),Mt(W,Z.children,ge),P.pauseTracking(),zi(void 0,W.update),P.resetTracking()},nt=function(W,Z,ge,Le,ke,rt,st,Ke){var et=arguments.length>8&&arguments[8]!==void 0?arguments[8]:!1,ze=W&&W.children,Tt=W?W.shapeFlag:0,Nt=Z.children,{patchFlag:Ft,shapeFlag:On}=Z;if(Ft>0){if(Ft&128){Bt(ze,Nt,ge,Le,ke,rt,st,Ke,et);return}else if(Ft&256){Ge(ze,Nt,ge,Le,ke,rt,st,Ke,et);return}}On&8?(Tt&16&&wn(ze,ke,rt),Nt!==ze&&ie(ge,Nt)):Tt&16?On&16?Bt(ze,Nt,ge,Le,ke,rt,st,Ke,et):wn(ze,ke,rt,!0):(Tt&8&&ie(ge,""),On&16&&xt(Nt,ge,Le,ke,rt,st,Ke,et))},Ge=(W,Z,ge,Le,ke,rt,st,Ke,et)=>{W=W||u.EMPTY_ARR,Z=Z||u.EMPTY_ARR;var ze=W.length,Tt=Z.length,Nt=Math.min(ze,Tt),Ft;for(Ft=0;Ft<Nt;Ft++){var On=Z[Ft]=et?Mo(Z[Ft]):wr(Z[Ft]);Ce(W[Ft],On,ge,null,ke,rt,st,Ke,et)}ze>Tt?wn(W,ke,rt,!0,!1,Nt):xt(Z,ge,Le,ke,rt,st,Ke,et,Nt)},Bt=(W,Z,ge,Le,ke,rt,st,Ke,et)=>{for(var ze=0,Tt=Z.length,Nt=W.length-1,Ft=Tt-1;ze<=Nt&&ze<=Ft;){var On=W[ze],tr=Z[ze]=et?Mo(Z[ze]):wr(Z[ze]);if(hi(On,tr))Ce(On,tr,ge,null,ke,rt,st,Ke,et);else break;ze++}for(;ze<=Nt&&ze<=Ft;){var Sr=W[Nt],ni=Z[Ft]=et?Mo(Z[Ft]):wr(Z[Ft]);if(hi(Sr,ni))Ce(Sr,ni,ge,null,ke,rt,st,Ke,et);else break;Nt--,Ft--}if(ze>Nt){if(ze<=Ft)for(var to=Ft+1,vs=to<Tt?Z[to].el:Le;ze<=Ft;)Ce(null,Z[ze]=et?Mo(Z[ze]):wr(Z[ze]),ge,vs,ke,rt,st,Ke,et),ze++}else if(ze>Ft)for(;ze<=Nt;)It(W[ze],ke,rt,!0),ze++;else{var Ws=ze,Lr=ze,zs=new Map;for(ze=Lr;ze<=Ft;ze++){var ms=Z[ze]=et?Mo(Z[ze]):wr(Z[ze]);ms.key!=null&&(zs.has(ms.key)&&A("Duplicate keys found during update:",JSON.stringify(ms.key),"Make sure keys are unique."),zs.set(ms.key,ze))}var vo,_s=0,Ys=Ft-Lr+1,Xa=!1,bs=0,Ba=new Array(Ys);for(ze=0;ze<Ys;ze++)Ba[ze]=0;for(ze=Ws;ze<=Nt;ze++){var Qa=W[ze];if(_s>=Ys){It(Qa,ke,rt,!0);continue}var no=void 0;if(Qa.key!=null)no=zs.get(Qa.key);else for(vo=Lr;vo<=Ft;vo++)if(Ba[vo-Lr]===0&&hi(Qa,Z[vo])){no=vo;break}no===void 0?It(Qa,ke,rt,!0):(Ba[no-Lr]=ze+1,no>=bs?bs=no:Xa=!0,Ce(Qa,Z[no],ge,null,ke,rt,st,Ke,et),_s++)}var pc=Xa?$a(Ba):u.EMPTY_ARR;for(vo=pc.length-1,ze=Ys-1;ze>=0;ze--){var gc=Lr+ze,vc=Z[gc],Jc=gc+1<Tt?Z[gc+1].el:Le;Ba[ze]===0?Ce(null,vc,ge,Jc,ke,rt,st,Ke,et):Xa&&(vo<0||ze!==pc[vo]?vt(vc,ge,Jc,2):vo--)}}},vt=function(W,Z,ge,Le){var ke=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,{el:rt,type:st,transition:Ke,children:et,shapeFlag:ze}=W;if(ze&6){vt(W.component.subTree,Z,ge,Le);return}if(ze&128){W.suspense.move(Z,ge,Le);return}if(ze&64){st.move(W,Z,ge,Ui);return}if(st===Rn){p(rt,Z,ge);for(var Tt=0;Tt<et.length;Tt++)vt(et[Tt],Z,ge,Le);p(W.anchor,Z,ge);return}if(st===Li){it(W,Z,ge);return}var Nt=Le!==2&&ze&1&&Ke;if(Nt)if(Le===0)Ke.beforeEnter(rt),p(rt,Z,ge),fn(()=>Ke.enter(rt),ke);else{var{leave:Ft,delayLeave:On,afterLeave:tr}=Ke,Sr=()=>p(rt,Z,ge),ni=()=>{Ft(rt,()=>{Sr(),tr&&tr()})};On?On(rt,Sr,ni):ni()}else p(rt,Z,ge)},It=function(W,Z,ge){var Le=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,ke=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,{type:rt,props:st,ref:Ke,children:et,dynamicChildren:ze,shapeFlag:Tt,patchFlag:Nt,dirs:Ft}=W;if(Ke!=null&&sn(Ke,null,ge,W,!0),Tt&256){Z.ctx.deactivate(W);return}var On=Tt&1&&Ft,tr=!bn(W),Sr;if(tr&&(Sr=st&&st.onVnodeBeforeUnmount)&&Yr(Sr,Z,W),Tt&6)Xt(W.component,ge,Le);else{if(Tt&128){W.suspense.unmount(ge,Le);return}On&&ut(W,null,Z,"beforeUnmount"),Tt&64?W.type.remove(W,Z,ge,ke,Ui,Le):ze&&(rt!==Rn||Nt>0&&Nt&64)?wn(ze,Z,ge,!1,!0):(rt===Rn&&Nt&(128|256)||!ke&&Tt&16)&&wn(et,Z,ge),Le&&on(W)}(tr&&(Sr=st&&st.onVnodeUnmounted)||On)&&fn(()=>{Sr&&Yr(Sr,Z,W),On&&ut(W,null,Z,"unmounted")},ge)},on=W=>{var{type:Z,el:ge,anchor:Le,transition:ke}=W;if(Z===Rn){W.patchFlag>0&&W.patchFlag&2048&&ke&&!ke.persisted?W.children.forEach(ze=>{ze.type===yn?E(ze.el):on(ze)}):Yt(ge,Le);return}if(Z===Li){je(W);return}var rt=()=>{E(ge),ke&&!ke.persisted&&ke.afterLeave&&ke.afterLeave()};if(W.shapeFlag&1&&ke&&!ke.persisted){var{leave:st,delayLeave:Ke}=ke,et=()=>st(ge,rt);Ke?Ke(W.el,rt,et):et()}else rt()},Yt=(W,Z)=>{for(var ge;W!==Z;)ge=Oe(W),E(W),W=ge;E(Z)},Xt=(W,Z,ge)=>{W.type.__hmrId&&vr(W);var{bum:Le,scope:ke,update:rt,subTree:st,um:Ke}=W;Le&&u.invokeArrayFns(Le),ke.stop(),rt&&(rt.active=!1,It(st,W,Z,ge)),Ke&&fn(Ke,Z),fn(()=>{W.isUnmounted=!0},Z),Z&&Z.pendingBranch&&!Z.isUnmounted&&W.asyncDep&&!W.asyncResolved&&W.suspenseId===Z.pendingId&&(Z.deps--,Z.deps===0&&Z.resolve()),wo(W)},wn=function(W,Z,ge){for(var Le=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,ke=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,rt=arguments.length>5&&arguments[5]!==void 0?arguments[5]:0,st=rt;st<W.length;st++)It(W[st],Z,ge,Le,ke)},Vn=W=>W.shapeFlag&6?Vn(W.component.subTree):W.shapeFlag&128?W.suspense.next():Oe(W.anchor||W.el),eo=(W,Z,ge)=>{W==null?Z._vnode&&It(Z._vnode,null,null,!0):Ce(Z._vnode||null,W,Z,null,null,null,ge),ur(),Z._vnode=W},Ui={p:Ce,um:It,m:vt,r:on,mt:xe,mc:xt,pc:nt,pbc:R,n:Vn,o:i},dr,xa;return a&&([dr,xa]=a(Ui)),{render:eo,hydrate:dr,createApp:Fn(eo,dr)}}function Ci(i,a){var{effect:f,update:p}=i;f.allowRecurse=p.allowRecurse=a}function xo(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,p=i.children,E=a.children;if(u.isArray(p)&&u.isArray(E))for(var w=0;w<p.length;w++){var N=p[w],V=E[w];V.shapeFlag&1&&!V.dynamicChildren&&((V.patchFlag<=0||V.patchFlag===32)&&(V=E[w]=Mo(E[w]),V.el=N.el),f||xo(N,V)),V.type===yn&&!V.el&&(V.el=N.el)}}function $a(i){var a=i.slice(),f=[0],p,E,w,N,V,D=i.length;for(p=0;p<D;p++){var K=i[p];if(K!==0){if(E=f[f.length-1],i[E]<K){a[p]=E,f.push(p);continue}for(w=0,N=f.length-1;w<N;)V=w+N>>1,i[f[V]]<K?w=V+1:N=V;K<i[f[w]]&&(w>0&&(a[p]=f[w-1]),f[w]=p)}}for(w=f.length,N=f[w-1];w-- >0;)f[w]=N,N=a[N];return f}var Wr=i=>i.__isTeleport,fi=i=>i&&(i.disabled||i.disabled===""),ra=i=>typeof SVGElement!="undefined"&&i instanceof SVGElement,cs=(i,a)=>{var f=i&&i.to;if(u.isString(f))if(a){var p=a(f);return p||A('Failed to locate Teleport target with selector "'.concat(f,'". ')+"Note the target element must exist before the component is mounted - i.e. the target cannot be rendered by the component itself, and ideally should be outside of the entire Vue component tree."),p}else return A("Current renderer does not support string target for Teleports. (missing querySelector renderer option)"),null;else return!f&&!fi(i)&&A("Invalid Teleport target: ".concat(f)),f},us={__isTeleport:!0,process(i,a,f,p,E,w,N,V,D,K){var{mc:ae,pc:ie,pbc:te,o:{insert:Oe,querySelector:He,createText:at,createComment:me}}=K,Ce=fi(a.props),{shapeFlag:_e,children:ve,dynamicChildren:Je}=a;if(Pr&&(D=!1,Je=null),i==null){var Te=a.el=me("teleport start",f),it=a.anchor=me("teleport end",f);Oe(Te,f,p),Oe(it,f,p);var je=a.target=cs(a.props,He),pt=a.targetAnchor=at("",f);je?(Oe(pt,je),N=N||ra(je)):Ce||A("Invalid Teleport target on mount:",je,"(".concat(typeof je,")"));var kt=(xe,tt)=>{_e&16&&ae(ve,xe,tt,E,w,N,V,D)};Ce?kt(f,it):je&&kt(je,pt)}else{a.el=i.el;var Rt=a.anchor=i.anchor,xt=a.target=i.target,Pt=a.targetAnchor=i.targetAnchor,R=fi(i.props),q=R?f:xt,le=R?Rt:Pt;if(N=N||ra(xt),Je?(te(i.dynamicChildren,Je,q,E,w,N,V),xo(i,a,!0)):D||ie(i,a,q,le,E,w,N,V,!1),Ce)R||qo(a,f,Rt,K,1);else if((a.props&&a.props.to)!==(i.props&&i.props.to)){var we=a.target=cs(a.props,He);we?qo(a,we,null,K,0):A("Invalid Teleport target on update:",xt,"(".concat(typeof xt,")"))}else R&&qo(a,xt,Pt,K,1)}},remove(i,a,f,p,E,w){var{um:N,o:{remove:V}}=E,{shapeFlag:D,children:K,anchor:ae,targetAnchor:ie,target:te,props:Oe}=i;if(te&&V(ie),(w||!fi(Oe))&&(V(ae),D&16))for(var He=0;He<K.length;He++){var at=K[He];N(at,a,f,!0,!!at.dynamicChildren)}},move:qo,hydrate:wl};function qo(i,a,f,p){var{o:{insert:E},m:w}=p,N=arguments.length>4&&arguments[4]!==void 0?arguments[4]:2;N===0&&E(i.targetAnchor,a,f);var{el:V,anchor:D,shapeFlag:K,children:ae,props:ie}=i,te=N===2;if(te&&E(V,a,f),(!te||fi(ie))&&K&16)for(var Oe=0;Oe<ae.length;Oe++)w(ae[Oe],a,f,2);te&&E(D,a,f)}function wl(i,a,f,p,E,w,N,V){var{o:{nextSibling:D,parentNode:K,querySelector:ae}}=N,ie=a.target=cs(a.props,ae);if(ie){var te=ie._lpa||ie.firstChild;a.shapeFlag&16&&(fi(a.props)?(a.anchor=V(D(i),a,K(i),f,p,E,w),a.targetAnchor=te):(a.anchor=D(i),a.targetAnchor=V(te,a,ie,f,p,E,w)),ie._lpa=a.targetAnchor&&D(a.targetAnchor))}return a.anchor&&D(a.anchor)}var Ua=us,di="components",tl="directives";function Bo(i,a){return Ia(di,i,!0,a)||i}var fs=Symbol();function Ha(i){return u.isString(i)?Ia(di,i,!1)||i:i||fs}function ds(i){return Ia(tl,i)}function Ia(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0,p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,E=gn||Mn;if(E){var w=E.type;if(i===di){var N=Ra(w);if(N&&(N===a||N===u.camelize(a)||N===u.capitalize(u.camelize(a))))return w}var V=sr(E[i]||w[i],a)||sr(E.appContext[i],a);if(!V&&p)return w;if(f&&!V){var D=i===di?`
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement.`:"";A("Failed to resolve ".concat(i.slice(0,-1),": ").concat(a).concat(D))}return V}else A("resolve".concat(u.capitalize(i.slice(0,-1))," ")+"can only be used in render() or setup().")}function sr(i,a){return i&&(i[a]||i[u.camelize(a)]||i[u.capitalize(u.camelize(a))])}var Rn=Symbol("Fragment"),Nn=Symbol("Text"),yn=Symbol("Comment"),Li=Symbol("Static"),Ct=[],Fi=null;function Fe(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1;Ct.push(Fi=i?null:[])}function wt(){Ct.pop(),Fi=Ct[Ct.length-1]||null}var Ot=1;function dn(i){Ot+=i}function Er(i){return i.dynamicChildren=Ot>0?Fi||u.EMPTY_ARR:null,wt(),Ot>0&&Fi&&Fi.push(i),i}function ti(i,a,f,p,E,w){return Er(An(i,a,f,p,E,w,!0))}function zr(i,a,f,p,E){return Er(Wn(i,a,f,p,E,!0))}function er(i){return i?i.__v_isVNode===!0:!1}function hi(i,a){return a.shapeFlag&6&&ir.has(a.type)?!1:i.type===a.type&&i.key===a.key}var ja;function Wa(i){ja=i}var Na=function(){for(var i=arguments.length,a=new Array(i),f=0;f<i;f++)a[f]=arguments[f];return Zl(...ja?ja(a,gn):a)},Ko="__vInternal",za=i=>{var{key:a}=i;return a!=null?a:null},Ya=i=>{var{ref:a,ref_key:f,ref_for:p}=i;return a!=null?u.isString(a)||P.isRef(a)||u.isFunction(a)?{i:gn,r:a,k:f,f:!!p}:a:null};function An(i){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,E=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,w=arguments.length>5&&arguments[5]!==void 0?arguments[5]:i===Rn?0:1,N=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,V=arguments.length>7&&arguments[7]!==void 0?arguments[7]:!1,D={__v_isVNode:!0,__v_skip:!0,type:i,props:a,key:a&&za(a),ref:a&&Ya(a),scopeId:xn,slotScopeIds:null,children:f,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:w,patchFlag:p,dynamicProps:E,dynamicChildren:null,appContext:null};return V?(rl(D,f),w&128&&i.normalize(D)):f&&(D.shapeFlag|=u.isString(f)?8:16),D.key!==D.key&&A("VNode created with invalid key (NaN). VNode type:",D.type),Ot>0&&!N&&Fi&&(D.patchFlag>0||w&6)&&D.patchFlag!==32&&Fi.push(D),D}var Wn=Na;function Zl(i){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,E=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,w=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1;if((!i||i===fs)&&(i||A("Invalid vnode type when creating vnode: ".concat(i,".")),i=yn),er(i)){var N=Zi(i,a,!0);return f&&rl(N,f),N}if(Pl(i)&&(i=i.__vccOpts),a){a=Vi(a);var{class:V,style:D}=a;V&&!u.isString(V)&&(a.class=u.normalizeClass(V)),u.isObject(D)&&(P.isProxy(D)&&!u.isArray(D)&&(D=u.extend({},D)),a.style=u.normalizeStyle(D))}var K=u.isString(i)?1:wi(i)?128:Wr(i)?64:u.isObject(i)?4:u.isFunction(i)?2:0;return K&4&&P.isProxy(i)&&(i=P.toRaw(i),A("Vue received a Component which was made a reactive object. This can lead to unnecessary performance overhead, and should be avoided by marking the component with `markRaw` or using `shallowRef` instead of `ref`.",`
Component that was made reactive: `,i)),An(i,a,f,p,E,K,w,!0)}function Vi(i){return i?P.isProxy(i)||Ko in i?u.extend({},i):i:null}function Zi(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,{props:p,ref:E,patchFlag:w,children:N}=i,V=a?lr(p||{},a):p,D={__v_isVNode:!0,__v_skip:!0,type:i.type,props:V,key:V&&za(V),ref:a&&a.ref?f&&E?u.isArray(E)?E.concat(Ya(a)):[E,Ya(a)]:Ya(a):E,scopeId:i.scopeId,slotScopeIds:i.slotScopeIds,children:w===-1&&u.isArray(N)?N.map(Is):N,target:i.target,targetAnchor:i.targetAnchor,staticCount:i.staticCount,shapeFlag:i.shapeFlag,patchFlag:a&&i.type!==Rn?w===-1?16:w|16:w,dynamicProps:i.dynamicProps,dynamicChildren:i.dynamicChildren,appContext:i.appContext,dirs:i.dirs,transition:i.transition,component:i.component,suspense:i.suspense,ssContent:i.ssContent&&Zi(i.ssContent),ssFallback:i.ssFallback&&Zi(i.ssFallback),el:i.el,anchor:i.anchor};return D}function Is(i){var a=Zi(i);return u.isArray(i.children)&&(a.children=i.children.map(Is)),a}function nl(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:" ",a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;return Wn(Nn,null,i,a)}function Sl(i,a){var f=Wn(Li,null,i);return f.staticCount=a,f}function pi(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"",a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;return a?(Fe(),zr(yn,null,i)):Wn(yn,null,i)}function wr(i){return i==null||typeof i=="boolean"?Wn(yn):u.isArray(i)?Wn(Rn,null,i.slice()):typeof i=="object"?Mo(i):Wn(Nn,null,String(i))}function Mo(i){return i.el===null||i.memo?i:Zi(i)}function rl(i,a){var f=0,{shapeFlag:p}=i;if(a==null)a=null;else if(u.isArray(a))f=16;else if(typeof a=="object")if(p&(1|64)){var E=a.default;E&&(E._c&&(E._d=!1),rl(i,E()),E._c&&(E._d=!0));return}else{f=32;var w=a._;!w&&!(Ko in a)?a._ctx=gn:w===3&&gn&&(gn.slots._===1?a._=1:(a._=2,i.patchFlag|=1024))}else u.isFunction(a)?(a={default:a,_ctx:gn},f=32):(a=String(a),p&64?(f=16,a=[nl(a)]):f=8);i.children=a,i.shapeFlag|=f}function lr(){for(var i={},a=0;a<arguments.length;a++){var f=a<0||arguments.length<=a?void 0:arguments[a];for(var p in f)if(p==="class")i.class!==f.class&&(i.class=u.normalizeClass([i.class,f.class]));else if(p==="style")i.style=u.normalizeStyle([i.style,f.style]);else if(u.isOn(p)){var E=i[p],w=f[p];w&&E!==w&&!(u.isArray(E)&&E.includes(w))&&(i[p]=E?[].concat(E,w):w)}else p!==""&&(i[p]=f[p])}return i}function Yr(i,a,f){var p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;$t(i,a,7,[f,p])}function Ns(i,a,f,p){var E,w=f&&f[p];if(u.isArray(i)||u.isString(i)){E=new Array(i.length);for(var N=0,V=i.length;N<V;N++)E[N]=a(i[N],N,void 0,w&&w[N])}else if(typeof i=="number"){if(!Number.isInteger(i))return A("The v-for range expect an integer value but got ".concat(i,".")),[];E=new Array(i);for(var D=0;D<i;D++)E[D]=a(D+1,D,void 0,w&&w[D])}else if(u.isObject(i))if(i[Symbol.iterator])E=Array.from(i,(Oe,He)=>a(Oe,He,void 0,w&&w[He]));else{var K=Object.keys(i);E=new Array(K.length);for(var ae=0,ie=K.length;ae<ie;ae++){var te=K[ae];E[ae]=a(i[te],te,ae,w&&w[ae])}}else E=[];return f&&(f[p]=E),E}function ks(i,a){for(var f=0;f<a.length;f++){var p=a[f];if(u.isArray(p))for(var E=0;E<p.length;E++)i[p[E].name]=p[E].fn;else p&&(i[p.name]=p.fn)}return i}function il(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},p=arguments.length>3?arguments[3]:void 0,E=arguments.length>4?arguments[4]:void 0;if(gn.isCE||gn.parent&&bn(gn.parent)&&gn.parent.isCE)return Wn("slot",a==="default"?null:{name:a},p&&p());var w=i[a];w&&w.length>1&&(A("SSR-optimized slot function detected in a non-SSR-optimized render function. You need to mark this component with $dynamic-slots in the parent template."),w=()=>[]),w&&w._c&&(w._d=!1),Fe();var N=w&&Rs(w(f)),V=zr(Rn,{key:f.key||"_".concat(a)},N||(p?p():[]),N&&i._===1?64:-2);return!E&&V.scopeId&&(V.slotScopeIds=[V.scopeId+"-s"]),w&&w._c&&(w._d=!0),V}function Rs(i){return i.some(a=>er(a)?!(a.type===yn||a.type===Rn&&!Rs(a.children)):!0)?i:null}function xs(i){var a={};if(!u.isObject(i))return A("v-on with no argument expects an object value."),a;for(var f in i)a[u.toHandlerKey(f)]=i[f];return a}var ia=i=>i?Al(i)?Ds(i)||i.proxy:ia(i.parent):null,Do=u.extend(Object.create(null),{$:i=>i,$el:i=>i.vnode.el,$data:i=>i.data,$props:i=>P.shallowReadonly(i.props),$attrs:i=>P.shallowReadonly(i.attrs),$slots:i=>P.shallowReadonly(i.slots),$refs:i=>P.shallowReadonly(i.refs),$parent:i=>ia(i.parent),$root:i=>ia(i.root),$emit:i=>i.emit,$options:i=>Io(i),$forceUpdate:i=>()=>_i(i.update),$nextTick:i=>ri.bind(i.proxy),$watch:i=>zo.bind(i)}),hs={get(i,a){var{_:f}=i,{ctx:p,setupState:E,data:w,props:N,accessCache:V,type:D,appContext:K}=f;if(a==="__isVue")return!0;if(E!==u.EMPTY_OBJ&&E.__isScriptSetup&&u.hasOwn(E,a))return E[a];var ae;if(a[0]!=="$"){var ie=V[a];if(ie!==void 0)switch(ie){case 1:return E[a];case 2:return w[a];case 4:return p[a];case 3:return N[a]}else{if(E!==u.EMPTY_OBJ&&u.hasOwn(E,a))return V[a]=1,E[a];if(w!==u.EMPTY_OBJ&&u.hasOwn(w,a))return V[a]=2,w[a];if((ae=f.propsOptions[0])&&u.hasOwn(ae,a))return V[a]=3,N[a];if(p!==u.EMPTY_OBJ&&u.hasOwn(p,a))return V[a]=4,p[a];Cs&&(V[a]=0)}}var te=Do[a],Oe,He;if(te)return a==="$attrs"&&(P.track(f,"get",a),Ei()),te(f);if((Oe=D.__cssModules)&&(Oe=Oe[a]))return Oe;if(p!==u.EMPTY_OBJ&&u.hasOwn(p,a))return V[a]=4,p[a];if(He=K.config.globalProperties,u.hasOwn(He,a))return He[a];gn&&(!u.isString(a)||a.indexOf("__v")!==0)&&(w!==u.EMPTY_OBJ&&(a[0]==="$"||a[0]==="_")&&u.hasOwn(w,a)?A("Property ".concat(JSON.stringify(a)," must be accessed via $data because it starts with a reserved ")+'character ("$" or "_") and is not proxied on the render context.'):f===gn&&A("Property ".concat(JSON.stringify(a)," was accessed during render ")+"but is not defined on instance."))},set(i,a,f){var{_:p}=i,{data:E,setupState:w,ctx:N}=p;return w!==u.EMPTY_OBJ&&u.hasOwn(w,a)?(w[a]=f,!0):E!==u.EMPTY_OBJ&&u.hasOwn(E,a)?(E[a]=f,!0):u.hasOwn(p.props,a)?(A('Attempting to mutate prop "'.concat(a,'". Props are readonly.'),p),!1):a[0]==="$"&&a.slice(1)in p?(A('Attempting to mutate public property "'.concat(a,'". ')+"Properties starting with $ are reserved and readonly.",p),!1):(a in p.appContext.config.globalProperties?Object.defineProperty(N,a,{enumerable:!0,configurable:!0,value:f}):N[a]=f,!0)},has(i,a){var{_:{data:f,setupState:p,accessCache:E,ctx:w,appContext:N,propsOptions:V}}=i,D;return!!E[a]||f!==u.EMPTY_OBJ&&u.hasOwn(f,a)||p!==u.EMPTY_OBJ&&u.hasOwn(p,a)||(D=V[0])&&u.hasOwn(D,a)||u.hasOwn(w,a)||u.hasOwn(Do,a)||u.hasOwn(N.config.globalProperties,a)},defineProperty(i,a,f){return f.get!=null?i._.accessCache[a]=0:u.hasOwn(f,"value")&&this.set(i,a,f.value,null),Reflect.defineProperty(i,a,f)}};hs.ownKeys=i=>(A("Avoid app logic that relies on enumerating keys on a component instance. The keys will be empty in production mode to avoid performance overhead."),Reflect.ownKeys(i));var Cl=u.extend({},hs,{get(i,a){if(a!==Symbol.unscopables)return hs.get(i,a,i)},has(i,a){var f=a[0]!=="_"&&!u.isGloballyWhitelisted(a);return!f&&hs.has(i,a)&&A("Property ".concat(JSON.stringify(a)," should not start with _ which is a reserved prefix for Vue internals.")),f}});function Xl(i){var a={};return Object.defineProperty(a,"_",{configurable:!0,enumerable:!1,get:()=>i}),Object.keys(Do).forEach(f=>{Object.defineProperty(a,f,{configurable:!0,enumerable:!1,get:()=>Do[f](i),set:u.NOOP})}),a}function Bs(i){var{ctx:a,propsOptions:[f]}=i;f&&Object.keys(f).forEach(p=>{Object.defineProperty(a,p,{enumerable:!0,configurable:!0,get:()=>i.props[p],set:u.NOOP})})}function $i(i){var{ctx:a,setupState:f}=i;Object.keys(P.toRaw(f)).forEach(p=>{if(!f.__isScriptSetup){if(p[0]==="$"||p[0]==="_"){A("setup() return property ".concat(JSON.stringify(p),' should not start with "$" or "_" ')+"which are reserved prefixes for Vue internals.");return}Object.defineProperty(a,p,{enumerable:!0,configurable:!0,get:()=>f[p],set:u.NOOP})}})}var Jo=jt(),Ql=0;function cr(i,a,f){var p=i.type,E=(a?a.appContext:i.appContext)||Jo,w={uid:Ql++,vnode:i,type:p,parent:a,appContext:E,root:null,next:null,subTree:null,effect:null,update:null,scope:new P.EffectScope(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:a?a.provides:Object.create(E.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:ls(p,E),emitsOptions:Ki(p,E),emit:null,emitted:null,propsDefaults:u.EMPTY_OBJ,inheritAttrs:p.inheritAttrs,ctx:u.EMPTY_OBJ,data:u.EMPTY_OBJ,props:u.EMPTY_OBJ,attrs:u.EMPTY_OBJ,slots:u.EMPTY_OBJ,refs:u.EMPTY_OBJ,setupState:u.EMPTY_OBJ,setupContext:null,suspense:f,suspenseId:f?f.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return w.ctx=Xl(w),w.root=a?a.root:w,w.emit=ta.bind(null,w),i.ce&&i.ce(w),w}var Mn=null,gi=()=>Mn||gn,Ai=i=>{Mn=i,i.scope.on()},oa=()=>{Mn&&Mn.scope.off(),Mn=null},ol=u.makeMap("slot,component");function al(i,a){var f=a.isNativeTag||u.NO;(ol(i)||f(i))&&A("Do not use built-in or reserved HTML elements as component id: "+i)}function Al(i){return i.vnode.shapeFlag&4}S.isInSSRComponentSetup=!1;function sl(i){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;S.isInSSRComponentSetup=a;var{props:f,children:p}=i.vnode,E=Al(i);Ts(i,f,E,a),ht(i,p);var w=E?ll(i,a):void 0;return S.isInSSRComponentSetup=!1,w}function ll(i,a){var f,p=i.type;{if(p.name&&al(p.name,i.appContext.config),p.components)for(var E=Object.keys(p.components),w=0;w<E.length;w++)al(E[w],i.appContext.config);if(p.directives)for(var N=Object.keys(p.directives),V=0;V<N.length;V++)Cn(N[V]);p.compilerOptions&&Ol()&&A('"compilerOptions" is only supported when using a build of Vue that includes the runtime compiler. Since you are using a runtime-only build, the options should be passed via your build tool config instead.')}i.accessCache=Object.create(null),i.proxy=P.markRaw(new Proxy(i.ctx,hs)),Bs(i);var{setup:D}=p;if(D){var K=i.setupContext=D.length>1?Ms(i):null;Ai(i),P.pauseTracking();var ae=Gt(D,i,0,[P.shallowReadonly(i.props),K]);if(P.resetTracking(),oa(),u.isPromise(ae)){if(ae.then(oa,oa),a)return ae.then(te=>{aa(i,te,a)}).catch(te=>{en(te,i,0)});if(i.asyncDep=ae,!i.suspense){var ie=(f=p.name)!==null&&f!==void 0?f:"Anonymous";A("Component <".concat(ie,">: setup function returned a promise, but no ")+"<Suspense> boundary was found in the parent component tree. A component with async setup() must be nested in a <Suspense> in order to be rendered.")}}else aa(i,ae,a)}else tc(i,a)}function aa(i,a,f){u.isFunction(a)?i.type.__ssrInlineRender?i.ssrRender=a:i.render=a:u.isObject(a)?(er(a)&&A("setup() should not return VNodes directly - return a render function instead."),i.devtoolsRawSetupState=a,i.setupState=P.proxyRefs(a),$i(i)):a!==void 0&&A("setup() should return an object. Received: ".concat(a===null?"null":typeof a)),tc(i,f)}var ka,cl;function ec(i){ka=i,cl=a=>{a.render._rc&&(a.withProxy=new Proxy(a.ctx,Cl))}}var Ol=()=>!ka;function tc(i,a,f){var p=i.type;if(!i.render){if(!a&&ka&&!p.render){var E=p.template;if(E){ar(i,"compile");var{isCustomElement:w,compilerOptions:N}=i.appContext.config,{delimiters:V,compilerOptions:D}=p,K=u.extend(u.extend({isCustomElement:w,delimiters:V},N),D);p.render=ka(E,K),Br(i,"compile")}}i.render=p.render||u.NOOP,cl&&cl(i)}Ai(i),P.pauseTracking(),El(i),P.resetTracking(),oa(),!p.render&&i.render===u.NOOP&&!a&&(!ka&&p.template?A('Component provided template option but runtime compilation is not supported in this build of Vue. Configure your bundler to alias "vue" to "vue/dist/vue.esm-bundler.js".'):A("Component is missing template or render function."))}function Tl(i){return new Proxy(i.attrs,{get(a,f){return Ei(),P.track(i,"get","$attrs"),a[f]},set(){return A("setupContext.attrs is readonly."),!1},deleteProperty(){return A("setupContext.attrs is readonly."),!1}})}function Ms(i){var a=p=>{i.exposed&&A("expose() should be called only once per setup()."),i.exposed=p||{}},f;return Object.freeze({get attrs(){return f||(f=Tl(i))},get slots(){return P.shallowReadonly(i.slots)},get emit(){return function(p){for(var E=arguments.length,w=new Array(E>1?E-1:0),N=1;N<E;N++)w[N-1]=arguments[N];return i.emit(p,...w)}},expose:a})}function Ds(i){if(i.exposed)return i.exposeProxy||(i.exposeProxy=new Proxy(P.proxyRefs(P.markRaw(i.exposed)),{get(a,f){if(f in a)return a[f];if(f in Do)return Do[f](i)}}))}var Mc=/(?:^|[-_])(\w)/g,Ls=i=>i.replace(Mc,a=>a.toUpperCase()).replace(/[-_]/g,"");function Ra(i){return u.isFunction(i)&&i.displayName||i.name}function Fs(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,p=Ra(a);if(!p&&a.__file){var E=a.__file.match(/([^/\\]+)\.\w+$/);E&&(p=E[1])}if(!p&&i&&i.parent){var w=N=>{for(var V in N)if(N[V]===a)return V};p=w(i.components||i.parent.type.components)||w(i.appContext.components)}return p?Ls(p):f?"App":"Anonymous"}function Pl(i){return u.isFunction(i)&&"__vccOpts"in i}var Vs=(i,a)=>P.computed(i,a,S.isInSSRComponentSetup),ul=i=>A("".concat(i,"() is a compiler-hint helper that is only usable inside ")+"<script setup> of a single file component. Its arguments should be compiled away and passing it at runtime has no effect.");function Dc(){return ul("defineProps"),null}function Lc(){return ul("defineEmits"),null}function Fc(i){ul("defineExpose")}function Vc(i,a){return ul("withDefaults"),null}function $c(){return rc().slots}function nc(){return rc().attrs}function rc(){var i=gi();return i||A("useContext() called without active instance."),i.setupContext||(i.setupContext=Ms(i))}function Uc(i,a){var f=u.isArray(i)?i.reduce((w,N)=>(w[N]={},w),{}):i;for(var p in a){var E=f[p];E?u.isArray(E)||u.isFunction(E)?f[p]={type:E,default:a[p]}:E.default=a[p]:E===null?f[p]={default:a[p]}:A('props default key "'.concat(p,'" has no corresponding declaration.'))}return f}function Hc(i,a){var f={},p=function(w){a.includes(w)||Object.defineProperty(f,w,{enumerable:!0,get:()=>i[w]})};for(var E in i)p(E);return f}function go(i){var a=gi();a||A("withAsyncContext called without active current instance. This is likely a bug.");var f=i();return oa(),u.isPromise(f)&&(f=f.catch(p=>{throw Ai(a),p})),[f,()=>Ai(a)]}function Ga(i,a,f){var p=arguments.length;return p===2?u.isObject(a)&&!u.isArray(a)?er(a)?Wn(i,null,[a]):Wn(i,a):Wn(i,null,a):(p>3?f=Array.prototype.slice.call(arguments,2):p===3&&er(f)&&(f=[f]),Wn(i,a,f))}var Mr=Symbol("ssrContext"),sa=()=>{{var i=fr(Mr);return i||A("Server rendering context not provided. Make sure to only call useSSRContext() conditionally in the server build."),i}};function la(i){return!!(i&&i.__v_isShallow)}function jc(){if(typeof window=="undefined")return;var i={style:"color:#3ba776"},a={style:"color:#0b1bc9"},f={style:"color:#b62e24"},p={style:"color:#9d288c"},E={header(ie){return u.isObject(ie)?ie.__isVue?["div",i,"VueInstance"]:P.isRef(ie)?["div",{},["span",i,ae(ie)],"<",V(ie.value),">"]:P.isReactive(ie)?["div",{},["span",i,la(ie)?"ShallowReactive":"Reactive"],"<",V(ie),">".concat(P.isReadonly(ie)?" (readonly)":"")]:P.isReadonly(ie)?["div",{},["span",i,la(ie)?"ShallowReadonly":"Readonly"],"<",V(ie),">"]:null:null},hasBody(ie){return ie&&ie.__isVue},body(ie){if(ie&&ie.__isVue)return["div",{},...w(ie.$)]}};function w(ie){var te=[];ie.type.props&&ie.props&&te.push(N("props",P.toRaw(ie.props))),ie.setupState!==u.EMPTY_OBJ&&te.push(N("setup",ie.setupState)),ie.data!==u.EMPTY_OBJ&&te.push(N("data",P.toRaw(ie.data)));var Oe=D(ie,"computed");Oe&&te.push(N("computed",Oe));var He=D(ie,"inject");return He&&te.push(N("injected",He)),te.push(["div",{},["span",{style:p.style+";opacity:0.66"},"$ (internal): "],["object",{object:ie}]]),te}function N(ie,te){return te=u.extend({},te),Object.keys(te).length?["div",{style:"line-height:1.25em;margin-bottom:0.6em"},["div",{style:"color:#476582"},ie],["div",{style:"padding-left:1.25em"},...Object.keys(te).map(Oe=>["div",{},["span",p,Oe+": "],V(te[Oe],!1)])]]:["span",{}]}function V(ie){var te=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return typeof ie=="number"?["span",a,ie]:typeof ie=="string"?["span",f,JSON.stringify(ie)]:typeof ie=="boolean"?["span",p,ie]:u.isObject(ie)?["object",{object:te?P.toRaw(ie):ie}]:["span",f,String(ie)]}function D(ie,te){var Oe=ie.type;if(!u.isFunction(Oe)){var He={};for(var at in ie.ctx)K(Oe,at,te)&&(He[at]=ie.ctx[at]);return He}}function K(ie,te,Oe){var He=ie[Oe];if(u.isArray(He)&&He.includes(te)||u.isObject(He)&&te in He||ie.extends&&K(ie.extends,te,Oe)||ie.mixins&&ie.mixins.some(at=>K(at,te,Oe)))return!0}function ae(ie){return la(ie)?"ShallowRef":ie.effect?"ComputedRef":"Ref"}window.devtoolsFormatters?window.devtoolsFormatters.push(E):window.devtoolsFormatters=[E]}function ic(i,a,f,p){var E=f[p];if(E&&Lo(E,i))return E;var w=a();return w.memo=i.slice(),f[p]=w}function Lo(i,a){var f=i.memo;if(f.length!=a.length)return!1;for(var p=0;p<f.length;p++)if(f[p]!==a[p])return!1;return Ot>0&&Fi&&Fi.push(i),!0}var fl="3.2.33",Zo={createComponentInstance:cr,setupComponent:sl,renderComponentRoot:Ji,setCurrentRenderingInstance:oi,isVNode:er,normalizeVNode:wr},oc=Zo,vi=null,Il=null;function ps(i,a){return i==="input"?new k.UniInputElement(i,a):i==="textarea"?new k.UniTextAreaElement(i,a):new k.UniElement(i,a)}function ac(i,a){return new k.UniTextNode(i,a)}function dl(i,a){return new k.UniCommentNode(i,a)}var gs,sc={insert:(i,a,f)=>{a.insertBefore(i,f||null)},remove:i=>{var a=i.parentNode;a&&a.removeChild(i)},createElement:(i,a)=>ps(i,a),createText:(i,a)=>ac(i,a),createComment:(i,a)=>dl(i,a),setText:(i,a)=>{i.nodeValue=a},setElementText:(i,a)=>{i.textContent=a},parentNode:i=>i.parentNode,nextSibling:i=>i.nextSibling,setScopeId(i,a){i.setAttribute(a,"")},cloneNode(i){var a=i.cloneNode(!0);return"_value"in i&&(a._value=i._value),a},insertStaticContent(i,a,f){var p=gs||(gs=ps("div"));p.innerHTML=i;for(var E=p.firstChild,w=E,N=w;w;)N=w,sc.insert(w,a,f),w=p.firstChild;return[E,N]}};function Wc(i,a){a==null&&(a=""),i.setAttribute("class",a)}function zc(i,a,f){if(!f)i.removeAttribute("style");else if(u.isString(f))a!==f&&i.setAttribute("style",f);else{var p={},E=a&&!u.isString(a);if(E){for(var w in a)f[w]==null&&(p[w]="");for(var N in f){var V=f[N];V!==a[N]&&(p[N]=V)}}else for(var D in f)p[D]=f[D];Object.keys(p).length&&i.setAttribute("style",p)}}function lc(i,a,f){f==null?i.removeAttribute(a):i.setAttribute(a,f)}function $s(i,a,f,p){i.addEventListener(a,f,p)}function cc(i,a,f,p){i.removeEventListener(a,f,p)}function uc(i,a,f,p){var E=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,w=i._vei||(i._vei={}),N=w[a];if(p&&N)N.value=p;else{var[V,D]=Nl(a);if(p){var K=w[a]=dc(p,E);$s(i,V,K,D)}else N&&(cc(i,V,N,D),w[a]=void 0)}}var fc=/(?:Once|Passive|Capture)$/;function Nl(i){var a;if(fc.test(i)){a={};for(var f;f=i.match(fc);)i=i.slice(0,i.length-f[0].length),a[f[0].toLowerCase()]=!0}return[u.hyphenate(i.slice(2)),a]}function dc(i,a){var f=E=>{$t(f.value,a,5,[E])};f.value=i;var p=new Set;return u.isArray(f.value)?f.value.forEach(E=>{E.modifiers&&E.modifiers.forEach(w=>{p.add(w)})}):(f.value.modifiers&&f.value.modifiers.forEach(E=>{p.add(E)}),hl(f,a)),f.modifiers=[...p],f}function hl(i,a){if(!!a){var{$wxsModules:f}=a;if(!!f){var p=i.value.toString();!f.find(E=>p.indexOf("."+E+".")>-1)||(i.wxsEvent=i.value())}}}var Yc=function(i,a,f,p){var E=arguments.length>6?arguments[6]:void 0;switch(a){case"class":Wc(i,p);break;case"style":zc(i,f,p);break;default:if(u.isOn(a))u.isModelListener(a)||uc(i,a,f,p,E);else{if(u.isObject(p)){var w=f===p;if(p=k.JSON_PROTOCOL+JSON.stringify(p),w&&i.getAttribute(a)===p)return}else if(f===p)return;lc(i,a,p)}break}};function Gc(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"$style";{var a=gi();if(!a)return A("useCssModule must be called inside setup()"),u.EMPTY_OBJ;var f=a.type.__cssModules;if(!f)return A("Current instance does not have CSS modules injected."),u.EMPTY_OBJ;var p=f[i];return p||(A('Current instance does not have CSS module named "'.concat(i,'".')),u.EMPTY_OBJ)}}function qc(i){var a=gi();if(!a){A("useCssVars is called without current active component instance.");return}var f=()=>kl(a.subTree,i(a.proxy));Sa(()=>ya(f,{flush:"post"})),br(f)}function kl(i,a){if(i.shapeFlag&128){var f=i.suspense;i=f.activeBranch,f.pendingBranch&&!f.isHydrating&&f.effects.push(()=>{kl(f.activeBranch,a)})}for(;i.component;)i=i.component.subTree;if(i.shapeFlag&1&&i.el)hn(i.el,a);else if(i.type===Rn)i.children.forEach(w=>kl(w,a));else if(i.type===Li)for(var{el:p,anchor:E}=i;p&&(hn(p,a),p!==E);)p=p.nextSibling}function hn(i,a){if(i.nodeType===1)for(var f in a)i.setAttribute("--".concat(f),a[f])}var Oi="transition",Ti="animation",Rl=(i,a)=>{var{slots:f}=a;return Ga(he,js(i),f)};Rl.displayName="Transition";var Us={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},xl=Rl.props=u.extend({},he.props,Us),Fo=function(i){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[];u.isArray(i)?i.forEach(f=>f(...a)):i&&i(...a)},Hs=i=>i?u.isArray(i)?i.some(a=>a.length>1):i.length>1:!1;function js(i){var a={};for(var f in i)f in Us||(a[f]=i[f]);if(i.css===!1)return a;var{name:p="v",type:E,duration:w,enterFromClass:N="".concat(p,"-enter-from"),enterActiveClass:V="".concat(p,"-enter-active"),enterToClass:D="".concat(p,"-enter-to"),appearFromClass:K=N,appearActiveClass:ae=V,appearToClass:ie=D,leaveFromClass:te="".concat(p,"-leave-from"),leaveActiveClass:Oe="".concat(p,"-leave-active"),leaveToClass:He="".concat(p,"-leave-to")}=i,at=qa(w),me=at&&at[0],Ce=at&&at[1],{onBeforeEnter:_e,onEnter:ve,onEnterCancelled:Je,onLeave:Te,onLeaveCancelled:it,onBeforeAppear:je=_e,onAppear:pt=ve,onAppearCancelled:kt=Je}=a,Rt=(R,q,le)=>{Qi(R,q?ie:D),Qi(R,q?ae:V),le&&le()},xt=(R,q)=>{Qi(R,He),Qi(R,Oe),q&&q()},Pt=R=>(q,le)=>{var we=R?pt:ve,xe=()=>Rt(q,R,le);Fo(we,[q,xe]),Ja(()=>{Qi(q,R?K:N),Xi(q,R?ie:D),Hs(we)||ca(q,E,me,xe)})};return u.extend(a,{onBeforeEnter(R){Fo(_e,[R]),Xi(R,N),Xi(R,V)},onBeforeAppear(R){Fo(je,[R]),Xi(R,K),Xi(R,ae)},onEnter:Pt(!1),onAppear:Pt(!0),onLeave(R,q){var le=()=>xt(R,q);Xi(R,te),Gr(),Xi(R,Oe),Ja(()=>{Qi(R,te),Xi(R,He),Hs(Te)||ca(R,E,Ce,le)}),Fo(Te,[R,le])},onEnterCancelled(R){Rt(R,!1),Fo(Je,[R])},onAppearCancelled(R){Rt(R,!0),Fo(kt,[R])},onLeaveCancelled(R){xt(R),Fo(it,[R])}})}function qa(i){if(i==null)return null;if(u.isObject(i))return[Ka(i.enter),Ka(i.leave)];var a=Ka(i);return[a,a]}function Ka(i){var a=u.toNumber(i);return Dr(a),a}function Dr(i){typeof i!="number"?A("<transition> explicit duration is not a valid number - "+"got ".concat(JSON.stringify(i),".")):isNaN(i)&&A("<transition> explicit duration is NaN - the duration expression might be incorrect.")}function Xi(i,a){a.split(/\s+/).forEach(f=>f&&i.classList.add(f)),(i._vtc||(i._vtc=new Set)).add(a)}function Qi(i,a){a.split(/\s+/).forEach(p=>p&&i.classList.remove(p));var{_vtc:f}=i;f&&(f.delete(a),f.size||(i._vtc=void 0))}function Ja(i){requestAnimationFrame(()=>{requestAnimationFrame(i)})}var Bl=0;function ca(i,a,f,p){var E=i._endId=++Bl,w=()=>{E===i._endId&&p()};if(f)return setTimeout(w,f);var{type:N,timeout:V,propCount:D}=Ml(i,a);if(!N)return p();var K=N+"end",ae=0,ie=()=>{i.removeEventListener(K,te),w()},te=Oe=>{Oe.target===i&&++ae>=D&&ie()};setTimeout(()=>{ae<D&&ie()},V+1),i.addEventListener(K,te)}function Ml(i,a){var f=window.getComputedStyle(i),p=He=>(f[He]||"").split(", "),E=p(Oi+"Delay"),w=p(Oi+"Duration"),N=ua(E,w),V=p(Ti+"Delay"),D=p(Ti+"Duration"),K=ua(V,D),ae=null,ie=0,te=0;a===Oi?N>0&&(ae=Oi,ie=N,te=w.length):a===Ti?K>0&&(ae=Ti,ie=K,te=D.length):(ie=Math.max(N,K),ae=ie>0?N>K?Oi:Ti:null,te=ae?ae===Oi?w.length:D.length:0);var Oe=ae===Oi&&/\b(transform|all)(,|$)/.test(f[Oi+"Property"]);return{type:ae,timeout:ie,propCount:te,hasTransform:Oe}}function ua(i,a){for(;i.length<a.length;)i=i.concat(i);return Math.max(...a.map((f,p)=>fa(f)+fa(i[p])))}function fa(i){return Number(i.slice(0,-1).replace(",","."))*1e3}function Gr(){return document.body.offsetHeight}var En=new WeakMap,Za=new WeakMap,Kc={name:"TransitionGroup",props:u.extend({},xl,{tag:String,moveClass:String}),setup(i,a){var{slots:f}=a,p=gi(),E=Nr(),w,N;return br(()=>{if(!!w.length){var V=i.moveClass||"".concat(i.name||"v","-move");if(!!m(w[0].el,p.vnode.el,V)){w.forEach(o),w.forEach(c);var D=w.filter(h);Gr(),D.forEach(K=>{var ae=K.el,ie=ae.style;Xi(ae,V),ie.transform=ie.webkitTransform=ie.transitionDuration="";var te=ae._moveCb=Oe=>{Oe&&Oe.target!==ae||(!Oe||/transform$/.test(Oe.propertyName))&&(ae.removeEventListener("transitionend",te),ae._moveCb=null,Qi(ae,V))};ae.addEventListener("transitionend",te)})}}}),()=>{var V=P.toRaw(i),D=js(V),K=V.tag||Rn;w=N,N=f.default?Xe(f.default()):[];for(var ae=0;ae<N.length;ae++){var ie=N[ae];ie.key!=null?$e(ie,F(ie,D,E,p)):A("<TransitionGroup> children must be keyed.")}if(w)for(var te=0;te<w.length;te++){var Oe=w[te];$e(Oe,F(Oe,D,E,p)),En.set(Oe,Oe.el.getBoundingClientRect())}return Wn(K,null,N)}}},hc=Kc;function o(i){var a=i.el;a._moveCb&&a._moveCb(),a._enterCb&&a._enterCb()}function c(i){Za.set(i,i.el.getBoundingClientRect())}function h(i){var a=En.get(i),f=Za.get(i),p=a.left-f.left,E=a.top-f.top;if(p||E){var w=i.el.style;return w.transform=w.webkitTransform="translate(".concat(p,"px,").concat(E,"px)"),w.transitionDuration="0s",i}}function m(i,a,f){var p=i.cloneNode();i._vtc&&i._vtc.forEach(N=>{N.split(/\s+/).forEach(V=>V&&p.classList.remove(V))}),f.split(/\s+/).forEach(N=>N&&p.classList.add(N)),p.style.display="none";var E=a.nodeType===1?a:a.parentNode;E.appendChild(p);var{hasTransform:w}=Ml(p);return E.removeChild(p),w}var C=i=>{var a=i.props["onUpdate:modelValue"];return u.isArray(a)?f=>u.invokeArrayFns(a,f):a},T={created(i,a,f){var{value:p,modifiers:{trim:E,number:w}}=a;i.value=p==null?"":p,i._assign=C(f),$s(i,"input",N=>{var V=N.detail.value,D=i.pageNode;i.pageNode=null,i.value=V,i.pageNode=D,E?V=V.trim():w&&(V=u.toNumber(V)),i._assign(V)})},beforeUpdate(i,a,f){var{value:p}=a;i._assign=C(f);var E=p==null?"":p;i.value!==E&&(i.value=E)}},B=["ctrl","shift","alt","meta"],Y={stop:i=>i.stopPropagation(),prevent:i=>i.preventDefault(),self:i=>i.target!==i.currentTarget,ctrl:i=>!i.ctrlKey,shift:i=>!i.shiftKey,alt:i=>!i.altKey,meta:i=>!i.metaKey,left:i=>"button"in i&&i.button!==0,middle:i=>"button"in i&&i.button!==1,right:i=>"button"in i&&i.button!==2,exact:(i,a)=>B.some(f=>i["".concat(f,"Key")]&&!a.includes(f))},U=(i,a)=>{var f=function(p){for(var E=0;E<a.length;E++){var w=Y[a[E]];if(w&&w(p,a))return}for(var N=arguments.length,V=new Array(N>1?N-1:0),D=1;D<N;D++)V[D-1]=arguments[D];return i(p,...V)};return f.modifiers=a,f},Q={esc:"escape",space:" ",up:"arrow-up",left:"arrow-left",right:"arrow-right",down:"arrow-down",delete:"backspace"},Se=(i,a)=>f=>{if("key"in f){var p=u.hyphenate(f.key);if(a.some(E=>E===p||Q[E]===p))return i(f)}},fe={beforeMount(i,a){var{value:f}=a;oe(i,f)},updated(i,a){var{value:f,oldValue:p}=a;!f!=!p&&oe(i,f)},beforeUnmount(i,a){var{value:f}=a;oe(i,f)}};function oe(i,a){i.setAttribute(".vShow",!!a)}var Ye=u.extend({patchProp:Yc,forcePatchProp:k.forcePatchProp},sc),qe;function dt(){return qe||(qe=ui(Ye))}var Ee=function(){dt().render(...arguments)},Pe=function(){var i=dt().createApp(...arguments);Ne(i);var{mount:a}=i;return i.mount=f=>(u.isString(f)&&(f=dl(f)),f&&a(f,!1,!1)),i},De=Pe;function Ne(i){Object.defineProperty(i.config,"isNativeTag",{value:a=>u.isHTMLTag(a)||u.isSVGTag(a),writable:!1})}function ot(){}function Ze(){}return Object.defineProperty(S,"camelize",{enumerable:!0,get:function(){return u.camelize}}),Object.defineProperty(S,"capitalize",{enumerable:!0,get:function(){return u.capitalize}}),Object.defineProperty(S,"normalizeClass",{enumerable:!0,get:function(){return u.normalizeClass}}),Object.defineProperty(S,"normalizeProps",{enumerable:!0,get:function(){return u.normalizeProps}}),Object.defineProperty(S,"normalizeStyle",{enumerable:!0,get:function(){return u.normalizeStyle}}),Object.defineProperty(S,"toDisplayString",{enumerable:!0,get:function(){return u.toDisplayString}}),Object.defineProperty(S,"toHandlerKey",{enumerable:!0,get:function(){return u.toHandlerKey}}),Object.defineProperty(S,"EffectScope",{enumerable:!0,get:function(){return P.EffectScope}}),Object.defineProperty(S,"ReactiveEffect",{enumerable:!0,get:function(){return P.ReactiveEffect}}),Object.defineProperty(S,"customRef",{enumerable:!0,get:function(){return P.customRef}}),Object.defineProperty(S,"effect",{enumerable:!0,get:function(){return P.effect}}),Object.defineProperty(S,"effectScope",{enumerable:!0,get:function(){return P.effectScope}}),Object.defineProperty(S,"getCurrentScope",{enumerable:!0,get:function(){return P.getCurrentScope}}),Object.defineProperty(S,"isProxy",{enumerable:!0,get:function(){return P.isProxy}}),Object.defineProperty(S,"isReactive",{enumerable:!0,get:function(){return P.isReactive}}),Object.defineProperty(S,"isReadonly",{enumerable:!0,get:function(){return P.isReadonly}}),Object.defineProperty(S,"isRef",{enumerable:!0,get:function(){return P.isRef}}),Object.defineProperty(S,"isShallow",{enumerable:!0,get:function(){return P.isShallow}}),Object.defineProperty(S,"markRaw",{enumerable:!0,get:function(){return P.markRaw}}),Object.defineProperty(S,"onScopeDispose",{enumerable:!0,get:function(){return P.onScopeDispose}}),Object.defineProperty(S,"proxyRefs",{enumerable:!0,get:function(){return P.proxyRefs}}),Object.defineProperty(S,"reactive",{enumerable:!0,get:function(){return P.reactive}}),Object.defineProperty(S,"readonly",{enumerable:!0,get:function(){return P.readonly}}),Object.defineProperty(S,"ref",{enumerable:!0,get:function(){return P.ref}}),Object.defineProperty(S,"shallowReactive",{enumerable:!0,get:function(){return P.shallowReactive}}),Object.defineProperty(S,"shallowReadonly",{enumerable:!0,get:function(){return P.shallowReadonly}}),Object.defineProperty(S,"shallowRef",{enumerable:!0,get:function(){return P.shallowRef}}),Object.defineProperty(S,"stop",{enumerable:!0,get:function(){return P.stop}}),Object.defineProperty(S,"toRaw",{enumerable:!0,get:function(){return P.toRaw}}),Object.defineProperty(S,"toRef",{enumerable:!0,get:function(){return P.toRef}}),Object.defineProperty(S,"toRefs",{enumerable:!0,get:function(){return P.toRefs}}),Object.defineProperty(S,"triggerRef",{enumerable:!0,get:function(){return P.triggerRef}}),Object.defineProperty(S,"unref",{enumerable:!0,get:function(){return P.unref}}),S.BaseTransition=he,S.Comment=yn,S.Fragment=Rn,S.KeepAlive=Yo,S.Static=Li,S.Suspense=Ao,S.Teleport=Ua,S.Text=Nn,S.Transition=Rl,S.TransitionGroup=hc,S.callWithAsyncErrorHandling=$t,S.callWithErrorHandling=Gt,S.cloneVNode=Zi,S.compatUtils=Il,S.computed=Vs,S.createApp=Pe,S.createBlock=zr,S.createComment=dl,S.createCommentVNode=pi,S.createElement=ps,S.createElementBlock=ti,S.createElementVNode=An,S.createHydrationRenderer=Ps,S.createPropsRestProxy=Hc,S.createRenderer=ui,S.createSSRApp=De,S.createSlots=ks,S.createStaticVNode=Sl,S.createTextNode=ac,S.createTextVNode=nl,S.createVNode=Wn,S.createVueApp=Pe,S.defineAsyncComponent=li,S.defineComponent=gt,S.defineEmits=Lc,S.defineExpose=Fc,S.defineProps=Dc,S.getCurrentInstance=gi,S.getTransitionRawChildren=Xe,S.guardReactiveProps=Vi,S.h=Ga,S.handleError=en,S.initCustomFormatter=jc,S.inject=fr,S.injectHook=ei,S.isMemoSame=Lo,S.isRuntimeOnly=Ol,S.isVNode=er,S.mergeDefaults=Uc,S.mergeProps=lr,S.nextTick=ri,S.onActivated=La,S.onBeforeActivate=ot,S.onBeforeDeactivate=Ze,S.onBeforeMount=Po,S.onBeforeUnmount=na,S.onBeforeUpdate=_r,S.onDeactivated=wa,S.onErrorCaptured=Qs,S.onMounted=Sa,S.onRenderTracked=Go,S.onRenderTriggered=ws,S.onServerPrefetch=jr,S.onUnmounted=Va,S.onUpdated=br,S.openBlock=Fe,S.popScopeId=Ut,S.provide=mr,S.pushScopeId=$o,S.queuePostFlushCb=ao,S.registerRuntimeCompiler=ec,S.render=Ee,S.renderList=Ns,S.renderSlot=il,S.resolveComponent=Bo,S.resolveDirective=ds,S.resolveDynamicComponent=Ha,S.resolveFilter=vi,S.resolveTransitionHooks=F,S.setBlockTracking=dn,S.setDevtoolsHook=Ln,S.setTransitionHooks=$e,S.ssrContextKey=Mr,S.ssrUtils=oc,S.toHandlers=xs,S.transformVNodeArgs=Wa,S.useAttrs=nc,S.useCssModule=Gc,S.useCssVars=qc,S.useSSRContext=sa,S.useSlots=$c,S.useTransitionState=Nr,S.vModelText=T,S.vShow=fe,S.version=fl,S.warn=A,S.watch=Hr,S.watchEffect=ya,S.watchPostEffect=Ea,S.watchSyncEffect=Wo,S.withAsyncContext=go,S.withCtx=Ri,S.withDefaults=Vc,S.withDirectives=Ht,S.withKeys=Se,S.withMemo=ic,S.withModifiers=U,S.withScopeId=Ie,Object.defineProperty(S,"__esModule",{value:!0}),S}({},l,b,O);return x.__TYPE__="vue",x}function zg(v,l,b){let O=b.Vue,x=b.setTimeout,S=b.clearTimeout,k=b.setInterval,u=b.clearInterval,P=b.__uniConfig,We=b.__uniRoutes,At=b.VueShared,an=b.UniShared;var A=function(se,re,Gt){"use strict";var $t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",en=function(){let e=new Uint8Array(256);for(var t=0;t<$t.length;t++)e[$t.charCodeAt(t)]=t;return e}();function Or(e){var t=new Uint8Array(e),n,r=t.length,s="";for(n=0;n<r;n+=3)s+=$t[t[n]>>2],s+=$t[(t[n]&3)<<4|t[n+1]>>4],s+=$t[(t[n+1]&15)<<2|t[n+2]>>6],s+=$t[t[n+2]&63];return r%3===2?s=s.substring(0,s.length-1)+"=":r%3===1&&(s=s.substring(0,s.length-2)+"=="),s}function Vr(e){var t=e.length*.75,n=e.length,r,s=0,d,g,y,H;e[e.length-1]==="="&&(t--,e[e.length-2]==="="&&t--);var I=new ArrayBuffer(t),$=new Uint8Array(I);for(r=0;r<n;r+=4)d=en[e.charCodeAt(r)],g=en[e.charCodeAt(r+1)],y=en[e.charCodeAt(r+2)],H=en[e.charCodeAt(r+3)],$[s++]=d<<2|g>>4,$[s++]=(g&15)<<4|y>>2,$[s++]=(y&3)<<6|H&63;return I}let pr=["original","compressed"],Pn=["album","camera"],qt=["GET","OPTIONS","HEAD","POST","PUT","DELETE","TRACE","CONNECT","PATCH"];function cn(e,t){return!e||t.indexOf(e)===-1?t[0]:e}function Jn(e,t){return!se.isArray(e)||e.length===0||e.find(n=>t.indexOf(n)===-1)?t:e}function Dn(e,t){console.warn(`${e}: ${t}`)}function rr(e,t,n,r){r||(r=Dn);for(let s in n){let d=Re(s,t[s],n[s],!se.hasOwn(t,s));se.isString(d)&&r(e,d)}}function Gn(e,t,n,r){if(!n)return;if(!se.isArray(n))return rr(e,t[0]||Object.create(null),n,r);let s=n.length,d=t.length;for(let g=0;g<s;g++){let y=n[g],H=Object.create(null);d>g&&(H[y.name]=t[g]),rr(e,H,{[y.name]:y},r)}}function Re(e,t,n,r){se.isPlainObject(n)||(n={type:n});let{type:s,required:d,validator:g}=n;if(d&&r)return'Missing required args: "'+e+'"';if(!(t==null&&!d)){if(s!=null){let y=!1,H=se.isArray(s)?s:[s],I=[];for(let $=0;$<H.length&&!y;$++){let{valid:pe,expectedType:Ae}=St(t,H[$]);I.push(Ae||""),y=pe}if(!y)return Kt(e,t,I)}if(g)return g(t)}}let ct=se.makeMap("String,Number,Boolean,Function,Symbol");function St(e,t){let n,r=mn(t);if(ct(r)){let s=typeof e;n=s===r.toLowerCase(),!n&&s==="object"&&(n=e instanceof t)}else r==="Object"?n=se.isObject(e):r==="Array"?n=se.isArray(e):n=e instanceof t||se.toRawType(e)===mn(t);return{valid:n,expectedType:r}}function Kt(e,t,n){let r=`Invalid args: type check failed for args "${e}". Expected ${n.map(se.capitalize).join(", ")}`,s=n[0],d=se.toRawType(t),g=un(t,s),y=un(t,d);return n.length===1&&Tr(s)&&!ri(s,d)&&(r+=` with value ${g}`),r+=`, got ${d} `,Tr(d)&&(r+=`with value ${y}.`),r}function mn(e){let t=e&&e.toString().match(/^\s*function (\w+)/);return t?t[1]:""}function un(e,t){return t==="String"?`"${e}"`:t==="Number"?`${Number(e)}`:`${e}`}function Tr(e){return["string","number","boolean"].some(n=>e.toLowerCase()===n)}function ri(...e){return e.some(t=>t.toLowerCase()==="boolean")}function Jr(e){return function(){try{return e.apply(e,arguments)}catch(t){console.error(t)}}}let _i=1,gr={};function bo(e,t,n,r=!1){return gr[e]={name:t,keepAlive:r,callback:n},e}function oo(e,t,n){if(typeof e=="number"){let r=gr[e];if(r)return r.keepAlive||delete gr[e],r.callback(t,n)}return t}function yo(e){for(let t in gr)if(gr[t].name===e)return!0;return!1}function ao(e,t){for(let n in gr){let r=gr[n];r.callback===t&&r.name===e&&delete gr[n]}}function zi(e){bt.off("api."+e)}function ur(e){bt.on("api."+e,t=>{for(let n in gr){let r=gr[n];r.name===e&&r.callback(t)}})}function Yi(e,t){return bo(_i++,e,t,!0)}let so="success",Rr="fail",Pr="complete";function ir(e){let t={};for(let n in e){let r=e[n];se.isFunction(r)&&(t[n]=Jr(r),delete e[n])}return t}function Gi(e,t){return!e||e.indexOf(":fail")===-1?t+":ok":t+e.substring(e.indexOf(":fail"))}function Vo(e,t={},{beforeAll:n,beforeSuccess:r}={}){se.isPlainObject(t)||(t={});let{success:s,fail:d,complete:g}=ir(t),y=se.isFunction(s),H=se.isFunction(d),I=se.isFunction(g),$=_i++;return bo($,e,pe=>{pe=pe||{},pe.errMsg=Gi(pe.errMsg,e),se.isFunction(n)&&n(pe),pe.errMsg===e+":ok"?(se.isFunction(r)&&r(pe,t),y&&s(pe)):H&&d(pe),I&&g(pe)}),$}let vr="success",bi="fail",Ni="complete",Hn={},ki={};function Eo(e){return function(t){return e(t)||t}}function yi(e,t){let n=!1;for(let r=0;r<e.length;r++){let s=e[r];if(n)n=Promise.resolve(Eo(s));else{let d=s(t);if(se.isPromise(d)&&(n=Promise.resolve(d)),d===!1)return{then(){},catch(){}}}}return n||{then(r){return r(t)},catch(){}}}function $r(e,t={}){return[vr,bi,Ni].forEach(n=>{let r=e[n];if(!se.isArray(r))return;let s=t[n];t[n]=function(g){yi(r,g).then(y=>se.isFunction(s)&&s(y)||y)}}),t}function Zn(e,t){let n=[];se.isArray(Hn.returnValue)&&n.push(...Hn.returnValue);let r=ki[e];return r&&se.isArray(r.returnValue)&&n.push(...r.returnValue),n.forEach(s=>{t=s(t)||t}),t}function Ur(e){let t=Object.create(null);Object.keys(Hn).forEach(r=>{r!=="returnValue"&&(t[r]=Hn[r].slice())});let n=ki[e];return n&&Object.keys(n).forEach(r=>{r!=="returnValue"&&(t[r]=(t[r]||[]).concat(n[r]))}),t}function Ln(e,t,n,r){let s=Ur(e);return s&&Object.keys(s).length?se.isArray(s.invoke)?yi(s.invoke,n).then(g=>t($r(s,g),...r)):t($r(s,n),...r):t(n,...r)}function xr(e){return!!(se.isPlainObject(e)&&[so,Rr,Pr].find(t=>se.isFunction(e[t])))}function lo(e){return e}function co(e,t){return(n={},...r)=>xr(n)?Zn(e,Ln(e,t,n,r)):Zn(e,new Promise((s,d)=>{Ln(e,t,se.extend(n,{success:s,fail:d}),r)}))}function qi(e,t){let n=e[0];if(!t||!se.isPlainObject(t.formatArgs)&&se.isPlainObject(n))return;let r=t.formatArgs,s=Object.keys(r);for(let d=0;d<s.length;d++){let g=s[d],y=r[g];if(se.isFunction(y)){let H=y(e[0][g],n);if(se.isString(H))return H}else se.hasOwn(n,g)||(n[g]=y)}}function wo(e,t,n){return oo(e,se.extend(n||{},{errMsg:t+":ok"}))}function ii(e,t,n,r){return oo(e,se.extend({errMsg:t+":fail"+(n?" "+n:"")},r))}function So(e,t,n,r){if(r&&r.beforeInvoke){let d=r.beforeInvoke(t);if(se.isString(d))return d}let s=qi(t,r);if(s)return s}function Co(e){if(!se.isFunction(e))throw new Error('Invalid args: type check failed for args "callback". Expected Function')}function ga(e,t,n){return r=>{Co(r);let s=So(e,[r],void 0,n);if(s)throw new Error(s);let d=!yo(e);Yi(e,r),d&&(ur(e),t())}}function ea(e,t,n){return r=>{Co(r);let s=So(e,[r],void 0,n);if(s)throw new Error(s);e=e.replace("off","on"),ao(e,r),yo(e)||(zi(e),t())}}function ta(e){return!e||se.isString(e)?e:e.stack?(console.error(e.message+re.LINEFEED+e.stack),e.message):e}function Ki(e,t,n,r){return s=>{let d=Vo(e,s,r),g=So(e,[s],n,r);return g?ii(d,e,g):t(s,{resolve:y=>wo(d,e,y),reject:(y,H)=>ii(d,e,ta(y),H)})}}function In(e,t,n,r){return(...s)=>{let d=So(e,s,n,r);if(d)throw new Error(d);return t.apply(null,s)}}function gn(e,t,n,r){return Ki(e,t,n,r)}function xn(e,t,n){return ga(e,t,n)}function oi(e,t,n){return ea(e,t,n)}function $o(e,t,n,r){return co(e,Ki(e,t,void 0,r))}function Ut(e,t,n,r){return In(e,t,void 0,r)}function Ie(e,t,n,r){return co(e,gn(e,t,void 0,r))}let Ri="base64ToArrayBuffer",xi=[{name:"base64",type:String,required:!0}],Ei="arrayBufferToBase64",Ji=[{name:"arrayBuffer",type:[ArrayBuffer,Uint8Array],required:!0}],Zr=Ut(Ri,e=>Vr(e),xi),Bi=Ut(Ei,e=>Or(e),Ji);function Uo(){if(typeof __SYSTEM_INFO__!="undefined")return window.__SYSTEM_INFO__;let{resolutionWidth:e}=l.screen.getCurrentSize()||{resolutionWidth:0};return{platform:(l.os.name||"").toLowerCase(),pixelRatio:l.screen.scale,windowWidth:Math.round(e)}}function nn(e,t,n){e.$page.meta.isNVue?_n(e,t,n):va(e,t,n)}function va(e,t,n){bt.invokeViewMethod("requestComponentInfo",{reqs:t.map(r=>(r.component&&(r.component=r.component.$el.nodeId),r))},e.$page.id,n)}function _n(e,t,n){let r=Xr(t),s=new Array(r.length);ai(r,e.$el,s),wi(e.$requireNativePlugin("dom"),s,0,[],d=>{n(d)})}function Xr(e){let t=[];for(let n=0;n<e.length;n++){let r=e[n].selector;r.indexOf("#")===0&&t.push(r.substring(1))}return t}function ai(e,t,n){let r=t.children;if(!se.isArray(r))return!1;for(let s=0;s<r.length;s++){let d=r[s];if(d.attr){let g=e.indexOf(d.attr.id);if(g>=0&&(n[g]={id:e[g],ref:d.ref,dataset:re.parseNVueDataset(d.attr)},e.length===1))break}d.children&&ai(e,d,n)}}function wi(e,t,n,r,s){let d=t[n];e.getComponentRect(d.ref,g=>{g.size.id=d.id,g.size.dataset=d.dataset,r.push(g.size),n+=1,n<t.length?wi(e,t,n,r,s):s(r)})}function Qr(e,t){bt.invokeViewMethod("setPageMeta",t,e.$page.id)}let Ao=Array.isArray,Oo=e=>e!==null&&typeof e=="object",ma=["{","}"];class _a{constructor(){this._caches=Object.create(null)}interpolate(t,n,r=ma){if(!n)return[t];let s=this._caches[t];return s||(s=Ma(t,r),this._caches[t]=s),ba(s,n)}}let Ho=/^(?:\d)+/,jo=/^(?:\w)+/;function Ma(e,[t,n]){let r=[],s=0,d="";for(;s<e.length;){let g=e[s++];if(g===t){d&&r.push({type:"text",value:d}),d="";let y="";for(g=e[s++];g!==void 0&&g!==n;)y+=g,g=e[s++];let H=g===n,I=Ho.test(y)?"list":H&&jo.test(y)?"named":"unknown";r.push({value:y,type:I})}else d+=g}return d&&r.push({type:"text",value:d}),r}function ba(e,t){let n=[],r=0,s=Ao(t)?"list":Oo(t)?"named":"unknown";if(s==="unknown")return n;for(;r<e.length;){let d=e[r];switch(d.type){case"text":n.push(d.value);break;case"list":n.push(t[parseInt(d.value,10)]);break;case"named":s==="named"&&n.push(t[d.value]);break;case"unknown":break}r++}return n}let Ir="zh-Hans",or="zh-Hant",Bn="en",mr="fr",fr="es",ya=Object.prototype.hasOwnProperty,Ea=(e,t)=>ya.call(e,t),Wo=new _a;function uo(e,t){return!!t.find(n=>e.indexOf(n)!==-1)}function Hr(e,t){return t.find(n=>e.indexOf(n)===0)}function Mi(e,t){if(!e)return;if(e=e.trim().replace(/_/g,"-"),t&&t[e])return e;if(e=e.toLowerCase(),e==="chinese")return Ir;if(e.indexOf("zh")===0)return e.indexOf("-hans")>-1?Ir:e.indexOf("-hant")>-1||uo(e,["-tw","-hk","-mo","-cht"])?or:Ir;let n=Hr(e,[Bn,mr,fr]);if(n)return n}class zo{constructor({locale:t,fallbackLocale:n,messages:r,watcher:s,formater:d}){this.locale=Bn,this.fallbackLocale=Bn,this.message={},this.messages={},this.watchers=[],n&&(this.fallbackLocale=n),this.formater=d||Wo,this.messages=r||{},this.setLocale(t||Bn),s&&this.watchLocale(s)}setLocale(t){let n=this.locale;this.locale=Mi(t,this.messages)||this.fallbackLocale,this.messages[this.locale]||(this.messages[this.locale]={}),this.message=this.messages[this.locale],n!==this.locale&&this.watchers.forEach(r=>{r(this.locale,n)})}getLocale(){return this.locale}watchLocale(t){let n=this.watchers.push(t)-1;return()=>{this.watchers.splice(n,1)}}add(t,n,r=!0){let s=this.messages[t];s?r?Object.assign(s,n):Object.keys(n).forEach(d=>{Ea(s,d)||(s[d]=n[d])}):this.messages[t]=n}f(t,n,r){return this.formater.interpolate(t,n,r).join("")}t(t,n,r){let s=this.message;return typeof n=="string"?(n=Mi(n,this.messages),n&&(s=this.messages[n])):r=n,Ea(s,t)?this.formater.interpolate(s[t],r).join(""):(console.warn(`Cannot translate the value of keypath ${t}. Use the value of keypath as default.`),t)}}function Si(e,t){e.$watchLocale?e.$watchLocale(n=>{t.setLocale(n)}):e.$watch(()=>e.$locale,n=>{t.setLocale(n)})}function si(){return typeof ce!="undefined"&&ce.getLocale?ce.getLocale():typeof global!="undefined"&&global.getLocale?global.getLocale():Bn}function Nr(e,t={},n,r){typeof e!="string"&&([e,t]=[t,e]),typeof e!="string"&&(e=si()),typeof n!="string"&&(n=typeof P!="undefined"&&P.fallbackLocale||Bn);let s=new zo({locale:e,fallbackLocale:n,messages:t,watcher:r}),d=(g,y)=>{if(typeof Kn!="function")d=function(H,I){return s.t(H,I)};else{let H=!1;d=function(I,$){let pe=Kn().$vm;return pe&&(pe.$locale,H||(H=!0,Si(pe,s))),s.t(I,$)}}return d(g,y)};return{i18n:s,f(g,y,H){return s.f(g,y,H)},t(g,y){return d(g,y)},add(g,y,H=!0){return s.add(g,y,H)},watch(g){return s.watchLocale(g)},getLocale(){return s.getLocale()},setLocale(g){return s.setLocale(g)}}}function M(e,t){return e.indexOf(t[0])>-1}let ne=re.once(()=>typeof P!="undefined"&&P.locales&&!!Object.keys(P.locales).length),he;function G(){let e=ce.getLocale(),t=P.locales;return t[e]||t[P.fallbackLocale]||t.en||{}}function F(e){return M(e,re.I18N_JSON_DELIMITERS)?Xe().f(e,G(),re.I18N_JSON_DELIMITERS):e}function J(e,t){if(t.length===1){if(e){let r=e[t[0]];if(se.isString(r)&&M(r,re.I18N_JSON_DELIMITERS))return e}return}let n=t.shift();return J(e&&e[n],t)}function de(e,t){return t.map(n=>$e(e,n))}function $e(e,t){let n=J(e,t);if(!n)return!1;let r=t[t.length-1],s=n[r];return Object.defineProperty(n,r,{get(){return F(s)},set(d){s=d}}),!0}function Xe(){if(!he){let e;if(typeof Kn=="function"?e=v.requireModule("plus").getLanguage():e=l.webview.currentWebview().getStyle().locale,he=Nr(e),ne()){let t=Object.keys(P.locales||{});t.length&&t.forEach(n=>he.add(n,P.locales[n])),he.setLocale(e)}}return he}function gt(e,t,n){return t.reduce((r,s,d)=>(r[e+s]=n[d],r),{})}let bn=re.once(()=>{let e="uni.app.",t=["quit"];Xe().add(Bn,gt(e,t,["Press back button again to exit"]),!1),Xe().add(fr,gt(e,t,["Pulse otra vez para salir"]),!1),Xe().add(mr,gt(e,t,["Appuyez \xE0 nouveau pour quitter l'application"]),!1),Xe().add(Ir,gt(e,t,["\u518D\u6309\u4E00\u6B21\u9000\u51FA\u5E94\u7528"]),!1),Xe().add(or,gt(e,t,["\u518D\u6309\u4E00\u6B21\u9000\u51FA\u61C9\u7528"]),!1)}),li=re.once(()=>{let e="uni.showActionSheet.",t=["cancel"];Xe().add(Bn,gt(e,t,["Cancel"]),!1),Xe().add(fr,gt(e,t,["Cancelar"]),!1),Xe().add(mr,gt(e,t,["Annuler"]),!1),Xe().add(Ir,gt(e,t,["\u53D6\u6D88"]),!1),Xe().add(or,gt(e,t,["\u53D6\u6D88"]),!1)}),jn=re.once(()=>{let e="uni.showModal.",t=["cancel","confirm"];Xe().add(Bn,gt(e,t,["Cancel","OK"]),!1),Xe().add(fr,gt(e,t,["Cancelar","OK"]),!1),Xe().add(mr,gt(e,t,["Annuler","OK"]),!1),Xe().add(Ir,gt(e,t,["\u53D6\u6D88","\u786E\u5B9A"]),!1),Xe().add(or,gt(e,t,["\u53D6\u6D88","\u78BA\u5B9A"]),!1)}),fo=re.once(()=>{let e="uni.chooseImage.",t=["cancel","sourceType.album","sourceType.camera"];Xe().add(Bn,gt(e,t,["Cancel","Album","Camera"]),!1),Xe().add(fr,gt(e,t,["Cancelar","\xC1lbum","C\xE1mara"]),!1),Xe().add(mr,gt(e,t,["Annuler","Album","Cam\xE9ra"]),!1),Xe().add(Ir,gt(e,t,["\u53D6\u6D88","\u4ECE\u76F8\u518C\u9009\u62E9","\u62CD\u6444"]),!1),Xe().add(or,gt(e,t,["\u53D6\u6D88","\u5F9E\u76F8\u518A\u9078\u64C7","\u62CD\u651D"]),!1)}),Da=re.once(()=>{let e="uni.chooseVideo.",t=["cancel","sourceType.album","sourceType.camera"];Xe().add(Bn,gt(e,t,["Cancel","Album","Camera"]),!1),Xe().add(fr,gt(e,t,["Cancelar","\xC1lbum","C\xE1mara"]),!1),Xe().add(mr,gt(e,t,["Annuler","Album","Cam\xE9ra"]),!1),Xe().add(Ir,gt(e,t,["\u53D6\u6D88","\u4ECE\u76F8\u518C\u9009\u62E9","\u62CD\u6444"]),!1),Xe().add(or,gt(e,t,["\u53D6\u6D88","\u5F9E\u76F8\u518A\u9078\u64C7","\u62CD\u651D"]),!1)}),Yo=re.once(()=>{let e="uni.previewImage.",t=["cancel","button.save","save.success","save.fail"];Xe().add(Bn,gt(e,t,["Cancel","Save Image","Saved successfully","Save failed"]),!1),Xe().add(fr,gt(e,t,["Cancelar","Guardar imagen","Guardado exitosamente","Error al guardar"]),!1),Xe().add(mr,gt(e,t,["Annuler","Guardar imagen","Enregistr\xE9 avec succ\xE8s","\xC9chec de la sauvegarde"]),!1),Xe().add(Ir,gt(e,t,["\u53D6\u6D88","\u4FDD\u5B58\u56FE\u50CF","\u4FDD\u5B58\u56FE\u50CF\u5230\u76F8\u518C\u6210\u529F","\u4FDD\u5B58\u56FE\u50CF\u5230\u76F8\u518C\u5931\u8D25"]),!1),Xe().add(or,gt(e,t,["\u53D6\u6D88","\u4FDD\u5B58\u5716\u50CF","\u4FDD\u5B58\u5716\u50CF\u5230\u76F8\u518A\u6210\u529F","\u4FDD\u5B58\u5716\u50CF\u5230\u76F8\u518A\u5931\u6557"]),!1)}),ho=re.once(()=>{let e="uni.setClipboardData.",t=["success","fail"];Xe().add(Bn,gt(e,t,["Content copied","Copy failed, please copy manually"]),!1),Xe().add(fr,gt(e,t,["Contenido copiado","Error al copiar, copie manualmente"]),!1),Xe().add(mr,gt(e,t,["Contenu copi\xE9","\xC9chec de la copie, copiez manuellement"]),!1),Xe().add(Ir,gt(e,t,["\u5185\u5BB9\u5DF2\u590D\u5236","\u590D\u5236\u5931\u8D25\uFF0C\u8BF7\u624B\u52A8\u590D\u5236"]),!1),Xe().add(or,gt(e,t,["\u5167\u5BB9\u5DF2\u5FA9\u5236","\u5FA9\u5236\u5931\u6557\uFF0C\u8ACB\u624B\u52D5\u5FA9\u88FD"]),!1)}),La=re.once(()=>{let e="uni.scanCode.",t=["title","album","fail","flash.on","flash.off"];Xe().add(Bn,gt(e,t,["Scan code","Album","Recognition failure","Tap to turn light on","Tap to turn light off"]),!1),Xe().add(fr,gt(e,t,["C\xF3digo de escaneo","\xC1lbum","\xC9chec de la reconnaissance","Toque para encender la luz","Toque para apagar la luz"]),!1),Xe().add(mr,gt(e,t,["Code d\u2019analyse","Album","Fallo de reconocimiento","Appuyez pour activer l'\xE9clairage","Appuyez pour d\xE9sactiver l'\xE9clairage"]),!1),Xe().add(Ir,gt(e,t,["\u626B\u7801","\u76F8\u518C","\u8BC6\u522B\u5931\u8D25","\u8F7B\u89E6\u7167\u4EAE","\u8F7B\u89E6\u5173\u95ED"]),!1),Xe().add(or,gt(e,t,["\u6383\u78BC","\u76F8\u518A","\u8B58\u5225\u5931\u6557","\u8F15\u89F8\u7167\u4EAE","\u8F15\u89F8\u95DC\u9589"]),!1)}),wa=re.once(()=>{let e="uni.startSoterAuthentication.",t=["authContent"];Xe().add(Bn,gt(e,t,["Fingerprint recognition"]),!1),Xe().add(fr,gt(e,t,["Reconocimiento de huellas dactilares"]),!1),Xe().add(mr,gt(e,t,["Reconnaissance de l'empreinte digitale"]),!1),Xe().add(Ir,gt(e,t,["\u6307\u7EB9\u8BC6\u522B\u4E2D..."]),!1),Xe().add(or,gt(e,t,["\u6307\u7D0B\u8B58\u5225\u4E2D..."]),!1)});function Xs(e){if(ne())return de(e,[["titleText"],["searchInput","placeholder"]])}function Es(e){if(ne()){let t="caption";return de(e,[["contentdown",t],["contentover",t],["contentrefresh",t]])}}function Fa(e){let t=new re.Emitter;return{on(n,r){return t.on(n,r)},once(n,r){return t.once(n,r)},off(n,r){return t.off(n,r)},emit(n,...r){return t.emit(n,...r)},subscribe(n,r,s=!1){t[s?"once":"on"](`${e}.${n}`,r)},unsubscribe(n,r){t.off(`${e}.${n}`,r)},subscribeHandler(n,r,s){t.emit(`${e}.${n}`,r,s)}}}let To="invokeViewApi",ei="invokeServiceApi";function Di(e){return e=e+"",e.indexOf("rpx")!==-1||e.indexOf("upx")!==-1}function Po(e,t=!1){if(t)return Sa(e);if(typeof e=="string"){let n=parseInt(e)||0;return Di(e)?ce.upx2px(n):n}return e}function Sa(e){return Di(e)?e.replace(/(\d+(\.\d+)?)[ru]px/g,(t,n)=>ce.upx2px(parseFloat(n))+"px"):e}function _r(e){let t=re.resolveComponentInstance(e);if(t.$page)return t.$page.id;if(!t.$)return;let n=t.$.root.proxy;if(n&&n.$page)return n.$page.id}function br(){let e=Un(),t=e.length;if(t)return e[t-1]}function na(){let e=br();if(e)return e.$page.meta}function Va(){let e=na();return e?e.id:-1}function jr(){let e=br();if(e)return e.$vm}let ws=["navigationBar","pullToRefresh"];function Go(){return JSON.parse(JSON.stringify(P.globalStyle||{}))}function Qs(e,t){let n=Go(),r=se.extend({id:t},n,e);ws.forEach(d=>{r[d]=se.extend({},n[d],e[d])});let{navigationBar:s}=r;return s.titleText&&s.titleImage&&(s.titleText=""),r}function Ss(e){return JSON.parse(Po(JSON.stringify(e),!0))}function Cs(e){return e.offset&&(e.offset=Po(e.offset)),e.height&&(e.height=Po(e.height)),e.range&&(e.range=Po(e.range)),e}function El(e,t,n,r,s){let{id:d,route:g}=r;return{id:d,path:re.addLeadingSlash(g),route:g,fullPath:t,options:n,meta:r,openType:e,eventChannel:s,statusBarStyle:r.navigationBar.titleColor==="#000000"?"dark":"light"}}function el(e,t,n){let r=e.$[t];!se.isArray(r)||n.__weh&&se.remove(r,n.__weh)}function Xn(e,t,n){if(se.isString(e))n=t,t=e,e=jr();else if(typeof e=="number"){let s=Un().find(d=>d.$page.id===e);s?e=s.$vm:e=jr()}if(!e)return;if(e.__call_hook)return e.__call_hook(t,n);let r=e.$[t];return r&&re.invokeArrayFns(r,n)}function As(e){if(e.indexOf("/")===0)return e;let t="",n=Un();return n.length&&(t=n[n.length-1].$page.route),Io(t,e)}function Io(e,t){if(t.indexOf("/")===0)return t;if(t.indexOf("./")===0)return Io(e,t.slice(2));let n=t.split("/"),r=n.length,s=0;for(;s<r&&n[s]==="..";s++);n.splice(0,s),t=n.join("/");let d=e.length>0?e.split("/"):[];return d.splice(d.length-s-1,s+1),re.addLeadingSlash(d.concat(n).join("/"))}function po(e,t=!1){return t?We.find(n=>n.path===e||n.alias===e):We.find(n=>n.path===e)}function Os(e){let t=po(e);if(t)return t.meta}let ci,os,Qn;function qn(){return typeof window=="object"&&typeof navigator=="object"&&typeof document=="object"?"webview":"v8"}function No(){return ci.webview.currentWebview().id}let as,Ts,ko={};function Ca(e){let t=e.data&&e.data.__message;if(!t||!t.__page)return;let n=t.__page,r=ko[n];r&&r(t),t.keep||delete ko[n]}function ss(e,t){qn()==="v8"?Qn?(as&&as.close(),as=new Qn(No()),as.onmessage=Ca):Ts||(Ts=os.requireModule("globalEvent"),Ts.addEventListener("plusMessage",Ca)):window.__plusMessage=Ca,ko[e]=t}class ls{constructor(t){this.webview=t}sendMessage(t){let n=JSON.parse(JSON.stringify({__message:{data:t}})),r=this.webview.id;Qn?new Qn(r).postMessage(n):ci.webview.postMessageToUniNView&&ci.webview.postMessageToUniNView(n,r)}close(){this.webview.close()}}function Aa({context:e={},url:t,data:n={},style:r={},onMessage:s,onClose:d}){ci=e.plus||l,os=e.weex||(typeof v=="object"?v:null),Qn=e.BroadcastChannel||(typeof BroadcastChannel=="object"?BroadcastChannel:null);let g={autoBackButton:!0,titleSize:"17px"},y=`page${Date.now()}`;r=se.extend({},r),r.titleNView!==!1&&r.titleNView!=="none"&&(r.titleNView=se.extend(g,r.titleNView));let H={top:0,bottom:0,usingComponents:{},popGesture:"close",scrollIndicator:"none",animationType:"pop-in",animationDuration:200,uniNView:{path:`/${t}.js`,defaultFontSize:16,viewport:ci.screen.resolutionWidth}};r=se.extend(H,r);let I=ci.webview.create("",y,r,{extras:{from:No(),runtime:qn(),data:n,useGlobalEvent:!Qn}});return I.addEventListener("close",d),ss(y,$=>{typeof s=="function"&&s($.data),$.keep||I.close("auto")}),I.show(r.animationType,r.animationDuration),new ls(I)}let _=(e,t)=>bt.emit("api."+e,t),L=1;function z(){return Va()+"."+To}let j=(e,t,n,r)=>{let{subscribe:s,publishHandler:d}=bt,g=r?L++:0;r&&s(To+"."+g,r,!0),d(z(),{id:g,name:e,args:t},n)},X=(e,t,n,r)=>{let{subscribe:s,unsubscribe:d,publishHandler:g}=bt,y=L++,H=To+"."+y;return s(H,n),g(z(),{id:y,name:e,args:t},r),()=>{d(H)}},ee=Object.create(null);function ue(){bt.subscribe(ei,Me)}function be(e,t){ee[e]||(ee[e]=t)}function Me({id:e,name:t,args:n},r){let s=g=>{e&&bt.publishHandler(ei+"."+e,g,r)},d=ee[t];d?d(n,s):s({})}let Ue=se.extend(Fa("view"),{invokeOnCallback:_,invokeViewMethod:j,invokeViewMethodKeepAlive:X});function ye(){let{on:e}=bt;e(re.ON_RESIZE,Ve),e(re.ON_APP_ENTER_FOREGROUND,lt),e(re.ON_APP_ENTER_BACKGROUND,Et)}function Ve(e){Xn(br(),re.ON_RESIZE,e),bt.invokeOnCallback("onWindowResize",e)}function lt(e){let t=br();Xn(Kn(),re.ON_SHOW,e),Xn(t,re.ON_SHOW)}function Et(){Xn(Kn(),re.ON_HIDE),Xn(br(),re.ON_HIDE)}let Wt=[re.ON_PAGE_SCROLL,re.ON_REACH_BOTTOM];function mt(){Wt.forEach(e=>bt.subscribe(e,ht(e)))}function ht(e){return(t,n)=>{Xn(parseInt(n),e,t)}}function Mt(){ye(),mt()}function Cn(e){e.$vm=e,e.$mpType="app";let t=Gt.ref(Xe().getLocale());Object.defineProperty(e,"$locale",{get(){return t.value},set(n){t.value=n}})}function Ht(e,t){e.route=t.route,e.$vm=e,e.$page=t,e.$mpType="page",t.meta.isTabBar&&(e.$.__isTabBar=!0,e.$.__isActive=!0)}function ut(){return{path:"",query:{},scene:1001,referrerInfo:{appId:"",extraData:{}}}}function jt(e,t){let n=e.$options||{};n.globalData=se.extend(n.globalData||{},t),Object.defineProperty(e,"globalData",{get(){return n.globalData},set(r){n.globalData=r}})}function Vt(e){if(e.indexOf("//")===0)return"https:"+e;if(re.SCHEME_RE.test(e)||re.DATA_RE.test(e))return e;if(sn(e))return"file://"+Fn(e);let t="file://"+Fn("_www");if(e.indexOf("/")===0)return e.startsWith("/storage/")||e.startsWith("/sdcard/")||e.includes("/Containers/Data/Application/")?"file://"+e:t+e;if(e.indexOf("../")===0||e.indexOf("./")===0){if(typeof __id__=="string")return t+Io(re.addLeadingSlash(__id__),e);{let n=br();if(n)return t+Io(re.addLeadingSlash(n.route),e)}}return e}let Fn=re.cacheStringFunction(e=>l.io.convertLocalFileSystemURL(e).replace(/^\/?apps\//,"/android_asset/apps/").replace(/\/$/,""));function sn(e){return e.indexOf("_www")===0||e.indexOf("_doc")===0||e.indexOf("_documents")===0||e.indexOf("_downloads")===0}let rn="success",kn="fail",Ta=[rn,kn,"complete"];function vn(e,t,n,r){if(!e)return;if(typeof n=="undefined")return e[t]();let[,s]=Pa(n,r);return Object.keys(s).length?e[t](yr(t,s)):e[t]()}function zt(e,t,n,r){if(!e)return;let[s,d]=Pa(n,r);return Object.keys(d).length?e[t](s,yr(t,d)):e[t](s)}function ar(e,t){let n=Br(e,t.$el);return n||console.error("Can not find `"+e+"`")}function Br(e,t){if(!e||!t)return;if(t.attr&&t.attr.id===e)return t;let n=t.children;if(!!n)for(let r=0,s=n.length;r<s;r++){let d=Br(e,n[r]);if(d)return d}}function Pa(e={},t){let n=Object.create(null),r=function(d){let g=e[d];se.isFunction(g)&&(n[d]=g,delete e[d])};return Ta.forEach(r),t&&t.forEach(r),[e,n]}function yr(e,t){return function(r){let s=r.type;delete r.type;let d=t[s];if(s===rn?r.errMsg=`${e}:ok`:s===kn&&(r.errMsg=e+":fail "+(r.msg?" "+r.msg:"")),delete r.code,delete r.msg,se.isFunction(d)&&d(r),s===rn||s===kn){let g=t.complete;se.isFunction(g)&&g(r)}}}let fn={play(e){return vn(e,"play")},pause(e){return vn(e,"pause")},seek(e,t){return zt(e,"seek",t.position)},stop(e){return vn(e,"stop")},sendDanmu(e,t){return zt(e,"sendDanmu",t)},playbackRate(e,t){return zt(e,"playbackRate",t.rate)},requestFullScreen(e,t={}){return zt(e,"requestFullScreen",t)},exitFullScreen(e){return vn(e,"exitFullScreen")},showStatusBar(e){return vn(e,"showStatusBar")},hideStatusBar(e){return vn(e,"hideStatusBar")}};function ui(e,t,n,r){let s=Un().find(d=>d.$page.id===t);if(s==null?void 0:s.$page.meta.isNVue){let d=s.$vm;return fn[n](ar(e,d),r)}bt.invokeViewMethod("video."+e,{videoId:e,type:n,data:r},t)}let Ps={getCenterLocation(e,t){return vn(e,"getCenterLocation",t)},moveToLocation(e,t){return zt(e,"moveToLocation",t)},translateMarker(e,t){return zt(e,"translateMarker",t,["animationEnd"])},includePoints(e,t){return zt(e,"includePoints",t)},getRegion(e,t){return vn(e,"getRegion",t)},getScale(e,t){return vn(e,"getScale",t)},addCustomLayer(e,t){return zt(e,"addCustomLayer",t)},removeCustomLayer(e,t){return zt(e,"removeCustomLayer",t)},addGroundOverlay(e,t){return zt(e,"addGroundOverlay",t)},removeGroundOverlay(e,t){return zt(e,"removeGroundOverlay",t)},updateGroundOverlay(e,t){return zt(e,"updateGroundOverlay",t)},initMarkerCluster(e,t){return zt(e,"initMarkerCluster",t)},addMarkers(e,t){return zt(e,"addMarkers",t)},removeMarkers(e,t){return zt(e,"removeMarkers",t)},moveAlong(e,t){return zt(e,"moveAlong",t)},openMapApp(e,t){return zt(e,"openMapApp",t)},on(e,t){return e.on(t.name,t.callback)}};function Ro(e,t,n,r,s){let d=Un().find(g=>g.$page.id===t);if(d==null?void 0:d.$page.meta.isNVue){let g=d.$vm;return Ps[n](ar(e,g),r)}bt.invokeViewMethod("map."+e,{type:n,data:r},t,s)}function Ci(e){return`IntersectionObserver.${e}`}function xo({reqId:e,component:t,options:n,callback:r},s){let d=Ci(e);bt.invokeViewMethod("addIntersectionObserver",{reqId:e,component:t.$el.nodeId,options:n,eventName:d},s),bt.subscribe(d,r)}function $a({reqId:e,component:t},n){bt.invokeViewMethod("removeIntersectionObserver",{reqId:e,component:t.$el.nodeId},n),bt.unsubscribe(Ci(e))}function Wr(e){return`MediaQueryObserver.${e}`}function fi({reqId:e,component:t,options:n,callback:r},s){let d=Wr(e);bt.invokeViewMethod("addMediaQueryObserver",{reqId:e,component:t.$el.nodeId,options:n,eventName:d},s),bt.subscribe(d,r)}function ra({reqId:e,component:t},n){bt.invokeViewMethod("removeMediaQueryObserver",{reqId:e,component:t.$el.nodeId},n),bt.unsubscribe(Wr(e))}function cs(e){let t=e.split("/");return t[t.length-1]}function us(e){let t=e.split(".");return t.length>1?"."+t[t.length-1]:""}let qo=200,wl=["unknown","none","ethernet","wifi","2g","3g","4g","5g"],Ua="_doc/uniapp_temp",di=`${Ua}_${Date.now()}`,tl="backbutton";function Bo(){ce.navigateBack({from:"backbutton",success(){}})}let fs=ut(),Ha=ut();function ds(){return se.extend({},Ha)}function Ia(){return se.extend({},fs)}function sr({path:e,query:t,referrerInfo:n}){se.extend(fs,{path:e,query:t?re.parseQuery(t):{},referrerInfo:n||{}})}function Rn({path:e,query:t,referrerInfo:n}){return se.extend(Ha,{path:e,query:t?re.parseQuery(t):{},referrerInfo:n||{}}),se.extend(fs,Ha),se.extend({},Ha)}function Nn(){let e=v.requireModule("plus");if(e.getRedirectInfo){let{path:t,query:n,extraData:r,userAction:s,fromAppid:d}=e.getRedirectInfo()||{},g={appId:d,extraData:{}};return r&&(g.extraData=r),{path:t||"",query:n?"?"+n:"",referrerInfo:g,userAction:s}}}function yn(e){var t={exports:{}};return e(t,t.exports),t.exports}var Li=yn(function(e,t){var n=typeof Uint8Array!="undefined"&&typeof Uint16Array!="undefined"&&typeof Int32Array!="undefined";function r(g,y){return Object.prototype.hasOwnProperty.call(g,y)}t.assign=function(g){for(var y=Array.prototype.slice.call(arguments,1);y.length;){var H=y.shift();if(!!H){if(typeof H!="object")throw new TypeError(H+"must be non-object");for(var I in H)r(H,I)&&(g[I]=H[I])}}return g},t.shrinkBuf=function(g,y){return g.length===y?g:g.subarray?g.subarray(0,y):(g.length=y,g)};var s={arraySet:function(g,y,H,I,$){if(y.subarray&&g.subarray){g.set(y.subarray(H,H+I),$);return}for(var pe=0;pe<I;pe++)g[$+pe]=y[H+pe]},flattenChunks:function(g){var y,H,I,$,pe,Ae;for(I=0,y=0,H=g.length;y<H;y++)I+=g[y].length;for(Ae=new Uint8Array(I),$=0,y=0,H=g.length;y<H;y++)pe=g[y],Ae.set(pe,$),$+=pe.length;return Ae}},d={arraySet:function(g,y,H,I,$){for(var pe=0;pe<I;pe++)g[$+pe]=y[H+pe]},flattenChunks:function(g){return[].concat.apply([],g)}};t.setTyped=function(g){g?(t.Buf8=Uint8Array,t.Buf16=Uint16Array,t.Buf32=Int32Array,t.assign(t,s)):(t.Buf8=Array,t.Buf16=Array,t.Buf32=Array,t.assign(t,d))},t.setTyped(n)}),Ct=Li,Fi=4,Fe=0,wt=1,Ot=2;function dn(e){for(var t=e.length;--t>=0;)e[t]=0}var Er=0,ti=1,zr=2,er=3,hi=258,ja=29,Wa=256,Na=Wa+1+ja,Ko=30,za=19,Ya=2*Na+1,An=15,Wn=16,Zl=7,Vi=256,Zi=16,Is=17,nl=18,Sl=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],pi=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],wr=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],Mo=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],rl=512,lr=new Array((Na+2)*2);dn(lr);var Yr=new Array(Ko*2);dn(Yr);var Ns=new Array(rl);dn(Ns);var ks=new Array(hi-er+1);dn(ks);var il=new Array(ja);dn(il);var Rs=new Array(Ko);dn(Rs);function xs(e,t,n,r,s){this.static_tree=e,this.extra_bits=t,this.extra_base=n,this.elems=r,this.max_length=s,this.has_stree=e&&e.length}var ia,Do,hs;function Cl(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}function Xl(e){return e<256?Ns[e]:Ns[256+(e>>>7)]}function Bs(e,t){e.pending_buf[e.pending++]=t&255,e.pending_buf[e.pending++]=t>>>8&255}function $i(e,t,n){e.bi_valid>Wn-n?(e.bi_buf|=t<<e.bi_valid&65535,Bs(e,e.bi_buf),e.bi_buf=t>>Wn-e.bi_valid,e.bi_valid+=n-Wn):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=n)}function Jo(e,t,n){$i(e,n[t*2],n[t*2+1])}function Ql(e,t){var n=0;do n|=e&1,e>>>=1,n<<=1;while(--t>0);return n>>>1}function cr(e){e.bi_valid===16?(Bs(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=e.bi_buf&255,e.bi_buf>>=8,e.bi_valid-=8)}function Mn(e,t){var n=t.dyn_tree,r=t.max_code,s=t.stat_desc.static_tree,d=t.stat_desc.has_stree,g=t.stat_desc.extra_bits,y=t.stat_desc.extra_base,H=t.stat_desc.max_length,I,$,pe,Ae,Be,yt,Dt=0;for(Ae=0;Ae<=An;Ae++)e.bl_count[Ae]=0;for(n[e.heap[e.heap_max]*2+1]=0,I=e.heap_max+1;I<Ya;I++)$=e.heap[I],Ae=n[n[$*2+1]*2+1]+1,Ae>H&&(Ae=H,Dt++),n[$*2+1]=Ae,!($>r)&&(e.bl_count[Ae]++,Be=0,$>=y&&(Be=g[$-y]),yt=n[$*2],e.opt_len+=yt*(Ae+Be),d&&(e.static_len+=yt*(s[$*2+1]+Be)));if(Dt!==0){do{for(Ae=H-1;e.bl_count[Ae]===0;)Ae--;e.bl_count[Ae]--,e.bl_count[Ae+1]+=2,e.bl_count[H]--,Dt-=2}while(Dt>0);for(Ae=H;Ae!==0;Ae--)for($=e.bl_count[Ae];$!==0;)pe=e.heap[--I],!(pe>r)&&(n[pe*2+1]!==Ae&&(e.opt_len+=(Ae-n[pe*2+1])*n[pe*2],n[pe*2+1]=Ae),$--)}}function gi(e,t,n){var r=new Array(An+1),s=0,d,g;for(d=1;d<=An;d++)r[d]=s=s+n[d-1]<<1;for(g=0;g<=t;g++){var y=e[g*2+1];y!==0&&(e[g*2]=Ql(r[y]++,y))}}function Ai(){var e,t,n,r,s,d=new Array(An+1);for(n=0,r=0;r<ja-1;r++)for(il[r]=n,e=0;e<1<<Sl[r];e++)ks[n++]=r;for(ks[n-1]=r,s=0,r=0;r<16;r++)for(Rs[r]=s,e=0;e<1<<pi[r];e++)Ns[s++]=r;for(s>>=7;r<Ko;r++)for(Rs[r]=s<<7,e=0;e<1<<pi[r]-7;e++)Ns[256+s++]=r;for(t=0;t<=An;t++)d[t]=0;for(e=0;e<=143;)lr[e*2+1]=8,e++,d[8]++;for(;e<=255;)lr[e*2+1]=9,e++,d[9]++;for(;e<=279;)lr[e*2+1]=7,e++,d[7]++;for(;e<=287;)lr[e*2+1]=8,e++,d[8]++;for(gi(lr,Na+1,d),e=0;e<Ko;e++)Yr[e*2+1]=5,Yr[e*2]=Ql(e,5);ia=new xs(lr,Sl,Wa+1,Na,An),Do=new xs(Yr,pi,0,Ko,An),hs=new xs(new Array(0),wr,0,za,Zl)}function oa(e){var t;for(t=0;t<Na;t++)e.dyn_ltree[t*2]=0;for(t=0;t<Ko;t++)e.dyn_dtree[t*2]=0;for(t=0;t<za;t++)e.bl_tree[t*2]=0;e.dyn_ltree[Vi*2]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0}function ol(e){e.bi_valid>8?Bs(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0}function al(e,t,n,r){ol(e),r&&(Bs(e,n),Bs(e,~n)),Ct.arraySet(e.pending_buf,e.window,t,n,e.pending),e.pending+=n}function Al(e,t,n,r){var s=t*2,d=n*2;return e[s]<e[d]||e[s]===e[d]&&r[t]<=r[n]}function sl(e,t,n){for(var r=e.heap[n],s=n<<1;s<=e.heap_len&&(s<e.heap_len&&Al(t,e.heap[s+1],e.heap[s],e.depth)&&s++,!Al(t,r,e.heap[s],e.depth));)e.heap[n]=e.heap[s],n=s,s<<=1;e.heap[n]=r}function ll(e,t,n){var r,s,d=0,g,y;if(e.last_lit!==0)do r=e.pending_buf[e.d_buf+d*2]<<8|e.pending_buf[e.d_buf+d*2+1],s=e.pending_buf[e.l_buf+d],d++,r===0?Jo(e,s,t):(g=ks[s],Jo(e,g+Wa+1,t),y=Sl[g],y!==0&&(s-=il[g],$i(e,s,y)),r--,g=Xl(r),Jo(e,g,n),y=pi[g],y!==0&&(r-=Rs[g],$i(e,r,y)));while(d<e.last_lit);Jo(e,Vi,t)}function aa(e,t){var n=t.dyn_tree,r=t.stat_desc.static_tree,s=t.stat_desc.has_stree,d=t.stat_desc.elems,g,y,H=-1,I;for(e.heap_len=0,e.heap_max=Ya,g=0;g<d;g++)n[g*2]!==0?(e.heap[++e.heap_len]=H=g,e.depth[g]=0):n[g*2+1]=0;for(;e.heap_len<2;)I=e.heap[++e.heap_len]=H<2?++H:0,n[I*2]=1,e.depth[I]=0,e.opt_len--,s&&(e.static_len-=r[I*2+1]);for(t.max_code=H,g=e.heap_len>>1;g>=1;g--)sl(e,n,g);I=d;do g=e.heap[1],e.heap[1]=e.heap[e.heap_len--],sl(e,n,1),y=e.heap[1],e.heap[--e.heap_max]=g,e.heap[--e.heap_max]=y,n[I*2]=n[g*2]+n[y*2],e.depth[I]=(e.depth[g]>=e.depth[y]?e.depth[g]:e.depth[y])+1,n[g*2+1]=n[y*2+1]=I,e.heap[1]=I++,sl(e,n,1);while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],Mn(e,t),gi(n,H,e.bl_count)}function ka(e,t,n){var r,s=-1,d,g=t[0*2+1],y=0,H=7,I=4;for(g===0&&(H=138,I=3),t[(n+1)*2+1]=65535,r=0;r<=n;r++)d=g,g=t[(r+1)*2+1],!(++y<H&&d===g)&&(y<I?e.bl_tree[d*2]+=y:d!==0?(d!==s&&e.bl_tree[d*2]++,e.bl_tree[Zi*2]++):y<=10?e.bl_tree[Is*2]++:e.bl_tree[nl*2]++,y=0,s=d,g===0?(H=138,I=3):d===g?(H=6,I=3):(H=7,I=4))}function cl(e,t,n){var r,s=-1,d,g=t[0*2+1],y=0,H=7,I=4;for(g===0&&(H=138,I=3),r=0;r<=n;r++)if(d=g,g=t[(r+1)*2+1],!(++y<H&&d===g)){if(y<I)do Jo(e,d,e.bl_tree);while(--y!==0);else d!==0?(d!==s&&(Jo(e,d,e.bl_tree),y--),Jo(e,Zi,e.bl_tree),$i(e,y-3,2)):y<=10?(Jo(e,Is,e.bl_tree),$i(e,y-3,3)):(Jo(e,nl,e.bl_tree),$i(e,y-11,7));y=0,s=d,g===0?(H=138,I=3):d===g?(H=6,I=3):(H=7,I=4)}}function ec(e){var t;for(ka(e,e.dyn_ltree,e.l_desc.max_code),ka(e,e.dyn_dtree,e.d_desc.max_code),aa(e,e.bl_desc),t=za-1;t>=3&&e.bl_tree[Mo[t]*2+1]===0;t--);return e.opt_len+=3*(t+1)+5+5+4,t}function Ol(e,t,n,r){var s;for($i(e,t-257,5),$i(e,n-1,5),$i(e,r-4,4),s=0;s<r;s++)$i(e,e.bl_tree[Mo[s]*2+1],3);cl(e,e.dyn_ltree,t-1),cl(e,e.dyn_dtree,n-1)}function tc(e){var t=4093624447,n;for(n=0;n<=31;n++,t>>>=1)if(t&1&&e.dyn_ltree[n*2]!==0)return Fe;if(e.dyn_ltree[9*2]!==0||e.dyn_ltree[10*2]!==0||e.dyn_ltree[13*2]!==0)return wt;for(n=32;n<Wa;n++)if(e.dyn_ltree[n*2]!==0)return wt;return Fe}var Tl=!1;function Ms(e){Tl||(Ai(),Tl=!0),e.l_desc=new Cl(e.dyn_ltree,ia),e.d_desc=new Cl(e.dyn_dtree,Do),e.bl_desc=new Cl(e.bl_tree,hs),e.bi_buf=0,e.bi_valid=0,oa(e)}function Ds(e,t,n,r){$i(e,(Er<<1)+(r?1:0),3),al(e,t,n,!0)}function Mc(e){$i(e,ti<<1,3),Jo(e,Vi,lr),cr(e)}function Ls(e,t,n,r){var s,d,g=0;e.level>0?(e.strm.data_type===Ot&&(e.strm.data_type=tc(e)),aa(e,e.l_desc),aa(e,e.d_desc),g=ec(e),s=e.opt_len+3+7>>>3,d=e.static_len+3+7>>>3,d<=s&&(s=d)):s=d=n+5,n+4<=s&&t!==-1?Ds(e,t,n,r):e.strategy===Fi||d===s?($i(e,(ti<<1)+(r?1:0),3),ll(e,lr,Yr)):($i(e,(zr<<1)+(r?1:0),3),Ol(e,e.l_desc.max_code+1,e.d_desc.max_code+1,g+1),ll(e,e.dyn_ltree,e.dyn_dtree)),oa(e),r&&ol(e)}function Ra(e,t,n){return e.pending_buf[e.d_buf+e.last_lit*2]=t>>>8&255,e.pending_buf[e.d_buf+e.last_lit*2+1]=t&255,e.pending_buf[e.l_buf+e.last_lit]=n&255,e.last_lit++,t===0?e.dyn_ltree[n*2]++:(e.matches++,t--,e.dyn_ltree[(ks[n]+Wa+1)*2]++,e.dyn_dtree[Xl(t)*2]++),e.last_lit===e.lit_bufsize-1}var Fs=Ms,Pl=Ds,Vs=Ls,ul=Ra,Dc=Mc,Lc={_tr_init:Fs,_tr_stored_block:Pl,_tr_flush_block:Vs,_tr_tally:ul,_tr_align:Dc};function Fc(e,t,n,r){for(var s=e&65535|0,d=e>>>16&65535|0,g=0;n!==0;){g=n>2e3?2e3:n,n-=g;do s=s+t[r++]|0,d=d+s|0;while(--g);s%=65521,d%=65521}return s|d<<16|0}var Vc=Fc;function $c(){for(var e,t=[],n=0;n<256;n++){e=n;for(var r=0;r<8;r++)e=e&1?3988292384^e>>>1:e>>>1;t[n]=e}return t}var nc=$c();function rc(e,t,n,r){var s=nc,d=r+n;e^=-1;for(var g=r;g<d;g++)e=e>>>8^s[(e^t[g])&255];return e^-1}var Uc=rc,Hc={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},go=Lc,Ga=Vc,Mr=Uc,sa=Hc,la=0,jc=1,ic=3,Lo=4,fl=5,Zo=0,oc=1,vi=-2,Il=-3,ps=-5,ac=-1,dl=1,gs=2,sc=3,Wc=4,zc=0,lc=2,$s=8,cc=9,uc=15,fc=8,Nl=29,dc=256,hl=dc+1+Nl,Yc=30,Gc=19,qc=2*hl+1,kl=15,hn=3,Oi=258,Ti=Oi+hn+1,Rl=32,Us=42,xl=69,Fo=73,Hs=91,js=103,qa=113,Ka=666,Dr=1,Xi=2,Qi=3,Ja=4,Bl=3;function ca(e,t){return e.msg=sa[t],t}function Ml(e){return(e<<1)-(e>4?9:0)}function ua(e){for(var t=e.length;--t>=0;)e[t]=0}function fa(e){var t=e.state,n=t.pending;n>e.avail_out&&(n=e.avail_out),n!==0&&(Ct.arraySet(e.output,t.pending_buf,t.pending_out,n,e.next_out),e.next_out+=n,t.pending_out+=n,e.total_out+=n,e.avail_out-=n,t.pending-=n,t.pending===0&&(t.pending_out=0))}function Gr(e,t){go._tr_flush_block(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,fa(e.strm)}function En(e,t){e.pending_buf[e.pending++]=t}function Za(e,t){e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=t&255}function Kc(e,t,n,r){var s=e.avail_in;return s>r&&(s=r),s===0?0:(e.avail_in-=s,Ct.arraySet(t,e.input,e.next_in,s,n),e.state.wrap===1?e.adler=Ga(e.adler,t,s,n):e.state.wrap===2&&(e.adler=Mr(e.adler,t,s,n)),e.next_in+=s,e.total_in+=s,s)}function hc(e,t){var n=e.max_chain_length,r=e.strstart,s,d,g=e.prev_length,y=e.nice_match,H=e.strstart>e.w_size-Ti?e.strstart-(e.w_size-Ti):0,I=e.window,$=e.w_mask,pe=e.prev,Ae=e.strstart+Oi,Be=I[r+g-1],yt=I[r+g];e.prev_length>=e.good_match&&(n>>=2),y>e.lookahead&&(y=e.lookahead);do if(s=t,!(I[s+g]!==yt||I[s+g-1]!==Be||I[s]!==I[r]||I[++s]!==I[r+1])){r+=2,s++;do;while(I[++r]===I[++s]&&I[++r]===I[++s]&&I[++r]===I[++s]&&I[++r]===I[++s]&&I[++r]===I[++s]&&I[++r]===I[++s]&&I[++r]===I[++s]&&I[++r]===I[++s]&&r<Ae);if(d=Oi-(Ae-r),r=Ae-Oi,d>g){if(e.match_start=t,g=d,d>=y)break;Be=I[r+g-1],yt=I[r+g]}}while((t=pe[t&$])>H&&--n!==0);return g<=e.lookahead?g:e.lookahead}function o(e){var t=e.w_size,n,r,s,d,g;do{if(d=e.window_size-e.lookahead-e.strstart,e.strstart>=t+(t-Ti)){Ct.arraySet(e.window,e.window,t,t,0),e.match_start-=t,e.strstart-=t,e.block_start-=t,r=e.hash_size,n=r;do s=e.head[--n],e.head[n]=s>=t?s-t:0;while(--r);r=t,n=r;do s=e.prev[--n],e.prev[n]=s>=t?s-t:0;while(--r);d+=t}if(e.strm.avail_in===0)break;if(r=Kc(e.strm,e.window,e.strstart+e.lookahead,d),e.lookahead+=r,e.lookahead+e.insert>=hn)for(g=e.strstart-e.insert,e.ins_h=e.window[g],e.ins_h=(e.ins_h<<e.hash_shift^e.window[g+1])&e.hash_mask;e.insert&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[g+hn-1])&e.hash_mask,e.prev[g&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=g,g++,e.insert--,!(e.lookahead+e.insert<hn)););}while(e.lookahead<Ti&&e.strm.avail_in!==0)}function c(e,t){var n=65535;for(n>e.pending_buf_size-5&&(n=e.pending_buf_size-5);;){if(e.lookahead<=1){if(o(e),e.lookahead===0&&t===la)return Dr;if(e.lookahead===0)break}e.strstart+=e.lookahead,e.lookahead=0;var r=e.block_start+n;if((e.strstart===0||e.strstart>=r)&&(e.lookahead=e.strstart-r,e.strstart=r,Gr(e,!1),e.strm.avail_out===0)||e.strstart-e.block_start>=e.w_size-Ti&&(Gr(e,!1),e.strm.avail_out===0))return Dr}return e.insert=0,t===Lo?(Gr(e,!0),e.strm.avail_out===0?Qi:Ja):(e.strstart>e.block_start&&(Gr(e,!1),e.strm.avail_out===0),Dr)}function h(e,t){for(var n,r;;){if(e.lookahead<Ti){if(o(e),e.lookahead<Ti&&t===la)return Dr;if(e.lookahead===0)break}if(n=0,e.lookahead>=hn&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+hn-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),n!==0&&e.strstart-n<=e.w_size-Ti&&(e.match_length=hc(e,n)),e.match_length>=hn)if(r=go._tr_tally(e,e.strstart-e.match_start,e.match_length-hn),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=hn){e.match_length--;do e.strstart++,e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+hn-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart;while(--e.match_length!==0);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+1])&e.hash_mask;else r=go._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(r&&(Gr(e,!1),e.strm.avail_out===0))return Dr}return e.insert=e.strstart<hn-1?e.strstart:hn-1,t===Lo?(Gr(e,!0),e.strm.avail_out===0?Qi:Ja):e.last_lit&&(Gr(e,!1),e.strm.avail_out===0)?Dr:Xi}function m(e,t){for(var n,r,s;;){if(e.lookahead<Ti){if(o(e),e.lookahead<Ti&&t===la)return Dr;if(e.lookahead===0)break}if(n=0,e.lookahead>=hn&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+hn-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=hn-1,n!==0&&e.prev_length<e.max_lazy_match&&e.strstart-n<=e.w_size-Ti&&(e.match_length=hc(e,n),e.match_length<=5&&(e.strategy===dl||e.match_length===hn&&e.strstart-e.match_start>4096)&&(e.match_length=hn-1)),e.prev_length>=hn&&e.match_length<=e.prev_length){s=e.strstart+e.lookahead-hn,r=go._tr_tally(e,e.strstart-1-e.prev_match,e.prev_length-hn),e.lookahead-=e.prev_length-1,e.prev_length-=2;do++e.strstart<=s&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+hn-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart);while(--e.prev_length!==0);if(e.match_available=0,e.match_length=hn-1,e.strstart++,r&&(Gr(e,!1),e.strm.avail_out===0))return Dr}else if(e.match_available){if(r=go._tr_tally(e,0,e.window[e.strstart-1]),r&&Gr(e,!1),e.strstart++,e.lookahead--,e.strm.avail_out===0)return Dr}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(r=go._tr_tally(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<hn-1?e.strstart:hn-1,t===Lo?(Gr(e,!0),e.strm.avail_out===0?Qi:Ja):e.last_lit&&(Gr(e,!1),e.strm.avail_out===0)?Dr:Xi}function C(e,t){for(var n,r,s,d,g=e.window;;){if(e.lookahead<=Oi){if(o(e),e.lookahead<=Oi&&t===la)return Dr;if(e.lookahead===0)break}if(e.match_length=0,e.lookahead>=hn&&e.strstart>0&&(s=e.strstart-1,r=g[s],r===g[++s]&&r===g[++s]&&r===g[++s])){d=e.strstart+Oi;do;while(r===g[++s]&&r===g[++s]&&r===g[++s]&&r===g[++s]&&r===g[++s]&&r===g[++s]&&r===g[++s]&&r===g[++s]&&s<d);e.match_length=Oi-(d-s),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=hn?(n=go._tr_tally(e,1,e.match_length-hn),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(n=go._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),n&&(Gr(e,!1),e.strm.avail_out===0))return Dr}return e.insert=0,t===Lo?(Gr(e,!0),e.strm.avail_out===0?Qi:Ja):e.last_lit&&(Gr(e,!1),e.strm.avail_out===0)?Dr:Xi}function T(e,t){for(var n;;){if(e.lookahead===0&&(o(e),e.lookahead===0)){if(t===la)return Dr;break}if(e.match_length=0,n=go._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,n&&(Gr(e,!1),e.strm.avail_out===0))return Dr}return e.insert=0,t===Lo?(Gr(e,!0),e.strm.avail_out===0?Qi:Ja):e.last_lit&&(Gr(e,!1),e.strm.avail_out===0)?Dr:Xi}function B(e,t,n,r,s){this.good_length=e,this.max_lazy=t,this.nice_length=n,this.max_chain=r,this.func=s}var Y;Y=[new B(0,0,0,0,c),new B(4,4,8,4,h),new B(4,5,16,8,h),new B(4,6,32,32,h),new B(4,4,16,16,m),new B(8,16,32,32,m),new B(8,16,128,128,m),new B(8,32,128,256,m),new B(32,128,258,1024,m),new B(32,258,258,4096,m)];function U(e){e.window_size=2*e.w_size,ua(e.head),e.max_lazy_match=Y[e.level].max_lazy,e.good_match=Y[e.level].good_length,e.nice_match=Y[e.level].nice_length,e.max_chain_length=Y[e.level].max_chain,e.strstart=0,e.block_start=0,e.lookahead=0,e.insert=0,e.match_length=e.prev_length=hn-1,e.match_available=0,e.ins_h=0}function Q(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$s,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Ct.Buf16(qc*2),this.dyn_dtree=new Ct.Buf16((2*Yc+1)*2),this.bl_tree=new Ct.Buf16((2*Gc+1)*2),ua(this.dyn_ltree),ua(this.dyn_dtree),ua(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Ct.Buf16(kl+1),this.heap=new Ct.Buf16(2*hl+1),ua(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Ct.Buf16(2*hl+1),ua(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function Se(e){var t;return!e||!e.state?ca(e,vi):(e.total_in=e.total_out=0,e.data_type=lc,t=e.state,t.pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?Us:qa,e.adler=t.wrap===2?0:1,t.last_flush=la,go._tr_init(t),Zo)}function fe(e){var t=Se(e);return t===Zo&&U(e.state),t}function oe(e,t){return!e||!e.state||e.state.wrap!==2?vi:(e.state.gzhead=t,Zo)}function Ye(e,t,n,r,s,d){if(!e)return vi;var g=1;if(t===ac&&(t=6),r<0?(g=0,r=-r):r>15&&(g=2,r-=16),s<1||s>cc||n!==$s||r<8||r>15||t<0||t>9||d<0||d>Wc)return ca(e,vi);r===8&&(r=9);var y=new Q;return e.state=y,y.strm=e,y.wrap=g,y.gzhead=null,y.w_bits=r,y.w_size=1<<y.w_bits,y.w_mask=y.w_size-1,y.hash_bits=s+7,y.hash_size=1<<y.hash_bits,y.hash_mask=y.hash_size-1,y.hash_shift=~~((y.hash_bits+hn-1)/hn),y.window=new Ct.Buf8(y.w_size*2),y.head=new Ct.Buf16(y.hash_size),y.prev=new Ct.Buf16(y.w_size),y.lit_bufsize=1<<s+6,y.pending_buf_size=y.lit_bufsize*4,y.pending_buf=new Ct.Buf8(y.pending_buf_size),y.d_buf=1*y.lit_bufsize,y.l_buf=(1+2)*y.lit_bufsize,y.level=t,y.strategy=d,y.method=n,fe(e)}function qe(e,t){return Ye(e,t,$s,uc,fc,zc)}function dt(e,t){var n,r,s,d;if(!e||!e.state||t>fl||t<0)return e?ca(e,vi):vi;if(r=e.state,!e.output||!e.input&&e.avail_in!==0||r.status===Ka&&t!==Lo)return ca(e,e.avail_out===0?ps:vi);if(r.strm=e,n=r.last_flush,r.last_flush=t,r.status===Us)if(r.wrap===2)e.adler=0,En(r,31),En(r,139),En(r,8),r.gzhead?(En(r,(r.gzhead.text?1:0)+(r.gzhead.hcrc?2:0)+(r.gzhead.extra?4:0)+(r.gzhead.name?8:0)+(r.gzhead.comment?16:0)),En(r,r.gzhead.time&255),En(r,r.gzhead.time>>8&255),En(r,r.gzhead.time>>16&255),En(r,r.gzhead.time>>24&255),En(r,r.level===9?2:r.strategy>=gs||r.level<2?4:0),En(r,r.gzhead.os&255),r.gzhead.extra&&r.gzhead.extra.length&&(En(r,r.gzhead.extra.length&255),En(r,r.gzhead.extra.length>>8&255)),r.gzhead.hcrc&&(e.adler=Mr(e.adler,r.pending_buf,r.pending,0)),r.gzindex=0,r.status=xl):(En(r,0),En(r,0),En(r,0),En(r,0),En(r,0),En(r,r.level===9?2:r.strategy>=gs||r.level<2?4:0),En(r,Bl),r.status=qa);else{var g=$s+(r.w_bits-8<<4)<<8,y=-1;r.strategy>=gs||r.level<2?y=0:r.level<6?y=1:r.level===6?y=2:y=3,g|=y<<6,r.strstart!==0&&(g|=Rl),g+=31-g%31,r.status=qa,Za(r,g),r.strstart!==0&&(Za(r,e.adler>>>16),Za(r,e.adler&65535)),e.adler=1}if(r.status===xl)if(r.gzhead.extra){for(s=r.pending;r.gzindex<(r.gzhead.extra.length&65535)&&!(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>s&&(e.adler=Mr(e.adler,r.pending_buf,r.pending-s,s)),fa(e),s=r.pending,r.pending===r.pending_buf_size));)En(r,r.gzhead.extra[r.gzindex]&255),r.gzindex++;r.gzhead.hcrc&&r.pending>s&&(e.adler=Mr(e.adler,r.pending_buf,r.pending-s,s)),r.gzindex===r.gzhead.extra.length&&(r.gzindex=0,r.status=Fo)}else r.status=Fo;if(r.status===Fo)if(r.gzhead.name){s=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>s&&(e.adler=Mr(e.adler,r.pending_buf,r.pending-s,s)),fa(e),s=r.pending,r.pending===r.pending_buf_size)){d=1;break}r.gzindex<r.gzhead.name.length?d=r.gzhead.name.charCodeAt(r.gzindex++)&255:d=0,En(r,d)}while(d!==0);r.gzhead.hcrc&&r.pending>s&&(e.adler=Mr(e.adler,r.pending_buf,r.pending-s,s)),d===0&&(r.gzindex=0,r.status=Hs)}else r.status=Hs;if(r.status===Hs)if(r.gzhead.comment){s=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>s&&(e.adler=Mr(e.adler,r.pending_buf,r.pending-s,s)),fa(e),s=r.pending,r.pending===r.pending_buf_size)){d=1;break}r.gzindex<r.gzhead.comment.length?d=r.gzhead.comment.charCodeAt(r.gzindex++)&255:d=0,En(r,d)}while(d!==0);r.gzhead.hcrc&&r.pending>s&&(e.adler=Mr(e.adler,r.pending_buf,r.pending-s,s)),d===0&&(r.status=js)}else r.status=js;if(r.status===js&&(r.gzhead.hcrc?(r.pending+2>r.pending_buf_size&&fa(e),r.pending+2<=r.pending_buf_size&&(En(r,e.adler&255),En(r,e.adler>>8&255),e.adler=0,r.status=qa)):r.status=qa),r.pending!==0){if(fa(e),e.avail_out===0)return r.last_flush=-1,Zo}else if(e.avail_in===0&&Ml(t)<=Ml(n)&&t!==Lo)return ca(e,ps);if(r.status===Ka&&e.avail_in!==0)return ca(e,ps);if(e.avail_in!==0||r.lookahead!==0||t!==la&&r.status!==Ka){var H=r.strategy===gs?T(r,t):r.strategy===sc?C(r,t):Y[r.level].func(r,t);if((H===Qi||H===Ja)&&(r.status=Ka),H===Dr||H===Qi)return e.avail_out===0&&(r.last_flush=-1),Zo;if(H===Xi&&(t===jc?go._tr_align(r):t!==fl&&(go._tr_stored_block(r,0,0,!1),t===ic&&(ua(r.head),r.lookahead===0&&(r.strstart=0,r.block_start=0,r.insert=0))),fa(e),e.avail_out===0))return r.last_flush=-1,Zo}return t!==Lo?Zo:r.wrap<=0?oc:(r.wrap===2?(En(r,e.adler&255),En(r,e.adler>>8&255),En(r,e.adler>>16&255),En(r,e.adler>>24&255),En(r,e.total_in&255),En(r,e.total_in>>8&255),En(r,e.total_in>>16&255),En(r,e.total_in>>24&255)):(Za(r,e.adler>>>16),Za(r,e.adler&65535)),fa(e),r.wrap>0&&(r.wrap=-r.wrap),r.pending!==0?Zo:oc)}function Ee(e){var t;return!e||!e.state?vi:(t=e.state.status,t!==Us&&t!==xl&&t!==Fo&&t!==Hs&&t!==js&&t!==qa&&t!==Ka?ca(e,vi):(e.state=null,t===qa?ca(e,Il):Zo))}function Pe(e,t){var n=t.length,r,s,d,g,y,H,I,$;if(!e||!e.state||(r=e.state,g=r.wrap,g===2||g===1&&r.status!==Us||r.lookahead))return vi;for(g===1&&(e.adler=Ga(e.adler,t,n,0)),r.wrap=0,n>=r.w_size&&(g===0&&(ua(r.head),r.strstart=0,r.block_start=0,r.insert=0),$=new Ct.Buf8(r.w_size),Ct.arraySet($,t,n-r.w_size,r.w_size,0),t=$,n=r.w_size),y=e.avail_in,H=e.next_in,I=e.input,e.avail_in=n,e.next_in=0,e.input=t,o(r);r.lookahead>=hn;){s=r.strstart,d=r.lookahead-(hn-1);do r.ins_h=(r.ins_h<<r.hash_shift^r.window[s+hn-1])&r.hash_mask,r.prev[s&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=s,s++;while(--d);r.strstart=s,r.lookahead=hn-1,o(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=hn-1,r.match_available=0,e.next_in=H,e.input=I,e.avail_in=y,r.wrap=g,Zo}var De=qe,Ne=Ye,ot=fe,Ze=Se,i=oe,a=dt,f=Ee,p=Pe,E="pako deflate (from Nodeca project)",w={deflateInit:De,deflateInit2:Ne,deflateReset:ot,deflateResetKeep:Ze,deflateSetHeader:i,deflate:a,deflateEnd:f,deflateSetDictionary:p,deflateInfo:E},N=!0,V=!0;try{String.fromCharCode.apply(null,[0])}catch(e){N=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){V=!1}for(var D=new Ct.Buf8(256),K=0;K<256;K++)D[K]=K>=252?6:K>=248?5:K>=240?4:K>=224?3:K>=192?2:1;D[254]=D[254]=1;var ae=function(e){var t,n,r,s,d,g=e.length,y=0;for(s=0;s<g;s++)n=e.charCodeAt(s),(n&64512)===55296&&s+1<g&&(r=e.charCodeAt(s+1),(r&64512)===56320&&(n=65536+(n-55296<<10)+(r-56320),s++)),y+=n<128?1:n<2048?2:n<65536?3:4;for(t=new Ct.Buf8(y),d=0,s=0;d<y;s++)n=e.charCodeAt(s),(n&64512)===55296&&s+1<g&&(r=e.charCodeAt(s+1),(r&64512)===56320&&(n=65536+(n-55296<<10)+(r-56320),s++)),n<128?t[d++]=n:n<2048?(t[d++]=192|n>>>6,t[d++]=128|n&63):n<65536?(t[d++]=224|n>>>12,t[d++]=128|n>>>6&63,t[d++]=128|n&63):(t[d++]=240|n>>>18,t[d++]=128|n>>>12&63,t[d++]=128|n>>>6&63,t[d++]=128|n&63);return t};function ie(e,t){if(t<65534&&(e.subarray&&V||!e.subarray&&N))return String.fromCharCode.apply(null,Ct.shrinkBuf(e,t));for(var n="",r=0;r<t;r++)n+=String.fromCharCode(e[r]);return n}var te=function(e){return ie(e,e.length)},Oe=function(e){for(var t=new Ct.Buf8(e.length),n=0,r=t.length;n<r;n++)t[n]=e.charCodeAt(n);return t},He=function(e,t){var n,r,s,d,g=t||e.length,y=new Array(g*2);for(r=0,n=0;n<g;){if(s=e[n++],s<128){y[r++]=s;continue}if(d=D[s],d>4){y[r++]=65533,n+=d-1;continue}for(s&=d===2?31:d===3?15:7;d>1&&n<g;)s=s<<6|e[n++]&63,d--;if(d>1){y[r++]=65533;continue}s<65536?y[r++]=s:(s-=65536,y[r++]=55296|s>>10&1023,y[r++]=56320|s&1023)}return ie(y,r)},at=function(e,t){var n;for(t=t||e.length,t>e.length&&(t=e.length),n=t-1;n>=0&&(e[n]&192)===128;)n--;return n<0||n===0?t:n+D[e[n]]>t?n:t},me={string2buf:ae,buf2binstring:te,binstring2buf:Oe,buf2string:He,utf8border:at};function Ce(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}var _e=Ce,ve=w,Je=me,Te=_e,it=Object.prototype.toString,je=0,pt=4,kt=0,Rt=1,xt=2,Pt=-1,R=0,q=8;function le(e){if(!(this instanceof le))return new le(e);this.options=Ct.assign({level:Pt,method:q,chunkSize:16384,windowBits:15,memLevel:8,strategy:R,to:""},e||{});var t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new Te,this.strm.avail_out=0;var n=ve.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(n!==kt)throw new Error(sa[n]);if(t.header&&ve.deflateSetHeader(this.strm,t.header),t.dictionary){var r;if(typeof t.dictionary=="string"?r=Je.string2buf(t.dictionary):it.call(t.dictionary)==="[object ArrayBuffer]"?r=new Uint8Array(t.dictionary):r=t.dictionary,n=ve.deflateSetDictionary(this.strm,r),n!==kt)throw new Error(sa[n]);this._dict_set=!0}}le.prototype.push=function(e,t){var n=this.strm,r=this.options.chunkSize,s,d;if(this.ended)return!1;d=t===~~t?t:t===!0?pt:je,typeof e=="string"?n.input=Je.string2buf(e):it.call(e)==="[object ArrayBuffer]"?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;do{if(n.avail_out===0&&(n.output=new Ct.Buf8(r),n.next_out=0,n.avail_out=r),s=ve.deflate(n,d),s!==Rt&&s!==kt)return this.onEnd(s),this.ended=!0,!1;(n.avail_out===0||n.avail_in===0&&(d===pt||d===xt))&&(this.options.to==="string"?this.onData(Je.buf2binstring(Ct.shrinkBuf(n.output,n.next_out))):this.onData(Ct.shrinkBuf(n.output,n.next_out)))}while((n.avail_in>0||n.avail_out===0)&&s!==Rt);return d===pt?(s=ve.deflateEnd(this.strm),this.onEnd(s),this.ended=!0,s===kt):(d===xt&&(this.onEnd(kt),n.avail_out=0),!0)},le.prototype.onData=function(e){this.chunks.push(e)},le.prototype.onEnd=function(e){e===kt&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=Ct.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};function we(e,t){var n=new le(t);if(n.push(e,!0),n.err)throw n.msg||sa[n.err];return n.result}function xe(e,t){return t=t||{},t.raw=!0,we(e,t)}function tt(e,t){return t=t||{},t.gzip=!0,we(e,t)}var ft=le,Qe=we,nt=xe,Ge=tt,Bt={Deflate:ft,deflate:Qe,deflateRaw:nt,gzip:Ge},vt=30,It=12,on=function(t,n){var r,s,d,g,y,H,I,$,pe,Ae,Be,yt,Dt,Qt,Lt,$n,zn,pn,_t,Sn,ln,Jt,Tn,Ar,Zt;r=t.state,s=t.next_in,Ar=t.input,d=s+(t.avail_in-5),g=t.next_out,Zt=t.output,y=g-(n-t.avail_out),H=g+(t.avail_out-257),I=r.dmax,$=r.wsize,pe=r.whave,Ae=r.wnext,Be=r.window,yt=r.hold,Dt=r.bits,Qt=r.lencode,Lt=r.distcode,$n=(1<<r.lenbits)-1,zn=(1<<r.distbits)-1;e:do{Dt<15&&(yt+=Ar[s++]<<Dt,Dt+=8,yt+=Ar[s++]<<Dt,Dt+=8),pn=Qt[yt&$n];t:for(;;){if(_t=pn>>>24,yt>>>=_t,Dt-=_t,_t=pn>>>16&255,_t===0)Zt[g++]=pn&65535;else if(_t&16){Sn=pn&65535,_t&=15,_t&&(Dt<_t&&(yt+=Ar[s++]<<Dt,Dt+=8),Sn+=yt&(1<<_t)-1,yt>>>=_t,Dt-=_t),Dt<15&&(yt+=Ar[s++]<<Dt,Dt+=8,yt+=Ar[s++]<<Dt,Dt+=8),pn=Lt[yt&zn];n:for(;;){if(_t=pn>>>24,yt>>>=_t,Dt-=_t,_t=pn>>>16&255,_t&16){if(ln=pn&65535,_t&=15,Dt<_t&&(yt+=Ar[s++]<<Dt,Dt+=8,Dt<_t&&(yt+=Ar[s++]<<Dt,Dt+=8)),ln+=yt&(1<<_t)-1,ln>I){t.msg="invalid distance too far back",r.mode=vt;break e}if(yt>>>=_t,Dt-=_t,_t=g-y,ln>_t){if(_t=ln-_t,_t>pe&&r.sane){t.msg="invalid distance too far back",r.mode=vt;break e}if(Jt=0,Tn=Be,Ae===0){if(Jt+=$-_t,_t<Sn){Sn-=_t;do Zt[g++]=Be[Jt++];while(--_t);Jt=g-ln,Tn=Zt}}else if(Ae<_t){if(Jt+=$+Ae-_t,_t-=Ae,_t<Sn){Sn-=_t;do Zt[g++]=Be[Jt++];while(--_t);if(Jt=0,Ae<Sn){_t=Ae,Sn-=_t;do Zt[g++]=Be[Jt++];while(--_t);Jt=g-ln,Tn=Zt}}}else if(Jt+=Ae-_t,_t<Sn){Sn-=_t;do Zt[g++]=Be[Jt++];while(--_t);Jt=g-ln,Tn=Zt}for(;Sn>2;)Zt[g++]=Tn[Jt++],Zt[g++]=Tn[Jt++],Zt[g++]=Tn[Jt++],Sn-=3;Sn&&(Zt[g++]=Tn[Jt++],Sn>1&&(Zt[g++]=Tn[Jt++]))}else{Jt=g-ln;do Zt[g++]=Zt[Jt++],Zt[g++]=Zt[Jt++],Zt[g++]=Zt[Jt++],Sn-=3;while(Sn>2);Sn&&(Zt[g++]=Zt[Jt++],Sn>1&&(Zt[g++]=Zt[Jt++]))}}else if((_t&64)===0){pn=Lt[(pn&65535)+(yt&(1<<_t)-1)];continue n}else{t.msg="invalid distance code",r.mode=vt;break e}break}}else if((_t&64)===0){pn=Qt[(pn&65535)+(yt&(1<<_t)-1)];continue t}else if(_t&32){r.mode=It;break e}else{t.msg="invalid literal/length code",r.mode=vt;break e}break}}while(s<d&&g<H);Sn=Dt>>3,s-=Sn,Dt-=Sn<<3,yt&=(1<<Dt)-1,t.next_in=s,t.next_out=g,t.avail_in=s<d?5+(d-s):5-(s-d),t.avail_out=g<H?257+(H-g):257-(g-H),r.hold=yt,r.bits=Dt},Yt=15,Xt=852,wn=592,Vn=0,eo=1,Ui=2,dr=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],xa=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],W=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],Z=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64],ge=function(t,n,r,s,d,g,y,H){var I=H.bits,$=0,pe=0,Ae=0,Be=0,yt=0,Dt=0,Qt=0,Lt=0,$n=0,zn=0,pn,_t,Sn,ln,Jt,Tn=null,Ar=0,Zt,rs=new Ct.Buf16(Yt+1),Uu=new Ct.Buf16(Yt+1),Hu=null,fg=0,dg,ju,Wu;for($=0;$<=Yt;$++)rs[$]=0;for(pe=0;pe<s;pe++)rs[n[r+pe]]++;for(yt=I,Be=Yt;Be>=1&&rs[Be]===0;Be--);if(yt>Be&&(yt=Be),Be===0)return d[g++]=1<<24|64<<16|0,d[g++]=1<<24|64<<16|0,H.bits=1,0;for(Ae=1;Ae<Be&&rs[Ae]===0;Ae++);for(yt<Ae&&(yt=Ae),Lt=1,$=1;$<=Yt;$++)if(Lt<<=1,Lt-=rs[$],Lt<0)return-1;if(Lt>0&&(t===Vn||Be!==1))return-1;for(Uu[1]=0,$=1;$<Yt;$++)Uu[$+1]=Uu[$]+rs[$];for(pe=0;pe<s;pe++)n[r+pe]!==0&&(y[Uu[n[r+pe]]++]=pe);if(t===Vn?(Tn=Hu=y,Zt=19):t===eo?(Tn=dr,Ar-=257,Hu=xa,fg-=257,Zt=256):(Tn=W,Hu=Z,Zt=-1),zn=0,pe=0,$=Ae,Jt=g,Dt=yt,Qt=0,Sn=-1,$n=1<<yt,ln=$n-1,t===eo&&$n>Xt||t===Ui&&$n>wn)return 1;for(;;){dg=$-Qt,y[pe]<Zt?(ju=0,Wu=y[pe]):y[pe]>Zt?(ju=Hu[fg+y[pe]],Wu=Tn[Ar+y[pe]]):(ju=32+64,Wu=0),pn=1<<$-Qt,_t=1<<Dt,Ae=_t;do _t-=pn,d[Jt+(zn>>Qt)+_t]=dg<<24|ju<<16|Wu|0;while(_t!==0);for(pn=1<<$-1;zn&pn;)pn>>=1;if(pn!==0?(zn&=pn-1,zn+=pn):zn=0,pe++,--rs[$]===0){if($===Be)break;$=n[r+y[pe]]}if($>yt&&(zn&ln)!==Sn){for(Qt===0&&(Qt=yt),Jt+=Ae,Dt=$-Qt,Lt=1<<Dt;Dt+Qt<Be&&(Lt-=rs[Dt+Qt],!(Lt<=0));)Dt++,Lt<<=1;if($n+=1<<Dt,t===eo&&$n>Xt||t===Ui&&$n>wn)return 1;Sn=zn&ln,d[Sn]=yt<<24|Dt<<16|Jt-g|0}}return zn!==0&&(d[Jt+zn]=$-Qt<<24|64<<16|0),H.bits=yt,0},Le=on,ke=ge,rt=0,st=1,Ke=2,et=4,ze=5,Tt=6,Nt=0,Ft=1,On=2,tr=-2,Sr=-3,ni=-4,to=-5,vs=8,Ws=1,Lr=2,zs=3,ms=4,vo=5,_s=6,Ys=7,Xa=8,bs=9,Ba=10,Qa=11,no=12,pc=13,gc=14,vc=15,Jc=16,vd=17,md=18,_d=19,mu=20,_u=21,bd=22,yd=23,Ed=24,wd=25,Sd=26,sf=27,Cd=28,Ad=29,kr=30,Od=31,dv=32,hv=852,pv=592,gv=15,vv=gv;function Td(e){return(e>>>24&255)+(e>>>8&65280)+((e&65280)<<8)+((e&255)<<24)}function mv(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Ct.Buf16(320),this.work=new Ct.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function Pd(e){var t;return!e||!e.state?tr:(t=e.state,e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=t.wrap&1),t.mode=Ws,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Ct.Buf32(hv),t.distcode=t.distdyn=new Ct.Buf32(pv),t.sane=1,t.back=-1,Nt)}function Id(e){var t;return!e||!e.state?tr:(t=e.state,t.wsize=0,t.whave=0,t.wnext=0,Pd(e))}function Nd(e,t){var n,r;return!e||!e.state||(r=e.state,t<0?(n=0,t=-t):(n=(t>>4)+1,t<48&&(t&=15)),t&&(t<8||t>15))?tr:(r.window!==null&&r.wbits!==t&&(r.window=null),r.wrap=n,r.wbits=t,Id(e))}function kd(e,t){var n,r;return e?(r=new mv,e.state=r,r.window=null,n=Nd(e,t),n!==Nt&&(e.state=null),n):tr}function _v(e){return kd(e,vv)}var Rd=!0,lf,cf;function bv(e){if(Rd){var t;for(lf=new Ct.Buf32(512),cf=new Ct.Buf32(32),t=0;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(ke(st,e.lens,0,288,lf,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;ke(Ke,e.lens,0,32,cf,0,e.work,{bits:5}),Rd=!1}e.lencode=lf,e.lenbits=9,e.distcode=cf,e.distbits=5}function xd(e,t,n,r){var s,d=e.state;return d.window===null&&(d.wsize=1<<d.wbits,d.wnext=0,d.whave=0,d.window=new Ct.Buf8(d.wsize)),r>=d.wsize?(Ct.arraySet(d.window,t,n-d.wsize,d.wsize,0),d.wnext=0,d.whave=d.wsize):(s=d.wsize-d.wnext,s>r&&(s=r),Ct.arraySet(d.window,t,n-r,s,d.wnext),r-=s,r?(Ct.arraySet(d.window,t,n-r,r,0),d.wnext=r,d.whave=d.wsize):(d.wnext+=s,d.wnext===d.wsize&&(d.wnext=0),d.whave<d.wsize&&(d.whave+=s))),0}function yv(e,t){var n,r,s,d,g,y,H,I,$,pe,Ae,Be,yt,Dt,Qt=0,Lt,$n,zn,pn,_t,Sn,ln,Jt,Tn=new Ct.Buf8(4),Ar,Zt,rs=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&e.avail_in!==0)return tr;n=e.state,n.mode===no&&(n.mode=pc),g=e.next_out,s=e.output,H=e.avail_out,d=e.next_in,r=e.input,y=e.avail_in,I=n.hold,$=n.bits,pe=y,Ae=H,Jt=Nt;e:for(;;)switch(n.mode){case Ws:if(n.wrap===0){n.mode=pc;break}for(;$<16;){if(y===0)break e;y--,I+=r[d++]<<$,$+=8}if(n.wrap&2&&I===35615){n.check=0,Tn[0]=I&255,Tn[1]=I>>>8&255,n.check=Mr(n.check,Tn,2,0),I=0,$=0,n.mode=Lr;break}if(n.flags=0,n.head&&(n.head.done=!1),!(n.wrap&1)||(((I&255)<<8)+(I>>8))%31){e.msg="incorrect header check",n.mode=kr;break}if((I&15)!==vs){e.msg="unknown compression method",n.mode=kr;break}if(I>>>=4,$-=4,ln=(I&15)+8,n.wbits===0)n.wbits=ln;else if(ln>n.wbits){e.msg="invalid window size",n.mode=kr;break}n.dmax=1<<ln,e.adler=n.check=1,n.mode=I&512?Ba:no,I=0,$=0;break;case Lr:for(;$<16;){if(y===0)break e;y--,I+=r[d++]<<$,$+=8}if(n.flags=I,(n.flags&255)!==vs){e.msg="unknown compression method",n.mode=kr;break}if(n.flags&57344){e.msg="unknown header flags set",n.mode=kr;break}n.head&&(n.head.text=I>>8&1),n.flags&512&&(Tn[0]=I&255,Tn[1]=I>>>8&255,n.check=Mr(n.check,Tn,2,0)),I=0,$=0,n.mode=zs;case zs:for(;$<32;){if(y===0)break e;y--,I+=r[d++]<<$,$+=8}n.head&&(n.head.time=I),n.flags&512&&(Tn[0]=I&255,Tn[1]=I>>>8&255,Tn[2]=I>>>16&255,Tn[3]=I>>>24&255,n.check=Mr(n.check,Tn,4,0)),I=0,$=0,n.mode=ms;case ms:for(;$<16;){if(y===0)break e;y--,I+=r[d++]<<$,$+=8}n.head&&(n.head.xflags=I&255,n.head.os=I>>8),n.flags&512&&(Tn[0]=I&255,Tn[1]=I>>>8&255,n.check=Mr(n.check,Tn,2,0)),I=0,$=0,n.mode=vo;case vo:if(n.flags&1024){for(;$<16;){if(y===0)break e;y--,I+=r[d++]<<$,$+=8}n.length=I,n.head&&(n.head.extra_len=I),n.flags&512&&(Tn[0]=I&255,Tn[1]=I>>>8&255,n.check=Mr(n.check,Tn,2,0)),I=0,$=0}else n.head&&(n.head.extra=null);n.mode=_s;case _s:if(n.flags&1024&&(Be=n.length,Be>y&&(Be=y),Be&&(n.head&&(ln=n.head.extra_len-n.length,n.head.extra||(n.head.extra=new Array(n.head.extra_len)),Ct.arraySet(n.head.extra,r,d,Be,ln)),n.flags&512&&(n.check=Mr(n.check,r,Be,d)),y-=Be,d+=Be,n.length-=Be),n.length))break e;n.length=0,n.mode=Ys;case Ys:if(n.flags&2048){if(y===0)break e;Be=0;do ln=r[d+Be++],n.head&&ln&&n.length<65536&&(n.head.name+=String.fromCharCode(ln));while(ln&&Be<y);if(n.flags&512&&(n.check=Mr(n.check,r,Be,d)),y-=Be,d+=Be,ln)break e}else n.head&&(n.head.name=null);n.length=0,n.mode=Xa;case Xa:if(n.flags&4096){if(y===0)break e;Be=0;do ln=r[d+Be++],n.head&&ln&&n.length<65536&&(n.head.comment+=String.fromCharCode(ln));while(ln&&Be<y);if(n.flags&512&&(n.check=Mr(n.check,r,Be,d)),y-=Be,d+=Be,ln)break e}else n.head&&(n.head.comment=null);n.mode=bs;case bs:if(n.flags&512){for(;$<16;){if(y===0)break e;y--,I+=r[d++]<<$,$+=8}if(I!==(n.check&65535)){e.msg="header crc mismatch",n.mode=kr;break}I=0,$=0}n.head&&(n.head.hcrc=n.flags>>9&1,n.head.done=!0),e.adler=n.check=0,n.mode=no;break;case Ba:for(;$<32;){if(y===0)break e;y--,I+=r[d++]<<$,$+=8}e.adler=n.check=Td(I),I=0,$=0,n.mode=Qa;case Qa:if(n.havedict===0)return e.next_out=g,e.avail_out=H,e.next_in=d,e.avail_in=y,n.hold=I,n.bits=$,On;e.adler=n.check=1,n.mode=no;case no:if(t===ze||t===Tt)break e;case pc:if(n.last){I>>>=$&7,$-=$&7,n.mode=sf;break}for(;$<3;){if(y===0)break e;y--,I+=r[d++]<<$,$+=8}switch(n.last=I&1,I>>>=1,$-=1,I&3){case 0:n.mode=gc;break;case 1:if(bv(n),n.mode=mu,t===Tt){I>>>=2,$-=2;break e}break;case 2:n.mode=vd;break;case 3:e.msg="invalid block type",n.mode=kr}I>>>=2,$-=2;break;case gc:for(I>>>=$&7,$-=$&7;$<32;){if(y===0)break e;y--,I+=r[d++]<<$,$+=8}if((I&65535)!==(I>>>16^65535)){e.msg="invalid stored block lengths",n.mode=kr;break}if(n.length=I&65535,I=0,$=0,n.mode=vc,t===Tt)break e;case vc:n.mode=Jc;case Jc:if(Be=n.length,Be){if(Be>y&&(Be=y),Be>H&&(Be=H),Be===0)break e;Ct.arraySet(s,r,d,Be,g),y-=Be,d+=Be,H-=Be,g+=Be,n.length-=Be;break}n.mode=no;break;case vd:for(;$<14;){if(y===0)break e;y--,I+=r[d++]<<$,$+=8}if(n.nlen=(I&31)+257,I>>>=5,$-=5,n.ndist=(I&31)+1,I>>>=5,$-=5,n.ncode=(I&15)+4,I>>>=4,$-=4,n.nlen>286||n.ndist>30){e.msg="too many length or distance symbols",n.mode=kr;break}n.have=0,n.mode=md;case md:for(;n.have<n.ncode;){for(;$<3;){if(y===0)break e;y--,I+=r[d++]<<$,$+=8}n.lens[rs[n.have++]]=I&7,I>>>=3,$-=3}for(;n.have<19;)n.lens[rs[n.have++]]=0;if(n.lencode=n.lendyn,n.lenbits=7,Ar={bits:n.lenbits},Jt=ke(rt,n.lens,0,19,n.lencode,0,n.work,Ar),n.lenbits=Ar.bits,Jt){e.msg="invalid code lengths set",n.mode=kr;break}n.have=0,n.mode=_d;case _d:for(;n.have<n.nlen+n.ndist;){for(;Qt=n.lencode[I&(1<<n.lenbits)-1],Lt=Qt>>>24,$n=Qt>>>16&255,zn=Qt&65535,!(Lt<=$);){if(y===0)break e;y--,I+=r[d++]<<$,$+=8}if(zn<16)I>>>=Lt,$-=Lt,n.lens[n.have++]=zn;else{if(zn===16){for(Zt=Lt+2;$<Zt;){if(y===0)break e;y--,I+=r[d++]<<$,$+=8}if(I>>>=Lt,$-=Lt,n.have===0){e.msg="invalid bit length repeat",n.mode=kr;break}ln=n.lens[n.have-1],Be=3+(I&3),I>>>=2,$-=2}else if(zn===17){for(Zt=Lt+3;$<Zt;){if(y===0)break e;y--,I+=r[d++]<<$,$+=8}I>>>=Lt,$-=Lt,ln=0,Be=3+(I&7),I>>>=3,$-=3}else{for(Zt=Lt+7;$<Zt;){if(y===0)break e;y--,I+=r[d++]<<$,$+=8}I>>>=Lt,$-=Lt,ln=0,Be=11+(I&127),I>>>=7,$-=7}if(n.have+Be>n.nlen+n.ndist){e.msg="invalid bit length repeat",n.mode=kr;break}for(;Be--;)n.lens[n.have++]=ln}}if(n.mode===kr)break;if(n.lens[256]===0){e.msg="invalid code -- missing end-of-block",n.mode=kr;break}if(n.lenbits=9,Ar={bits:n.lenbits},Jt=ke(st,n.lens,0,n.nlen,n.lencode,0,n.work,Ar),n.lenbits=Ar.bits,Jt){e.msg="invalid literal/lengths set",n.mode=kr;break}if(n.distbits=6,n.distcode=n.distdyn,Ar={bits:n.distbits},Jt=ke(Ke,n.lens,n.nlen,n.ndist,n.distcode,0,n.work,Ar),n.distbits=Ar.bits,Jt){e.msg="invalid distances set",n.mode=kr;break}if(n.mode=mu,t===Tt)break e;case mu:n.mode=_u;case _u:if(y>=6&&H>=258){e.next_out=g,e.avail_out=H,e.next_in=d,e.avail_in=y,n.hold=I,n.bits=$,Le(e,Ae),g=e.next_out,s=e.output,H=e.avail_out,d=e.next_in,r=e.input,y=e.avail_in,I=n.hold,$=n.bits,n.mode===no&&(n.back=-1);break}for(n.back=0;Qt=n.lencode[I&(1<<n.lenbits)-1],Lt=Qt>>>24,$n=Qt>>>16&255,zn=Qt&65535,!(Lt<=$);){if(y===0)break e;y--,I+=r[d++]<<$,$+=8}if($n&&($n&240)===0){for(pn=Lt,_t=$n,Sn=zn;Qt=n.lencode[Sn+((I&(1<<pn+_t)-1)>>pn)],Lt=Qt>>>24,$n=Qt>>>16&255,zn=Qt&65535,!(pn+Lt<=$);){if(y===0)break e;y--,I+=r[d++]<<$,$+=8}I>>>=pn,$-=pn,n.back+=pn}if(I>>>=Lt,$-=Lt,n.back+=Lt,n.length=zn,$n===0){n.mode=Sd;break}if($n&32){n.back=-1,n.mode=no;break}if($n&64){e.msg="invalid literal/length code",n.mode=kr;break}n.extra=$n&15,n.mode=bd;case bd:if(n.extra){for(Zt=n.extra;$<Zt;){if(y===0)break e;y--,I+=r[d++]<<$,$+=8}n.length+=I&(1<<n.extra)-1,I>>>=n.extra,$-=n.extra,n.back+=n.extra}n.was=n.length,n.mode=yd;case yd:for(;Qt=n.distcode[I&(1<<n.distbits)-1],Lt=Qt>>>24,$n=Qt>>>16&255,zn=Qt&65535,!(Lt<=$);){if(y===0)break e;y--,I+=r[d++]<<$,$+=8}if(($n&240)===0){for(pn=Lt,_t=$n,Sn=zn;Qt=n.distcode[Sn+((I&(1<<pn+_t)-1)>>pn)],Lt=Qt>>>24,$n=Qt>>>16&255,zn=Qt&65535,!(pn+Lt<=$);){if(y===0)break e;y--,I+=r[d++]<<$,$+=8}I>>>=pn,$-=pn,n.back+=pn}if(I>>>=Lt,$-=Lt,n.back+=Lt,$n&64){e.msg="invalid distance code",n.mode=kr;break}n.offset=zn,n.extra=$n&15,n.mode=Ed;case Ed:if(n.extra){for(Zt=n.extra;$<Zt;){if(y===0)break e;y--,I+=r[d++]<<$,$+=8}n.offset+=I&(1<<n.extra)-1,I>>>=n.extra,$-=n.extra,n.back+=n.extra}if(n.offset>n.dmax){e.msg="invalid distance too far back",n.mode=kr;break}n.mode=wd;case wd:if(H===0)break e;if(Be=Ae-H,n.offset>Be){if(Be=n.offset-Be,Be>n.whave&&n.sane){e.msg="invalid distance too far back",n.mode=kr;break}Be>n.wnext?(Be-=n.wnext,yt=n.wsize-Be):yt=n.wnext-Be,Be>n.length&&(Be=n.length),Dt=n.window}else Dt=s,yt=g-n.offset,Be=n.length;Be>H&&(Be=H),H-=Be,n.length-=Be;do s[g++]=Dt[yt++];while(--Be);n.length===0&&(n.mode=_u);break;case Sd:if(H===0)break e;s[g++]=n.length,H--,n.mode=_u;break;case sf:if(n.wrap){for(;$<32;){if(y===0)break e;y--,I|=r[d++]<<$,$+=8}if(Ae-=H,e.total_out+=Ae,n.total+=Ae,Ae&&(e.adler=n.check=n.flags?Mr(n.check,s,Ae,g-Ae):Ga(n.check,s,Ae,g-Ae)),Ae=H,(n.flags?I:Td(I))!==n.check){e.msg="incorrect data check",n.mode=kr;break}I=0,$=0}n.mode=Cd;case Cd:if(n.wrap&&n.flags){for(;$<32;){if(y===0)break e;y--,I+=r[d++]<<$,$+=8}if(I!==(n.total&4294967295)){e.msg="incorrect length check",n.mode=kr;break}I=0,$=0}n.mode=Ad;case Ad:Jt=Ft;break e;case kr:Jt=Sr;break e;case Od:return ni;case dv:default:return tr}return e.next_out=g,e.avail_out=H,e.next_in=d,e.avail_in=y,n.hold=I,n.bits=$,(n.wsize||Ae!==e.avail_out&&n.mode<kr&&(n.mode<sf||t!==et))&&xd(e,e.output,e.next_out,Ae-e.avail_out),pe-=e.avail_in,Ae-=e.avail_out,e.total_in+=pe,e.total_out+=Ae,n.total+=Ae,n.wrap&&Ae&&(e.adler=n.check=n.flags?Mr(n.check,s,Ae,e.next_out-Ae):Ga(n.check,s,Ae,e.next_out-Ae)),e.data_type=n.bits+(n.last?64:0)+(n.mode===no?128:0)+(n.mode===mu||n.mode===vc?256:0),(pe===0&&Ae===0||t===et)&&Jt===Nt&&(Jt=to),Jt}function Ev(e){if(!e||!e.state)return tr;var t=e.state;return t.window&&(t.window=null),e.state=null,Nt}function wv(e,t){var n;return!e||!e.state||(n=e.state,(n.wrap&2)===0)?tr:(n.head=t,t.done=!1,Nt)}function Sv(e,t){var n=t.length,r,s,d;return!e||!e.state||(r=e.state,r.wrap!==0&&r.mode!==Qa)?tr:r.mode===Qa&&(s=1,s=Ga(s,t,n,0),s!==r.check)?Sr:(d=xd(e,t,n,n),d?(r.mode=Od,ni):(r.havedict=1,Nt))}var Cv=Id,Av=Nd,Ov=Pd,Tv=_v,Pv=kd,Iv=yv,Nv=Ev,kv=wv,Rv=Sv,xv="pako inflate (from Nodeca project)",Bv={inflateReset:Cv,inflateReset2:Av,inflateResetKeep:Ov,inflateInit:Tv,inflateInit2:Pv,inflate:Iv,inflateEnd:Nv,inflateGetHeader:kv,inflateSetDictionary:Rv,inflateInfo:xv},Mv={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};function Dv(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}var Lv=Dv,mc=Bv,qr=Mv,Fv=Lv,Bd=Object.prototype.toString;function Dl(e){if(!(this instanceof Dl))return new Dl(e);this.options=Ct.assign({chunkSize:16384,windowBits:0,to:""},e||{});var t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,t.windowBits===0&&(t.windowBits=-15)),t.windowBits>=0&&t.windowBits<16&&!(e&&e.windowBits)&&(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&(t.windowBits&15)===0&&(t.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new Te,this.strm.avail_out=0;var n=mc.inflateInit2(this.strm,t.windowBits);if(n!==qr.Z_OK)throw new Error(sa[n]);if(this.header=new Fv,mc.inflateGetHeader(this.strm,this.header),t.dictionary&&(typeof t.dictionary=="string"?t.dictionary=Je.string2buf(t.dictionary):Bd.call(t.dictionary)==="[object ArrayBuffer]"&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(n=mc.inflateSetDictionary(this.strm,t.dictionary),n!==qr.Z_OK)))throw new Error(sa[n])}Dl.prototype.push=function(e,t){var n=this.strm,r=this.options.chunkSize,s=this.options.dictionary,d,g,y,H,I,$=!1;if(this.ended)return!1;g=t===~~t?t:t===!0?qr.Z_FINISH:qr.Z_NO_FLUSH,typeof e=="string"?n.input=Je.binstring2buf(e):Bd.call(e)==="[object ArrayBuffer]"?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;do{if(n.avail_out===0&&(n.output=new Ct.Buf8(r),n.next_out=0,n.avail_out=r),d=mc.inflate(n,qr.Z_NO_FLUSH),d===qr.Z_NEED_DICT&&s&&(d=mc.inflateSetDictionary(this.strm,s)),d===qr.Z_BUF_ERROR&&$===!0&&(d=qr.Z_OK,$=!1),d!==qr.Z_STREAM_END&&d!==qr.Z_OK)return this.onEnd(d),this.ended=!0,!1;n.next_out&&(n.avail_out===0||d===qr.Z_STREAM_END||n.avail_in===0&&(g===qr.Z_FINISH||g===qr.Z_SYNC_FLUSH))&&(this.options.to==="string"?(y=Je.utf8border(n.output,n.next_out),H=n.next_out-y,I=Je.buf2string(n.output,y),n.next_out=H,n.avail_out=r-H,H&&Ct.arraySet(n.output,n.output,y,H,0),this.onData(I)):this.onData(Ct.shrinkBuf(n.output,n.next_out))),n.avail_in===0&&n.avail_out===0&&($=!0)}while((n.avail_in>0||n.avail_out===0)&&d!==qr.Z_STREAM_END);return d===qr.Z_STREAM_END&&(g=qr.Z_FINISH),g===qr.Z_FINISH?(d=mc.inflateEnd(this.strm),this.onEnd(d),this.ended=!0,d===qr.Z_OK):(g===qr.Z_SYNC_FLUSH&&(this.onEnd(qr.Z_OK),n.avail_out=0),!0)},Dl.prototype.onData=function(e){this.chunks.push(e)},Dl.prototype.onEnd=function(e){e===qr.Z_OK&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=Ct.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};function uf(e,t){var n=new Dl(t);if(n.push(e,!0),n.err)throw n.msg||sa[n.err];return n.result}function Vv(e,t){return t=t||{},t.raw=!0,uf(e,t)}var $v=Dl,Uv=uf,Hv=Vv,jv=uf,Wv={Inflate:$v,inflate:Uv,inflateRaw:Hv,ungzip:jv},zv=Bt,Yv=Wv,Gv=Ct.assign,Md={};Gv(Md,zv,Yv,qr);var Dd=Md;let qv="upx2px",Kv=[{name:"upx",type:[Number,String],required:!0}],Jv=1e-4,Zv=750,Ld=!1,ff=0,Fd=0,Vd=960,$d=375;function Xv(){let{platform:e,pixelRatio:t,windowWidth:n}=Uo();ff=n,Fd=t,Ld=e==="ios"}function Ud(e,t){let n=Number(e);return isNaN(n)?t:n}function Qv(){let e=P.globalStyle||{};Vd=Ud(e.rpxCalcMaxDeviceWidth,960),$d=Ud(e.rpxCalcBaseDeviceWidth,375)}let em=Ut(qv,(e,t)=>{if(ff===0&&(Xv(),Qv()),e=Number(e),e===0)return 0;let n=t||ff;n=n<=Vd?n:$d;let r=e/Zv*n;return r<0&&(r=-r),r=Math.floor(r+Jv),r===0&&(Fd===1||!Ld?r=1:r=.5),e<0?-r:r},Kv),tm="addInterceptor",nm="removeInterceptor",Hd=[{name:"method",type:[String,Object],required:!0}],rm=Hd;function jd(e,t){Object.keys(t).forEach(n=>{se.isFunction(t[n])&&(e[n]=im(e[n],t[n]))})}function Wd(e,t){!e||!t||Object.keys(t).forEach(n=>{let r=e[n],s=t[n];se.isArray(r)&&se.isFunction(s)&&se.remove(r,s)})}function im(e,t){let n=t?e?e.concat(t):se.isArray(t)?t:[t]:e;return n&&om(n)}function om(e){let t=[];for(let n=0;n<e.length;n++)t.indexOf(e[n])===-1&&t.push(e[n]);return t}let am=Ut(tm,(e,t)=>{typeof e=="string"&&se.isPlainObject(t)?jd(ki[e]||(ki[e]={}),t):se.isPlainObject(e)&&jd(Hn,e)},Hd),sm=Ut(nm,(e,t)=>{typeof e=="string"?se.isPlainObject(t)?Wd(ki[e],t):delete ki[e]:se.isPlainObject(e)&&Wd(Hn,e)},rm),lm={},cm="$on",zd=[{name:"event",type:String,required:!0},{name:"callback",type:Function,required:!0}],um="$once",fm=zd,dm="$off",hm=[{name:"event",type:[String,Array]},{name:"callback",type:Function}],pm="$emit",gm=[{name:"event",type:String,required:!0}],Ll=new re.Emitter,vm=Ut(cm,(e,t)=>(Ll.on(e,t),()=>Ll.off(e,t)),zd),mm=Ut(um,(e,t)=>(Ll.once(e,t),()=>Ll.off(e,t)),fm),_m=Ut(dm,(e,t)=>{if(!e){Ll.e={};return}Array.isArray(e)||(e=[e]),e.forEach(n=>Ll.off(n,t))},hm),bm=Ut(pm,(e,...t)=>{Ll.emit(e,...t)},gm),Yd=[{name:"id",type:String,required:!0}],ym="createVideoContext",Em="createMapContext",wm=Yd,Sm="createCanvasContext",Cm=[{name:"canvasId",type:String,required:!0},{name:"componentInstance",type:Object}],Am="createInnerAudioContext",Om="createLivePusherContext",Tm=Yd.concat({name:"componentInstance",type:Object}),Pm=[.5,.8,1,1.25,1.5,2];class df{constructor(t,n){this.id=t,this.pageId=n}play(){ui(this.id,this.pageId,"play")}pause(){ui(this.id,this.pageId,"pause")}stop(){ui(this.id,this.pageId,"stop")}seek(t){ui(this.id,this.pageId,"seek",{position:t})}sendDanmu(t){ui(this.id,this.pageId,"sendDanmu",t)}playbackRate(t){~Pm.indexOf(t)||(t=1),ui(this.id,this.pageId,"playbackRate",{rate:t})}requestFullScreen(t={}){ui(this.id,this.pageId,"requestFullScreen",t)}exitFullScreen(){ui(this.id,this.pageId,"exitFullScreen")}showStatusBar(){ui(this.id,this.pageId,"showStatusBar")}hideStatusBar(){ui(this.id,this.pageId,"hideStatusBar")}}let Im=Ut(ym,(e,t)=>t?new df(e,_r(t)):new df(e,_r(jr()))),Nm=(e,t)=>{let n=t.errMsg||"";new RegExp("\\:\\s*fail").test(n)?e.fail&&e.fail(t):e.success&&e.success(t),e.complete&&e.complete(t)},ro=(e,t,n,r)=>{Ro(e,t,n,r,s=>{r&&Nm(r,s)})};class hf{constructor(t,n){this.id=t,this.pageId=n}getCenterLocation(t){ro(this.id,this.pageId,"getCenterLocation",t)}moveToLocation(t){ro(this.id,this.pageId,"moveToLocation",t)}getScale(t){ro(this.id,this.pageId,"getScale",t)}getRegion(t){ro(this.id,this.pageId,"getRegion",t)}includePoints(t){ro(this.id,this.pageId,"includePoints",t)}translateMarker(t){ro(this.id,this.pageId,"translateMarker",t)}$getAppMap(){return l.maps.getMapById(this.pageId+"-map-"+this.id)}addCustomLayer(t){ro(this.id,this.pageId,"addCustomLayer",t)}removeCustomLayer(t){ro(this.id,this.pageId,"removeCustomLayer",t)}addGroundOverlay(t){ro(this.id,this.pageId,"addGroundOverlay",t)}removeGroundOverlay(t){ro(this.id,this.pageId,"removeGroundOverlay",t)}updateGroundOverlay(t){ro(this.id,this.pageId,"updateGroundOverlay",t)}initMarkerCluster(t){ro(this.id,this.pageId,"initMarkerCluster",t)}addMarkers(t){ro(this.id,this.pageId,"addMarkers",t)}removeMarkers(t){ro(this.id,this.pageId,"removeMarkers",t)}moveAlong(t){ro(this.id,this.pageId,"moveAlong",t)}openMapApp(t){ro(this.id,this.pageId,"openMapApp",t)}on(t){ro(this.id,this.pageId,"on",t)}}let km=Ut(Em,(e,t)=>t?new hf(e,_r(t)):new hf(e,_r(jr())),wm);function pl(e,t){return function(n,r){n?r[e]=Math.round(n):typeof t!="undefined"&&(r[e]=t)}}let Gd=pl("width"),qd=pl("height"),Rm="canvasGetImageData",Kd={formatArgs:{x:pl("x"),y:pl("y"),width:Gd,height:qd}},Jd={canvasId:{type:String,required:!0},x:{type:Number,required:!0},y:{type:Number,required:!0},width:{type:Number,required:!0},height:{type:Number,required:!0}},xm="canvasPutImageData",Bm=Kd,Mm=se.extend({data:{type:Uint8ClampedArray,required:!0}},Jd,{height:{type:Number}}),Zd={PNG:"png",JPG:"jpg",JPEG:"jpg"},Dm="canvasToTempFilePath",Lm={formatArgs:{x:pl("x",0),y:pl("y",0),width:Gd,height:qd,destWidth:pl("destWidth"),destHeight:pl("destHeight"),fileType(e,t){e=(e||"").toUpperCase();let n=Zd[e];n||(n=Zd.PNG),t.fileType=n},quality(e,t){t.quality=e&&e>0&&e<1?e:1}}},Fm={x:Number,y:Number,width:Number,height:Number,destWidth:Number,destHeight:Number,canvasId:{type:String,required:!0},fileType:String,quality:Number};function bu(e,t,n,r,s){bt.invokeViewMethod(`canvas.${e}`,{type:n,data:r},t,d=>{s&&s(d)})}var Vm=["scale","rotate","translate","setTransform","transform"],$m=["drawImage","fillText","fill","stroke","fillRect","strokeRect","clearRect","strokeText"],Um=["setFillStyle","setTextAlign","setStrokeStyle","setGlobalAlpha","setShadow","setFontSize","setLineCap","setLineJoin","setLineWidth","setMiterLimit","setTextBaseline","setLineDash"];function Hm(e,t){let r=document.createElement("canvas").getContext("2d");return r.font=t,r.measureText(e).width||0}let Xd={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgrey:"#a9a9a9",darkgreen:"#006400",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",grey:"#808080",green:"#008000",greenyellow:"#adff2f",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgrey:"#d3d3d3",lightgreen:"#90ee90",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",rebeccapurple:"#663399",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32",transparent:"#00000000"};function pf(e){e=e||"#000000";var t=null;if((t=/^#([0-9|A-F|a-f]{6})$/.exec(e))!=null){let r=parseInt(t[1].slice(0,2),16),s=parseInt(t[1].slice(2,4),16),d=parseInt(t[1].slice(4),16);return[r,s,d,255]}if((t=/^#([0-9|A-F|a-f]{3})$/.exec(e))!=null){let r=t[1].slice(0,1),s=t[1].slice(1,2),d=t[1].slice(2,3);return r=parseInt(r+r,16),s=parseInt(s+s,16),d=parseInt(d+d,16),[r,s,d,255]}if((t=/^rgb\((.+)\)$/.exec(e))!=null)return t[1].split(",").map(function(r){return Math.min(255,parseInt(r.trim()))}).concat(255);if((t=/^rgba\((.+)\)$/.exec(e))!=null)return t[1].split(",").map(function(r,s){return s===3?Math.floor(255*parseFloat(r.trim())):Math.min(255,parseInt(r.trim()))});var n=e.toLowerCase();if(se.hasOwn(Xd,n)){t=/^#([0-9|A-F|a-f]{6,8})$/.exec(Xd[n]);let r=parseInt(t[1].slice(0,2),16),s=parseInt(t[1].slice(2,4),16),d=parseInt(t[1].slice(4,6),16),g=parseInt(t[1].slice(6,8),16);return g=g>=0?g:255,[r,s,d,g]}return console.error("unsupported color:"+e),[0,0,0,255]}class Qd{constructor(t,n){this.type=t,this.data=n,this.colorStop=[]}addColorStop(t,n){this.colorStop.push([t,pf(n)])}}class jm{constructor(t,n){this.type="pattern",this.data=t,this.colorStop=n}}class Wm{constructor(t){this.width=t}}class Zc{constructor(t,n){this.id=t,this.pageId=n,this.actions=[],this.path=[],this.subpath=[],this.drawingState=[],this.state={lineDash:[0,0],shadowOffsetX:0,shadowOffsetY:0,shadowBlur:0,shadowColor:[0,0,0,0],font:"10px sans-serif",fontSize:10,fontWeight:"normal",fontStyle:"normal",fontFamily:"sans-serif"}}draw(t=!1,n){var r=[...this.actions];this.actions=[],this.path=[],bu(this.id,this.pageId,"actionsChanged",{actions:r,reserve:t},n)}createLinearGradient(t,n,r,s){return new Qd("linear",[t,n,r,s])}createCircularGradient(t,n,r){return new Qd("radial",[t,n,r])}createPattern(t,n){if(n===void 0)console.error("Failed to execute 'createPattern' on 'CanvasContext': 2 arguments required, but only 1 present.");else if(["repeat","repeat-x","repeat-y","no-repeat"].indexOf(n)<0)console.error("Failed to execute 'createPattern' on 'CanvasContext': The provided type ('"+n+"') is not one of 'repeat', 'no-repeat', 'repeat-x', or 'repeat-y'.");else return new jm(t,n)}measureText(t){let n=this.state.font,r=0;{let s=l.webview.all().find(d=>d.getURL().endsWith("www/__uniappview.html"));s&&(r=Number(s.evalJSSync(`(${Hm.toString()})(${JSON.stringify(t)},${JSON.stringify(n)})`)))}return new Wm(r)}save(){this.actions.push({method:"save",data:[]}),this.drawingState.push(this.state)}restore(){this.actions.push({method:"restore",data:[]}),this.state=this.drawingState.pop()||{lineDash:[0,0],shadowOffsetX:0,shadowOffsetY:0,shadowBlur:0,shadowColor:[0,0,0,0],font:"10px sans-serif",fontSize:10,fontWeight:"normal",fontStyle:"normal",fontFamily:"sans-serif"}}beginPath(){this.path=[],this.subpath=[]}moveTo(t,n){this.path.push({method:"moveTo",data:[t,n]}),this.subpath=[[t,n]]}lineTo(t,n){this.path.length===0&&this.subpath.length===0?this.path.push({method:"moveTo",data:[t,n]}):this.path.push({method:"lineTo",data:[t,n]}),this.subpath.push([t,n])}quadraticCurveTo(t,n,r,s){this.path.push({method:"quadraticCurveTo",data:[t,n,r,s]}),this.subpath.push([r,s])}bezierCurveTo(t,n,r,s,d,g){this.path.push({method:"bezierCurveTo",data:[t,n,r,s,d,g]}),this.subpath.push([d,g])}arc(t,n,r,s,d,g=!1){this.path.push({method:"arc",data:[t,n,r,s,d,g]}),this.subpath.push([t,n])}rect(t,n,r,s){this.path.push({method:"rect",data:[t,n,r,s]}),this.subpath=[[t,n]]}arcTo(t,n,r,s,d){this.path.push({method:"arcTo",data:[t,n,r,s,d]}),this.subpath.push([r,s])}clip(){this.actions.push({method:"clip",data:[...this.path]})}closePath(){this.path.push({method:"closePath",data:[]}),this.subpath.length&&(this.subpath=[this.subpath.shift()])}clearActions(){this.actions=[],this.path=[],this.subpath=[]}getActions(){var t=[...this.actions];return this.clearActions(),t}set lineDashOffset(t){this.actions.push({method:"setLineDashOffset",data:[t]})}set globalCompositeOperation(t){this.actions.push({method:"setGlobalCompositeOperation",data:[t]})}set shadowBlur(t){this.actions.push({method:"setShadowBlur",data:[t]})}set shadowColor(t){this.actions.push({method:"setShadowColor",data:[t]})}set shadowOffsetX(t){this.actions.push({method:"setShadowOffsetX",data:[t]})}set shadowOffsetY(t){this.actions.push({method:"setShadowOffsetY",data:[t]})}set font(t){var n=this;this.state.font=t;var r=t.match(/^(([\w\-]+\s)*)(\d+r?px)(\/(\d+\.?\d*(r?px)?))?\s+(.*)/);if(r){var s=r[1].trim().split(/\s/),d=parseFloat(r[3]),g=r[7],y=[];s.forEach(function(I,$){["italic","oblique","normal"].indexOf(I)>-1?(y.push({method:"setFontStyle",data:[I]}),n.state.fontStyle=I):["bold","normal"].indexOf(I)>-1?(y.push({method:"setFontWeight",data:[I]}),n.state.fontWeight=I):$===0?(y.push({method:"setFontStyle",data:["normal"]}),n.state.fontStyle="normal"):$===1&&H()}),s.length===1&&H(),s=y.map(function(I){return I.data[0]}).join(" "),this.state.fontSize=d,this.state.fontFamily=g,this.actions.push({method:"setFont",data:[`${s} ${d}px ${g}`]})}else console.warn("Failed to set 'font' on 'CanvasContext': invalid format.");function H(){y.push({method:"setFontWeight",data:["normal"]}),n.state.fontWeight="normal"}}get font(){return this.state.font}set fillStyle(t){this.setFillStyle(t)}set strokeStyle(t){this.setStrokeStyle(t)}set globalAlpha(t){t=Math.floor(255*parseFloat(t)),this.actions.push({method:"setGlobalAlpha",data:[t]})}set textAlign(t){this.actions.push({method:"setTextAlign",data:[t]})}set lineCap(t){this.actions.push({method:"setLineCap",data:[t]})}set lineJoin(t){this.actions.push({method:"setLineJoin",data:[t]})}set lineWidth(t){this.actions.push({method:"setLineWidth",data:[t]})}set miterLimit(t){this.actions.push({method:"setMiterLimit",data:[t]})}set textBaseline(t){this.actions.push({method:"setTextBaseline",data:[t]})}}let zm=re.once(()=>{[...Vm,...$m].forEach(function(e){function t(n){switch(n){case"fill":case"stroke":return function(){this.actions.push({method:n+"Path",data:[...this.path]})};case"fillRect":return function(r,s,d,g){this.actions.push({method:"fillPath",data:[{method:"rect",data:[r,s,d,g]}]})};case"strokeRect":return function(r,s,d,g){this.actions.push({method:"strokePath",data:[{method:"rect",data:[r,s,d,g]}]})};case"fillText":case"strokeText":return function(r,s,d,g){var y=[r.toString(),s,d];typeof g=="number"&&y.push(g),this.actions.push({method:n,data:y})};case"drawImage":return function(r,s,d,g,y,H,I,$,pe){pe===void 0&&(H=s,I=d,$=g,pe=y,s=void 0,d=void 0,g=void 0,y=void 0);var Ae;function Be(yt){return typeof yt=="number"}Ae=Be(s)&&Be(d)&&Be(g)&&Be(y)?[r,H,I,$,pe,s,d,g,y]:Be($)&&Be(pe)?[r,H,I,$,pe]:[r,H,I],this.actions.push({method:n,data:Ae})};default:return function(...r){this.actions.push({method:n,data:r})}}}Zc.prototype[e]=t(e)}),Um.forEach(function(e){function t(n){switch(n){case"setFillStyle":case"setStrokeStyle":return function(r){typeof r!="object"?this.actions.push({method:n,data:["normal",pf(r)]}):this.actions.push({method:n,data:[r.type,r.data,r.colorStop]})};case"setGlobalAlpha":return function(r){r=Math.floor(255*parseFloat(r)),this.actions.push({method:n,data:[r]})};case"setShadow":return function(r,s,d,g){g=pf(g),this.actions.push({method:n,data:[r,s,d,g]}),this.state.shadowBlur=d,this.state.shadowColor=g,this.state.shadowOffsetX=r,this.state.shadowOffsetY=s};case"setLineDash":return function(r,s){r=r||[0,0],s=s||0,this.actions.push({method:n,data:[r,s]}),this.state.lineDash=r};case"setFontSize":return function(r){this.state.font=this.state.font.replace(/\d+\.?\d*px/,r+"px"),this.state.fontSize=r,this.actions.push({method:n,data:[r]})};default:return function(...r){this.actions.push({method:n,data:r})}}}Zc.prototype[e]=t(e)})}),Ym=Ut(Sm,(e,t)=>{if(zm(),t)return new Zc(e,_r(t));let n=_r(jr());if(n)return new Zc(e,n);bt.emit(re.ON_ERROR,"createCanvasContext:fail")},Cm),Gm=Ie(Rm,({canvasId:e,x:t,y:n,width:r,height:s},{resolve:d,reject:g})=>{let y=_r(jr());if(!y){g();return}function H(I){if(I.errMsg&&I.errMsg.indexOf("fail")!==-1){g("",I);return}let $=I.data;$&&$.length&&(I.compressed&&($=Dd.inflateRaw($)),I.data=new Uint8ClampedArray($)),delete I.compressed,d(I)}bu(e,y,"getImageData",{x:t,y:n,width:r,height:s},H)},Jd,Kd),qm=Ie(xm,({canvasId:e,data:t,x:n,y:r,width:s,height:d},{resolve:g,reject:y})=>{var H=_r(jr());if(!H){y();return}let I,$=()=>{bu(e,H,"putImageData",{data:t,x:n,y:r,width:s,height:d,compressed:I},pe=>{if(pe.errMsg&&pe.errMsg.indexOf("fail")!==-1){y();return}g(pe)})};l.os.name!=="iOS"||typeof __WEEX_DEVTOOL__=="boolean"?(t=Dd.deflateRaw(t,{to:"string"}),I=!0):t=Array.prototype.slice.call(t),$()},Mm,Bm),Km=Ie(Dm,({x:e=0,y:t=0,width:n,height:r,destWidth:s,destHeight:d,canvasId:g,fileType:y,quality:H},{resolve:I,reject:$})=>{var pe=_r(jr());if(!pe){$();return}let Ae=`${di}/canvas`;bu(g,pe,"toTempFilePath",{x:e,y:t,width:n,height:r,destWidth:s,destHeight:d,fileType:y,quality:H,dirname:Ae},Be=>{if(Be.errMsg&&Be.errMsg.indexOf("fail")!==-1){$("",Be);return}I(Be)})},Fm,Lm),eh=["onCanplay","onPlay","onPause","onStop","onEnded","onTimeUpdate","onError","onWaiting","onSeeking","onSeeked"],Jm=["offCanplay","offPlay","offPause","offStop","offEnded","offTimeUpdate","offError","offWaiting","offSeeking","offSeeked"],Zm={thresholds:[0],initialRatio:0,observeAll:!1},Xm=["top","right","bottom","left"],Qm=1;function th(e={}){return Xm.map(t=>`${Number(e[t])||0}px`).join(" ")}class nh{constructor(t,n){this._pageId=_r(t),this._component=t,this._options=se.extend({},Zm,n)}relativeTo(t,n){return this._options.relativeToSelector=t,this._options.rootMargin=th(n),this}relativeToViewport(t){return this._options.relativeToSelector=void 0,this._options.rootMargin=th(t),this}observe(t,n){!se.isFunction(n)||(this._options.selector=t,this._reqId=Qm++,xo({reqId:this._reqId,component:this._component,options:this._options,callback:n},this._pageId))}disconnect(){this._reqId&&$a({reqId:this._reqId,component:this._component},this._pageId)}}let e_=Ut("createIntersectionObserver",(e,t)=>(e=re.resolveComponentInstance(e),e&&!_r(e)&&(t=e,e=null),e?new nh(e,t):new nh(jr(),t))),t_=1;class rh{constructor(t){this._pageId=t.$page&&t.$page.id,this._component=t}observe(t,n){!se.isFunction(n)||(this._reqId=t_++,fi({reqId:this._reqId,component:this._component,options:t,callback:n},this._pageId))}disconnect(){this._reqId&&ra({reqId:this._reqId,component:this._component},this._pageId)}}let n_=Ut("createMediaQueryObserver",e=>(e=re.resolveComponentInstance(e),e&&!_r(e)&&(e=null),e?new rh(e):new rh(jr()))),r_=0,gf={};function i_(e,t,n,r){let s={options:r},d=r&&("success"in r||"fail"in r||"complete"in r);if(d){let g=String(r_++);s.callbackId=g,gf[g]=r}bt.invokeViewMethod(`editor.${e}`,{type:n,data:s},t,({callbackId:g,data:y})=>{d&&(re.callOptions(gf[g],y),delete gf[g])})}class o_{constructor(t,n){this.id=t,this.pageId=n}format(t,n){this._exec("format",{name:t,value:n})}insertDivider(){this._exec("insertDivider")}insertImage(t){this._exec("insertImage",t)}insertText(t){this._exec("insertText",t)}setContents(t){this._exec("setContents",t)}getContents(t){this._exec("getContents",t)}clear(t){this._exec("clear",t)}removeFormat(t){this._exec("removeFormat",t)}undo(t){this._exec("undo",t)}redo(t){this._exec("redo",t)}blur(t){this._exec("blur",t)}getSelectionText(t){this._exec("getSelectionText",t)}scrollIntoView(t){this._exec("scrollIntoView",t)}_exec(t,n){i_(this.id,this.pageId,t,n)}}let a_={canvas:Zc,map:hf,video:df,editor:o_};function ih(e){if(e&&e.contextInfo){let{id:t,type:n,page:r}=e.contextInfo,s=a_[n];e.context=new s(t,r),delete e.contextInfo}}class vf{constructor(t,n,r,s){this._selectorQuery=t,this._component=n,this._selector=r,this._single=s}boundingClientRect(t){return this._selectorQuery._push(this._selector,this._component,this._single,{id:!0,dataset:!0,rect:!0,size:!0},t),this._selectorQuery}fields(t,n){return this._selectorQuery._push(this._selector,this._component,this._single,t,n),this._selectorQuery}scrollOffset(t){return this._selectorQuery._push(this._selector,this._component,this._single,{id:!0,dataset:!0,scrollOffset:!0},t),this._selectorQuery}context(t){return this._selectorQuery._push(this._selector,this._component,this._single,{context:!0},t),this._selectorQuery}node(t){return this._selectorQuery}}class s_{constructor(t){this._component=void 0,this._page=t,this._queue=[],this._queueCb=[]}exec(t){return nn(this._page,this._queue,n=>{let r=this._queueCb;n.forEach((s,d)=>{Array.isArray(s)?s.forEach(ih):ih(s);let g=r[d];typeof g=="function"&&g.call(this,s)}),typeof t=="function"&&t.call(this,n)}),this._nodesRef}in(t){return this._component=re.resolveComponentInstance(t),this}select(t){return this._nodesRef=new vf(this,this._component,t,!0)}selectAll(t){return this._nodesRef=new vf(this,this._component,t,!1)}selectViewport(){return this._nodesRef=new vf(this,null,"",!0)}_push(t,n,r,s,d){this._queue.push({component:n,selector:t,single:r,fields:s}),this._queueCb.push(d)}}let l_=Ut("createSelectorQuery",e=>(e=re.resolveComponentInstance(e),e&&!_r(e)&&(e=null),new s_(e||jr()))),c_="createAnimation",u_={formatArgs:{}},f_={duration:Number,timingFunction:String,delay:Number,transformOrigin:String},d_={duration:400,timingFunction:"linear",delay:0,transformOrigin:"50% 50% 0"};class oh{constructor(t){this.actions=[],this.currentTransform={},this.currentStepAnimates=[],this.option=se.extend({},d_,t)}_getOption(t){let n={transition:se.extend({},this.option,t),transformOrigin:""};return n.transformOrigin=n.transition.transformOrigin,delete n.transition.transformOrigin,n}_pushAnimates(t,n){this.currentStepAnimates.push({type:t,args:n})}_converType(t){return t.replace(/[A-Z]/g,n=>`-${n.toLowerCase()}`)}_getValue(t){return typeof t=="number"?`${t}px`:t}export(){let t=this.actions;return this.actions=[],{actions:t}}step(t){return this.currentStepAnimates.forEach(n=>{n.type!=="style"?this.currentTransform[n.type]=n:this.currentTransform[`${n.type}.${n.args[0]}`]=n}),this.actions.push({animates:Object.values(this.currentTransform),option:this._getOption(t)}),this.currentStepAnimates=[],this}}let h_=re.once(()=>{let e=["matrix","matrix3d","rotate","rotate3d","rotateX","rotateY","rotateZ","scale","scale3d","scaleX","scaleY","scaleZ","skew","skewX","skewY","translate","translate3d","translateX","translateY","translateZ"],t=["opacity","backgroundColor"],n=["width","height","left","right","top","bottom"];e.concat(t,n).forEach(r=>{oh.prototype[r]=function(...s){return t.concat(n).includes(r)?this._pushAnimates("style",[this._converType(r),n.includes(r)?this._getValue(s[0]):s[0]]):this._pushAnimates(r,s),this}})}),p_=Ut(c_,e=>(h_(),new oh(e)),f_,u_),ah="onTabBarMidButtonTap",g_=xn(ah,()=>{}),v_="onWindowResize",m_="offWindowResize",__=xn(v_,()=>{}),b_=oi(m_,()=>{}),sh="setLocale",y_="getLocale",lh="onLocaleChange",E_=Ut(y_,()=>{let e=Kn({allowDefault:!0});return e&&e.$vm?e.$vm.$locale:Xe().getLocale()}),w_=xn(lh,()=>{}),S_=Ut(sh,e=>{let t=Kn();return t&&t.$vm.$locale!==e?(t.$vm.$locale=e,Un().forEach(s=>{bt.publishHandler(sh,e,s.$page.id)}),v.requireModule("plus").setLanguage(e),bt.invokeOnCallback(lh,{locale:e}),!0):!1}),C_=Ie("setPageMeta",(e,{resolve:t})=>{t(Qr(jr(),e))}),A_=Ie("getSelectedTextRange",(e,{resolve:t,reject:n})=>{bt.invokeViewMethod("getSelectedTextRange",{},Va(),r=>{typeof r.end=="undefined"&&typeof r.start=="undefined"?n("no focused"):t(r)})}),yu={[re.ON_UNHANDLE_REJECTION]:[],[re.ON_PAGE_NOT_FOUND]:[],[re.ON_ERROR]:[],[re.ON_SHOW]:[],[re.ON_HIDE]:[]};function Xc(e,t){let n=Kn({allowDefault:!0});if(n&&n.$vm)return Gt.injectHook(e,t,n.$vm.$);yu[e].push(t)}function O_(e){Object.keys(yu).forEach(t=>{yu[t].forEach(n=>{Gt.injectHook(t,n,e)})})}function Qc(e,t){let n=Kn({allowDefault:!0});if(n&&n.$vm)return el(n.$vm,e,t);se.remove(yu[e],t)}function T_(e){Xc(re.ON_UNHANDLE_REJECTION,e)}function P_(e){Qc(re.ON_UNHANDLE_REJECTION,e)}function I_(e){Xc(re.ON_PAGE_NOT_FOUND,e)}function N_(e){Qc(re.ON_PAGE_NOT_FOUND,e)}function k_(e){Xc(re.ON_ERROR,e)}function R_(e){Qc(re.ON_ERROR,e)}function x_(e){Xc(re.ON_SHOW,e)}function B_(e){Qc(re.ON_SHOW,e)}function M_(e){Xc(re.ON_HIDE,e)}function D_(e){Qc(re.ON_HIDE,e)}let L_=Ut("getEnterOptionsSync",()=>Ia()),F_=Ut("getLaunchOptionsSync",()=>ds()),Eu,ch;function uh(e){try{return JSON.parse(e)}catch(t){}return e}function V_(e){e.type==="clientId"?(Eu=e.cid,ch=e.errMsg,fh(Eu,e.errMsg)):e.type==="pushMsg"?Fl.forEach(t=>{t({type:"receive",data:uh(e.message)})}):e.type==="click"&&Fl.forEach(t=>{t({type:"click",data:uh(e.message)})})}let mf=[];function fh(e,t){mf.forEach(n=>{n(e,t)}),mf.length=0}function $_(e){se.isPlainObject(e)||(e={});let{success:t,fail:n,complete:r}=ir(e),s=se.isFunction(t),d=se.isFunction(n),g=se.isFunction(r);mf.push((y,H)=>{let I;y?(I={errMsg:"getPushCid:ok",cid:y},s&&t(I)):(I={errMsg:"getPushCid:fail"+(H?" "+H:"")},d&&n(I)),g&&r(I)}),typeof Eu!="undefined"&&Promise.resolve().then(()=>fh(Eu,ch))}let Fl=[],U_=e=>{Fl.indexOf(e)===-1&&Fl.push(e)},H_=e=>{if(!e)Fl.length=0;else{let t=Fl.indexOf(e);t>-1&&Fl.splice(t,1)}},j_="getBackgroundAudioManager",W_="makePhoneCall",z_={phoneNumber:String},Y_="addPhoneContact",G_={formatArgs:{firstName(e){if(!e)return"addPhoneContact:fail parameter error: parameter.firstName should not be empty;"}}},q_={firstName:{type:String,required:!0},photoFilePath:String,nickName:String,lastName:String,middleName:String,remark:String,mobilePhoneNumber:String,weChatNumber:String,addressCountry:String,addressState:String,addressCity:String,addressStreet:String,addressPostalCode:String,organization:String,title:String,workFaxNumber:String,workPhoneNumber:String,hostNumber:String,email:String,url:String,workAddressCountry:String,workAddressState:String,workAddressCity:String,workAddressStreet:String,workAddressPostalCode:String,homeFaxNumber:String,homePhoneNumber:String,homeAddressCountry:String,homeAddressState:String,homeAddressCity:String,homeAddressStreet:String,homeAddressPostalCode:String},K_="getClipboardData",J_="setClipboardData",Z_={formatArgs:{showToast:!0},beforeInvoke(){ho()},beforeSuccess(e,t){if(!t.showToast)return;let{t:n}=Xe(),r=n("uni.setClipboardData.success");r&&ce.showToast({title:r,icon:"success",mask:!1})}},X_={data:{type:String,required:!0},showToast:{type:Boolean}},dh="onAccelerometer",Q_="offAccelerometer",eb="startAccelerometer",tb="stopAccelerometer",hh="onCompass",nb="offCompass",rb="startCompass",ib="stopCompass",ob="vibrateShort",ab="vibrateLong",ph="onBluetoothDeviceFound",gh="onBluetoothAdapterStateChange",vh="onBLEConnectionStateChange",mh="onBLECharacteristicValueChange",sb="startBluetoothDevicesDiscovery",lb={services:Array,allowDuplicatesKey:Boolean,interval:Number},cb="getConnectedBluetoothDevices",ub={services:{type:Array,required:!0}},fb="createBLEConnection",db={deviceId:{type:String,required:!0}},hb="closeBLEConnection",pb={deviceId:{type:String,required:!0}},gb="getBLEDeviceServices",vb={deviceId:{type:String,required:!0}},mb="getBLEDeviceCharacteristics",_b={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0}},bb="notifyBLECharacteristicValueChange",yb={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0},characteristicId:{type:String,required:!0},state:{type:Boolean,required:!0}},Eb="readBLECharacteristicValue",wb={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0},characteristicId:{type:String,required:!0}},Sb="writeBLECharacteristicValue",Cb={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0},characteristicId:{type:String,required:!0},value:{type:Array,required:!0}},Ab="setBLEMTU",Ob={deviceId:{type:String,required:!0},mtu:{type:Number,required:!0}},Tb="getBLEDeviceRSSI",Pb={deviceId:{type:String,required:!0}},_h="onBeaconUpdate",bh="onBeaconServiceChange",Ib="getBeacons",Nb="startBeaconDiscovery",kb={uuids:{type:Array,required:!0}},Rb="stopBeaconDiscovery",xb="getScreenBrightness",Bb="setScreenBrightness",Mb="setKeepScreenOn",Db="soterAuthentication",Lb="checkIsSoterEnrolledInDevice",Fb=["fingerPrint","facial","speech"],Vb={formatArgs:{checkAuthMode(e,t){if(!e||!Fb.includes(e))return"checkAuthMode \u586B\u5199\u9519\u8BEF"}}},$b={checkAuthMode:String},Ub="checkIsSoterEnrolledInDevice",Hb={formatArgs:{requestAuthModes(e,t){if(!e.includes("fingerPrint")&&!e.includes("facial"))return"requestAuthModes \u586B\u5199\u9519\u8BEF"}}},jb={requestAuthModes:{type:Array,required:!0},challenge:String,authContent:String},Wb="scanCode",zb={onlyFromCamera:Boolean,scanType:Array,autoDecodeCharSet:Boolean},Yb="getStorage",yh={key:{type:String,required:!0}},Gb="getStorageSync",Eh=[{name:"key",type:String,required:!0}],qb="setStorage",Kb={key:{type:String,required:!0},data:{required:!0}},Jb="setStorageSync",Zb=[{name:"key",type:String,required:!0},{name:"data",required:!0}],wh="removeStorage",Xb=yh,Qb=Eh,e0="saveFile",t0={formatArgs:{tempFilePath(e,t){t.tempFilePath=Vt(e)}}},n0={tempFilePath:{type:String,required:!0}},r0="getSavedFileList",i0="removeSavedFile",o0={formatArgs:{filePath(e,t){t.filePath=Vt(e)}}},a0={filePath:{type:String,required:!0}},s0="getFileInfo",l0={formatArgs:{filePath(e,t){t.filePath=Vt(e)}}},c0={filePath:{type:String,required:!0}},u0="getSavedFileInfo",f0={formatArgs:{filePath(e,t){t.filePath=Vt(e)}}},d0={filePath:{type:String,required:!0}},h0="openDocument",p0={formatArgs:{filePath(e,t){t.filePath=Vt(e)}}},g0={filePath:{type:String,required:!0},fileType:String},v0="hideKeyboard",m0="showKeyboard",_0="chooseLocation",b0={keyword:String,latitude:Number,longitude:Number},y0="getLocation",Sh=["wgs84","gcj02"],E0={formatArgs:{type(e,t){e=(e||"").toLowerCase(),Sh.indexOf(e)===-1?t.type=Sh[0]:t.type=e},altitude(e,t){t.altitude=e||!1}}},w0={type:String,altitude:Boolean},S0="openLocation",C0={formatArgs:{scale(e,t){e=Math.floor(e),t.scale=e>=5&&e<=18?e:18}}},A0={latitude:{type:Number,required:!0},longitude:{type:Number,required:!0},scale:Number,name:String,address:String},O0="chooseImage",T0={formatArgs:{count(e,t){(!e||e<=0)&&(t.count=9)},sizeType(e,t){t.sizeType=Jn(e,pr)},sourceType(e,t){t.sourceType=Jn(e,Pn)},extension(e,t){if(e instanceof Array&&e.length===0)return"param extension should not be empty.";e||(t.extension=["*"])}}},P0={count:Number,sizeType:[Array,String],sourceType:Array,extension:Array},I0="chooseVideo",N0={formatArgs:{sourceType(e,t){t.sourceType=Jn(e,Pn)},compressed:!0,maxDuration:60,camera:"back",extension(e,t){if(e instanceof Array&&e.length===0)return"param extension should not be empty.";e||(t.extension=["*"])}}},k0={sourceType:Array,compressed:Boolean,maxDuration:Number,camera:String,extension:Array},R0="getImageInfo",x0={formatArgs:{src(e,t){t.src=Vt(e)}}},B0={src:{type:String,required:!0}},M0="previewImage",D0={formatArgs:{urls(e,t){t.urls=e.map(n=>typeof n=="string"&&n?Vt(n):"")},current(e,t){typeof e=="number"?t.current=e>0&&e<t.urls.length?e:0:typeof e=="string"&&e&&(t.current=Vt(e))}}},L0={urls:{type:Array,required:!0},current:{type:[Number,String]}},F0="closePreviewImage",V0="getVideoInfo",$0={formatArgs:{src(e,t){t.src=Vt(e)}}},U0={src:{type:String,required:!0}},H0="saveImageToPhotosAlbum",j0={formatArgs:{filePath(e,t){t.filePath=Vt(e)}}},W0={filePath:{type:String,required:!0}},z0="saveVideoToPhotosAlbum",Y0={formatArgs:{filePath(e,t){t.filePath=Vt(e)}}},G0={filePath:{type:String,required:!0}},q0="getRecorderManager",K0="compressImage",J0={formatArgs:{src(e,t){t.src=Vt(e)}}},Z0={src:{type:String,required:!0}},X0="compressVideo",Q0={formatArgs:{src(e,t){t.src=Vt(e)}}},ey={src:{type:String,required:!0},quality:String,bitrate:Number,fps:Number,resolution:Number},ty="request",ny={JSON:"json"},ry=["text","arraybuffer"],iy="text",Ch=encodeURIComponent;function oy(e,t){let n=e.split("#"),r=n[1]||"";n=n[0].split("?");let s=n[1]||"";e=n[0];let d=s.split("&").filter(y=>y),g={};d.forEach(y=>{let H=y.split("=");g[H[0]]=H[1]});for(let y in t)if(se.hasOwn(t,y)){let H=t[y];typeof H=="undefined"||H===null?H="":se.isPlainObject(H)&&(H=JSON.stringify(H)),g[Ch(y)]=Ch(H)}return s=Object.keys(g).map(y=>`${y}=${g[y]}`).join("&"),e+(s?"?"+s:"")+(r?"#"+r:"")}let ay={method:String,data:[Object,String,Array,ArrayBuffer],url:{type:String,required:!0},header:Object,dataType:String,responseType:String,withCredentials:Boolean},sy={formatArgs:{method(e,t){t.method=cn((e||"").toUpperCase(),qt)},data(e,t){t.data=e||""},url(e,t){t.method===qt[0]&&se.isPlainObject(t.data)&&Object.keys(t.data).length&&(t.url=oy(e,t.data))},header(e,t){let n=t.header=e||{};t.method!==qt[0]&&(Object.keys(n).find(r=>r.toLowerCase()==="content-type")||(n["Content-Type"]="application/json"))},dataType(e,t){t.dataType=(e||ny.JSON).toLowerCase()},responseType(e,t){t.responseType=(e||"").toLowerCase(),ry.indexOf(t.responseType)===-1&&(t.responseType=iy)}}},ly="configMTLS",cy={certificates:{type:Array,required:!0}},uy={formatArgs:{certificates(e){if(e.some(t=>se.toRawType(t.host)!=="String"))return"\u53C2\u6570\u914D\u7F6E\u9519\u8BEF\uFF0C\u8BF7\u786E\u8BA4\u540E\u91CD\u8BD5"}}},fy="downloadFile",dy={formatArgs:{header(e,t){t.header=e||{}}}},hy={url:{type:String,required:!0},header:Object,timeout:Number},py="uploadFile",gy={formatArgs:{filePath(e,t){e&&(t.filePath=Vt(e))},header(e,t){t.header=e||{}},formData(e,t){t.formData=e||{}}}},vy={url:{type:String,required:!0},files:Array,filePath:String,name:String,header:Object,formData:Object,timeout:Number},my="connectSocket",_y={formatArgs:{header(e,t){t.header=e||{}},method(e,t){t.method=cn((e||"").toUpperCase(),qt)},protocols(e,t){typeof e=="string"&&(t.protocols=[e])}}},by={url:{type:String,required:!0},header:{type:Object},method:String,protocols:[Array,String]},yy="sendSocketMessage",Ey={data:[String,ArrayBuffer]},wy="closeSocket",Sy={code:Number,reason:String};function Cy(e){if(typeof e!="string")return e;let t=e.indexOf("?");if(t===-1)return e;let n=e.slice(t+1).trim().replace(/^(\?|#|&)/,"");if(!n)return e;e=e.slice(0,t);let r=[];return n.split("&").forEach(s=>{let d=s.replace(/\+/g," ").split("="),g=d.shift(),y=d.length>0?d.join("="):"";r.push(g+"="+encodeURIComponent(y))}),r.length?e+"?"+r.join("&"):e}let Ay=["slide-in-right","slide-in-left","slide-in-top","slide-in-bottom","fade-in","zoom-out","zoom-fade-out","pop-in","none"],Oy=["slide-out-right","slide-out-left","slide-out-top","slide-out-bottom","fade-out","zoom-in","zoom-fade-in","pop-out","none"],_c={url:{type:String,required:!0}},_f="navigateTo",bf="redirectTo",Ah="reLaunch",wu="switchTab",Ty="navigateBack",yf="preloadPage",Oh="unPreloadPage",Py=se.extend({},_c,Th(Ay)),Iy=se.extend({delta:{type:Number}},Th(Oy)),Ny=_c,ky=_c,Ry=_c,xy=_c,By=_c,My=Cu(_f),Dy=Cu(bf),Ly=Cu(Ah),Fy=Cu(wu),Vy={formatArgs:{delta(e,t){e=parseInt(e+"")||1,t.delta=Math.min(Un().length-1,e)}}};function Th(e){return{animationType:{type:String,validator(t){if(t&&e.indexOf(t)===-1)return"`"+t+"` is not supported for `animationType` (supported values are: `"+e.join("`|`")+"`)"}},animationDuration:{type:Number}}}let Su;function $y(){Su=""}function Cu(e){return{formatArgs:{url:Uy(e)},beforeAll:$y}}function Uy(e){return function(n,r){if(!n)return'Missing required args: "url"';n=As(n);let s=n.split("?")[0],d=po(s,!0);if(!d)return"page `"+n+"` is not found";if(e===_f||e===bf){if(d.meta.isTabBar)return`can not ${e} a tabbar page`}else if(e===wu&&!d.meta.isTabBar)return"can not switch to no-tabBar page";if((e===wu||e===yf)&&d.meta.isTabBar&&r.openType!=="appLaunch"&&(n=s),d.meta.isEntry&&(n=n.replace(d.alias,"/")),r.url=Cy(n),e!==Oh){if(e===yf){if(!d.meta.isNVue)return"can not preload vue page";if(d.meta.isTabBar){let g=Un(),y=d.path.slice(1);if(g.find(H=>H.route===y))return"tabBar page `"+y+"` already exists"}return}if(Su===n&&r.openType!=="appLaunch")return`${Su} locked`;P.ready&&(Su=n)}}}let Hy="hideLoading",jy="hideToast",Ph="loadFontFace",Wy={family:{type:String,required:!0},source:{type:String,required:!0},desc:Object},zy=["#ffffff","#000000"],Yy="setNavigationBarColor",Gy={formatArgs:{animation(e,t){e||(e={duration:0,timingFunc:"linear"}),t.animation={duration:e.duration||0,timingFunc:e.timingFunc||"linear"}}}},qy={frontColor:{type:String,required:!0,validator(e){if(zy.indexOf(e)===-1)return`invalid frontColor "${e}"`}},backgroundColor:{type:String,required:!0},animation:Object},Ky="setNavigationBarTitle",Jy={title:{type:String,required:!0}},Zy="showNavigationBarLoading",Xy="hideNavigationBarLoading",Ih="pageScrollTo",Qy={scrollTop:Number,selector:String,duration:Number},eE={formatArgs:{duration:300}},tE="showActionSheet",nE={itemList:{type:Array,required:!0},title:String,itemColor:String,popover:Object},rE={formatArgs:{itemColor:"#000"}},iE="showLoading",oE={title:String,mask:Boolean},aE={formatArgs:{title:"",mask:!1}},sE="showModal",lE={title:String,content:String,showCancel:Boolean,cancelText:String,cancelColor:String,confirmText:String,confirmColor:String},cE={beforeInvoke(){jn()},formatArgs:{title:"",content:"",showCancel:!0,cancelText(e,t){if(!se.hasOwn(t,"cancelText")){let{t:n}=Xe();t.cancelText=n("uni.showModal.cancel")}},cancelColor:"#000",confirmText(e,t){if(!se.hasOwn(t,"confirmText")){let{t:n}=Xe();t.confirmText=n("uni.showModal.confirm")}},confirmColor:re.PRIMARY_COLOR}},uE="showToast",fE=["success","loading","none","error"],dE={title:String,icon:String,image:String,duration:Number,mask:Boolean},hE={formatArgs:{title:"",icon(e,t){t.icon=cn(e,fE)},image(e,t){e?t.image=Vt(e):t.image=""},duration:1500,mask:!1}},pE="startPullDownRefresh",gE="stopPullDownRefresh",eu={index:{type:Number,required:!0}},gl={beforeInvoke(){let e=na();if(e&&!e.isTabBar)return"not TabBar page"},formatArgs:{index(e){if(!P.tabBar.list[e])return"tabbar item not found"}}},vE="setTabBarItem",mE=se.extend({text:String,iconPath:String,selectedIconPath:String,pagePath:String},eu),_E={beforeInvoke:gl.beforeInvoke,formatArgs:se.extend({pagePath(e,t){e&&(t.pagePath=re.removeLeadingSlash(e))}},gl.formatArgs)},bE="setTabBarStyle",yE={color:String,selectedColor:String,backgroundColor:String,backgroundImage:String,backgroundRepeat:String,borderStyle:String},EE=/^(linear|radial)-gradient\(.+?\);?$/,wE={beforeInvoke:gl.beforeInvoke,formatArgs:{backgroundImage(e,t){e&&!EE.test(e)&&(t.backgroundImage=Vt(e))},borderStyle(e,t){e&&(t.borderStyle=e==="white"?"white":"black")}}},SE="hideTabBar",Nh={animation:Boolean},CE="showTabBar",AE=Nh,OE="hideTabBarRedDot",TE=eu,PE=gl,IE="showTabBarRedDot",NE=eu,kE=gl,RE="removeTabBarBadge",xE=eu,BE=gl,ME="setTabBarBadge",DE=se.extend({text:{type:String,required:!0}},eu),LE={beforeInvoke:gl.beforeInvoke,formatArgs:se.extend({text(e,t){re.getLen(e)>=4&&(t.text="...")}},gl.formatArgs)},FE="getProvider",VE={service:{type:String,required:!0}},$E="login",UE={provider:String,scopes:[String,Array],timeout:Number,univerifyStyle:Object,onlyAuthorize:Boolean},HE="getUserInfo",jE={provider:String,withCredentials:Boolean,timeout:Number,lang:String},WE="ggetUserProfilegetUserProfile",zE={provider:String,withCredentials:Boolean,timeout:Number,lang:String},YE="preLogin",GE={UNIVERIFY:"univerify"},qE={formatArgs:{provider(e,t){if(Object.values(GE).indexOf(String(e))<0)return"provider error"}}},KE={provider:{type:String,required:!0}},JE="closeAuthView",ZE="getCheckBoxState",XE="getUniverifyManager",QE="share",kh=["WXSceneSession","WXSceneTimeline","WXSceneFavorite"],ew={formatArgs:{scene(e,t){let{provider:n,openCustomerServiceChat:r}=t;if(n==="weixin"&&!r&&(!e||!kh.includes(e)))return`\u5206\u4EAB\u5230\u5FAE\u4FE1\u65F6\uFF0Cscene\u5FC5\u987B\u4E3A\u4EE5\u4E0B\u5176\u4E2D\u4E00\u4E2A\uFF1A${kh.join("\u3001")}`},summary(e,t){if(t.type===1&&!e)return"\u5206\u4EAB\u7EAF\u6587\u672C\u65F6\uFF0Csummary\u5FC5\u586B"},href(e,t){if(t.type===0&&!e)return"\u5206\u4EAB\u56FE\u6587\u65F6\uFF0Chref\u5FC5\u586B"},imageUrl(e,t){if([0,2,5].includes(Number(t.type))&&!e)return"\u5206\u4EAB\u56FE\u6587\u3001\u7EAF\u56FE\u7247\u3001\u5C0F\u7A0B\u5E8F\u65F6\uFF0CimageUrl\u5FC5\u586B\uFF0C\u63A8\u8350\u4F7F\u7528\u5C0F\u4E8E20Kb\u7684\u56FE\u7247"},mediaUrl(e,t){if([3,4].includes(Number(t.type))&&!e)return"\u5206\u4EAB\u97F3\u4E50\u3001\u89C6\u9891\u65F6\uFF0CmediaUrl\u5FC5\u586B"},miniProgram(e,t){if(t.type===5&&!e)return"\u5206\u4EAB\u5C0F\u7A0B\u5E8F\u65F6\uFF0CminiProgram\u5FC5\u586B"},corpid(e,t){if(t.openCustomerServiceChat&&!e)return"\u4F7F\u7528\u6253\u5F00\u5BA2\u670D\u529F\u80FD\u65F6 corpid \u5FC5\u586B"},customerUrl(e,t){if(t.openCustomerServiceChat&&!e)return"\u4F7F\u7528\u6253\u5F00\u5BA2\u670D\u529F\u80FD\u65F6 customerUrl \u5FC5\u586B"}}},tw={provider:{type:String,required:!0},type:Number,title:String,scene:String,summary:String,href:String,imageUrl:String,mediaUrl:String,miniProgram:Object},nw="shareWithSystem",Rh=["text","image"],rw={formatArgs:{type(e,t){if(e&&!Rh.includes(e))return"\u5206\u4EAB\u53C2\u6570 type \u4E0D\u6B63\u786E\u3002\u53EA\u652F\u6301text\u3001image";t.type=cn(e,Rh)}}},iw={type:String,summary:String,href:String,imageUrl:String},ow="requestPayment",aw={provider:{type:String,required:!0},orderInfo:{type:[String,Object],required:!0},timeStamp:String,nonceStr:String,package:String,signType:String,paySign:String},sw="createRewardedVideoAd",lw={formatArgs:{adpid:"",adUnitId:""}},cw={adpid:String,adUnitId:String},uw="createFullScreenVideoAd",fw={formatArgs:{adpid:""}},dw={adpid:String},hw="createInterstitialAd",pw={formatArgs:{adpid:"",adUnitId:""}},gw={adpid:String,adUnitId:String},vw="createInteractiveAd",mw={formatArgs:{adpid(e,t){if(!e)return"adpid should not be empty.";e&&(t.adpid=e)},provider(e,t){if(!e)return"provider should not be empty.";e&&(t.provider=e)}}},_w={adpid:{type:String,required:!0},provider:{type:String,required:!0}};function Vl(e,t){return function(r){delete r.code,delete r.message,typeof t=="function"&&(r=t(r)),e(r)}}function Cr(e,t){return function(r){r=r||{},t=r.message||t||"",delete r.message,e(t,se.extend({code:0},r))}}function bc(e,t){return function(){e()(function(r){r&&(delete r.code,delete r.message),bt.invokeOnCallback(t,r)})}}function Pi(e,t,n){return function(r,{resolve:s,reject:d}){e()(se.extend({},typeof t=="function"?t(r):r,{success:Vl(s,n),fail:Cr(d)}))}}function xh(e=""){if(!(P.tabBar&&Array.isArray(P.tabBar.list)))return!1;try{if(!e){let n=Un();if(!n.length)return!1;let r=n[n.length-1];return r?r.$page.meta.isTabBar:!1}/^\//.test(e)||(e=re.addLeadingSlash(e));let t=po(e);return t&&t.meta.isTabBar}catch(t){}return!1}let es="__TYPE",bw="uni-storage-keys";function Ef(e){let t=["object","string","number","boolean","undefined"];try{let n=typeof e=="string"?JSON.parse(e):e,r=n.type;if(t.indexOf(r)>=0){let s=Object.keys(n);if(s.length===2&&"data"in n){if(typeof n.data===r)return n.data;if(r==="object"&&/^\d{4}-\d{2}-\d{2}T\d{2}\:\d{2}\:\d{2}\.\d{3}Z$/.test(n.data))return new Date(n.data)}else if(s.length===1)return""}}catch(n){}}let yw=Ut(Jb,(e,t)=>{let n=typeof t,r=n==="string"?t:JSON.stringify({type:n,data:t});try{n==="string"&&Ef(r)!==void 0?l.storage.setItem(e+es,n):l.storage.removeItem(e+es),l.storage.setItem(e,r)}catch(s){}},Zb),Ew=Ie(qb,({key:e,data:t},{resolve:n,reject:r})=>{let s=typeof t,d=s==="string"?t:JSON.stringify({type:s,data:t});try{let g=l.storage;s==="string"&&Ef(d)!==void 0?g.setItemAsync(e+es,s):g.removeItemAsync(e+es),g.setItemAsync(e,d,n,Cr(r))}catch(g){r(g.message)}},Kb);function wf(e,t){let n=t;if(e!=="string"||e==="string"&&t==='{"type":"undefined"}')try{let r=JSON.parse(t),s=Ef(r);if(s!==void 0)n=s;else if(e&&(n=r,typeof r=="string")){r=JSON.parse(r);let d=typeof r;d==="number"&&e==="date"?n=new Date(r):d===(["null","array"].indexOf(e)<0?e:"object")&&(n=r)}}catch(r){}return n}let ww=Ut(Gb,(e,t)=>{let n=l.storage.getItem(e),s=(l.storage.getItem(e+es)||"").toLowerCase();return typeof n!="string"?"":wf(s,n)},Eh),Sw=Ie(Yb,({key:e},{resolve:t,reject:n})=>{let r=l.storage;r.getItemAsync(e,function(s){r.getItemAsync(e+es,function(d){let y=(d.data||"").toLowerCase();t({data:wf(y,s.data)})},function(){t({data:wf("",s.data)})})},Cr(n))},yh),Cw=Ut(wh,e=>{l.storage.removeItem(e+es),l.storage.removeItem(e)},Qb),Aw=Ie(wh,({key:e},{resolve:t,reject:n})=>{l.storage.removeItemAsync(e+es),l.storage.removeItemAsync(e,t,Cr(n))},Xb),Ow=Ut("clearStorageSync",()=>{l.storage.clear()}),Tw=Ie("clearStorage",(e,{resolve:t,reject:n})=>{l.storage.clearAsync(t,Cr(n))}),Bh=Ut("getStorageInfoSync",()=>{let e=l.storage.getLength()||0,t=[],n=0;for(let r=0;r<e;r++){let s=l.storage.key(r);if(s!==bw&&(s.indexOf(es)<0||s.indexOf(es)+es.length!==s.length)){let d=l.storage.getItem(s);n+=s.length+d.length,t.push(s)}}return{keys:t,currentSize:Math.ceil(n*2/1024),limitSize:Number.MAX_VALUE}}),Pw=Ie("getStorageInfo",(e,{resolve:t})=>{t(Bh())}),Iw=Ie(s0,(e,{resolve:t,reject:n})=>{l.io.getFileInfo(se.extend(e,{success:Vl(t),fail:Cr(n)}))},c0,l0),Nw=0,Mh="uniapp_save",kw=`_doc/${Mh}`;function Rw(e,t){t=t||function(){},l.io.requestFileSystem(l.io.PRIVATE_DOC,n=>{n.root.getDirectory(Mh,{create:!0},e,t)},t)}let xw=Ie(e0,({tempFilePath:e},{resolve:t,reject:n})=>{let r=Cr(n),s=`${Date.now()}${Nw++}${us(e)}`;l.io.resolveLocalFileSystemURL(e,d=>{Rw(g=>{d.copyTo(g,s,()=>{let y=kw+"/"+s;t({savedFilePath:y})},r)},r)},r)},n0,t0),Bw="uniapp_save";function Mw(e,t){t=t||function(){},l.io.requestFileSystem(l.io.PRIVATE_DOC,n=>{n.root.getDirectory(Bw,{create:!0},e,t)},t)}let Dw=Ie(r0,(e,{resolve:t,reject:n})=>{let r=Cr(n);Mw(s=>{var d=s.createReader(),g=[];d.readEntries(y=>{y&&y.length?y.forEach(H=>{H.getMetadata(I=>{g.push({filePath:l.io.convertAbsoluteFileSystem(H.fullPath),createTime:I.modificationTime.getTime(),size:I.size}),g.length===y.length&&t({fileList:g})},r,!1)}):t({fileList:g})},r)},r)}),Lw=Ie(u0,({filePath:e},{resolve:t,reject:n})=>{let r=Cr(n);l.io.resolveLocalFileSystemURL(e,s=>{s.getMetadata(d=>{t({createTime:d.modificationTime.getTime(),size:d.size})},r,!1)},r)},d0,f0),Fw=Ie(i0,({filePath:e},{resolve:t,reject:n})=>{let r=Cr(n);l.io.resolveLocalFileSystemURL(e,s=>{s.remove(()=>{t()},r)},r)},a0,o0),Vw=Ie(h0,({filePath:e,fileType:t},{resolve:n,reject:r})=>{let s=Cr(r);l.runtime.openDocument(Vt(e),void 0,n,s)},g0,p0),$w=l.os.name==="iOS",da,Sf=!0,hr;function Uw(e,t,n){!hr||(e==="none"?(hr.hideTabBarRedDot({index:t}),hr.removeTabBarBadge({index:t})):e==="text"?hr.setTabBarBadge({index:t,text:n}):e==="redDot"&&hr.showTabBarRedDot({index:t}))}function Hw(e,t,n,r,s,d){let g={index:e};if(t!==void 0&&(g.text=t),n&&(g.iconPath=Vt(n)),r&&(g.selectedIconPath=Vt(r)),d!==void 0&&(g.iconfont=d),s!==void 0){g.visible=da.list[e].visible=s,delete g.index;let y=da.list.map(H=>({visible:H.visible}));y[e]=g,hr&&hr.setTabBarItems({list:y})}else hr&&hr.setTabBarItem(g)}function jw(e){hr&&hr.setTabBarStyle(e)}function Ww(e){Sf=!1,hr&&hr.hideTabBar({animation:e})}function zw(e){Sf=!0,hr&&hr.showTabBar({animation:e})}let Au=[];var Ii={id:"0",init(e,t){e&&e.list.length&&(da=e);try{hr=v.requireModule("uni-tabview")}catch(n){console.log(`uni.requireNativePlugin("uni-tabview") error ${n}`)}hr.onMaskClick(()=>{Au.forEach(n=>{n()})}),hr&&hr.onClick(({index:n})=>{t(da.list[n],n)}),hr&&hr.onMidButtonClick(()=>bt.invokeOnCallback(ah))},indexOf(e){let t=da&&da.list&&da.list.length;if(t){for(let n=0;n<t;n++)if(da.list[n].pagePath===e||da.list[n].pagePath===`${e}.html`)return n}return-1},switchTab(e){let t=this.indexOf(e);return t>=0?(hr&&hr.switchSelect({index:t}),!0):!1},setTabBarBadge:Uw,setTabBarItem:Hw,setTabBarStyle:jw,hideTabBar:Ww,showTabBar:zw,append(e){hr&&hr.append({id:e.id},({code:t})=>{t!==0&&x(()=>{this.append(e)},20)})},get visible(){return Sf},get height(){return(da&&da.height?parseFloat(da.height):re.TABBAR_HEIGHT)+l.navigator.getSafeAreaInsets().deviceBottom},get cover(){return $w&&["extralight","light","dark"].indexOf(da.blurEffect)>=0},setStyle({mask:e}){hr.setMask({color:e})},addEventListener(e,t){Au.push(t)},removeEventListener(e,t){let n=Au.indexOf(t);Au.splice(n,1)}};function Ou(){let e=br();return e?e.$getAppWebview():null}function Dh(e){return e?e.$getAppWebview():Ou()}let Lh=null;function Fh(){return Lh}function Cf(e){Lh=e}function Af(e=""){if(!(P.tabBar&&Array.isArray(P.tabBar.list)))return!1;try{if(!e){let n=Un();if(!n.length)return!1;let r=n[n.length-1];return r?r.$page.meta.isTabBar:!1}/^\//.test(e)||(e=re.addLeadingSlash(e));let t=We.find(n=>n.path===e);return t&&t.meta.isTabBar}catch(t){}return!1}function Of(){return l.navigator.isImmersedStatusbar()?Math.round(l.os.name==="iOS"?l.navigator.getSafeAreaInsets().top:l.navigator.getStatusbarHeight()):0}function Vh(){let e=l.navigator.getStatusBarStyle();return e==="UIStatusBarStyleBlackTranslucent"||e==="UIStatusBarStyleBlackOpaque"||e==="null"?e="light":e==="UIStatusBarStyleDefault"&&(e="dark"),e}let Tf;function Yw(){return Tf=Tf||l.device.uuid,Tf}function Gw(){let{resolutionWidth:e,resolutionHeight:t}=l.screen.getCurrentSize()||{resolutionWidth:0,resolutionHeight:0};return{screenWidth:Math.round(e),screenHeight:Math.round(t)}}let $h=Ut("getSystemInfoSync",()=>{let e=l.os.name.toLowerCase(),t=e==="ios",n=e==="android",{screenWidth:r,screenHeight:s}=Gw(),d=Of(),g,y={height:0,cover:!1},H=Ou();if(H){let Qt=H.getStyle(),Lt=Qt&&Qt.titleNView;Lt&&Lt.type&&Lt.type!=="none"&&(y.height=Lt.type==="transparent"?0:d+re.NAVBAR_HEIGHT,y.cover=Lt.type==="transparent"||Lt.type==="float"),g=H.getSafeAreaInsets()}else g=l.navigator.getSafeAreaInsets();let I={height:0,cover:!1};xh()&&(I.height=Ii.visible?Ii.height:0,I.cover=Ii.cover);let $=y.cover?y.height:0,pe=I.cover?I.height:0,Ae=s-y.height-I.height,Be=s-(y.cover?0:y.height)-(I.cover?0:I.height),yt=r;(!I.height||I.cover)&&!g.bottom&&g.deviceBottom&&(Ae-=g.deviceBottom,Be-=g.deviceBottom),g=t?g:{left:0,right:0,top:y.height&&!y.cover?0:d,bottom:0};let Dt={left:g.left,right:yt-g.right,top:g.top,bottom:Be-g.bottom,width:yt-g.left-g.right,height:Be-g.top-g.bottom};return{brand:l.device.vendor,model:l.device.model,pixelRatio:l.screen.scale,screenWidth:r,screenHeight:s,windowWidth:yt,windowHeight:Ae,statusBarHeight:d,language:l.os.language,system:`${t?"iOS":n?"Android":""} ${l.os.version}`,version:l.runtime.innerVersion,platform:e,SDKVersion:"",windowTop:$,windowBottom:pe,safeArea:Dt,safeAreaInsets:{top:g.top,right:g.right,bottom:g.bottom,left:g.left},deviceId:Yw()}}),qw=Ie("getSystemInfo",(e,{resolve:t})=>t($h())),yc=null,Kw=xn(hh,()=>{Uh()}),Jw=oi(nb,()=>{Hh()}),Uh=Ie(rb,(e,{resolve:t,reject:n})=>{yc||(yc=l.orientation.watchOrientation(r=>{bt.invokeOnCallback(hh,{direction:r.magneticHeading})},r=>{n(r.message),yc=null},{frequency:qo})),x(t,qo)}),Hh=Ie(ib,(e,{resolve:t})=>{yc&&(l.orientation.clearWatch(yc),yc=null),t()}),Zw=Ie(ob,(e,{resolve:t})=>{l.device.vibrate(15),t()}),Xw=Ie(ab,(e,{resolve:t})=>{l.device.vibrate(400),t()}),Ec=null,Qw=xn(dh,()=>{jh()}),eS=oi(Q_,()=>{Wh()}),jh=Ie(eb,(e,{resolve:t,reject:n})=>{Ec||(Ec=l.accelerometer.watchAcceleration(r=>{bt.invokeOnCallback(dh,{x:r&&r.xAxis||0,y:r&&r.yAxis||0,z:r&&r.zAxis||0})},r=>{Ec=null,n(`startAccelerometer:fail ${r.message}`)},{frequency:qo})),x(t,qo)}),Wh=Ie(tb,(e,{resolve:t})=>{Ec&&(l.accelerometer.clearWatch(Ec),Ec=null),t()}),tS=xn(ph,bc(()=>l.bluetooth.onBluetoothDeviceFound.bind(l.bluetooth),ph)),nS=xn(gh,bc(()=>l.bluetooth.onBluetoothAdapterStateChange.bind(l.bluetooth),gh)),rS=xn(vh,bc(()=>l.bluetooth.onBLEConnectionStateChange.bind(l.bluetooth),vh)),iS=xn(mh,bc(()=>l.bluetooth.onBLECharacteristicValueChange.bind(l.bluetooth),mh)),oS=Ie("openBluetoothAdapter",Pi(()=>l.bluetooth.openBluetoothAdapter.bind(l.bluetooth))),aS=Ie("closeBluetoothAdapter",Pi(()=>l.bluetooth.closeBluetoothAdapter.bind(l.bluetooth))),sS=Ie("getBluetoothAdapterState",Pi(()=>l.bluetooth.getBluetoothAdapterState.bind(l.bluetooth))),lS=Ie(sb,Pi(()=>l.bluetooth.startBluetoothDevicesDiscovery.bind(l.bluetooth)),lb),cS=Ie("stopBluetoothDevicesDiscovery",Pi(()=>l.bluetooth.stopBluetoothDevicesDiscovery.bind(l.bluetooth))),uS=Ie("getBluetoothDevices",Pi(()=>l.bluetooth.getBluetoothDevices.bind(l.bluetooth))),fS=Ie(cb,Pi(()=>l.bluetooth.getConnectedBluetoothDevices.bind(l.bluetooth)),ub),dS=Ie(fb,Pi(()=>l.bluetooth.createBLEConnection.bind(l.bluetooth)),db),hS=Ie(hb,Pi(()=>l.bluetooth.closeBLEConnection.bind(l.bluetooth)),pb),pS=Ie(gb,Pi(()=>l.bluetooth.getBLEDeviceServices.bind(l.bluetooth)),vb),gS=Ie(mb,Pi(()=>l.bluetooth.getBLEDeviceCharacteristics.bind(l.bluetooth)),_b),vS=Ie(bb,Pi(()=>l.bluetooth.notifyBLECharacteristicValueChange.bind(l.bluetooth)),yb),mS=Ie(Eb,Pi(()=>l.bluetooth.readBLECharacteristicValue.bind(l.bluetooth)),wb),_S=Ie(Sb,Pi(()=>l.bluetooth.writeBLECharacteristicValue.bind(l.bluetooth)),Cb),bS=Ie(Ab,Pi(()=>l.bluetooth.setBLEMTU.bind(l.bluetooth)),Ob),yS=Ie(Tb,Pi(()=>l.bluetooth.getBLEDeviceRSSI.bind(l.bluetooth)),Pb),ES=xn(_h,bc(()=>l.ibeacon.onBeaconUpdate.bind(l.ibeacon),_h)),wS=xn(bh,bc(()=>l.ibeacon.onBeaconServiceChange.bind(l.ibeacon),bh)),SS=Ie(Ib,Pi(()=>l.ibeacon.getBeacons.bind(l.ibeacon))),CS=Ie(Nb,Pi(()=>l.ibeacon.startBeaconDiscovery.bind(l.ibeacon)),kb),AS=Ie(Rb,Pi(()=>l.ibeacon.stopBeaconDiscovery.bind(l.ibeacon))),OS=Ie(W_,({phoneNumber:e},{resolve:t})=>(l.device.dial(e),t()),z_),TS={name:{givenName:"firstName",middleName:"middleName",familyName:"lastName"},nickname:"nickName",photos:{type:"url",value:"photoFilePath"},note:"remark",phoneNumbers:[{type:"mobile",value:"mobilePhoneNumber"},{type:"work",value:"workPhoneNumber"},{type:"company",value:"hostNumber"},{type:"home fax",value:"homeFaxNumber"},{type:"work fax",value:"workFaxNumber"}],emails:[{type:"home",value:"email"}],urls:[{type:"other",value:"url"}],organizations:[{type:"company",name:"organization",title:"title"}],ims:[{type:"other",value:"weChatNumber"}],addresses:[{type:"other",preferred:!0,country:"addressCountry",region:"addressState",locality:"addressCity",streetAddress:"addressStreet",postalCode:"addressPostalCode"},{type:"home",country:"homeAddressCountry",region:"homeAddressState",locality:"homeAddressCity",streetAddress:"homeAddressStreet",postalCode:"homeAddressPostalCode"},{type:"company",country:"workAddressCountry",region:"workAddressState",locality:"workAddressCity",streetAddress:"workAddressStreet",postalCode:"workAddressPostalCode"}]},PS=["type","preferred"];function Pf(e,t,n){let r=0;return Object.keys(n).forEach(s=>{let d=n[s];typeof d!=="object"?PS.indexOf(s)!==-1?e[s]=n[s]:typeof t[d]!="undefined"?(r++,e[s]=t[d]):delete e[s]:d instanceof Array?(e[s]=[],d.forEach(y=>{let H={};Pf(H,t,y)&&e[s].push(H)}),e[s].length?r++:delete e[s]):(e[s]={},Pf(e[s],t,d)?r++:delete e[s])}),r}let IS=Ie(Y_,(e,{resolve:t,reject:n})=>{!e.photoFilePath&&(e.photoFilePath=""),l.contacts.getAddressBook(l.contacts.ADDRESSBOOK_PHONE,r=>{let s=r.create();Pf(s,e,TS),s.save(()=>t(),d=>n())},r=>n())},q_,G_);function ha(e){return typeof v!="undefined"?v.requireModule(e):__requireNativePlugin__(e)}function zh(e,t,n){return ha("plus").sendNativeEvent(e,t,n)}let NS=Ie(K_,(e,{resolve:t,reject:n})=>{ha("clipboard").getString(s=>{s.result==="success"?t({data:s.data}):n("getClipboardData:fail")})}),kS=Ie(J_,(e,{resolve:t})=>{ha("clipboard").setString(e.data),t()},X_,Z_),Yh="onNetworkStatusChange";function Gh(){qh().then(({networkType:e})=>{bt.invokeOnCallback(Yh,{isConnected:e!=="none",networkType:e})})}let RS=xn(Yh,()=>{l.globalEvent.addEventListener("netchange",Gh)}),xS=oi("offNetworkStatusChange",()=>{l.globalEvent.removeEventListener("netchange",Gh)}),qh=Ie("getNetworkType",(e,{resolve:t})=>{let n=wl[l.networkinfo.getCurrentType()]||"unknown";return t({networkType:n})});function Kh(){if(l.os.name.toLowerCase()!=="ios")return!1;let t=ha("faceID");return!!(t&&t.isSupport())}function Jh(){return!!(l.fingerprint&&l.fingerprint.isSupport())}let Zh=e=>{let t=[];return Jh()&&t.push("fingerPrint"),Kh()&&t.push("facial"),e&&e({supportMode:t}),{supportMode:t,errMsg:"checkIsSupportSoterAuthentication:ok"}},BS=Ie(Db,(e,{resolve:t,reject:n})=>{Zh(t)}),Xh=({checkAuthMode:e,resolve:t,reject:n})=>{let r=(d,g)=>n&&n(d,g),s=d=>t&&t(d);if(e==="fingerPrint"){if(Jh()){let d=l.fingerprint.isKeyguardSecure()&&l.fingerprint.isEnrolledFingerprints();return s({isEnrolled:d}),{isEnrolled:d,errMsg:"checkIsSoterEnrolledInDevice:ok"}}return r("not support",{isEnrolled:!1}),{isEnrolled:!1,errMsg:"checkIsSoterEnrolledInDevice:fail not support"}}else if(e==="facial"){if(Kh()){let d=ha("faceID"),g=d&&d.isKeyguardSecure()&&d.isEnrolledFaceID();return s({isEnrolled:g}),{isEnrolled:g,errMsg:"checkIsSoterEnrolledInDevice:ok"}}return r("not support",{isEnrolled:!1}),{isEnrolled:!1,errMsg:"checkIsSoterEnrolledInDevice:fail not support"}}return r("not support",{isEnrolled:!1}),{isEnrolled:!1,errMsg:"checkIsSoterEnrolledInDevice:fail not support"}},MS=Ie(Lb,({checkAuthMode:e},{resolve:t,reject:n})=>{Xh({checkAuthMode:e,resolve:t,reject:n})},$b,Vb),DS=Ie(Ub,({requestAuthModes:e,challenge:t=!1,authContent:n},{resolve:r,reject:s})=>{wa();let{t:d}=Xe(),g=Zh().supportMode;if(g.length===0)return{authMode:"fingerPrint",errCode:90001,errMsg:"startSoterAuthentication:fail"};let y=[];if(e.map(($,pe)=>{g.indexOf($)>-1&&y.push($)}),y.length===0)return{authMode:"fingerPrint",errCode:90003,errMsg:"startSoterAuthentication:fail no corresponding mode"};let H=[];if(y.map(($,pe)=>{Xh({checkAuthMode:$}).isEnrolled&&H.push($)}),H.length===0)return{authMode:y[0],errCode:90011,errMsg:`startSoterAuthentication:fail no ${y[0]} enrolled`};let I=H[0];I==="fingerPrint"?(l.os.name.toLowerCase()==="android"&&(l.nativeUI.showWaiting(n||d("uni.startSoterAuthentication.authContent")).onclose=function(){l.fingerprint.cancel()}),l.fingerprint.authenticate(()=>{l.nativeUI.closeWaiting(),r({authMode:I,errCode:0})},$=>{let pe={authMode:I};switch($.code){case $.AUTHENTICATE_MISMATCH:break;case $.AUTHENTICATE_OVERLIMIT:l.nativeUI.closeWaiting(),s("authenticate freeze. please try again later",se.extend(pe,{errCode:90010}));break;case $.CANCEL:l.nativeUI.closeWaiting(),s("cancel",se.extend(pe,{errCode:90008}));break;default:l.nativeUI.closeWaiting(),s("",se.extend(pe,{errCode:90007}));break}},{message:n})):I==="facial"&&ha("faceID").authenticate({message:n},pe=>{let Ae={authMode:I};if(pe.type==="success"&&pe.code===0)r({authMode:I,errCode:0});else switch(pe.code){case 4:s("",se.extend(Ae,{errCode:90009}));break;case 5:s("authenticate freeze. please try again later",se.extend(Ae,{errCode:90010}));break;case 6:s("",se.extend(Ae,{errCode:90008}));break;default:s("",se.extend(Ae,{errCode:90007}));break}})},jb,Hb),LS=Ie(Wb,(e,{resolve:t,reject:n})=>{La();let{t:r}=Xe(),d=Vh()!=="light",g,y=!1,H=Aa({url:"__uniappscan",data:Object.assign({},e,{messages:{fail:r("uni.scanCode.fail"),"flash.on":r("uni.scanCode.flash.on"),"flash.off":r("uni.scanCode.flash.off")}}),style:{animationType:e.animationType||"pop-in",titleNView:{autoBackButton:!0,type:"float",titleText:e.titleText||r("uni.scanCode.title"),titleColor:"#ffffff",backgroundColor:"rgba(0,0,0,0)",buttons:e.onlyFromCamera?[]:[{text:e.albumText||r("uni.scanCode.album"),fontSize:"17px",width:"60px",onclick:()=>{H.sendMessage({type:"gallery"})}}]},popGesture:"close",background:"#000000",backButtonAutoControl:"close"},onMessage({event:I,detail:$}){g=$,y=I==="marked"},onClose(){d&&l.navigator.setStatusBarStyle("dark"),g?y?(delete g.message,t(g)):n(g.message):n("cancel")}});d&&(l.navigator.setStatusBarStyle("light"),H.webview.addEventListener("popGesture",({type:I,result:$})=>{I==="start"?l.navigator.setStatusBarStyle("dark"):I==="end"&&!$&&l.navigator.setStatusBarStyle("light")}))},zb),FS=xn(re.ON_THEME_CHANGE,()=>{bt.on(re.ON_THEME_CHANGE,e=>{bt.invokeOnCallback(re.ON_THEME_CHANGE,e)})}),VS=Ie(xb,(e,{resolve:t})=>{let n=l.screen.getBrightness(!1);t({value:n})}),$S=Ie(Bb,(e,{resolve:t})=>{l.screen.setBrightness(e.value,!1),t()}),US=Ie(Mb,(e,{resolve:t})=>{l.device.setWakelock(!!e.keepScreenOn),t()}),HS=Ie(R0,(e,{resolve:t,reject:n})=>{let r=di+"/download/";l.io.getImageInfo(se.extend(e,{savePath:r,filename:r,success:Vl(t),fail:Cr(n)}))},B0,x0),jS=Ie(V0,(e,{resolve:t,reject:n})=>{l.io.getVideoInfo({filePath:e.src,success:r=>({orientation:r.orientation,type:r.type,duration:r.duration,size:r.size,height:r.height,width:r.width,fps:r.fps||30,bitrate:r.bitrate}),fail:Cr(n)})},U0,$0),WS=Ie(M0,({current:e=0,indicator:t="number",loop:n=!1,urls:r,longPressActions:s},{resolve:d,reject:g})=>{Yo();let{t:y}=Xe();r=r.map(I=>Vt(I));let H=Number(e);isNaN(H)?(e=r.indexOf(Vt(e)),e=e<0?0:e):e=H,l.nativeUI.previewImage(r,{current:e,indicator:t,loop:n,onLongPress:function(I){let $=[],pe="",Ae=s&&se.isPlainObject(s);Ae?($=s.itemList?s.itemList:[],pe=s.itemColor?s.itemColor:"#000000"):($=[y("uni.previewImage.button.save")],pe="#000000");let Be={buttons:$.map(yt=>({title:yt,color:pe})),cancel:y("uni.previewImage.cancel")};l.nativeUI.actionSheet(Be,yt=>{if(yt.index>0){if(Ae){typeof s.success=="function"&&s.success({tapIndex:yt.index-1,index:I.index});return}l.gallery.save(I.url,()=>{l.nativeUI.toast(y("uni.previewImage.save.success"))},function(){l.nativeUI.toast(y("uni.previewImage.save.fail"))})}else Ae&&typeof s.fail=="function"&&s.fail({errMsg:"showActionSheet:fail cancel"})})}}),d()},L0,D0),zS=Ie(F0,(e,{resolve:t,reject:n})=>{try{l.nativeUI.closePreviewImage(),t()}catch(r){n()}}),If,wc=!1,Nf,Sc=(e,t={})=>{YS(se.extend({state:e},t))},tu={start({duration:e=6e4,sampleRate:t,numberOfChannels:n,encodeBitRate:r,format:s="mp3",frameSize:d}){if(wc)return Sc("start");If=l.audio.getRecorder(),If.record({format:s,samplerate:t?String(t):"",filename:di+"/recorder/"},g=>Sc("stop",{tempFilePath:g}),g=>Sc("error",{errMsg:g.message})),Nf=x(()=>{tu.stop()},e),Sc("start"),wc=!0},stop(){wc&&(If.stop(),wc=!1,Nf&&S(Nf))},pause(){wc&&Sc("error",{errMsg:"Unsupported operation: pause"})},resume(){wc&&Sc("error",{errMsg:"Unsupported operation: resume"})}},$l={pause:null,resume:null,start:null,stop:null,error:null};function YS(e){let t=e.state;delete e.state,delete e.errMsg,t&&typeof $l[t]=="function"&&$l[t](e)}class GS{constructor(){}onError(t){$l.error=t}onFrameRecorded(t){}onInterruptionBegin(t){}onInterruptionEnd(t){}onPause(t){$l.pause=t}onResume(t){$l.resume=t}onStart(t){$l.start=t}onStop(t){$l.stop=t}pause(){tu.pause()}resume(){tu.resume()}start(t){tu.start(t)}stop(){tu.stop()}}let Qh,qS=Ut(q0,()=>Qh||(Qh=new GS)),KS=Ie(z0,(e,{resolve:t,reject:n})=>{l.gallery.save(e.filePath,Vl(t),Cr(n))},G0,Y0),JS=Ie(H0,(e,{resolve:t,reject:n})=>{l.gallery.save(e.filePath,Vl(t),Cr(n))},W0,j0),ZS=Ie(K0,(e,{resolve:t,reject:n})=>{let r=`${di}/compressed/${Date.now()}_${cs(e.src)}`;l.zip.compressImage(se.extend({},e,{dst:r}),()=>{t({tempFilePath:r})},n)},Z0,J0),XS=Ie(X0,(e,{resolve:t,reject:n})=>{let r=`${di}/compressed/${Date.now()}_${cs(e.src)}`;l.zip.compressVideo(se.extend({},e,{filename:r}),()=>{t({tempFilePath:r})},n)},ey,Q0);function QS(e){return new Promise((t,n)=>{l.io.resolveLocalFileSystemURL(e,function(r){r.getMetadata(t,n,!1)},n)})}let eC=Ie(O0,({count:e,sizeType:t,sourceType:n,crop:r}={},{resolve:s,reject:d})=>{fo();let{t:g}=Xe(),y=Cr(d);function H(pe){let Ae=[],Be=[];Promise.all(pe.map(yt=>QS(yt))).then(yt=>{yt.forEach((Dt,Qt)=>{let Lt=pe[Qt];Be.push(Lt),Ae.push({path:Lt,size:Dt.size})}),s({tempFilePaths:Be,tempFiles:Ae})}).catch(y)}function I(){l.camera.getCamera().captureImage(Ae=>H([Ae]),y,{filename:di+"/camera/",resolution:"high",crop:r,sizeType:t})}function $(){l.gallery.pick(({files:pe})=>H(pe),y,{maximum:e,multiple:!0,system:!1,filename:di+"/gallery/",permissionAlert:!0,crop:r,sizeType:t})}if(n.length===1){if(n.includes("album")){$();return}else if(n.includes("camera")){I();return}}l.nativeUI.actionSheet({cancel:g("uni.chooseImage.cancel"),buttons:[{title:g("uni.chooseImage.sourceType.camera")},{title:g("uni.chooseImage.sourceType.album")}]},pe=>{switch(pe.index){case 1:I();break;case 2:$();break;default:y();break}})},P0,T0),tC=Ie(I0,({sourceType:e,compressed:t,maxDuration:n,camera:r},{resolve:s,reject:d})=>{Da();let{t:g}=Xe(),y=Cr(d);function H(pe){l.io.getVideoInfo({filePath:pe,success(Ae){let Be={errMsg:"chooseVideo:ok",tempFilePath:pe,size:Ae.size,duration:Ae.duration,width:Ae.width,height:Ae.height};s(Be)},fail:y})}function I(){l.gallery.pick(({files:pe})=>H(pe[0]),y,{filter:"video",system:!1,multiple:!0,maximum:1,filename:di+"/gallery/",permissionAlert:!0,videoCompress:t})}function $(){l.camera.getCamera().startVideoCapture(H,y,{index:r==="front"?"2":"1",videoMaximumDuration:n,filename:di+"/camera/",videoCompress:t})}if(e.length===1){if(e.includes("album")){I();return}else if(e.includes("camera")){$();return}}l.nativeUI.actionSheet({cancel:g("uni.chooseVideo.cancel"),buttons:[{title:g("uni.chooseVideo.sourceType.camera")},{title:g("uni.chooseVideo.sourceType.album")}]},pe=>{switch(pe.index){case 1:$();break;case 2:I();break;default:y();break}})},k0,N0),nC=Ie(m0,(e,{resolve:t})=>{l.key.showSoftKeybord(),t()}),rC=Ie(v0,(e,{resolve:t})=>{l.key.hideSoftKeybord(),t()});function ep(e){bt.invokeOnCallback(re.ON_KEYBOARD_HEIGHT_CHANGE,e)}let iC=xn(re.ON_KEYBOARD_HEIGHT_CHANGE,()=>{bt.on(re.ON_KEYBOARD_HEIGHT_CHANGE,ep)}),oC=oi(re.ON_KEYBOARD_HEIGHT_CHANGE,()=>{bt.off(re.ON_KEYBOARD_HEIGHT_CHANGE,ep)});class aC{constructor(t){this._callbacks=[],this._downloader=t,t.addEventListener("statechanged",(n,r)=>{n.downloadedSize&&n.totalSize&&this._callbacks.forEach(s=>{s({progress:Math.round(n.downloadedSize/n.totalSize*100),totalBytesWritten:n.downloadedSize,totalBytesExpectedToWrite:n.totalSize})})})}abort(){this._downloader.abort()}onProgressUpdate(t){typeof t=="function"&&this._callbacks.push(t)}offProgressUpdate(t){let n=this._callbacks.indexOf(t);n>=0&&this._callbacks.splice(n,1)}onHeadersReceived(t){throw new Error("Method not implemented.")}offHeadersReceived(t){throw new Error("Method not implemented.")}}let sC=$o(fy,({url:e,header:t,timeout:n},{resolve:r,reject:s})=>{n=(n||P.networkTimeout&&P.networkTimeout.request||60*1e3)/1e3;let d=l.downloader.createDownload(e,{timeout:n,filename:di+"/download/",retry:0,retryInterval:0},(y,H)=>{H?r({tempFilePath:y.filename,statusCode:H}):s(`statusCode: ${H}`)}),g=new aC(d);for(let y in t)se.hasOwn(t,y)&&d.setRequestHeader(y,t[y]);return d.start(),g},hy,dy),lC=e=>{let t=e["Set-Cookie"]||e["set-cookie"],n=[];if(!t)return[];t[0]==="["&&t[t.length-1]==="]"&&(t=t.slice(1,-1));let r=t.split(";");for(let s=0;s<r.length;s++)r[s].indexOf("Expires=")!==-1||r[s].indexOf("expires=")!==-1?n.push(r[s].replace(",","")):n.push(r[s]);return n=n.join(";").split(","),n};function cC(e,t){if(typeof e.data=="string"&&e.data.charCodeAt(0)===65279&&(e.data=e.data.slice(1)),e.statusCode=parseInt(String(e.statusCode),10),se.isPlainObject(e.header)&&(e.header=Object.keys(e.header).reduce(function(n,r){let s=e.header[r];return Array.isArray(s)?n[r]=s.join(","):typeof s=="string"&&(n[r]=s),n},{})),t.dataType&&t.dataType.toLowerCase()==="json")try{e.data=JSON.parse(e.data)}catch(n){}return e}class uC{constructor(t){this._requestTask=t}abort(){this._requestTask.abort()}offHeadersReceived(){}onHeadersReceived(){}}let fC=$o(ty,(e,{resolve:t,reject:n})=>{let{header:r,method:s,data:d,timeout:g,url:y,responseType:H,sslVerify:I,firstIpv4:$,tls:pe}=e,Ae;for(let _t in r)if(_t.toLowerCase()==="content-type"){Ae=r[_t];break}s!=="GET"&&Ae.indexOf("application/json")===0&&se.isPlainObject(d)&&(d=JSON.stringify(d));let Be=ha("stream"),yt={},Dt,Qt,Lt=!1;for(let _t in r)if(!Lt&&_t.toLowerCase()==="content-type"){if(Lt=!0,yt["Content-Type"]=r[_t],s!=="GET"&&r[_t].indexOf("application/x-www-form-urlencoded")===0&&typeof d!="string"&&!(d instanceof ArrayBuffer)){let Sn=[];for(let ln in d)se.hasOwn(d,ln)&&Sn.push(encodeURIComponent(ln)+"="+encodeURIComponent(d[ln]));d=Sn.join("&")}}else yt[_t]=r[_t];!Lt&&s==="POST"&&(yt["Content-Type"]="application/x-www-form-urlencoded; charset=UTF-8"),g&&(Dt=x(()=>{Qt=!0,n("timeout")},g+200));let $n={method:s,url:y.trim(),headers:yt,type:H==="arraybuffer"?"base64":"text",timeout:g||6e5,sslVerify:!I,firstIpv4:$,tls:pe},zn=!1;s!=="GET"&&(toString.call(d)==="[object ArrayBuffer]"?zn=!0:$n.body=typeof d=="string"?d:JSON.stringify(d));let pn=({ok:_t,status:Sn,data:ln,headers:Jt,errorMsg:Tn})=>{if(Qt)return;Dt&&S(Dt);let Ar=Sn;if(Ar>0)t(cC({data:_t&&H==="arraybuffer"?Zr(ln):ln,statusCode:Ar,header:Jt,cookies:lC(Jt)},e));else{let Zt="abort statusCode:"+Ar;Tn&&(Zt=Zt+" "+Tn),n(Zt)}};return zn?Be.fetchWithArrayBuffer({"@type":"binary",base64:Bi(d)},$n,pn):Be.fetch($n,pn),new uC({abort(){Qt=!0,Dt&&S(Dt),n("abort")}})},ay,sy),dC=Ie(ly,({certificates:e},{resolve:t,reject:n})=>{ha("stream").configMTLS(e,({type:s,code:d,message:g})=>{switch(s){case"success":t({code:d});break;case"fail":n(g,{code:d});break}})},cy,uy),Cc=[],Ac={},kf={open:"",close:"",error:"",message:""},nu;function hC(e){let t=String(Date.now()),n;try{nu||(nu=ha("uni-webSocket"),pC(nu)),nu.WebSocket({id:t,url:e.url,protocol:Array.isArray(e.protocols)?e.protocols.join(","):e.protocols,header:e.header})}catch(r){n=r}return{socket:nu,socketId:t,errMsg:n}}function pC(e){e.onopen(t=>{let n=Ac[t.id];!n||n._socketOnOpen()}),e.onmessage(t=>{let n=Ac[t.id];!n||n._socketOnMessage(t)}),e.onerror(t=>{let n=Ac[t.id];!n||n._socketOnError()}),e.onclose(t=>{let n=Ac[t.id];!n||n._socketOnClose()})}class gC{constructor(t,n){this.id=n,this._socket=t,this._callbacks={open:[],close:[],error:[],message:[]},this.CLOSED=3,this.CLOSING=2,this.CONNECTING=0,this.OPEN=1,this.readyState=this.CLOSED,!!this._socket}_socketOnOpen(){this.readyState=this.OPEN,this.socketStateChange("open")}_socketOnMessage(t){this.socketStateChange("message",{data:typeof t.data=="object"?Zr(t.data.base64):t.data})}_socketOnError(){this.socketStateChange("error"),this.onErrorOrClose()}_socketOnClose(){this.socketStateChange("close"),this.onErrorOrClose()}onErrorOrClose(){this.readyState=this.CLOSED,delete Ac[this.id];let t=Cc.indexOf(this);t>=0&&Cc.splice(t,1)}socketStateChange(t,n={}){let r=t==="message"?n:{};this===Cc[0]&&kf[t]&&bt.invokeOnCallback(kf[t],r),this._callbacks[t].forEach(s=>{typeof s=="function"&&s(r)})}send(t,n=!0){this.readyState!==this.OPEN&&re.callOptions(t,"sendSocketMessage:fail WebSocket is not connected");try{this._socket.send({id:this.id,data:typeof t.data=="object"?{"@type":"binary",base64:Bi(t.data)}:t.data}),n&&re.callOptions(t,"sendSocketMessage:ok")}catch(r){n&&re.callOptions(t,`sendSocketMessage:fail ${r}`)}}close(t,n=!0){this.readyState=this.CLOSING;try{this._socket.close(se.extend({id:this.id,args:t})),n&&re.callOptions(t,"closeSocket:ok")}catch(r){n&&re.callOptions(t,`closeSocket:fail ${r}`)}}onOpen(t){this._callbacks.open.push(t)}onClose(t){this._callbacks.close.push(t)}onError(t){this._callbacks.error.push(t)}onMessage(t){this._callbacks.message.push(t)}}let vC=$o(my,({url:e,protocols:t,header:n,method:r},{resolve:s,reject:d})=>{let{socket:g,socketId:y,errMsg:H}=hC({url:e,protocols:t,header:n,method:r}),I=new gC(g,y);return H?x(()=>{d(H)},0):(Cc.push(I),Ac[y]=I),x(()=>{s()},0),I},by,_y),mC=Ie(yy,(e,{resolve:t,reject:n})=>{let r=Cc[0];if(!r||r.readyState!==r.OPEN){n("WebSocket is not connected");return}r.send({data:e.data},!1),t()},Ey),_C=Ie(wy,(e,{resolve:t,reject:n})=>{let r=Cc[0];if(!r){n("WebSocket is not connected");return}r.readyState=r.CLOSING,r.close(e,!1),t()},Sy);function Tu(e){let t=`onSocket${se.capitalize(e)}`;return xn(t,()=>{kf[e]=t})}let bC=Tu("open"),yC=Tu("error"),EC=Tu("message"),wC=Tu("close");class SC{constructor(t){this._callbacks=[],this._uploader=t,t.addEventListener("statechanged",(n,r)=>{n.uploadedSize&&n.totalSize&&this._callbacks.forEach(s=>{s({progress:parseInt(String(n.uploadedSize/n.totalSize*100)),totalBytesSent:n.uploadedSize,totalBytesExpectedToSend:n.totalSize})})})}abort(){this._uploader.abort()}onProgressUpdate(t){typeof t=="function"&&this._callbacks.push(t)}onHeadersReceived(){}offProgressUpdate(t){let n=this._callbacks.indexOf(t);n>=0&&this._callbacks.splice(n,1)}offHeadersReceived(){}}let CC=$o(py,({url:e,timeout:t,header:n,formData:r,files:s,filePath:d,name:g},{resolve:y,reject:H})=>{let I=l.uploader.createUpload(e,{timeout:t,retry:0,retryInterval:0},(pe,Ae)=>{Ae?y({data:pe.responseText,statusCode:Ae}):H(`statusCode: ${Ae}`)});for(let pe in n)se.hasOwn(n,pe)&&I.setRequestHeader(pe,String(n[pe]));for(let pe in r)se.hasOwn(r,pe)&&I.addData(pe,String(r[pe]));s&&s.length?s.forEach(pe=>{I.addFile(Vt(pe.uri),{key:pe.name||"file"})}):I.addFile(Vt(d),{key:g});let $=new SC(I);return I.start(),$},vy,gy),vl={},AC=["play","canplay","ended","stop","waiting","seeking","seeked","pause"],tp="playback",OC=e=>{let t=vl[e];!t||t.initStateChage||(t.initStateChage=!0,t.addEventListener("error",n=>{np({state:"error",audioId:e,errMsg:"MediaError",errCode:n.code})}),AC.forEach(n=>{t.addEventListener(n,()=>{n==="play"?t.isStopped=!1:n==="stop"&&(t.isStopped=!0),np({state:n,audioId:e})})}))};function TC(){let e=`${Date.now()}${Math.random()}`,t=vl[e]=l.audio.createPlayer("");return t.src="",t.volume=1,t.startTime=0,t.setSessionCategory(tp),{errMsg:"createAudioInstance:ok",audioId:e}}function PC({audioId:e,src:t,startTime:n,autoplay:r=!1,loop:s=!1,obeyMuteSwitch:d,volume:g,sessionCategory:y=tp,playbackRate:H}){let I=vl[e];if(I){let $={loop:s,autoplay:r};if(t){let pe=Vt(t);I.src!==pe&&(I.src=$.src=pe)}n&&(I.startTime=$.startTime=n),typeof g=="number"&&(I.volume=$.volume=g),I.setStyles($),y&&I.setSessionCategory(y),H&&I.playbackRate&&I.playbackRate(H),OC(e)}return{errMsg:"setAudioState:ok"}}function IC({audioId:e}){let t=vl[e];if(!t)return{errMsg:"getAudioState:fail"};let{src:n,startTime:r,volume:s}=t;return{errMsg:"getAudioState:ok",duration:1e3*(t.getDuration()||0),currentTime:t.isStopped?0:1e3*t.getPosition(),paused:t.isPaused(),src:n,volume:s,startTime:1e3*r,buffered:1e3*t.getBuffered()}}function NC({operationType:e,audioId:t,currentTime:n}){let r=vl[t];switch(e){case"play":case"pause":case"stop":r[e==="play"&&r.isPaused()?"resume":e]();break;case"seek":typeof n!="undefined"&&r.seekTo(n/1e3);break}return{errMsg:"operateAudio:ok"}}let Rf=Object.create(null),np=({state:e,audioId:t,errMsg:n,errCode:r})=>{let s=Rf[t];if(s)if(rp(s,e,n,r),e==="play"){let d=s.currentTime;s.__timing=k(()=>{s.currentTime!==d&&rp(s,"timeUpdate")},200)}else(e==="pause"||e==="stop"||e==="error")&&u(s.__timing)},kC=[{name:"src",cache:!0},{name:"startTime",default:0,cache:!0},{name:"autoplay",default:!1,cache:!0},{name:"loop",default:!1,cache:!0},{name:"obeyMuteSwitch",default:!0,readonly:!0,cache:!0},{name:"duration",readonly:!0},{name:"currentTime",readonly:!0},{name:"paused",readonly:!0},{name:"buffered",readonly:!0},{name:"volume"},{name:"playbackRate",cache:!0}];class xf{constructor(t){this.id=t,this._callbacks={},this._options={},eh.forEach(n=>{this._callbacks[n]=[]}),kC.forEach(n=>{let r=n.name;Object.defineProperty(this,r,{get:()=>{let s=n.cache?this._options:IC({audioId:this.id}),d=r in s?s[r]:n.default;return typeof d=="number"&&r!=="volume"?d/1e3:d},set:n.readonly?void 0:s=>{this._options[r]=s,PC(se.extend({},this._options,{audioId:this.id}))}})}),RC()}play(){this._operate("play")}pause(){this._operate("pause")}stop(){this._operate("stop")}seek(t){this._operate("seek",{currentTime:t*1e3})}destroy(){u(this.__timing),vl[this.id]&&(vl[this.id].close(),delete vl[this.id]),delete Rf[this.id]}_operate(t,n){NC(se.extend({},n,{audioId:this.id,operationType:t}))}}let RC=re.once(()=>{eh.forEach(e=>{xf.prototype[e]=function(t){typeof t=="function"&&this._callbacks[e].push(t)}}),Jm.forEach(e=>{xf.prototype[e]=function(t){let n=this._callbacks[e],r=n.indexOf(t);r>=0&&n.splice(r,1)}})});function rp(e,t,n,r){let s=`on${se.capitalize(t)}`;e._callbacks[s].forEach(d=>{typeof d=="function"&&d(t==="error"?{errMsg:n,errCode:r}:{})})}let xC=Ut(Am,()=>{let{audioId:e}=TC(),t=new xf(e);return Rf[e]=t,t}),BC=["canplay","play","pause","stop","ended","timeUpdate","prev","next","error","waiting"],ip={canplay:[],play:[],pause:[],stop:[],ended:[],timeUpdate:[],prev:[],next:[],error:[],waiting:[]},tn,Bf=null,MC=250,DC=["play","pause","ended","stop","canplay"];function LC(){Pu(),Bf=k(()=>{Oc({state:"timeUpdate"})},MC)}function Pu(){Bf!==null&&u(Bf)}function FC(){if(tn)return;let e=bt.invokeOnCallback;tn=l.audio.createPlayer({autoplay:!0,backgroundControl:!0}),tn.src=tn.title=tn.epname=tn.singer=tn.coverImgUrl=tn.webUrl="",tn.startTime=0,DC.forEach(t=>{tn.addEventListener(t,()=>{t==="play"?(tn.isStopped=!1,LC()):t==="stop"&&(tn.isStopped=!0),(t==="pause"||t==="ended"||t==="stop")&&Pu();let n=`onMusic${t[0].toUpperCase()+t.slice(1)}`;e(n,{dataUrl:tn.src,errMsg:`${n}:ok`}),Oc({state:t,dataUrl:tn.src})})}),tn.addEventListener("waiting",()=>{Pu(),Oc({state:"waiting",dataUrl:tn.src})}),tn.addEventListener("error",t=>{Pu(),e("onMusicError",{dataUrl:tn.src,errMsg:"Error:"+t.message}),Oc({state:"error",dataUrl:tn.src,errMsg:t.message,errCode:t.code})}),tn.addEventListener("prev",()=>{Oc({state:"prev"})}),tn.addEventListener("next",()=>{Oc({state:"next"})})}function VC(){let e={duration:0,currentTime:0,paused:!1,src:"",buffered:0,title:"",epname:"",singer:"",coverImgUrl:"",webUrl:"",startTime:0,errMsg:"getBackgroundAudioState:ok"};if(tn){let t={duration:tn.getDuration()||0,currentTime:tn.isStopped?0:tn.getPosition(),paused:tn.isPaused(),src:tn.src,buffered:tn.getBuffered(),title:tn.title,epname:tn.epname,singer:tn.singer,coverImgUrl:tn.coverImgUrl,webUrl:tn.webUrl,startTime:tn.startTime};e=se.extend(e,t)}return e}function op(e,t){FC();let n=["src","startTime","coverImgUrl","webUrl","singer","epname","title"];if(t==="playbackRate"){let s=e[t];tn.playbackRate&&tn.playbackRate(parseFloat(s));return}let r={};Object.keys(e).forEach(s=>{if(n.indexOf(s)>=0){let d=e[s];s===n[0]&&d&&(d=Vt(d)),tn[s]=r[s]=d}}),tn.setStyles(r)}function $C({operationType:e,src:t,position:n,api:r="operateMusicPlayer",title:s,coverImgUrl:d}){var g=["resume","pause","stop"];return g.indexOf(e)>0?tn&&tn[e]():e==="play"?(op({src:t,startTime:n,title:s,coverImgUrl:d}),tn.play()):e==="seek"&&tn&&tn.seekTo(n),{errMsg:`${r}:ok`}}function UC({operationType:e,src:t,startTime:n,currentTime:r}){return $C({operationType:e,src:t,position:n||r||0,api:"operateBackgroundAudio"})}function Oc({state:e,errMsg:t,errCode:n,dataUrl:r}){ip[e].forEach(s=>{se.isFunction(s)&&s(e==="error"?{errMsg:t,errCode:n}:{})})}let HC=re.once(()=>{BC.forEach(e=>{ap.prototype[`on${se.capitalize(e)}`]=function(t){ip[e].push(t)}})}),jC=[{name:"duration",readonly:!0},{name:"currentTime",readonly:!0},{name:"paused",readonly:!0},{name:"src",cache:!0},{name:"startTime",default:0,cache:!0},{name:"buffered",readonly:!0},{name:"title",cache:!0},{name:"epname",cache:!0},{name:"singer",cache:!0},{name:"coverImgUrl",cache:!0},{name:"webUrl",cache:!0},{name:"protocol",readonly:!0,default:"http"},{name:"playbackRate",default:1,cache:!0}];class ap{constructor(){this._options={},jC.forEach(t=>{let n=t.name;Object.defineProperty(this,n,{get:()=>{let r=t.cache?this._options:VC();return n in r?r[n]:t.default},set:t.readonly?void 0:r=>{this._options[n]=r,op(this._options,n)}})}),HC()}play(){this._operate("play")}pause(){this._operate("pause")}stop(){this._operate("stop")}seek(t){this._operate("seek",{currentTime:t})}_operate(t,n){UC(se.extend({},n,{operationType:t}))}}let sp,WC=Ut(j_,()=>sp||(sp=new ap));class zC{constructor(t,n){this.id=t,this.ctx=n}start(t){return vn(this.ctx,"start",t)}stop(t){return vn(this.ctx,"stop",t)}pause(t){return vn(this.ctx,"pause",t)}resume(t){return vn(this.ctx,"resume",t)}switchCamera(t){return vn(this.ctx,"switchCamera",t)}snapshot(t){return vn(this.ctx,"snapshot",t)}toggleTorch(t){return vn(this.ctx,"toggleTorch",t)}playBGM(t){return zt(this.ctx,"playBGM",t)}stopBGM(t){return vn(this.ctx,"stopBGM",t)}pauseBGM(t){return vn(this.ctx,"pauseBGM",t)}resumeBGM(t){return vn(this.ctx,"resumeBGM",t)}setBGMVolume(t){return zt(this.ctx,"setBGMVolume",t)}startPreview(t){return vn(this.ctx,"startPreview",t)}stopPreview(t){return vn(this.ctx,"stopPreview",t)}}function ml(e,t,n,r){bt.invokeViewMethod("livepusher."+e,{livePusherId:e,type:n,data:r},t)}class YC{constructor(t,n){this.id=t,this.pageId=n}start(){ml(this.id,this.pageId,"start")}stop(){ml(this.id,this.pageId,"stop")}pause(){ml(this.id,this.pageId,"pause")}resume(){ml(this.id,this.pageId,"resume")}switchCamera(){ml(this.id,this.pageId,"switchCamera")}startPreview(){ml(this.id,this.pageId,"preview")}stopPreview(){ml(this.id,this.pageId,"stop")}snapshot(){ml(this.id,this.pageId,"snapshot")}}let GC=Ut(Om,(e,t)=>{if(t.$page.meta.isNVue){if(!t)return console.warn("uni.createLivePusherContext: 2 arguments required, but only 1 present");let n=ar(e,t);return n?new zC(e,n):console.warn("Can not find `"+e+"`")}return new YC(e,t.$page.id)},Tm),Hi=3.141592653589793,Iu=6378245,Nu=.006693421622965943;function qC(e,t){if(t=+t,e=+e,lp(e,t))return[e,t];let n=cp(e-105,t-35),r=up(e-105,t-35),s=t/180*Hi,d=Math.sin(s);d=1-Nu*d*d;let g=Math.sqrt(d);n=n*180/(Iu*(1-Nu)/(d*g)*Hi),r=r*180/(Iu/g*Math.cos(s)*Hi);let y=t+n,H=e+r;return[e*2-H,t*2-y]}function KC(e,t){if(t=+t,e=+e,lp(e,t))return[e,t];let n=cp(e-105,t-35),r=up(e-105,t-35),s=t/180*Hi,d=Math.sin(s);d=1-Nu*d*d;let g=Math.sqrt(d);n=n*180/(Iu*(1-Nu)/(d*g)*Hi),r=r*180/(Iu/g*Math.cos(s)*Hi);let y=t+n;return[e+r,y]}let lp=function(e,t){return e<72.004||e>137.8347||t<.8293||t>55.8271||!1},cp=function(e,t){let n=-100+2*e+3*t+.2*t*t+.1*e*t+.2*Math.sqrt(Math.abs(e));return n+=(20*Math.sin(6*e*Hi)+20*Math.sin(2*e*Hi))*2/3,n+=(20*Math.sin(t*Hi)+40*Math.sin(t/3*Hi))*2/3,n+=(160*Math.sin(t/12*Hi)+320*Math.sin(t*Hi/30))*2/3,n},up=function(e,t){let n=300+e+2*t+.1*e*e+.1*e*t+.1*Math.sqrt(Math.abs(e));return n+=(20*Math.sin(6*e*Hi)+20*Math.sin(2*e*Hi))*2/3,n+=(20*Math.sin(e*Hi)+40*Math.sin(e/3*Hi))*2/3,n+=(150*Math.sin(e/12*Hi)+300*Math.sin(e/30*Hi))*2/3,n};function fp(e,t,n){let r=t.coords;if(e!==t.coordsType){let s;e==="wgs84"?s=qC(r.longitude,r.latitude):e==="gcj02"&&(s=KC(r.longitude,r.latitude)),s&&(r.longitude=s[0],r.latitude=s[1])}n({type:e,altitude:r.altitude||0,latitude:r.latitude,longitude:r.longitude,speed:r.speed,accuracy:r.accuracy,address:t.address,errMsg:"getLocation:ok"})}let JC=Ie(y0,({type:e="wgs84",geocode:t=!1,altitude:n=!1,highAccuracyExpireTime:r,isHighAccuracy:s=!1},{resolve:d,reject:g})=>{l.geolocation.getCurrentPosition(y=>{fp(e,y,d)},y=>{if(y.code===1501){fp(e,y,d);return}g("getLocation:fail "+y.message)},{geocode:t,enableHighAccuracy:s||n,timeout:r,coordsType:e})},w0,E0),ZC=Ie(_0,(e,{resolve:t,reject:n})=>{let s=Vh()!=="light",d,g=Aa({url:"__uniappchooselocation",data:e,style:{animationType:e.animationType||"slide-in-bottom",titleNView:!1,popGesture:"close",scrollIndicator:"none"},onMessage({event:y,detail:H}){y==="selected"&&(d=H)},onClose(){s&&l.navigator.setStatusBarStyle("dark"),d?t(d):n("cancel")}});s&&(l.navigator.setStatusBarStyle("light"),g.webview.addEventListener("popGesture",({type:y,result:H})=>{y==="start"?l.navigator.setStatusBarStyle("dark"):y==="end"&&!H&&l.navigator.setStatusBarStyle("light")}))},b0),XC=Ie(S0,(e,{resolve:t,reject:n})=>(Aa({url:"__uniappopenlocation",data:e,style:{titleNView:{type:"transparent"},popGesture:"close",backButtonAutoControl:"close"},onClose(){n("cancel")}}),t()),A0,C0),QC=Ie(sE,({title:e="",content:t="",showCancel:n=!0,cancelText:r,cancelColor:s,confirmText:d,confirmColor:g,editable:y=!1,placeholderText:H=""}={},{resolve:I})=>{let $=n?[r,d]:[d],pe=y?H:$;t=t||" ",l.nativeUI[y?"prompt":"confirm"](t,Ae=>{if(n){let Be=Ae.index===1,yt={confirm:Be,cancel:Ae.index===0||Ae.index===-1};Be&&y&&(yt.content=Ae.value),I(yt)}else{let Be={confirm:Ae.index===0,cancel:!1};y&&(Be.content=Ae.value),I(Be)}},e,pe,$)},lE,cE),eA=Ie(tE,({itemList:e=[],itemColor:t="#000000",title:n="",popover:r},{resolve:s,reject:d})=>{li();let{t:g}=Xe(),y={title:n,cancel:g("uni.showActionSheet.cancel"),buttons:e.map(H=>({title:H,color:t}))};l.nativeUI.actionSheet(se.extend(y,{popover:r}),H=>{H.index>0?s({tapIndex:H.index-1}):d("showActionSheet:fail cancel")})},nE,rE),ru,Mf=!1,ku="",Ru,tA=Ie(iE,(e,t)=>dp(se.extend({},e,{type:"loading",icon:"loading"}),t),oE,aE),dp=({title:e="",icon:t="success",image:n="",duration:r=1500,mask:s=!1,position:d,type:g="toast",style:y},{resolve:H,reject:I})=>{if(xu(""),ku=g,["top","center","bottom"].includes(String(d)))l.nativeUI.toast(e,{verticalAlign:d}),Mf=!0;else{t&&!~["success","loading","error","none"].indexOf(t)&&(t="success");let $={modal:s,back:"transmit",padding:"10px",size:"16px"};!n&&(!t||t==="none")?$.loading={display:"none"}:($.width="140px",$.height="112px"),n?$.loading={display:"block",height:"55px",icon:n,interval:r}:["success","error"].indexOf(t)!==-1&&($.loading={display:"block",height:"55px",icon:t==="success"?"__uniappsuccess.png":"__uniapperror.png",interval:r});try{ru=l.nativeUI.showWaiting(e,se.extend($,y))}catch(pe){I(`${pe}`)}}return ku==="toast"&&(Ru=x(()=>{xu("")},r)),H()},nA=Ie(uE,dp,dE,hE),rA=Ie(jy,(e,t)=>xu("toast",t)),iA=Ie(Hy,(e,t)=>xu("loading",t));function xu(e="toast",t){return e&&e!==ku||(Ru&&(S(Ru),Ru=null),Mf?l.nativeUI.closeToast():ru&&ru.close&&ru.close(),ru=null,Mf=!1,ku=""),t&&t.resolve()}let oA=Ie(pE,(e,{resolve:t,reject:n})=>{let r=Fh();if(r&&r.endPullToRefresh(),r=Ou(),!r)return n();r.beginPullToRefresh(),Cf(r),t()}),aA=Ie(gE,(e,{resolve:t,reject:n})=>{let r=Fh()||Ou();if(!r)return n();r.endPullToRefresh(),Cf(null),t()}),sA=Ie(Ph,(e,{resolve:t,reject:n})=>{let r=_r(jr());bt.invokeViewMethod(Ph,e,r,s=>{s?n(s):t()})},Wy),lA=Ie(Ih,(e,{resolve:t})=>{let n=_r(jr());bt.invokeViewMethod(Ih,e,n,t)},Qy,eE),cA=Ie(Ky,({__page__:e,title:t},{resolve:n,reject:r})=>{let s=Dh(e);if(s){let d=s.getStyle();d&&d.titleNView&&s.setStyle({titleNView:{titleText:t}}),n()}else r()},Jy),uA=Ie(Zy,(e,{resolve:t})=>{l.nativeUI.showWaiting("",{modal:!1}),t()}),fA=Ie(Xy,(e,{resolve:t})=>{l.nativeUI.closeWaiting(),t()});function dA(e){let t=Un();!t.length||(t[t.length-1].$page.statusBarStyle=e)}let hA=Ie(Yy,({__page__:e,frontColor:t,backgroundColor:n},{resolve:r,reject:s})=>{let d=Dh(e);if(d){let g={};t&&(g.titleColor=t),n&&(g.backgroundColor=n);let y=t==="#000000"?"dark":"light";l.navigator.setStatusBarStyle(y),dA(y);let H=d.getStyle();H&&H.titleNView&&(H.titleNView.autoBackButton&&(g.backButton=g.backButton||{},g.backButton.color=t),d.setStyle({titleNView:g})),r()}else s()},qy,Gy),pA=Ie(ME,({index:e,text:t},{resolve:n,reject:r})=>{Ii.setTabBarBadge("text",e,t),n()},DE,LE),gA=Ie(vE,({index:e,text:t,iconPath:n,selectedIconPath:r,pagePath:s,visible:d,iconfont:g},{resolve:y,reject:H})=>{Ii.setTabBarItem(e,t,n,r,d,g);let I=s&&We.find(({path:$})=>$===s);if(I){let $=I.meta;$.isTabBar=!0,$.tabBarIndex=e,$.isQuit=!0;let pe=P.tabBar;pe&&pe.list&&pe.list[e]&&s&&(pe.list[e].pagePath=s.startsWith("/")?s.substring(1):s)}y()},mE,_E),vA=Ie(bE,(e={},{resolve:t,reject:n})=>{if(!Af())return n("not TabBar page");let r={black:"rgba(0,0,0,0.4)",white:"rgba(255,255,255,0.4)"},s=e.borderStyle;s&&s in r&&(e.borderStyle=r[s]),Ii.setTabBarStyle(e),t()},yE,wE),mA=Ie(SE,(e,{resolve:t,reject:n})=>{let r=e&&e.animation;if(!Af())return n("not TabBar page");Ii.hideTabBar(Boolean(r)),t()},Nh),_A=Ie(CE,(e,{resolve:t,reject:n})=>{let r=e&&e.animation;if(!Af())return n("not TabBar page");Ii.showTabBar(Boolean(r)),t()},AE),bA=Ie(IE,({index:e},{resolve:t,reject:n})=>{Ii.setTabBarBadge("redDot",e),t()},NE,kE),hp=e=>Ii.setTabBarBadge("none",e),yA=Ie(RE,({index:e},{resolve:t,reject:n})=>{hp(e),t()},xE,BE),EA=Ie(OE,({index:e},{resolve:t,reject:n})=>{hp(e),t()},TE,PE),pp="vdSync",wA="__uniapp__service",Tc="onWebviewReady",SA=0,CA="webviewInserted",AA="webviewRemoved",gp="UniAppSubNVue";class OA{constructor(t,n){this.callbacks=[];let r=this.webview=l.webview.getWebviewById(t);if(this.isSub=n||!1,r.__uniapp_mask_id){let s=this.maskWebview=r.__uniapp_mask_id==="0"?{setStyle({mask:g}){ha("uni-tabview").setMask({color:g})}}:l.webview.getWebviewById(r.__uniapp_mask_id),d=function(){s.setStyle({mask:"none"})};r.addEventListener("hide",d),r.addEventListener("close",d)}}show(...t){if(this.maskWebview){let n=this.webview.__uniapp_mask;this.maskWebview.setStyle({mask:n})}this.webview.show(...t)}hide(...t){this.webview.hide(...t)}setStyle(t){this.webview.setStyle(t)}initMessage(){if(this.messageReady)return;this.messageReady=!0;let t=r=>{if(r.data&&r.data.type===gp){let s=r.data.target;s.id===this.webview.id&&s.isSub===this.isSub&&this.callbacks.forEach(d=>{d({origin:this.webview.__uniapp_host,data:r.data.data})})}};ha("globalEvent").addEventListener("plusMessage",t),this.webview.addEventListener("close",()=>{this.callbacks.length=0})}postMessage(t){l.webview.postMessageToUniNView({type:gp,data:t,target:{id:this.webview.id,isSub:!this.isSub}},wA)}onMessage(t){this.initMessage(),this.callbacks.push(t)}}let TA=function(e,t){return new OA(e,t)},iu,vp=l.navigator.setStatusBarStyle;function PA(e){vp=e}function mp(e){iu=e,vp(e)}l.navigator.setStatusBarStyle=mp;function Gs(e){if(!e){let t=br();if(!t||(e=t.$page.statusBarStyle,!e||e===iu))return}e!==iu&&(iu=e,l.navigator.setStatusBarStyle(e))}function IA(e,t,n,r,s,d,g){l!==n&&(O=Gt=e,v=t,l=n,PA(l.navigator.setStatusBarStyle),l.navigator.setStatusBarStyle=mp,x=r,S=s,k=d,u=g),P.serviceReady=!0}function NA(){let e=["ArrayBuffer","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array"],t={};for(let n=0;n<e.length;n++){let r=e[n];t[r]=global[r]}return t}let _p={oauth(e){l.oauth.getServices(t=>{t=t;let n=[];t.forEach(({id:r})=>{n.push(r)}),e(null,n)},t=>{t=t,e(t)})},share(e){l.share.getServices(t=>{t=t;let n=[];t.forEach(({id:r})=>{n.push(r)}),e(null,n)},t=>{e(t)})},payment(e){l.payment.getChannels(t=>{let n=[];t.forEach(({id:r})=>{n.push(r)}),e(null,n)},t=>{e(t)})},push(e){typeof v!="undefined"||typeof l!="undefined"?e(null,[l.push.getClientInfo().id]):e(null,[])}},kA=Ie(FE,({service:e},{resolve:t,reject:n})=>{_p[e]?_p[e]((r,s)=>{r?n(r.message):t({service:e,provider:s})}):n("service not found")},VE),Bu;function ou(e){return new Promise((t,n)=>{l.oauth.getServices(r=>{let s=r.find(({id:d})=>d===e);s?t(s):n(new Error("provider not find"))},n)})}let bp=Ie($E,(e,{resolve:t,reject:n})=>{let r=e.provider||"weixin",s=Cr(n),d=r==="apple",g=d?{scope:"email"}:e.univerifyStyle?{univerifyStyle:BA(e.univerifyStyle,s)}:{};ou(r).then(y=>{function H(){if(e.onlyAuthorize&&r==="weixin"){y.authorize(({code:I})=>{t({code:I,authResult:""})},s);return}y.login(I=>{let $=I.target.authResult,pe=I.target.appleInfo;t({code:$.code,authResult:$,appleInfo:pe})},s,g)}d||r==="univerify"?H():y.logout(H,H)}).catch(s)},UE),yp=(e,{resolve:t,reject:n})=>{let r=e.provider||"weixin",s=Cr(n);ou(r).then(d=>{d.getUserInfo(g=>{let y={nickName:""};if(r==="weixin"){let I=d.userInfo;I&&(y={openId:I.openid,nickName:I.nickname,gender:I.sex,city:I.city,province:I.province,country:I.country,avatarUrl:I.headimgurl,unionId:I.unionid})}else if(r==="apple"){let I=d.appleInfo;I&&(y={openId:I.user,fullName:I.fullName,email:I.email,authorizationCode:I.authorizationCode,identityToken:I.identityToken,realUserStatus:I.realUserStatus})}else y=d.userInfo,y&&(y.openId=y.openId||y.openid||d.authResult.openid,y.nickName=y.nickName||y.nickname,y.avatarUrl=y.avatarUrl||y.headimgurl);let H={};e.data&&e.data.api_name==="webapi_getuserinfo"?H.data={data:JSON.stringify(y),rawData:"",signature:"",encryptedData:"",iv:""}:H.userInfo=y,t(H)},s)}).catch(()=>{n("\u8BF7\u5148\u8C03\u7528 uni.login")})},RA=Ie(HE,yp,jE),xA=Ie(WE,yp,zE),Ep=Ie(YE,({provider:e},{resolve:t,reject:n})=>{let r=Vl(t),s=Cr(n);ou(e).then(d=>d.preLogin(r,s)).catch(s)},KE,qE),wp=()=>ou("univerify").then(e=>e.closeAuthView()),Sp=Ut(JE,wp),Cp=Ie(ZE,(e,{resolve:t,reject:n})=>{let r=Vl(t),s=Cr(n);try{ou("univerify").then(d=>{let g=d.getCheckBoxState();r({state:g})})}catch(d){s(d)}});function BA(e,t){return se.isPlainObject(e)&&se.isPlainObject(e.buttons)&&se.toTypeString(e.buttons.list)==="[object Array]"&&e.buttons.list.forEach((n,r)=>{e.buttons.list[r].onclick=function(){let s={code:"30008",message:"\u7528\u6237\u70B9\u51FB\u4E86\u81EA\u5B9A\u4E49\u6309\u94AE",index:r,provider:n.provider};se.isPlainObject(Bu)?Bu._triggerUniverifyButtonsClick(s):wp().then(()=>{t(s)})}}),e}class MA{constructor(){this.provider="univerify",this.eventName="api.univerifyButtonsClick"}close(){return Sp()}login(t){return bp(this._getOptions(t))}getCheckBoxState(t){return Cp(t)}preLogin(t){return Ep(this._getOptions(t))}onButtonsClick(t){bt.on(this.eventName,t)}offButtonsClick(t){bt.off(this.eventName,t)}_triggerUniverifyButtonsClick(t){bt.emit(this.eventName,t)}_getOptions(t={}){return se.extend({},t,{provider:this.provider})}}let DA=Ut(XE,()=>Bu||(Bu=new MA)),LA=Ut("registerRuntime",e=>{se.extend(jsRuntime,e)}),FA={0:{name:"web",title:"\u56FE\u6587"},1:{name:"text",title:"\u7EAF\u6587\u5B57"},2:{name:"image",title:"\u7EAF\u56FE\u7247"},3:{name:"music",title:"\u97F3\u4E50"},4:{name:"video",title:"\u89C6\u9891"},5:{name:"miniProgram",title:"\u5C0F\u7A0B\u5E8F"}},VA=e=>{e.type=e.type||0;let{provider:t,type:n,title:r,summary:s,href:d,imageUrl:g,mediaUrl:y,scene:H,miniProgram:I,openCustomerServiceChat:$,corpid:pe,customerUrl:Ae}=e;typeof g=="string"&&g&&(g=Vt(g));let Be=FA[n];if(Be){let yt={provider:t,type:Be.name,title:r,content:s,href:d,pictures:[g],thumbs:g?[g]:void 0,media:y,miniProgram:I,extra:{scene:H},openCustomerServiceChat:$,corpid:pe,url:Ae};return t==="weixin"&&(n===1||n===2)&&delete yt.thumbs,yt}return"\u5206\u4EAB\u53C2\u6570 type \u4E0D\u6B63\u786E"},Ap=function(e,t,n,r,s="share"){let d=Cr(r),g=t.openCustomerServiceChat?"openCustomerServiceChat":"send";try{e[g](t,()=>{n()},d)}catch(y){d({message:`${t.provider} ${g} \u65B9\u6CD5\u8C03\u7528\u5931\u8D25`})}},$A=Ie(QE,(e,{resolve:t,reject:n})=>{let r=VA(e),s=Cr(n);if(typeof r=="string")return n(r);l.share.getServices(d=>{let g=d.find(({id:y})=>y===r.provider);g?g.authenticated?Ap(g,r,t,n):g.authorize(()=>Ap(g,r,t,n),s):n("service not found")},s)},tw,ew),UA=Ie(nw,({type:e,imageUrl:t,summary:n,href:r},{resolve:s,reject:d})=>{let g=Cr(d);typeof t=="string"&&t&&(t=Vt(t)),l.share.sendWithSystem({type:e,pictures:t?[t]:void 0,content:n,href:r},()=>s(),g)},iw,rw),HA=Ie(ow,(e,{resolve:t,reject:n})=>{let r=e.provider,s=Cr(n);l.payment.getChannels(d=>{let g=d.find(({id:y})=>y===r);g?l.payment.request(g,e.orderInfo,y=>{t(y)},s):n("service not found")},s)},aw),Op=zh,jA=Ie("navigateToMiniProgram",(e,{resolve:t,reject:n})=>{Op("navigateToUniMP",e,r=>{if(r.errMsg&&r.errMsg.indexOf(":ok")===-1)return n(r.errMsg.split(" ")[1]);t()})}),Tp=[];function Pp(e){Tp.push(e)}let WA=Pp;function zA(e,t){Tp.forEach(n=>n(e,t))}let Xo={load:"load",close:"close",error:"error",adClicked:"adClicked"};class Ip{constructor(){this._callbacks={}}onLoad(t){this._addEventListener(Xo.load,t)}onClose(t){this._addEventListener(Xo.close,t)}onError(t){this._addEventListener(Xo.error,t)}offLoad(t){this._removeEventListener(Xo.load,t)}offClose(t){this._removeEventListener(Xo.close,t)}offError(t){this._removeEventListener(Xo.error,t)}_addEventListener(t,n){typeof n=="function"&&(this._callbacks[t]||(this._callbacks[t]=[]),this._callbacks[t].push(n))}_removeEventListener(t,n){let r=this._callbacks[t],s=r.indexOf(n);s>-1&&r.splice(s,1)}_dispatchEvent(t,n){this._callbacks[t].forEach(r=>{r(n||{})})}}class Df extends Ip{constructor(t,n){super();this.preload=!0,this._isLoaded=!1,this._isLoading=!1,this._loadPromiseResolve=null,this._loadPromiseReject=null,this._showPromiseResolve=null,this._showPromiseReject=null,this.preload=n.preload!==void 0?n.preload:!1;let r=this._adInstance=t;r.onLoad(()=>{this._isLoaded=!0,this._isLoading=!1,this._loadPromiseResolve!=null&&(this._loadPromiseResolve(),this._loadPromiseResolve=null),this._showPromiseResolve!=null&&(this._showPromiseResolve(),this._showPromiseResolve=null,this._showAd()),this._dispatchEvent(Xo.load,{})}),r.onClose(s=>{this._isLoaded=!1,this._isLoading=!1,this._dispatchEvent(Xo.close,s),this.preload===!0&&this._loadAd()}),r.onError(s=>{this._isLoading=!1;let d={code:s.code,errMsg:s.message};this._dispatchEvent(Xo.error,d);let g=new Error(JSON.stringify(d));this._loadPromiseReject!=null&&(this._loadPromiseReject(g),this._loadPromiseReject=null),this._showPromiseReject!=null&&(this._showPromiseReject(g),this._showPromiseReject=null)}),r.onAdClicked&&r.onAdClicked(()=>{this._dispatchEvent(Xo.adClicked,{})})}getProvider(){return this._adInstance.getProvider()}load(){return new Promise((t,n)=>{this._loadPromiseResolve=t,this._loadPromiseReject=n,!this._isLoading&&(this._isLoaded?t(""):this._loadAd())})}show(){return new Promise((t,n)=>{this._showPromiseResolve=t,this._showPromiseReject=n,!this._isLoading&&(this._isLoaded?(this._showAd(),t("")):this._loadAd())})}destroy(){this._adInstance.destroy()}_loadAd(){this._isLoaded=!1,this._isLoading=!0,this._adInstance.load()}_showAd(){this._adInstance.show()}}class YA extends Df{constructor(t){super(l.ad.createRewardedVideoAd(t),t);this._loadAd()}}let GA=Ut(sw,e=>new YA(e),cw,lw);class qA extends Df{constructor(t){super(l.ad.createFullScreenVideoAd(t),t);this.preload=!1}}let KA=Ut(uw,e=>new qA(e),dw,fw);class JA extends Df{constructor(t){super(l.ad.createInterstitialAd(t),t);this.preload=!1,this._loadAd()}}let ZA=Ut(hw,e=>new JA(e),gw,pw),ts={},Ul={};function XA(e){let t=e.provider;if(ts[t]||(ts[t]={}),typeof ts[t].plugin=="object"){e.success(ts[t].plugin);return}if(Ul[t]||(Ul[t]=[]),Ul[t].push(e),ts[t].status===!0){e.__plugin=ts[t].plugin;return}ts[t].status=!0;let n=ha(t);if(!n||!n.initSDK){Ul[t].forEach(r=>{r.fail({code:-1,message:"provider ["+t+"] invalid"})}),Ul[t].length=0,ts[t].status=!1;return}ts[t].plugin=n,e.__plugin=n,n.initSDK(r=>{let s=r.code===1||r.code==="1";s?ts[t].plugin=n:ts[t].status=!1,Ul[t].forEach(d=>{s?d.success(d.__plugin):d.fail(r)}),Ul[t].length=0})}class QA extends Ip{constructor(t){super();this._adpid="",this._provider="",this._userData=null,this._isLoaded=!1,this._isLoading=!1,this._loadPromiseResolve=null,this._loadPromiseReject=null,this._showPromiseResolve=null,this._showPromiseReject=null,this._adInstance=null,this._adError="",this._adpid=t.adpid,this._provider=t.provider,this._userData=t.userData,x(()=>{this._init()})}_init(){this._adError="",XA({provider:this._provider,success:t=>{this._adInstance=t,this._userData&&this.bindUserData(this._userData),this._loadAd()},fail:t=>{this._adError=t,this._loadPromiseReject!=null&&(this._loadPromiseReject(this._createError(t)),this._loadPromiseReject=null),this._dispatchEvent(Xo.error,t)}})}getProvider(){return this._provider}load(){return new Promise((t,n)=>{if(this._loadPromiseResolve=t,this._loadPromiseReject=n,!this._isLoading){if(this._adError){this._init();return}this._isLoaded?t(""):this._loadAd()}})}show(){return new Promise((t,n)=>{if(this._showPromiseResolve=t,this._showPromiseReject=n,!this._isLoading){if(this._adError){this._init();return}this._isLoaded?(this._showAd(),t("")):this._loadAd()}})}reportExposure(){this._adInstance!==null&&this._adInstance.reportExposure()}bindUserData(t){this._adInstance!==null&&this._adInstance.bindUserData(t)}destroy(){this._adInstance!==null&&this._adInstance.destroy&&this._adInstance.destroy({adpid:this._adpid})}_loadAd(){if(this._adInstance!==null){if(this._isLoading===!0)return;this._isLoading=!0,this._adInstance.loadData({adpid:this._adpid},t=>{this._isLoaded=!0,this._isLoading=!1,this._loadPromiseResolve!=null&&(this._loadPromiseResolve(),this._loadPromiseResolve=null),this._showPromiseResolve!=null&&(this._showPromiseResolve(),this._showPromiseResolve=null,this._showAd()),this._dispatchEvent(Xo.load,t)},t=>{this._isLoading=!1,this._showPromiseReject!=null&&(this._showPromiseReject(this._createError(t)),this._showPromiseReject=null),this._dispatchEvent(Xo.error,t)})}}_showAd(){this._adInstance!==null&&this._isLoaded===!0&&this._adInstance.show({adpid:this._adpid},()=>{this._isLoaded=!1},t=>{this._isLoaded=!1,this._showPromiseReject!=null&&(this._showPromiseReject(this._createError(t)),this._showPromiseReject=null),this._dispatchEvent(Xo.error,t)})}_createError(t){return new Error(JSON.stringify(t))}}let eO=Ut(vw,e=>new QA(e),_w,mw),Np=l.os.name==="Android"&&parseInt(l.os.version)<6,tO=Np?"slide-in-right":"pop-in",Mu=300,kp=Np?"slide-out-right":"pop-out",nO="_www/__uniappview.html",rO="webviewId",iO="uniMPNativeEvent",Rp;function xp(){return Rp}function oO(e){let t=e.$.appContext;Rp=se.extend(t.app,{mountPage(n,r,s){let d=Gt.createVNode(n,r);d.appContext=t,d.__page_container__=s,Gt.render(d,s);let g=d.component.proxy;return g.__page_container__=s,g},unmountPage:n=>{let{__page_container__:r}=n;r&&(r.isUnmounted=!0,Gt.render(null,r))}})}let qs=[];function Du(e){if(!e.$page.meta.isNVue)return qs.push(e);let n=qs.findIndex(r=>r.$page.id===e.$page.id);n>-1?qs.splice(n,1,e):qs.push(e)}function au(e){return qs.find(t=>t.$page.id===e)}function Lf(){return qs}function aO(){let e=[];return qs.forEach(t=>{t.$.__isTabBar?t.$.__isActive&&e.push(t):e.push(t)}),e}function sO(){let e=br();!e||su(e)}function su(e){let t=qs.findIndex(n=>n===e);t!==-1&&(e.$page.meta.isNVue||xp().unmountPage(e),qs.splice(t,1))}function lO(e,t,n){n&&t.isNVue&&(e.uniNView={path:n,defaultFontSize:P.defaultFontSize,viewport:P.viewport})}let cO=/^#[a-z0-9]{6}$/i;function Bp(e){return e&&(cO.test(e)||e==="transparent")}function uO(e,t){let{backgroundColor:n}=t;!n||!Bp(n)||(e.background||(e.background=n),e.backgroundColorTop||(e.backgroundColorTop=n))}function fO(e,t){e.popGesture==="hide"&&delete e.popGesture,t.isQuit&&(e.popGesture=l.os.name==="iOS"?"appback":"none")}function dO(e,t){if(!t.enablePullDownRefresh)return;let n=Cs(se.extend({},l.os.name==="Android"?pO:gO,t.pullToRefresh));e.pullToRefresh=hO(n,t)}function hO(e,t){let n=Es(e);if(!n)return e;let[r,s,d]=n;return(r||s||d)&&ce.onLocaleChange(()=>{let g=l.webview.getWebviewById(t.id+"");if(!g)return;let y={support:!0};r&&(y.contentdown={caption:e.contentdown.caption}),s&&(y.contentover={caption:e.contentover.caption}),d&&(y.contentrefresh={caption:e.contentrefresh.caption}),g.setStyle({pullToRefresh:y})}),e}let pO={support:!0,style:"circle"},gO={support:!0,style:"default",height:"50px",range:"200px",contentdown:{caption:""},contentover:{caption:""},contentrefresh:{caption:""}};function vO(e,t){let{navigationBar:n}=t;if(n.style==="custom")return!1;let r=!0;t.isQuit&&(r=!1);let s={autoBackButton:r};Object.keys(n).forEach(d=>{let g=n[d];d==="backgroundColor"?s.backgroundColor=Bp(g)?g:re.BACKGROUND_COLOR:d==="titleImage"&&g?s.tags=_O(g):d==="buttons"&&se.isArray(g)?s.buttons=g.map((y,H)=>(y.onclick=bO(H),y)):s[d]=g}),e.titleNView=mO(s,t)}function mO(e,t){let n=Xs(e);if(!n)return e;let[r,s]=n;return(r||s)&&ce.onLocaleChange(()=>{let d=l.webview.getWebviewById(t.id+"");if(!d)return;let g={};r&&(g.titleText=e.titleText),s&&(g.searchInput={placeholder:e.searchInput.placeholder}),d.setStyle({titleNView:g})}),e}function _O(e){return[{tag:"img",src:e,position:{left:"auto",top:"auto",width:"auto",height:"26px"}}]}function bO(e){return function(n){n.index=e,Xn(re.ON_NAVIGATION_BAR_BUTTON_TAP,n)}}function Mp(e,t,n){let r={bounce:"vertical"};return Object.keys(t).forEach(s=>{yO.indexOf(s)===-1&&(r[s]=t[s])}),n.id!=="1"&&lO(r,t,e),fO(r,t),uO(r,t),vO(r,t),dO(r,t),r}let yO=["id","route","isNVue","isQuit","isEntry","isTabBar","tabBarIndex","windowTop","topWindow","leftWindow","rightWindow","maxWidth","usingComponents","disableScroll","enablePullDownRefresh","navigationBar","pullToRefresh","onReachBottomDistance","pageOrientation","backgroundColor"],Dp=2;function Lp(){return Dp}function Fp(){return Dp++}function Vp(e){return e}function $p(e,t){let n=t?re.stringifyQuery(t,Vp):"";return{path:e.slice(1),query:n&&n.slice(1)}}function EO(e,t,n){let r=n?re.stringifyQuery(n,Vp):"";return{isTab:e,arguments:JSON.stringify({path:t.slice(1),query:r&&r.slice(1)})}}function wO({path:e,query:t,routeOptions:n,webviewExtras:r}){let s=Fp(),d=Mp(e,n.meta,{id:s+""});return d.uniPageUrl=$p(e,t),d.isTab=!!n.meta.isTabBar,l.webview.create("",String(s),d,se.extend({nvue:!0,__path__:e,__query__:JSON.stringify(t)},r))}let mo;function Up(e){mo=e}function SO(){return mo}function CO(){return(!mo||mo.__uniapp_route)&&(mo=l.webview.create(nO,String(Fp()),{contentAdjust:!1})),mo}function AO(e){let{popupSubNVueWebviews:t}=e;!t||e.addEventListener("close",()=>{Object.keys(t).forEach(n=>{t[n].close("none")})})}function Hp(e){return P.realEntryPagePath&&e.$page.route===P.entryPagePath}function jp(){P.entryPagePath=P.realEntryPagePath,delete P.realEntryPagePath,ce.reLaunch({url:re.addLeadingSlash(P.entryPagePath)})}function OO(e){let t;e.addEventListener("popGesture",n=>{if(n.type==="start"){let r=Un(),s=r[r.length-2];t=iu;let d=s&&s.$page.statusBarStyle;d&&Gs(d)}else if(n.type==="end"&&!n.result)Gs(t);else if(n.type==="end"&&n.result){let r=br();sO(),Gs(),r&&Hp(r)?jp():Xn(re.ON_SHOW)}})}function TO(e){if(e.nvue)return;let t=e.id,{subscribe:n,unsubscribe:r}=bt,s=(d,g)=>{if(t!==g)return;r(Tc,s);let y=au(parseInt(g));y&&y.__page_container__.restore()};e.addEventListener("recovery",()=>{n(Tc,s)})}function PO(e){let{emit:t}=bt,n=function({width:r,height:s}){let g={deviceOrientation:Math.abs(l.navigator.getOrientation())===90?"landscape":"portrait",size:{windowWidth:Math.ceil(r),windowHeight:Math.ceil(s)}};t(re.ON_RESIZE,g,parseInt(e.id))};e.addEventListener("resize",re.debounce(n,50,{setTimeout:x,clearTimeout:S}))}let Wp={pullToRefresh:re.ON_PULL_DOWN_REFRESH,titleNViewSearchInputChanged:re.ON_NAVIGATION_BAR_SEARCH_INPUT_CHANGED,titleNViewSearchInputConfirmed:re.ON_NAVIGATION_BAR_SEARCH_INPUT_CONFIRMED,titleNViewSearchInputClicked:re.ON_NAVIGATION_BAR_SEARCH_INPUT_CLICKED,titleNViewSearchInputFocusChanged:re.ON_NAVIGATION_BAR_SEARCH_INPUT_FOCUS_CHANGED};function IO(e){let t=parseInt(e.id);Object.keys(Wp).forEach(n=>{let r=Wp[n];e.addEventListener(n,s=>{r===re.ON_PULL_DOWN_REFRESH&&Cf(e),Xn(t,r,s)})}),AO(e),PO(e),l.os.name==="iOS"&&(TO(e),OO(e))}function NO(e,t,n,r){let s=Mp(t,r,e);s.uniPageUrl=$p(t,n);let d=!!r.isTabBar;r.isNVue?s.isTab=d:s.debugRefresh=EO(d,t,n),s.locale=v.requireModule("plus").getLanguage(),e.setStyle(s)}function kO(e,t,n){(n.subNVues||[]).forEach(s=>{if(!s.path)return;let d=Ss(s.style||{}),g=s.type==="navigationBar",y=s.type==="popup";d.uniNView={path:s.path.replace(".nvue",".js"),defaultFontSize:P.defaultFontSize,viewport:P.viewport};let H={__uniapp_host:t,__uniapp_origin:d.uniNView.path.split("?")[0].replace(".js",""),__uniapp_origin_id:e.id,__uniapp_origin_type:e.__uniapp_type},I;g?(d.position="dock",d.dock="top",d.top="0",d.width="100%",d.height=String(re.NAVBAR_HEIGHT+Of()),delete d.left,delete d.right,delete d.bottom,delete d.margin):y&&(d.position="absolute",xh(t)?I=Ii:I=e,H.__uniapp_mask=d.mask||"rgba(0,0,0,0.5)",H.__uniapp_mask_id=I.id),delete d.mask;let $=l.webview.create("",s.id,d,H);if(y){I.popupSubNVueWebviews||(I.popupSubNVueWebviews={}),I.popupSubNVueWebviews[$.id]=$;let pe=function(){I.setStyle({mask:"none"}),$.hide("auto")};I.addEventListener("maskClick",pe);let Ae=!1;$.addEventListener("show",()=>{Ae||(l.key.removeEventListener("backbutton",Bo),l.key.addEventListener("backbutton",pe),Ae=!0)}),$.addEventListener("hide",()=>{Ae&&(l.key.removeEventListener("backbutton",pe),l.key.addEventListener("backbutton",Bo),Ae=!1)}),$.addEventListener("close",()=>{delete I.popupSubNVueWebviews[$.id],Ae&&(l.key.removeEventListener("backbutton",pe),l.key.addEventListener("backbutton",Bo),Ae=!1)})}else e.append($)})}function RO(e,t,n,r){(e.id==="1"||!r.isNVue)&&NO(e,t,n,r),kO(e,t,r),IO(e)}function zp(e){return e.routeOptions.meta.isNVue?wO(e):Lp()===2?l.webview.getLaunchWebview():SO()}function Yp(e,t){bt.once(Tc+"."+e,t)}let ns=!1;function Gp(e,t,n){ns={path:e,nvue:Os(e).isNVue,callback:t}}function qp(e,t,n){su(e),Hl(e.$getAppWebview(),t,n)}function Lu(e,t,n=!1){if(!n&&ns)return console.error(`Waiting to navigate to: ${ns.path}, do not operate continuously: ${e}.`);if(P.renderer==="native")return Un().length===0?Gp(e,t,"waitForReady"):t();let r=!mo||mo&&mo.__uniapp_route,s=mo&&!mo.loaded;r||s?Gp(e,t,r?"waitForCreate":"waitForReady"):t(),s&&Yp(mo.id,Fu)}function Fu(){if(!ns)return;let{callback:e}=ns;return ns=!1,e()}function Kp(){if(P.renderer==="native")return ns&&ns.nvue?Fu():void 0;let e=CO();if(!!ns){if(ns.nvue)return Fu();e.loaded?ns.callback():Yp(e.id,Fu)}}function Hl(e,t,n){e[e.__preload__?"hide":"close"](t,n)}function Vu(e,t,n,r,s){typeof s=="undefined"&&(s=e.nvue?0:100);let d=function(){d._called||(d._called=!0,r&&r(),Kp())};d._called=!1,x(()=>{let g=x(()=>{d()},n+150);e.show(t,n,()=>{d._called||S(g),d()})},s)}function xO(e,t){let n=e.children();if(!n||!n.length)return t();let r=n.find(s=>s.id.indexOf(rO)===0)||n[0];r.canBack(({canBack:s})=>{s?r.back():t()})}let BO=Ie(Ty,(e,{resolve:t,reject:n})=>{let r=br();if(!r)return n("getCurrentPages is empty");if(Xn(r,re.ON_BACK_PRESS,{from:e.from}))return t();if(ce.hideToast(),ce.hideLoading(),r.$page.meta.isQuit)MO();else if(Hp(r))jp();else{let{delta:s,animationType:d,animationDuration:g}=e;DO(s,d,g)}return t()},Iy,Vy),$u=0;function MO(){bn(),$u?Date.now()-$u<2e3&&l.runtime.quit():($u=Date.now(),l.nativeUI.toast(Xe().t("uni.app.quit")),x(()=>{$u=0},2e3))}function DO(e,t,n){let r=Un(),s=r.length,d=r[s-1];e>1&&r.slice(s-e,s-1).reverse().forEach(H=>{Hl(l.webview.getWebviewById(H.$page.id+""),"none",0)});let g=function(H){t?Hl(H,t,n||Mu):d.$page.openType==="redirectTo"?Hl(H,kp,Mu):Hl(H,"auto"),r.slice(s-e,s).forEach(I=>su(I)),Gs(),Xn(re.ON_SHOW)},y=l.webview.getWebviewById(d.$page.id+"");if(!d.__uniapp_webview)return g(y);xO(y,()=>{g(y)})}class LO extends re.UniNode{constructor(t,n,r=!1){super(re.NODE_TYPE_PAGE,"#page",null);this._id=1,this._created=!1,this._updating=!1,this._createActionMap=new Map,this.updateActions=[],this.dicts=[],this.nodeId=0,this.pageId=t,this.pageNode=this,this.options=n,this.isUnmounted=!1,this.createAction=[re.ACTION_TYPE_PAGE_CREATE,n],this.createdAction=[re.ACTION_TYPE_PAGE_CREATED],this.normalizeDict=this._normalizeDict.bind(this),this._update=this.update.bind(this),r&&this.setup()}_normalizeDict(t,n=!0){if(!se.isPlainObject(t))return this.addDict(t);let r=[];return Object.keys(t).forEach(s=>{let d=[this.addDict(s)],g=t[s];n?d.push(this.addDict(g)):d.push(g),r.push(d)}),r}addDict(t){let{dicts:n}=this,r=n.indexOf(t);return r>-1?r:n.push(t)-1}onInjectHook(t){(t===re.ON_PAGE_SCROLL||t===re.ON_REACH_BOTTOM)&&!this.scrollAction&&(this.scrollAction=[re.ACTION_TYPE_PAGE_SCROLL,this.options.onReachBottomDistance],this.push(this.scrollAction))}onCreate(t,n){return $O(this,t.nodeId,n),t}onInsertBefore(t,n,r){return UO(this,n,t.nodeId,r&&r.nodeId||-1),n}onRemoveChild(t){return HO(this,t.nodeId),t}onAddEvent(t,n,r){t.parentNode&&jO(this,t.nodeId,n,r)}onAddWxsEvent(t,n,r,s){t.parentNode&&WO(this,t.nodeId,n,r,s)}onRemoveEvent(t,n){t.parentNode&&zO(this,t.nodeId,n)}onSetAttribute(t,n,r){t.parentNode&&GO(this,t.nodeId,n,r)}onRemoveAttribute(t,n){t.parentNode&&qO(this,t.nodeId,n)}onTextContent(t,n){t.parentNode&&Zp(this,t.nodeId,n)}onNodeValue(t,n){t.parentNode&&Zp(this,t.nodeId,n)}genId(){return this._id++}push(t,n){if(!this.isUnmounted){switch(t[0]){case re.ACTION_TYPE_CREATE:this._createActionMap.set(t[1],t);break;case re.ACTION_TYPE_INSERT:let r=this._createActionMap.get(t[1]);r?(r[3]=t[2],r[4]=t[3],n&&(r[5]=n)):(n&&(t[4]=n),this.updateActions.push(t));break}t[0]!==re.ACTION_TYPE_INSERT&&this.updateActions.push(t),this._updating||(this._updating=!0,Gt.queuePostFlushCb(this._update))}}restore(){this.clear(),this.push(this.createAction),this.scrollAction&&this.push(this.scrollAction);let t=n=>{this.onCreate(n,n.nodeName),this.onInsertBefore(n.parentNode,n,null),n.childNodes.forEach(r=>{t(r)})};this.childNodes.forEach(n=>t(n)),this.push(this.createdAction)}setup(){this.send([this.createAction])}update(){let{dicts:t,updateActions:n,_createActionMap:r}=this;this._created||(this._created=!0,n.push(this.createdAction)),n.length&&(t.length&&n.unshift([SA,t]),this.send(n)),this.clear()}clear(){this.dicts.length=0,this.updateActions.length=0,this._updating=!1,this._createActionMap.clear()}send(t){bt.publishHandler(pp,t,this.pageId)}fireEvent(t,n){let r=Jp(t,this);r&&r.dispatchEvent(n)}}function FO(e){let t=au(e);return t?t.__page_container__:null}function Ff(e,t,n){if(typeof n=="number"&&(n=FO(n)),n[e]===t)return n;let{childNodes:r}=n;for(let s=0;s<r.length;s++){let d=Ff(e,t,r[s]);if(d)return d}return null}function Jp(e,t){return Ff("nodeId",e,t)}function VO(e,t){return Ff("nodeName",e.toUpperCase(),t)}function $O(e,t,n){e.push([re.ACTION_TYPE_CREATE,t,e.addDict(n),-1,-1])}function UO(e,t,n,r){let s=t.toJSON({attr:!0,normalize:e.normalizeDict});e.push([re.ACTION_TYPE_INSERT,t.nodeId,n,r],Object.keys(s).length?s:void 0)}function HO(e,t){e.push([re.ACTION_TYPE_REMOVE,t])}function jO(e,t,n,r){e.push([re.ACTION_TYPE_ADD_EVENT,t,e.addDict(n),r])}function WO(e,t,n,r,s){e.push([re.ACTION_TYPE_ADD_WXS_EVENT,t,e.addDict(n),e.addDict(r),s])}function zO(e,t,n){e.push([re.ACTION_TYPE_REMOVE_EVENT,t,e.addDict(n)])}function YO(e,t,n){return t==="style"&&se.isPlainObject(n)?e.normalizeDict(n):e.addDict(n)}function GO(e,t,n,r){e.push([re.ACTION_TYPE_SET_ATTRIBUTE,t,e.addDict(n),YO(e,n,r)])}function qO(e,t,n){e.push([re.ACTION_TYPE_REMOVE_ATTRIBUTE,t,e.addDict(n)])}function Zp(e,t,n){e.push([re.ACTION_TYPE_SET_TEXT,t,e.addDict(n)])}function KO(e,t,n){return new LO(e,t,n)}function Xp(e){let t=e.setup;return e.inheritAttrs=!1,e.setup=(n,r)=>{let{attrs:{__pageId:s,__pagePath:d,__pageQuery:g,__pageInstance:y}}=r,I=Gt.getCurrentInstance().proxy;if(Ht(I,y),Du(Qp(s,I,y)),Gt.onMounted(()=>{Gt.nextTick(()=>{Xn(I,re.ON_READY)})}),Gt.onBeforeUnmount(()=>{Xn(I,re.ON_UNLOAD)}),t)return t(g,r)},e}function Qp(e,t,n){let r=()=>l.webview.getWebviewById(e+"");return t.$getAppWebview=r,t.$.ctx.$scope={$getAppWebview:r},t.getOpenerEventChannel=()=>(n.eventChannel||(n.eventChannel=new re.EventChannel(e)),n.eventChannel),t}function JO(e){return se.isFunction(e)}let eg=new Map;function ZO(e,t){eg.set(e,re.once(QO(t)))}function XO(e,t,n,r,s){let d=KO(e,s,!0),g=xp(),y=eg.get(t)(),H=I=>g.mountPage(I,{__pageId:e,__pagePath:t,__pageQuery:n,__pageInstance:r},d);return se.isPromise(y)?y.then(I=>H(I)):H(y)}function QO(e){return()=>JO(e)?e().then(t=>Xp(t)):Xp(e)}let tg=!1;function ng(){if(tg)return;tg=!0;let e,t;if(v.requireModule("plus").getRedirectInfo){let{path:d,query:g,referrerInfo:y}=Nn();d&&(e=d,t=g),P.referrerInfo=y}else{let d=l.runtime.arguments;if(!d)return;try{let g=JSON.parse(d);e=g.path||g.pathName,t=g.query?"?"+g.query:""}catch(g){}}if(!e||e===P.entryPagePath){t&&(P.entryPageQuery=t);return}let r=re.addLeadingSlash(e),s=po(r);!s||(s.meta.isTabBar||(P.realEntryPagePath=P.realEntryPagePath||P.entryPagePath),P.entryPagePath=e,P.entryPageQuery=t)}function rg(e,t){let n=JSON.parse(JSON.stringify(po(e)));return n.meta=Qs(n.meta),t!=="preloadPage"&&!P.realEntryPagePath&&(t==="reLaunch"||Un().length===0)?n.meta.isQuit=!0:n.meta.isTabBar||(n.meta.isQuit=!1),n}let ys={};function eT(e){let t=Object.keys(ys).find(n=>ys[n].id===e.id);t&&delete ys[t]}function tT({url:e}){let t=ys[e];return t&&(t.__page__&&Un().find(n=>n===t.__page__)?t.__preload__=!1:t.close("none"),delete ys[e]),t}function nT({url:e,path:t,query:n}){if(!ys[e]){let r=rg(t,"preloadPage");ys[e]=zp({path:t,routeOptions:r,query:n,webviewExtras:{__preload__:!0}})}return ys[e]}function lu({url:e,path:t,query:n,openType:r,webview:s,nvuePageVm:d,eventChannel:g}){if(s&&ng(),ys[e]){s=ys[e];let Ae=s;if(Ae.__page__)if(Un().find(Be=>Be===Ae.__page__))s=void 0;else return g&&(Ae.__page__.$page.eventChannel=g),Du(Ae.__page__),Ae}let y=rg(t,r);s?(s=l.webview.getWebviewById(s.id),s.nvue=y.meta.isNVue):s=zp({path:t,routeOptions:y,query:n}),y.meta.id=parseInt(s.id),!!y.meta.isTabBar&&Ii.append(s),RO(s,t,n,y.meta);let I=t.slice(1);s.__uniapp_route=I;let $=El(r,e,n,y.meta,g),pe=parseInt(s.id);return s.nvue?d?iT(pe,d,$):oT(pe,s,$):XO(pe,I,n,$,rT(y)),s}function rT({meta:e}){let t=Of(),{platform:n,pixelRatio:r,windowWidth:s}=Uo();return{css:!0,route:e.route,version:1,locale:"",platform:n,pixelRatio:r,windowWidth:s,disableScroll:e.disableScroll===!0,onPageScroll:!1,onPageReachBottom:!1,onReachBottomDistance:se.hasOwn(e,"onReachBottomDistance")?e.onReachBottomDistance:re.ON_REACH_BOTTOM_DISTANCE,statusbarHeight:t,windowTop:e.navigationBar.type==="float"?t+re.NAVBAR_HEIGHT:0,windowBottom:Ii.indexOf(e.route)>=0&&Ii.cover?Ii.height:0}}function iT(e,t,n){Ht(t,n),Du(Qp(e,t,n)),e===1&&(P.splashscreen&&P.splashscreen.autoclose&&!P.splashscreen.alwaysShowBeforeRender&&l.navigator.closeSplashscreen(),P.onReady(function(){Kp()}))}function oT(e,t,n){let r={$:{},$getAppWebview(){return t},getOpenerEventChannel(){return n.eventChannel||(n.eventChannel=new re.EventChannel(e)),n.eventChannel},__setup(s,d){s.$getAppWebview=()=>t,s.getOpenerEventChannel=d.getOpenerEventChannel,Ht(s,n),t.__preload__&&(t.__page__=s);let g=Lf(),y=g.findIndex(H=>H===d);y>-1&&g.splice(y,1,s)}};Ht(r,n),t.__preload__?t.__page__=r:Du(r)}let ig=(e,{resolve:t,reject:n})=>{let{url:r,events:s,animationType:d,animationDuration:g}=e,{path:y,query:H}=re.parseUrl(r),[I,$]=lT(y,d,g);Lu(y,()=>{sT({url:r,path:y,query:H,events:s,aniType:I,aniDuration:$}).then(t).catch(n)},e.openType==="appLaunch")},aT=Ie(_f,ig,Py,My);function sT({url:e,path:t,query:n,events:r,aniType:s,aniDuration:d}){Xn(re.ON_HIDE);let g=new re.EventChannel(Lp()+1,r);return new Promise(y=>{Vu(lu({url:e,path:t,query:n,openType:"navigateTo",eventChannel:g}),s,d,()=>{y({eventChannel:g})}),Gs()})}function lT(e,t,n){let{globalStyle:r}=P,s=Os(e);return[t||s.animationType||r.animationType||tO,n||s.animationDuration||r.animationDuration||Mu]}let cT=Ie(bf,({url:e},{resolve:t,reject:n})=>{let{path:r,query:s}=re.parseUrl(e);Lu(r,()=>{uT({url:e,path:r,query:s}).then(t).catch(n)})},Ny,Dy);function uT({url:e,path:t,query:n}){let r=br();return r&&su(r),new Promise(s=>{Vu(lu({url:e,path:t,query:n,openType:"redirectTo"}),"none",0,()=>{if(r){let d=r.$getAppWebview();d.__preload__&&eT(d),d.close("none")}s(void 0)}),Gs()})}let fT=({url:e},{resolve:t,reject:n})=>{let{path:r,query:s}=re.parseUrl(e);Lu(r,()=>{dT({url:e,path:r,query:s}).then(t).catch(n)})};function dT({url:e,path:t,query:n}){return new Promise(r=>{let s=Lf().slice(0);We.find(g=>g.path===t).meta.isTabBar&&Ii.switchTab(t.slice(1)),Vu(lu({url:e,path:t,query:n,openType:"reLaunch"}),"none",0,()=>{s.forEach(g=>qp(g,"none")),r(void 0)}),Gs()})}let hT=Ie(Ah,fT,ky,Ly),og=(e,{resolve:t,reject:n})=>{let{url:r}=e,{path:s,query:d}=re.parseUrl(r);Lu(s,()=>{gT({url:r,path:s,query:d}).then(t).catch(n)},e.openType==="appLaunch")},pT=Ie(wu,og,Ry,Fy);function gT({url:e,path:t,query:n}){Ii.switchTab(t.slice(1));let r=Un(),s=r.length,d=!1,g=!1,y;s>=1&&(y=r[s-1],y&&!y.$.__isTabBar?(g=!0,r.reverse().forEach(I=>{!I.$.__isTabBar&&I!==y&&qp(I,"none")}),su(y),x(()=>{y.$page.openType==="redirectTo"?Hl(y.$getAppWebview(),kp,Mu):Hl(y.$getAppWebview(),"auto")},100)):d=!0);let H;return Lf().forEach(I=>{re.addLeadingSlash(I.route)===t?(I.$.__isActive||(g=!0),I.$.__isActive=!0,H=I):I.$.__isTabBar&&(I.$.__isActive=!1)}),y===H&&(d=!1),y&&d&&Xn(y,re.ON_HIDE),new Promise(I=>{if(H){let $=H.$getAppWebview();$.show("none"),g&&!$.__preload__&&Xn(H,re.ON_SHOW),Gs(),I(void 0)}else Vu(lu({url:e,path:t,query:n,openType:"switchTab"}),"none",0,()=>{Gs(),I(void 0)},70)})}let vT=Ut(Oh,({url:e})=>{let t=tT({url:e});return t?{id:t.id,url:e,errMsg:"unPreloadPage:ok"}:{url:e,errMsg:"unPreloadPage:fail not found"}},By),mT=Ie(yf,({url:e},{resolve:t,reject:n})=>{let r=e.split("?"),s=r[0],d=re.parseQuery(r[1]||""),g=nT({url:e,path:s,query:d});t({id:g.id,url:e,errMsg:"preloadPage:ok"})},xy);var _T={__proto__:null,sendHostEvent:Op,navigateToMiniProgram:jA,onHostEventReceive:Pp,onNativeEventReceive:WA,navigateTo:aT,reLaunch:hT,switchTab:pT,upx2px:em,addInterceptor:am,removeInterceptor:sm,interceptors:lm,arrayBufferToBase64:Bi,base64ToArrayBuffer:Zr,createIntersectionObserver:e_,createMediaQueryObserver:n_,createSelectorQuery:l_,createVideoContext:Im,createMapContext:km,createAnimation:p_,onWindowResize:__,offWindowResize:b_,onTabBarMidButtonTap:g_,createCanvasContext:Ym,canvasGetImageData:Gm,canvasPutImageData:qm,canvasToTempFilePath:Km,getSelectedTextRange:A_,getLocale:E_,setLocale:S_,$on:vm,$off:_m,$once:mm,$emit:bm,onCreateVueApp:re.onCreateVueApp,onLocaleChange:w_,setPageMeta:C_,getEnterOptionsSync:L_,getLaunchOptionsSync:F_,getPushCid:$_,onPushMessage:U_,offPushMessage:H_,onAppHide:M_,onAppShow:x_,onError:k_,onPageNotFound:I_,onUnhandledRejection:T_,offAppHide:D_,offAppShow:B_,offError:R_,offPageNotFound:N_,offUnhandledRejection:P_,invokePushCallback:V_,setStorageSync:yw,setStorage:Ew,getStorageSync:ww,getStorage:Sw,removeStorageSync:Cw,removeStorage:Aw,clearStorageSync:Ow,clearStorage:Tw,getStorageInfoSync:Bh,getStorageInfo:Pw,getFileInfo:Iw,saveFile:xw,getSavedFileList:Dw,getSavedFileInfo:Lw,removeSavedFile:Fw,openDocument:Vw,getSystemInfoSync:$h,getSystemInfo:qw,onCompassChange:Kw,offCompassChange:Jw,startCompass:Uh,stopCompass:Hh,vibrateShort:Zw,vibrateLong:Xw,onAccelerometerChange:Qw,offAccelerometerChange:eS,startAccelerometer:jh,stopAccelerometer:Wh,onBluetoothDeviceFound:tS,onBluetoothAdapterStateChange:nS,onBLEConnectionStateChange:rS,onBLECharacteristicValueChange:iS,openBluetoothAdapter:oS,closeBluetoothAdapter:aS,getBluetoothAdapterState:sS,startBluetoothDevicesDiscovery:lS,stopBluetoothDevicesDiscovery:cS,getBluetoothDevices:uS,getConnectedBluetoothDevices:fS,createBLEConnection:dS,closeBLEConnection:hS,getBLEDeviceServices:pS,getBLEDeviceCharacteristics:gS,notifyBLECharacteristicValueChange:vS,readBLECharacteristicValue:mS,writeBLECharacteristicValue:_S,setBLEMTU:bS,getBLEDeviceRSSI:yS,onBeaconUpdate:ES,onBeaconServiceChange:wS,getBeacons:SS,startBeaconDiscovery:CS,stopBeaconDiscovery:AS,makePhoneCall:OS,addPhoneContact:IS,getClipboardData:NS,setClipboardData:kS,onNetworkStatusChange:RS,offNetworkStatusChange:xS,getNetworkType:qh,checkIsSupportSoterAuthentication:BS,checkIsSoterEnrolledInDevice:MS,startSoterAuthentication:DS,scanCode:LS,onThemeChange:FS,getScreenBrightness:VS,setScreenBrightness:$S,setKeepScreenOn:US,getImageInfo:HS,getVideoInfo:jS,previewImage:WS,closePreviewImage:zS,getRecorderManager:qS,saveVideoToPhotosAlbum:KS,saveImageToPhotosAlbum:JS,compressImage:ZS,compressVideo:XS,chooseImage:eC,chooseVideo:tC,showKeyboard:nC,hideKeyboard:rC,onKeyboardHeightChange:iC,offKeyboardHeightChange:oC,downloadFile:sC,request:fC,configMTLS:dC,connectSocket:vC,sendSocketMessage:mC,closeSocket:_C,onSocketOpen:bC,onSocketError:yC,onSocketMessage:EC,onSocketClose:wC,uploadFile:CC,createInnerAudioContext:xC,getBackgroundAudioManager:WC,createLivePusherContext:GC,getLocation:JC,chooseLocation:ZC,openLocation:XC,showModal:QC,showActionSheet:eA,showLoading:tA,showToast:nA,hideToast:rA,hideLoading:iA,startPullDownRefresh:oA,stopPullDownRefresh:aA,loadFontFace:sA,pageScrollTo:lA,setNavigationBarTitle:cA,showNavigationBarLoading:uA,hideNavigationBarLoading:fA,setNavigationBarColor:hA,setTabBarBadge:pA,setTabBarItem:gA,setTabBarStyle:vA,hideTabBar:mA,showTabBar:_A,showTabBarRedDot:bA,removeTabBarBadge:yA,hideTabBarRedDot:EA,getSubNVueById:TA,restoreGlobal:IA,requireGlobal:NA,getProvider:kA,login:bp,getUserInfo:RA,getUserProfile:xA,preLogin:Ep,closeAuthView:Sp,getCheckBoxState:Cp,getUniverifyManager:DA,registerRuntime:LA,share:$A,shareWithSystem:UA,requestPayment:HA,requireNativePlugin:ha,sendNativeEvent:zh,createRewardedVideoAd:GA,createFullScreenVideoAd:KA,createInterstitialAd:ZA,createInteractiveAd:eO,navigateBack:BO,redirectTo:cT,unPreloadPage:vT,preloadPage:mT};let bT=se.extend(Ue,{publishHandler:yT});function yT(e,t,n){t=JSON.stringify(t),se.isArray(n)||(n=[n]);let r=`typeof UniViewJSBridge !== 'undefined' && UniViewJSBridge.subscribeHandler("${e}",${t},__PAGE_ID__)`;n.forEach(s=>{let d=String(s),g=l.webview.getWebviewById(d);g&&g.evalJS(r.replace("__PAGE_ID__",d))})}function ET(){let{tabBar:e}=P;if(!(e&&e.list&&e.list.length))return;let{entryPagePath:n}=P;e.selectedIndex=0;let r=e.list.findIndex(s=>s.pagePath===n);Ii.init(e,(s,d)=>{ce.switchTab({url:re.addLeadingSlash(s.pagePath),openType:"switchTab",from:"tabBar",success(){Xn(re.ON_TAB_ITEM_TAP,{index:d,text:s.text,pagePath:s.pagePath})}})}),r!==-1&&(e.selectedIndex=r,r!==0&&Ii.switchTab(n))}function wT(){let e=l.globalEvent,t=v.requireModule("globalEvent"),n=bt.emit;v.config.preload?l.key.addEventListener(tl,Bo):e.addEventListener("splashclosed",()=>{l.key.addEventListener(tl,Bo)}),e.addEventListener("pause",()=>{n(re.ON_APP_ENTER_BACKGROUND)}),e.addEventListener("resume",()=>{let s=Nn();s&&s.userAction&&sr(s),n(re.ON_APP_ENTER_FOREGROUND,Ia())}),t.addEventListener("uistylechange",function(s){let d={theme:s.uistyle};n(re.ON_THEME_CHANGE,d)});let r=0;e.addEventListener("KeyboardHeightChange",function(s){r!==s.height&&(r=s.height,n(re.ON_KEYBOARD_HEIGHT_CHANGE,{height:r}))}),t.addEventListener(iO,function(s){s&&s.event&&zA(s.event,s.data)}),e.addEventListener("plusMessage",ag),e.addEventListener("WebviewPostMessage",ag)}function ag({data:e}){e&&e.type&&bt.subscribeHandler("plusMessage."+e.type,e.args)}function sg(e,t,n=!1){bt.subscribe("plusMessage."+e,t,n)}function ST(e){O_(e.$);let{entryPagePath:t,entryPageQuery:n,referrerInfo:r}=P,s=Rn({path:t,query:n,referrerInfo:r});Xn(e,re.ON_LAUNCH,s),Xn(e,re.ON_SHOW,s);let d=v.requireModule("plus").getAppState;(d&&Number(d()))===2&&Xn(e,re.ON_HIDE,s)}function lg(e){return e=e.replace(/\/$/,""),e.indexOf("_")===0?l.io.convertLocalFileSystemURL(e):e}function CT(){let e=lg(Ua),t=lg(di),n=t.split("/");n.pop();let r=n.join("/");l.io.resolveLocalFileSystemURL(l.io.convertAbsoluteFileSystem(r),s=>{s.createReader().readEntries(function(g){let y=g;y&&y.length&&y.forEach(function(H){H.isDirectory&&H.fullPath.indexOf(e)===0&&H.fullPath.indexOf(t)!==0&&H.removeRecursively()})})})}function AT(e,t,n){n.fireEvent(e,t)}function OT(e,t){let n=au(parseInt(t));if(!n)return;let r=n.__page_container__;e.forEach(s=>{switch(s[0]){case re.ACTION_TYPE_EVENT:AT(s[1],s[2],r);break}})}let cg={};function TT(e,t,n){let{adpid:r,width:s}=e,d=r+"-"+s,g=cg[d];if(g&&g.length>0){t(g.splice(0,1)[0]);return}l.ad.getAds(e,y=>{let H=y.ads;t(H.splice(0,1)[0]),cg[d]=g?g.concat(H):H},y=>{n({errCode:y.code,errMsg:y.message})})}function PT(){be("getAdData",(e,t)=>{TT(e,n=>{t({code:0,data:n})},n=>{t({code:1,message:n})})})}let IT=["switchTab","reLaunch","redirectTo","navigateTo","navigateBack"];function NT(){IT.forEach(e=>{be(e,t=>{ce[e](se.extend(t,{fail(n){console.error(n.errMsg)}}))})})}let ug=!1;function kT(e,t){let n=t==="1";if(!(n&&ug)){if(n?(ug=!0,Up(l.webview.getLaunchWebview())):mo||Up(l.webview.getWebviewById(t)),mo.id!==t)return console.error(`webviewReady[${mo.id}][${t}] not match`);mo.loaded=!0,bt.emit(Tc+"."+t),n&&RT()}}function RT(){let{autoclose:e,alwaysShowBeforeRender:t}=P.splashscreen;e&&!t&&l.navigator.closeSplashscreen();let n=re.addLeadingSlash(P.entryPagePath),r=po(n);if(!r.meta.isNVue){let s={url:n+(P.entryPageQuery||""),openType:"appLaunch"},d={resolve(){},reject(){}};return r.meta.isTabBar?og(s,d):ig(s,d)}}function xT(e,t){let n=au(parseInt(t));n&&(n.__uniapp_webview=!0)}function BT(e,t){let n=au(parseInt(t));n&&delete n.__uniapp_webview}let MT=({name:e,arg:t},n)=>{e==="postMessage"?DT(n[0],t):ce[e](se.extend(t,{fail(r){console.error(r.errMsg)}}))};function DT(e,t){let n=VO("web-view",parseInt(e));n&&n.dispatchEvent(re.createUniEvent({type:"onMessage",target:Object.create(null),currentTarget:Object.create(null),detail:{data:[t]}}))}function LT({nodeId:e,ownerId:t,method:n,args:r},s){let d=Jp(e,parseInt(s));if(!d)return;let g=FT(t,d.__vueParentComponent);!g||!g[n]||g[n](r)}function FT(e,t){if(!t)return null;if(t.uid===e)return t.proxy;let n=t.parent;for(;n;){if(n.uid===e)return n.proxy;n=n.parent}return t.proxy}function VT(){let{subscribe:e,subscribeHandler:t,publishHandler:n}=bt;if(sg("subscribeHandler",({type:r,data:s,pageId:d})=>{t(r,s,d)}),sg(re.WEB_INVOKE_APPSERVICE,({data:r,webviewIds:s})=>{MT(r,s)}),P.renderer!=="native"){e(Tc,kT),e(pp,OT),ue(),PT(),NT(),e(CA,xT),e(AA,BT),e(re.ON_WXS_INVOKE_CALL_METHOD,LT);let r=po(re.addLeadingSlash(P.entryPagePath));r&&!r.meta.isNVue&&n(Tc,{},1)}}let Pc,Vf={globalData:{}};function $T({allowDefault:e=!1}={}){if(Pc)return Pc;if(e)return Vf;console.error("[warn]: getApp() failed. Learn more: https://uniapp.dcloud.io/collocation/frame/window?id=getapp.")}function UT(e){if(ce.Vuex&&e.$store){let{useStore:t}=ce.Vuex;ce.Vuex.useStore=n=>n?t(n):e.$store}oO(e),Pc=e,Cn(Pc),se.extend(Pc,Vf),jt(Pc,Vf.globalData),Mt(),ng(),ET(),wT(),VT(),ST(e),x(CT,1e4),P.ready=!0}var HT={uni:_T,getApp:$T,getCurrentPages:aO,__definePage:ZO,__registerApp:UT,__registerPage:lu,UniServiceJSBridge:bT};return HT}(At,an,O);A=A.default||A;let ce=A.uni,Kn=A.getApp,Un=A.getCurrentPages,bt=A.UniServiceJSBridge;return A}var Yg=CI(TI);var od,ad,sd,Zs,ld,cd,ud;function Gg(){return Zs?{__definePage:od,__registerApp:ad,__registerPage:sd,uni:Zs,wx:Zs,getApp:ld,getCurrentPages:cd,UniServiceJSBridge:ud}:{}}function qg(v){let{weex:l,plus:b,VueShared:O}=v;return Zs||({__definePage:od,__registerApp:ad,__registerPage:sd,uni:Zs,getApp:ld,getCurrentPages:cd,UniServiceJSBridge:ud}=zg(l,b,v),Zs.VueShared=O,pg(Zs)),{__definePage:od,__registerApp:ad,__registerPage:sd,plus:b,uni:Zs,wx:Zs,getApp:ld,getCurrentPages:cd,UniServiceJSBridge:ud}}function Kg(v,l){let{__uniConfig:b}=l;if(!b)return;let O=l.weex;O.document.__$automator__=!!b.automator;let x=b.renderer!=="native"&&O.config.bundleUrl.indexOf("app-service.js")!==-1;if(mi(l,Gg()),x?Yg(l):(_g(v,l),Fg(l.Vue.parseClassStyles)),mi(l,qg(l)),O.config.plus_web_id==="1"){let P=O.requireModule("plus");P.setDefaultFontSize&&P.setDefaultFontSize(Math.round(l.plus.screen.resolutionWidth/20))}let{scale:S,deviceWidth:k,platform:u}=global.WXEnvironment;if(u.toLowerCase()==="ios"){let P=Math.ceil(k/S);O.requireModule("meta").setViewport({width:P,roundOffDeviation:!1})}}var ql=class extends Gl{constructor(l){super();this.nodeType=8;this.type="comment";this.value="";this.value=l}toString(){return"<!-- "+this.value+" -->"}};function Qo(v,l=[]){return{module:"dom",method:v,args:l}}var Bc=class{constructor(l,b){this.id=l,this.batched=!1,this.updates=[],Yn(b)?Object.defineProperty(this,"handler",{configurable:!0,enumerable:!0,writable:!0,value:b}):console.error("[JS Runtime] invalid parameter, handler must be a function")}createFinish(l){return this.handler([Qo("createFinish")],l)}updateFinish(l){return this.handler([Qo("updateFinish")],l)}refreshFinish(l){return this.handler([Qo("refreshFinish")],l)}createBody(l){let b=l.toJSON(),O=b.children;delete b.children;let x=[Qo("createBody",[b])];return O&&x.push.apply(x,O.map(S=>Qo("addElement",[b.ref,S,-1]))),this.addActions(x)}addElement(l,b,O){return O>=0||(O=-1),this.addActions(Qo("addElement",[b,l.toJSON(),O]))}removeElement(l){if(ji(l)){let b=l.map(O=>Qo("removeElement",[O]));return this.addActions(b)}return this.addActions(Qo("removeElement",[l]))}moveElement(l,b,O){return this.addActions(Qo("moveElement",[l,b,O]))}setAttr(l,b,O){return this.addActions(Qo("updateAttrs",[l,{[b]:O}]))}setStyle(l,b,O){return this.addActions(Qo("updateStyle",[l,{[b]:O}]))}setStyles(l,b){return this.addActions(Qo("updateStyle",[l,b]))}addEvent(l,b){return this.addActions(Qo("addEvent",[l,b]))}removeEvent(l,b){return this.addActions(Qo("removeEvent",[l,b]))}handler(l,b){return b&&b()}addActions(l){let b=this.updates,O=this.handler;if(ji(l)||(l=[l]),this.batched)b.push.apply(b,l);else return O(l)}};var fd={createBody:"callCreateBody",addElement:"callAddElement",removeElement:"callRemoveElement",moveElement:"callMoveElement",updateAttrs:"callUpdateAttrs",updateStyle:"callUpdateStyle",addEvent:"callAddEvent",removeEvent:"callRemoveEvent"};function Jg(v,l){let b=l||global.callNative;return Yn(b)||console.error("[JS Runtime] no default handler"),function(x){ji(x)||(x=[x]);for(let S=0;S<x.length;S++){let k=II(v,x[S],b);if(k===-1)return k}}}function PI(v,l){return v==="dom"&&fd[l]&&Yn(global[fd[l]])}function II(v,l,b){let{module:O,method:x,args:S}=l;return PI(O,x)?global[fd[x]](v,...S,"-1"):b(v,[l],"-1")}var rf=class extends _o{constructor(l){super();this.value=l,this.nodeType=3,this.type="text",this.value=""}toString(){return""+this.value}};var Zg={slider:{change:function(v){return{index:v.index,source:v.source}},scroll:function(v){return{offsetXRatio:v.offsetXRatio,offsetYRatio:v.offsetYRatio,drag:v.drag}}},"scroll-view":{scrollend:function(v){return{contentOffset:v.contentOffset}}}};function Xg(v){let{attr:l,offsetLeft:b,offsetTop:O}=v,x={};return l&&Object.keys(l).forEach(S=>{S.indexOf("data-")===0&&(x[S.replace("data-","")]=l[S])}),{id:l&&l.id||"",dataset:x,offsetLeft:b||0,offsetTop:O||0}}var NI=["a","div","list","cell","loading","refresh","recycle-list","scroller","indicator","waterfall","web","richtext"],kI=["viewappear","viewdisappear"],RI={markertap:["markerId"],controltap:["controlId"],regionchange:["causedBy"],end:["causedBy"],appear:["direction"],disappear:["direction"]};function Qg(v,l){let b=v.type;if(kI.indexOf(b)!==-1)return v;let O=v.currentTarget,x=O.type.replace("u-","");if(NI.indexOf(x)!==-1)return v;let{timestamp:S,target:k}=v;if(!l){let We=Zg[x];We?Yn(We[b])?l=We[b](v):l=v.detail||{}:l=v.detail||{}}let u={type:b,timeStamp:S,target:Xg(k),currentTarget:Xg(O),detail:l,touches:b==="touchend"||b==="panend"?[]:v.changedTouches,changedTouches:v.changedTouches};v.componentId&&(u.componentId=v.componentId);let P=RI[b];return P&&P.forEach(We=>{jl(v,We)&&(u[We]=v[We])}),u}function xI(v,l){let b=l.attrs||{};for(let x in b)v.setAttr(x,b[x],!0);let O=l.style||{};for(let x in O)v.setStyle(x,O[x],!0)}var pa=class{constructor(l,b="",O){l=l?l.toString():"",this.id=l,this.URL=b,Ng(l,this),this.nodeMap={};let x=pa.Listener||Bc;this.listener=new x(l,O||Jg(l,pa.handler)),this.taskCenter=new xc(l,O?(S,k)=>O(k):pa.handler),this.createDocumentElement()}getRef(l){return this.nodeMap[l]}open(){this.listener.batched=!1}close(){this.listener.batched=!0}createDocumentElement(){if(!this.documentElement){let l=new _o("document");l.docId=this.id,l.ownerDocument=this,l.role="documentElement",l.ref="_documentElement",this.nodeMap._documentElement=l,this.documentElement=l,Object.defineProperty(l,"appendChild",{configurable:!0,enumerable:!0,writable:!0,value:b=>{zf(this,b)}}),Object.defineProperty(l,"insertBefore",{configurable:!0,enumerable:!0,writable:!0,value:(b,O)=>{zf(this,b,O)}}),nr("debug")&&io(`Create document element (id: "${l.docId}", ref: "${l.ref}")`)}return this.documentElement}createBody(l,b){if(!this.body){let O=new _o(l,b);Yf(this,O),nr("debug")&&io(`[createBody](${this.id},${O.type},${O.ref}) (${JSON.stringify(O.toJSON(!0))}).`)}return this.body}createElement(l,b){let O=new _o(l,b);return nr("debug")&&io(`[createElement](${this.id},${O.type},${O.ref}) (${JSON.stringify(O.toJSON(!0))}).`),O}createComment(l){return new ql(l)}createText(l){return new rf(l)}fireEvent(l,b,O,x,S){if(!l)return;O=O||{},O.type=O.type||b,O.target=l,O.currentTarget=l,O.timestamp=Date.now(),x&&xI(l,x);let k,u=this.getRef("_root");if(u&&u.attr){let P=u.attr.bubble;k=P==="true"||P===!0}return O=Qg(O),l.fireEvent(b,O,k,S)}destroy(){nr("debug")&&io(`[destroy](${this.id},document) Destroy document (id: "${this.id}", URL: "${this.URL}")`),this.taskCenter.destroyCallback(),delete this.listener,delete this.nodeMap,delete this.taskCenter,kg(this.id)}};pa.handler=null;var ev={InputElementDiv:"<WhiteSpace>|<LineTerminator>|<ReservedWord>|<Identifier>|<NumericLiteral>|<Punctuator>|<StringLiteral>",InputElementRegExp:"<WhiteSpace>|<LineTerminator>|<ReservedWord>|<Identifier>|<NumericLiteral>|<Punctuator>|<StringLiteral>",ReservedWord:"<Keyword>|<NullLiteral>|<BooleanLiteral>",WhiteSpace:/[\t\v\f\u0020\u00A0\u1680\u180E\u2000-\u200A\u202F\u205f\u3000\uFEFF]/,LineTerminator:/[\n\r\u2028\u2029]/,Keyword:/new(?![_$a-zA-Z0-9])|void(?![_$a-zA-Z0-9])|delete(?![_$a-zA-Z0-9])|in(?![_$a-zA-Z0-9])|instanceof(?![_$a-zA-Z0-9])|typeof(?![_$a-zA-Z0-9])/,NullLiteral:/null(?![_$a-zA-Z0-9])/,BooleanLiteral:/(?:true|false)(?![_$a-zA-Z0-9])/,Identifier:/[_$a-zA-Z][_$a-zA-Z0-9]*/,Punctuator:/\/|=>|\*\*|>>>=|>>=|<<=|===|!==|>>>|<<|%=|\*=|-=|\+=|<=|>=|==|!=|\^=|\|=|\|\||&&|&=|>>|\+\+|--|\:|}|\*|&|\||\^|!|~|-|\+|\?|%|=|>|<|,|;|\.(?![0-9])|\]|\[|\)|\(|{/,DivPunctuator:/\/=|\//,NumericLiteral:/(?:0[xX][0-9a-fA-F]*|\.[0-9]+|(?:[1-9]+[0-9]*|0)(?:\.[0-9]*|\.)?)(?:[eE][+-]{0,1}[0-9]+)?(?![_$a-zA-Z0-9])/,StringLiteral:/"(?:[^"\n\\\r\u2028\u2029]|\\(?:['"\\bfnrtv\n\r\u2028\u2029]|\r\n)|\\x[0-9a-fA-F]{2}|\\u[0-9a-fA-F]{4}|\\[^0-9ux'"\\bfnrtv\n\\\r\u2028\u2029])*"|'(?:[^'\n\\\r\u2028\u2029]|\\(?:['"\\bfnrtv\n\r\u2028\u2029]|\r\n)|\\x[0-9a-fA-F]{2}|\\u[0-9a-fA-F]{4}|\\[^0-9ux'"\\bfnrtv\n\\\r\u2028\u2029])*'/,RegularExpressionLiteral:/\/(?:\[(?:\\[\s\S]|[^\]])*\]|[^*\/\\\n\r\u2028\u2029]|\\[^\n\r\u2028\u2029])(?:\[(?:\\[\s\S]|[^\]])*\]|[^\/\\\n\r\u2028\u2029]|\\[^\n\r\u2028\u2029])*\/[0-9a-zA-Z]*/};function tv(v,l,b){var O=[l];function x(k){var u=new RegExp;return u.compile(k.replace(/<([^>]+)>/g,function(P,We){return v[We]?(O.push(We),v[We]instanceof RegExp?"("+v[We].source+")":"("+x(v[We]).source+")"):""}),b),u}var S=x(v[l]);this.exec=function(k){var u=S.exec(k);if(u==null)return null;for(var P=new String(u[0]),We=0;We<O.length;We++)u[We]&&(P[O[We]]=u[We]);return P},Object.defineProperty(this,"lastIndex",{get:function(){return S.lastIndex},set:function(k){S.lastIndex=k}})}function BI(){var v=new tv(ev,"InputElementDiv","g"),l=new tv(ev,"InputElementRegExp","g"),b;Object.defineProperty(this,"source",{get:function(){return b},set:function(O){b=O,v.lastIndex=0,l.lastIndex=0}}),this.reset=function(){v.lastIndex=0,l.lastIndex=0},this.getNextToken=function(O){var x=v.lastIndex,S;O?S=v:S=l;var k=S.exec(b);if(k&&S.lastIndex-x>k.length)throw new SyntaxError("Unexpected token ILLEGAL");return v.lastIndex=S.lastIndex,l.lastIndex=S.lastIndex,k}}var nv={IdentifierName:[["Identifier"]],Literal:[["NullLiteral"],["BooleanLiteral"],["NumericLiteral"],["StringLiteral"],["RegularExpressionLiteral"]],PrimaryExpression:[["Identifier"],["Literal"],["(","Expression",")"]],CallExpression:[["PrimaryExpression","Arguments"],["CallExpression","Arguments"]],Arguments:[["(",")"],["(","ArgumentList",")"]],ArgumentList:[["ConditionalExpression"],["ArgumentList",",","ConditionalExpression"]],LeftHandSideExpression:[["PrimaryExpression"],["CallExpression"]],UnaryExpression:[["LeftHandSideExpression"],["void","UnaryExpression"],["+","UnaryExpression"],["-","UnaryExpression"],["~","UnaryExpression"],["!","UnaryExpression"]],ExponentiationExpression:[["UnaryExpression"],["ExponentiationExpression","**","UnaryExpression"]],MultiplicativeExpression:[["MultiplicativeExpression","/","ExponentiationExpression"],["ExponentiationExpression"],["MultiplicativeExpression","*","ExponentiationExpression"],["MultiplicativeExpression","%","ExponentiationExpression"]],AdditiveExpression:[["MultiplicativeExpression"],["AdditiveExpression","+","MultiplicativeExpression"],["AdditiveExpression","-","MultiplicativeExpression"]],ShiftExpression:[["AdditiveExpression"],["ShiftExpression","<<","AdditiveExpression"],["ShiftExpression",">>","AdditiveExpression"],["ShiftExpression",">>>","AdditiveExpression"]],RelationalExpression:[["ShiftExpression"],["RelationalExpression","<","ShiftExpression"],["RelationalExpression",">","ShiftExpression"],["RelationalExpression","<=","ShiftExpression"],["RelationalExpression",">=","ShiftExpression"],["RelationalExpression","instanceof","ShiftExpression"],["RelationalExpression","in","ShiftExpression"]],EqualityExpression:[["RelationalExpression"],["EqualityExpression","==","RelationalExpression"],["EqualityExpression","!=","RelationalExpression"],["EqualityExpression","===","RelationalExpression"],["EqualityExpression","!==","RelationalExpression"]],BitwiseANDExpression:[["EqualityExpression"],["BitwiseANDExpression","&","EqualityExpression"]],BitwiseXORExpression:[["BitwiseANDExpression"],["BitwiseXORExpression","^","BitwiseANDExpression"]],BitwiseORExpression:[["BitwiseXORExpression"],["BitwiseORExpression","|","BitwiseXORExpression"]],LogicalANDExpression:[["BitwiseORExpression"],["LogicalANDExpression","&&","BitwiseORExpression"]],LogicalORExpression:[["LogicalANDExpression"],["LogicalORExpression","||","LogicalANDExpression"]],ConditionalExpression:[["LogicalORExpression"],["LogicalORExpression","?","LogicalORExpression",":","LogicalORExpression"]],Expression:[["ConditionalExpression"],["Expression",",","ConditionalExpression"]],Program:[["Expression"]]};function pu(v,l){this.name=v,this.token=l,this.childNodes=[],this.toString=function(b){if(b||(b=""),this.childNodes.length==1)return this.childNodes[0].toString(b);for(var O=b+this.name+(this.token!=null&&this.name!=this.token?":"+this.token:"")+`
`,x=0;x<this.childNodes.length;x++)O+=this.childNodes[x].toString(b+"    ");return O}}function MI(){var v,l={Program:"$"},b={};function O(u){b[JSON.stringify(u)]=u;for(var P=Object.getOwnPropertyNames(u);P.length;){var We=P.shift();!nv[We]||nv[We].forEach(function(an){u[an[0]]||P.push(an[0]);var A=u,ce=null;an.forEach(function(Kn){A[Kn]||(A[Kn]={}),ce=A,A=A[Kn]}),u[We].$div&&(A.$div=!0),A.$reduce=We,A.$count=an.length})}for(var At in u)typeof u[At]!="object"||At.charAt(0)=="$"||u[At].$closure||(b[JSON.stringify(u[At])]?u[At]=b[JSON.stringify(u[At])]:O(u[At]));u.$closure=!0}O(l);var x=[],S=[l],k=l;this.insertSymbol=function(P,We){for(;!k[P.name]&&k.$reduce;){for(var At=k.$count,an=new pu(k.$reduce);At--;)an.childNodes.push(x.pop()),S.pop();k=S[S.length-1],this.insertSymbol(an)}if(k=k[P.name],x.push(P),S.push(k),!k)throw new Error;return k.$div},this.reset=function(){k=l,x=[],S=[l]},Object.defineProperty(this,"grammarTree",{get:function(){try{for(;k.$reduce;){for(var u=k.$count,P=new pu(k.$reduce);u--;)P.childNodes.push(x.pop()),S.pop();k=S[S.length-1],this.insertSymbol(P)}if(x.length>0&&k[";"])return this.insertSymbol(new pu(";",";")),this.grammarTree;if(x.length!=1||x[0].name!="Program")throw new Error}catch(We){throw new SyntaxError("Unexpected end of input")}return x[0]}})}function DI(){this.lexicalParser=new BI,this.syntacticalParser=new MI;var v=["NullLiteral","BooleanLiteral","NumericLiteral","StringLiteral","RegularExpressionLiteral","Identifier","**","=>","{","}","(",")","[","]",".",";",",","<",">","<=",">=","==","!=","===","!==","+","-","*","%","++","--","<<",">>",">>>","&","|","^","!","~","&&","||","?",":","=","+=","-=","*=","%=","<<=",">>=",">>>=","&=","|=","^=","/","/=","instanceof","typeof","new","void","debugger","this","delete","in"],l={};v.forEach(function(b){Object.defineProperty(l,b,{})}),this.reset=function(){this.lexicalParser.reset(),this.syntacticalParser.reset()},this.parse=function(b,O){var x,S=!1;this.lexicalParser.source=b;for(var k=!1;x=this.lexicalParser.getNextToken(k);){O&&O(x);try{if(Object.getOwnPropertyNames(x).some(u=>l.hasOwnProperty(u)?(k=this.syntacticalParser.insertSymbol(new pu(u,x),S),S=!1,!0):!1))continue;(x.Keyword||x.Punctuator||x.DivPunctuator)&&l.hasOwnProperty(x.toString())&&(k=this.syntacticalParser.insertSymbol(new pu(x.toString(),x),S))}catch(u){throw new SyntaxError("Unexpected token "+x)}}return this.syntacticalParser.grammarTree}}var rv=new DI;function LI(v){rv.reset(),this.tree=rv.parse(v),this.paths=[];var l=Object.create(null),b=this,O=Object.create(null);this.isSimple,this.isConst,S(this.tree),x(this.tree),this.paths.length===0&&(this.isConst=!0),this.setter=function(P){for(var We=l,At=0;At<P.length-1;At++)We[P[At]]||(We[P[At]]=Object.create(null)),We=We[P[At]];return{isCompleted:function(){for(var an in O)if(!O[an])return!1;return!0},set:function(an){if(O[P.join(".")]||(O[P.join(".")]=!0),We[P[At]]=an,this.isCompleted())return b.exec()}}},this.valueOf=this.exec=function(){try{return function(){return(0,eval)(v)}.call(l)}catch(P){}};function x(P){for(var We=P;We.childNodes.length<=1&&We.name!=="MemberExpression";)We=We.childNodes[0];We.name==="MemberExpression"?b.isSimple=!0:b.isSimple=!1}function S(P){if(P.name==="CallExpression"&&P.childNodes[P.childNodes.length-1].name!=="CallExpression"){var We=k(P.childNodes[1]);S(P.childNodes[0])}else if(P.name==="NewExpression"&&P.childNodes.length===1)var We=k(P.childNodes[0]);else if(P.name==="MemberExpression"&&P.childNodes.length===1)var We=k(P);else for(var At=0;At<P.childNodes.length;At++)S(P.childNodes[At])}function k(P){if(P.childNodes[0].name==="IdentifierName"){var We=k(P.childNodes[2]);return We&&(We=We.concat(P.childNodes[0].childNodes[0].token.toString())),u(We),We}else if(P.childNodes[0].name==="PrimaryExpression")if(P.childNodes[0].childNodes[0].name==="Identifier"){var We=[P.childNodes[0].childNodes[0].token.toString()];return u(We),We}else return null;else{if(P.childNodes[0].name==="]")return k(P.childNodes[3]),S(P.childNodes[1]),null;if(P.childNodes[0].name==="Arguments")return S(P.childNodes[0]),S(P.childNodes[1]),null;for(var At=0;At<P.childNodes.length;At++)S(P.childNodes[At])}}function u(P){for(var We=l,At=0;At<P.length-1;At++)We[P[At]]||(We[P[At]]=Object.create(null)),We=We[P[At]];b.paths.push(P),O[P.join(".")]=!1}}function Kl(v){var l=v.childNodes.slice().reverse(),b=l.filter(P=>!P.token||!P.token.Punctuator);if(v.name==="UnaryExpression"&&l.length===2&&l[0].name==="-"&&b.length===1){var O=Kl(b[0]);return O.value=-O.value,O}if(v.name==="Arguments"){for(var x=[],S=b[0];S;)S.childNodes.length===3&&(x.unshift(S.childNodes[0]),S=S.childNodes[2]),S.childNodes.length===1&&(x.unshift(S.childNodes[0]),S=null);return{type:"Arguments",children:x.map(P=>Kl(P))}}if(b&&b.length===1){var O=Kl(b[0]);return O}if(v.token&&["NullLiteral","BooleanLiteral","NumericLiteral","StringLiteral","Identifier"].some(P=>v.token[P])){var k=Object.keys(v.token).filter(P=>P.match(/Literal/)||P.match(/Identifier/))[0],u={NullLiteral:null,BooleanLiteral:Boolean(v.token),NumericLiteral:Number(v.token),StringLiteral:v.token,Identifier:v.token}[k];return{type:k,value:u}}return v.name==="CallExpression"?{type:"CallExpression",children:[Kl(l[0]),Kl(l[1])]}:{type:l.filter(P=>P.token&&P.token.Punctuator)[0].name,children:l.filter(P=>!P.token||!P.token.Punctuator).map(P=>Kl(P))}}function iv(v){var l=new LI(v);return JSON.stringify(Kl(l.tree),null)}function FI(v,l){return l==="bind"&&(v==="bindingx"||v==="binding")}function ov(v){if(!v)return;try{v=JSON.parse(v)}catch(b){}let l={};if(Wi(v)?l.origin=v:v&&(l.origin=v.origin,l.transformed=v.transformed),!(!l.transformed&&!l.origin))return l.transformed=l.transformed||iv(l.origin),l}function VI(v){return v&&(v.exitExpression=ov(v.exitExpression),v.props&&v.props.forEach(l=>{l.expression=ov(l.expression)}),v)}function $I(v){return function(l={}){if(Yn(v))return v({state:l.state==="end"?"exit":l.state,t:l.t!==void 0?l.t:l.deltaT})}}function av(v,l,b){return b&&(FI(v,l)?function(O,x=function(){}){if(!O)throw new Error("should pass options for binding");return VI(O),b(O,O&&O.eventType==="timing"?$I(x):x)}:b)}function UI(v,l){Object.defineProperty(v,"[[CurrentInstanceId]]",{value:l})}function sv(v){return v["[[CurrentInstanceId]]"]}function HI(v,l,b){let O=Kr(v);return!O||!Yn(O.send)?(console.error(`[JS Framework] Failed to find taskCenter (${v}).`),null):(...x)=>O.send("module",{module:l,method:b},x)}function jI(v,l,b,O){let x=Kr(v);return!x||!Yn(x.send)?(console.error(`[JS Framework] Failed to find taskCenter (${v}).`),null):Yn(O)?S=>x.send("module",{module:l,method:b},[S]):(console.error(`[JS Framework] ${l}.${b} must be assigned as a function.`),null)}var of=class{constructor(l,b){UI(this,String(l)),this.config=b||{},this.document=new pa(l,this.config.bundleUrl),this.requireModule=this.requireModule.bind(this),this.importScript=this.importScript.bind(this),this.isRegisteredModule=ef,this.isRegisteredComponent=rd}requireModule(l){let b=sv(this);if(!(b&&this.document&&this.document.taskCenter)){console.error(`[JS Framework] Failed to requireModule("${l}"), instance (${b}) doesn't exist anymore.`);return}if(!ef(l)){console.warn(`[JS Framework] \u5F53\u524D\u8FD0\u884C\u7684\u57FA\u5EA7\u4E0D\u5305\u542B\u539F\u751F\u63D2\u4EF6[${l}]\uFF0C\u8BF7\u5728manifest\u4E2D\u914D\u7F6E\u8BE5\u63D2\u4EF6\uFF0C\u91CD\u65B0\u5236\u4F5C\u5305\u62EC\u8BE5\u539F\u751F\u63D2\u4EF6\u7684\u81EA\u5B9A\u4E49\u8FD0\u884C\u57FA\u5EA7`);return}let O={},x=jg(l);for(let S in x)Object.defineProperty(O,S,{enumerable:!0,configurable:!0,get:()=>av(l,S,HI(b,l,S)),set:k=>jI(b,l,S,k)});return O}supports(l){if(!Wi(l))return null;let b=l.match(/^@(\w+)\/([\w-]+)(\.(\w+))?$/i);if(b){let O=b[1],x=b[2],S=b[4];switch(O){case"module":return ef(x,S);case"component":return rd(x)}}return null}importScript(l,b={}){let O=sv(this),x=Kr(O);return new Promise(function(S,k){if(!x||!Yn(x.send))return k(new Error(`[JS Framework] Failed to import script "${l}", no taskCenter (${O}) matched.`));try{x.send("module",{module:"script",method:"importScript"},[l,b],{callback:[u=>S(u),u=>k(u)]})}catch(u){k(u)}})}};function WI(v,l){let b=Object.create(null);return b.service=Object.create(null),bl.forEach(({name:O,options:x})=>{let S=x.create;if(S)try{let k=S(v,l);mi(b.service,k),mi(b,k.instance)}catch(k){console.error(`[JS Runtime] Failed to create service ${O}.`)}}),delete b.service.instance,is(b.service),b}var zI={uid:0},YI=Og(uu),GI=Ag(uu);function lv(v,l,b){let O=new of(v,l),x="Vue",S=WI(v,{weex:O,nvue:O,config:l,created:Date.now(),framework:x});is(S);let k=Object.create(null);return mi(k,e1(O)),mi(k,S,{SharedObject:zI,weex:O,nvue:O,requireModule:u=>O.requireModule(u),__WEEX_CALL_JAVASCRIPT__:td,services:S}),k.plus=new k.WeexPlus(O),k.VueShared=uu,k.UniShared=YI,k.VueReactivity=GI,Kg(v,k),is(k),k}function qI(v,l,b={}){let O="Vue";b=jf(b),b.env=jf(global.WXEnvironment||{}),b.bundleType=O;let x=lv(v,b);KI(l,x)}function KI(v,l){let b=[],O=[];for(let S in l)b.push(S),O.push(l[S]);let x="(function (global) { "+v+" })(Object.create(this))";return new Function(...b,x)(...O)}function JI(v){let l=Js(v);try{if(l&&l.body)return l.body.toJSON()}catch(b){console.error("[JS Framework] Failed to get the virtual dom tree.");return}}function ZI(v){vg(v),bl.forEach(l=>{let b=l.options.destroy;b&&b(v)})}function XI(v){mg(v),bl.forEach(l=>{let b=l.options.refresh;b&&b(v)})}var QI={createInstance:qI,createInstanceContext:lv,getRoot:JI,getDocument:Js,registerService:tf,unregisterService:nf,callJS(v,l){return td(v,l)},registerComponents:Wg,registerModules:Hg,destroyInstance:ZI,refreshInstance:XI};function dd(){return Ug(),QI}function e1(v){if(global.setTimeout&&global.setInterval)return{setTimeout:global.setTimeout,setInterval:global.setInterval,clearTimeout:global.clearTimeout,clearInterval:global.clearInterval};let l=v.requireModule("timer");return{setTimeout:(...O)=>{let x=function(){O[0](...O.slice(2))};return l.setTimeout(x,O[1]),v.document.taskCenter.callbackManager.lastCallbackId.toString()},setInterval:(...O)=>{let x=function(){O[0](...O.slice(2))};return l.setInterval(x,O[1]),v.document.taskCenter.callbackManager.lastCallbackId.toString()},clearTimeout:O=>{l.clearTimeout(O)},clearInterval:O=>{l.clearInterval(O)}}}var cv={Document:pa,Element:_o,Comment:ql,Listener:Bc,TaskCenter:xc,sendTasks(...v){return Yn(callNative)?callNative(...v):(global.callNative||(()=>{}))(...v)}};pa.handler=cv.sendTasks;var Jl=cv;function t1(){is(Jl.Comment),is(Jl.Listener),is(Jl.Document.prototype),is(Jl.Comment.prototype),is(Jl.Listener.prototype)}var af={service:{register:tf,unregister:nf,has:id},freezePrototype:t1,init:dd,config:Jl};var hd=class{constructor(l,b={}){this.type=l||"message",this.data=b.data||null,this.origin=b.origin||"",this.source=b.source||null,this.ports=b.ports||[],this.target=null,this.timeStamp=Date.now()}};var yl={},gu={};function pd(){}pd.prototype.postMessage=function(v){if(this._closed)throw new Error(`BroadcastChannel "${this.name}" is closed.`);let l=yl[this.name];if(l&&l.length)for(let b=0;b<l.length;++b){let O=l[b];O._closed||O===this||Yn(O.onmessage)&&O.onmessage(new hd("message",{data:v}))}};pd.prototype.close=function(){if(!this._closed&&(this._closed=!0,yl[this.name])){let v=yl[this.name].filter(l=>l!==this);v.length?yl[this.name]=v:delete yl[this.name]}};var uv={create:v=>{if(gu[v]=[],Yn(global.BroadcastChannel))return{};let l={BroadcastChannel:function(b){Object.defineProperty(this,"name",{configurable:!1,enumerable:!0,writable:!1,value:String(b)}),this._closed=!1,this.onmessage=null,yl[this.name]||(yl[this.name]=[]),yl[this.name].push(this),gu[v].push(this)}};return l.BroadcastChannel.prototype=pd.prototype,{instance:l}},destroy:v=>{gu[v]&&(gu[v].forEach(l=>l.close()),delete gu[v])}};function gd(){let{init:v}=af;af.service.register("BroadcastChannel",uv),af.freezePrototype();let l=v();for(let b in l)global[b]=(...O)=>{let x=l[b](...O);return x instanceof Error&&console.error(x.toString()),x}}var zk=global.console;function fv(){if(Pg(),global.WXEnvironment&&global.WXEnvironment.platform!=="Web")global.console={debug:(...v)=>{nr("debug")&&global.nativeLog(...vu(v),"__DEBUG")},log:(...v)=>{nr("log")&&global.nativeLog(...vu(v),"__LOG")},info:(...v)=>{nr("info")&&global.nativeLog(...vu(v),"__INFO")},warn:(...v)=>{nr("warn")&&global.nativeLog(...vu(v),"__WARN")},error:(...v)=>{nr("error")&&global.nativeLog(...vu(v),"__ERROR")}};else{let{debug:v,log:l,info:b,warn:O,error:x}=console;console.__ori__={debug:v,log:l,info:b,warn:O,error:x},console.debug=(...S)=>{nr("debug")&&console.__ori__.debug.apply(console,S)},console.log=(...S)=>{nr("log")&&console.__ori__.log.apply(console,S)},console.info=(...S)=>{nr("info")&&console.__ori__.info.apply(console,S)},console.warn=(...S)=>{nr("warn")&&console.__ori__.warn.apply(console,S)},console.error=(...S)=>{nr("error")&&console.__ori__.error.apply(console,S)}}}function vu(v){return v.map(l=>{if(Ks(l).toLowerCase()==="[object object]")try{l=JSON.stringify(l)}catch(O){l="[object object]"}else l=String(l);return l})}fv();gd();})();
